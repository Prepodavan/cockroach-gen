// Code generated by "stringer -output=pkg/sql/opt/rule_name_string.go -type=RuleName pkg/sql/opt/rule_name.go pkg/sql/opt/rule_name.og.go"; DO NOT EDIT.

package opt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidRuleName-0]
	_ = x[SimplifyRootOrdering-1]
	_ = x[PruneRootCols-2]
	_ = x[SimplifyZeroCardinalityGroup-3]
	_ = x[NumManualRuleNames-4]
	_ = x[startAutoRule-4]
	_ = x[EliminateAggDistinct-5]
	_ = x[NormalizeNestedAnds-6]
	_ = x[SimplifyTrueAnd-7]
	_ = x[SimplifyAndTrue-8]
	_ = x[SimplifyFalseAnd-9]
	_ = x[SimplifyAndFalse-10]
	_ = x[SimplifyTrueOr-11]
	_ = x[SimplifyOrTrue-12]
	_ = x[SimplifyFalseOr-13]
	_ = x[SimplifyOrFalse-14]
	_ = x[SimplifyRange-15]
	_ = x[FoldNullAndOr-16]
	_ = x[FoldNotTrue-17]
	_ = x[FoldNotFalse-18]
	_ = x[FoldNotNull-19]
	_ = x[NegateComparison-20]
	_ = x[EliminateNot-21]
	_ = x[NegateAnd-22]
	_ = x[NegateOr-23]
	_ = x[ExtractRedundantConjunct-24]
	_ = x[CommuteVarInequality-25]
	_ = x[CommuteConstInequality-26]
	_ = x[NormalizeCmpPlusConst-27]
	_ = x[NormalizeCmpMinusConst-28]
	_ = x[NormalizeCmpConstMinus-29]
	_ = x[NormalizeTupleEquality-30]
	_ = x[FoldNullComparisonLeft-31]
	_ = x[FoldNullComparisonRight-32]
	_ = x[FoldIsNull-33]
	_ = x[FoldNonNullIsNull-34]
	_ = x[FoldNullTupleIsTupleNull-35]
	_ = x[FoldNonNullTupleIsTupleNull-36]
	_ = x[FoldIsNotNull-37]
	_ = x[FoldNonNullIsNotNull-38]
	_ = x[FoldNonNullTupleIsTupleNotNull-39]
	_ = x[FoldNullTupleIsTupleNotNull-40]
	_ = x[CommuteNullIs-41]
	_ = x[NormalizeCmpTimeZoneFunction-42]
	_ = x[NormalizeCmpTimeZoneFunctionTZ-43]
	_ = x[FoldEqZeroSTDistance-44]
	_ = x[FoldCmpSTDistanceLeft-45]
	_ = x[FoldCmpSTDistanceRight-46]
	_ = x[FoldCmpSTMaxDistanceLeft-47]
	_ = x[FoldCmpSTMaxDistanceRight-48]
	_ = x[DecorrelateJoin-49]
	_ = x[DecorrelateProjectSet-50]
	_ = x[TryDecorrelateSelect-51]
	_ = x[TryDecorrelateProject-52]
	_ = x[TryDecorrelateProjectSelect-53]
	_ = x[TryDecorrelateProjectInnerJoin-54]
	_ = x[TryDecorrelateInnerJoin-55]
	_ = x[TryDecorrelateInnerLeftJoin-56]
	_ = x[TryDecorrelateGroupBy-57]
	_ = x[TryDecorrelateScalarGroupBy-58]
	_ = x[TryDecorrelateSemiJoin-59]
	_ = x[TryDecorrelateLimitOne-60]
	_ = x[TryDecorrelateProjectSet-61]
	_ = x[TryDecorrelateWindow-62]
	_ = x[TryDecorrelateMax1Row-63]
	_ = x[HoistSelectExists-64]
	_ = x[HoistSelectNotExists-65]
	_ = x[HoistSelectSubquery-66]
	_ = x[HoistProjectSubquery-67]
	_ = x[HoistJoinSubquery-68]
	_ = x[HoistValuesSubquery-69]
	_ = x[HoistProjectSetSubquery-70]
	_ = x[NormalizeSelectAnyFilter-71]
	_ = x[NormalizeJoinAnyFilter-72]
	_ = x[NormalizeSelectNotAnyFilter-73]
	_ = x[NormalizeJoinNotAnyFilter-74]
	_ = x[FoldNullCast-75]
	_ = x[FoldNullUnary-76]
	_ = x[FoldNullBinaryLeft-77]
	_ = x[FoldNullBinaryRight-78]
	_ = x[FoldNullInNonEmpty-79]
	_ = x[FoldInEmpty-80]
	_ = x[FoldNotInEmpty-81]
	_ = x[FoldArray-82]
	_ = x[FoldBinary-83]
	_ = x[FoldUnary-84]
	_ = x[FoldComparison-85]
	_ = x[FoldCast-86]
	_ = x[FoldIndirection-87]
	_ = x[FoldColumnAccess-88]
	_ = x[FoldFunction-89]
	_ = x[FoldEqualsAnyNull-90]
	_ = x[ConvertGroupByToDistinct-91]
	_ = x[EliminateGroupByProject-92]
	_ = x[EliminateJoinUnderGroupByLeft-93]
	_ = x[EliminateJoinUnderGroupByRight-94]
	_ = x[EliminateDistinct-95]
	_ = x[ReduceGroupingCols-96]
	_ = x[ReduceNotNullGroupingCols-97]
	_ = x[EliminateAggDistinctForKeys-98]
	_ = x[EliminateAggFilteredDistinctForKeys-99]
	_ = x[EliminateDistinctNoColumns-100]
	_ = x[EliminateEnsureDistinctNoColumns-101]
	_ = x[EliminateDistinctOnValues-102]
	_ = x[PushAggDistinctIntoGroupBy-103]
	_ = x[PushAggFilterIntoScalarGroupBy-104]
	_ = x[ConvertCountToCountRows-105]
	_ = x[ConvertRegressionCountToCount-106]
	_ = x[FoldGroupingOperators-107]
	_ = x[InlineConstVar-108]
	_ = x[InlineProjectConstants-109]
	_ = x[InlineSelectConstants-110]
	_ = x[InlineJoinConstantsLeft-111]
	_ = x[InlineJoinConstantsRight-112]
	_ = x[PushSelectIntoInlinableProject-113]
	_ = x[InlineProjectInProject-114]
	_ = x[CommuteRightJoin-115]
	_ = x[SimplifyJoinFilters-116]
	_ = x[DetectJoinContradiction-117]
	_ = x[PushFilterIntoJoinLeftAndRight-118]
	_ = x[MapFilterIntoJoinLeft-119]
	_ = x[MapFilterIntoJoinRight-120]
	_ = x[MapEqualityIntoJoinLeftAndRight-121]
	_ = x[PushFilterIntoJoinLeft-122]
	_ = x[PushFilterIntoJoinRight-123]
	_ = x[SimplifyLeftJoin-124]
	_ = x[SimplifyRightJoin-125]
	_ = x[EliminateSemiJoin-126]
	_ = x[SimplifyZeroCardinalitySemiJoin-127]
	_ = x[EliminateAntiJoin-128]
	_ = x[SimplifyZeroCardinalityAntiJoin-129]
	_ = x[EliminateJoinNoColsLeft-130]
	_ = x[EliminateJoinNoColsRight-131]
	_ = x[HoistJoinProjectRight-132]
	_ = x[HoistJoinProjectLeft-133]
	_ = x[SimplifyJoinNotNullEquality-134]
	_ = x[ExtractJoinEqualities-135]
	_ = x[SortFiltersInJoin-136]
	_ = x[LeftAssociateJoinsLeft-137]
	_ = x[LeftAssociateJoinsRight-138]
	_ = x[RightAssociateJoinsLeft-139]
	_ = x[RightAssociateJoinsRight-140]
	_ = x[RemoveJoinNotNullCondition-141]
	_ = x[ProjectInnerJoinValues-142]
	_ = x[EliminateLimit-143]
	_ = x[EliminateOffset-144]
	_ = x[PushLimitIntoProject-145]
	_ = x[PushOffsetIntoProject-146]
	_ = x[PushLimitIntoOffset-147]
	_ = x[PushLimitIntoOrdinality-148]
	_ = x[PushLimitIntoJoinLeft-149]
	_ = x[PushLimitIntoJoinRight-150]
	_ = x[FoldLimits-151]
	_ = x[AssociateLimitJoinsLeft-152]
	_ = x[AssociateLimitJoinsRight-153]
	_ = x[EliminateMax1Row-154]
	_ = x[SimplifyPartialIndexProjections-155]
	_ = x[FoldPlusZero-156]
	_ = x[FoldZeroPlus-157]
	_ = x[FoldMinusZero-158]
	_ = x[FoldMultOne-159]
	_ = x[FoldOneMult-160]
	_ = x[FoldDivOne-161]
	_ = x[InvertMinus-162]
	_ = x[EliminateUnaryMinus-163]
	_ = x[SimplifyLimitOrdering-164]
	_ = x[SimplifyOffsetOrdering-165]
	_ = x[SimplifyGroupByOrdering-166]
	_ = x[SimplifyOrdinalityOrdering-167]
	_ = x[SimplifyExplainOrdering-168]
	_ = x[EliminateJoinUnderProjectLeft-169]
	_ = x[EliminateJoinUnderProjectRight-170]
	_ = x[EliminateProject-171]
	_ = x[MergeProjects-172]
	_ = x[MergeProjectWithValues-173]
	_ = x[PushColumnRemappingIntoValues-174]
	_ = x[FoldTupleAccessIntoValues-175]
	_ = x[FoldJSONAccessIntoValues-176]
	_ = x[ConvertZipArraysToValues-177]
	_ = x[PruneProjectCols-178]
	_ = x[PruneScanCols-179]
	_ = x[PruneSelectCols-180]
	_ = x[PruneLimitCols-181]
	_ = x[PruneOffsetCols-182]
	_ = x[PruneJoinLeftCols-183]
	_ = x[PruneJoinRightCols-184]
	_ = x[PruneSemiAntiJoinRightCols-185]
	_ = x[PruneAggCols-186]
	_ = x[PruneGroupByCols-187]
	_ = x[PruneValuesCols-188]
	_ = x[PruneOrdinalityCols-189]
	_ = x[PruneExplainCols-190]
	_ = x[PruneProjectSetCols-191]
	_ = x[PruneWindowOutputCols-192]
	_ = x[PruneWindowInputCols-193]
	_ = x[PruneMutationFetchCols-194]
	_ = x[PruneMutationInputCols-195]
	_ = x[PruneMutationReturnCols-196]
	_ = x[PruneWithScanCols-197]
	_ = x[PruneWithCols-198]
	_ = x[PruneUnionAllCols-199]
	_ = x[RejectNullsLeftJoin-200]
	_ = x[RejectNullsRightJoin-201]
	_ = x[RejectNullsGroupBy-202]
	_ = x[RejectNullsUnderJoinLeft-203]
	_ = x[RejectNullsUnderJoinRight-204]
	_ = x[RejectNullsProject-205]
	_ = x[CommuteVar-206]
	_ = x[CommuteConst-207]
	_ = x[EliminateCoalesce-208]
	_ = x[SimplifyCoalesce-209]
	_ = x[EliminateCast-210]
	_ = x[NormalizeInConst-211]
	_ = x[FoldInNull-212]
	_ = x[UnifyComparisonTypes-213]
	_ = x[EliminateExistsZeroRows-214]
	_ = x[EliminateExistsProject-215]
	_ = x[EliminateExistsGroupBy-216]
	_ = x[IntroduceExistsLimit-217]
	_ = x[EliminateExistsLimit-218]
	_ = x[SimplifyCaseWhenConstValue-219]
	_ = x[InlineAnyValuesSingleCol-220]
	_ = x[InlineAnyValuesMultiCol-221]
	_ = x[SimplifyEqualsAnyTuple-222]
	_ = x[SimplifyAnyScalarArray-223]
	_ = x[FoldCollate-224]
	_ = x[NormalizeArrayFlattenToAgg-225]
	_ = x[SimplifySameVarEqualities-226]
	_ = x[SimplifySameVarInequalities-227]
	_ = x[SimplifyNotDisjoint-228]
	_ = x[SimplifySelectFilters-229]
	_ = x[ConsolidateSelectFilters-230]
	_ = x[EliminateSelect-231]
	_ = x[MergeSelects-232]
	_ = x[PushSelectIntoProject-233]
	_ = x[MergeSelectInnerJoin-234]
	_ = x[PushSelectCondLeftIntoJoinLeftAndRight-235]
	_ = x[PushSelectIntoJoinLeft-236]
	_ = x[PushSelectIntoGroupBy-237]
	_ = x[RemoveNotNullCondition-238]
	_ = x[PushSelectIntoProjectSet-239]
	_ = x[PushFilterIntoSetOp-240]
	_ = x[EliminateUnionAllLeft-241]
	_ = x[EliminateUnionAllRight-242]
	_ = x[EliminateWindow-243]
	_ = x[ReduceWindowPartitionCols-244]
	_ = x[SimplifyWindowOrdering-245]
	_ = x[PushSelectIntoWindow-246]
	_ = x[PushLimitIntoWindow-247]
	_ = x[InlineWith-248]
	_ = x[startExploreRule-249]
	_ = x[ReplaceScalarMinMaxWithLimit-250]
	_ = x[ReplaceMinWithLimit-251]
	_ = x[ReplaceMaxWithLimit-252]
	_ = x[GenerateStreamingGroupBy-253]
	_ = x[ReorderJoins-254]
	_ = x[CommuteLeftJoin-255]
	_ = x[CommuteSemiJoin-256]
	_ = x[ConvertSemiToInnerJoin-257]
	_ = x[GenerateMergeJoins-258]
	_ = x[GenerateLookupJoins-259]
	_ = x[GenerateInvertedJoins-260]
	_ = x[GenerateInvertedJoinsFromSelect-261]
	_ = x[GenerateLookupJoinsWithFilter-262]
	_ = x[PushJoinIntoIndexJoin-263]
	_ = x[GenerateLimitedScans-264]
	_ = x[PushLimitIntoFilteredScan-265]
	_ = x[PushLimitIntoIndexJoin-266]
	_ = x[SplitScanIntoUnionScans-267]
	_ = x[EliminateIndexJoinInsideProject-268]
	_ = x[GenerateIndexScans-269]
	_ = x[GeneratePartialIndexScans-270]
	_ = x[GenerateConstrainedScans-271]
	_ = x[GenerateInvertedIndexScans-272]
	_ = x[GenerateZigzagJoins-273]
	_ = x[GenerateInvertedIndexZigzagJoins-274]
	_ = x[SplitDisjunction-275]
	_ = x[SplitDisjunctionAddKey-276]
	_ = x[NumRuleNames-277]
}

const _RuleName_name = "InvalidRuleNameSimplifyRootOrderingPruneRootColsSimplifyZeroCardinalityGroupNumManualRuleNamesEliminateAggDistinctNormalizeNestedAndsSimplifyTrueAndSimplifyAndTrueSimplifyFalseAndSimplifyAndFalseSimplifyTrueOrSimplifyOrTrueSimplifyFalseOrSimplifyOrFalseSimplifyRangeFoldNullAndOrFoldNotTrueFoldNotFalseFoldNotNullNegateComparisonEliminateNotNegateAndNegateOrExtractRedundantConjunctCommuteVarInequalityCommuteConstInequalityNormalizeCmpPlusConstNormalizeCmpMinusConstNormalizeCmpConstMinusNormalizeTupleEqualityFoldNullComparisonLeftFoldNullComparisonRightFoldIsNullFoldNonNullIsNullFoldNullTupleIsTupleNullFoldNonNullTupleIsTupleNullFoldIsNotNullFoldNonNullIsNotNullFoldNonNullTupleIsTupleNotNullFoldNullTupleIsTupleNotNullCommuteNullIsNormalizeCmpTimeZoneFunctionNormalizeCmpTimeZoneFunctionTZFoldEqZeroSTDistanceFoldCmpSTDistanceLeftFoldCmpSTDistanceRightFoldCmpSTMaxDistanceLeftFoldCmpSTMaxDistanceRightDecorrelateJoinDecorrelateProjectSetTryDecorrelateSelectTryDecorrelateProjectTryDecorrelateProjectSelectTryDecorrelateProjectInnerJoinTryDecorrelateInnerJoinTryDecorrelateInnerLeftJoinTryDecorrelateGroupByTryDecorrelateScalarGroupByTryDecorrelateSemiJoinTryDecorrelateLimitOneTryDecorrelateProjectSetTryDecorrelateWindowTryDecorrelateMax1RowHoistSelectExistsHoistSelectNotExistsHoistSelectSubqueryHoistProjectSubqueryHoistJoinSubqueryHoistValuesSubqueryHoistProjectSetSubqueryNormalizeSelectAnyFilterNormalizeJoinAnyFilterNormalizeSelectNotAnyFilterNormalizeJoinNotAnyFilterFoldNullCastFoldNullUnaryFoldNullBinaryLeftFoldNullBinaryRightFoldNullInNonEmptyFoldInEmptyFoldNotInEmptyFoldArrayFoldBinaryFoldUnaryFoldComparisonFoldCastFoldIndirectionFoldColumnAccessFoldFunctionFoldEqualsAnyNullConvertGroupByToDistinctEliminateGroupByProjectEliminateJoinUnderGroupByLeftEliminateJoinUnderGroupByRightEliminateDistinctReduceGroupingColsReduceNotNullGroupingColsEliminateAggDistinctForKeysEliminateAggFilteredDistinctForKeysEliminateDistinctNoColumnsEliminateEnsureDistinctNoColumnsEliminateDistinctOnValuesPushAggDistinctIntoGroupByPushAggFilterIntoScalarGroupByConvertCountToCountRowsConvertRegressionCountToCountFoldGroupingOperatorsInlineConstVarInlineProjectConstantsInlineSelectConstantsInlineJoinConstantsLeftInlineJoinConstantsRightPushSelectIntoInlinableProjectInlineProjectInProjectCommuteRightJoinSimplifyJoinFiltersDetectJoinContradictionPushFilterIntoJoinLeftAndRightMapFilterIntoJoinLeftMapFilterIntoJoinRightMapEqualityIntoJoinLeftAndRightPushFilterIntoJoinLeftPushFilterIntoJoinRightSimplifyLeftJoinSimplifyRightJoinEliminateSemiJoinSimplifyZeroCardinalitySemiJoinEliminateAntiJoinSimplifyZeroCardinalityAntiJoinEliminateJoinNoColsLeftEliminateJoinNoColsRightHoistJoinProjectRightHoistJoinProjectLeftSimplifyJoinNotNullEqualityExtractJoinEqualitiesSortFiltersInJoinLeftAssociateJoinsLeftLeftAssociateJoinsRightRightAssociateJoinsLeftRightAssociateJoinsRightRemoveJoinNotNullConditionProjectInnerJoinValuesEliminateLimitEliminateOffsetPushLimitIntoProjectPushOffsetIntoProjectPushLimitIntoOffsetPushLimitIntoOrdinalityPushLimitIntoJoinLeftPushLimitIntoJoinRightFoldLimitsAssociateLimitJoinsLeftAssociateLimitJoinsRightEliminateMax1RowSimplifyPartialIndexProjectionsFoldPlusZeroFoldZeroPlusFoldMinusZeroFoldMultOneFoldOneMultFoldDivOneInvertMinusEliminateUnaryMinusSimplifyLimitOrderingSimplifyOffsetOrderingSimplifyGroupByOrderingSimplifyOrdinalityOrderingSimplifyExplainOrderingEliminateJoinUnderProjectLeftEliminateJoinUnderProjectRightEliminateProjectMergeProjectsMergeProjectWithValuesPushColumnRemappingIntoValuesFoldTupleAccessIntoValuesFoldJSONAccessIntoValuesConvertZipArraysToValuesPruneProjectColsPruneScanColsPruneSelectColsPruneLimitColsPruneOffsetColsPruneJoinLeftColsPruneJoinRightColsPruneSemiAntiJoinRightColsPruneAggColsPruneGroupByColsPruneValuesColsPruneOrdinalityColsPruneExplainColsPruneProjectSetColsPruneWindowOutputColsPruneWindowInputColsPruneMutationFetchColsPruneMutationInputColsPruneMutationReturnColsPruneWithScanColsPruneWithColsPruneUnionAllColsRejectNullsLeftJoinRejectNullsRightJoinRejectNullsGroupByRejectNullsUnderJoinLeftRejectNullsUnderJoinRightRejectNullsProjectCommuteVarCommuteConstEliminateCoalesceSimplifyCoalesceEliminateCastNormalizeInConstFoldInNullUnifyComparisonTypesEliminateExistsZeroRowsEliminateExistsProjectEliminateExistsGroupByIntroduceExistsLimitEliminateExistsLimitSimplifyCaseWhenConstValueInlineAnyValuesSingleColInlineAnyValuesMultiColSimplifyEqualsAnyTupleSimplifyAnyScalarArrayFoldCollateNormalizeArrayFlattenToAggSimplifySameVarEqualitiesSimplifySameVarInequalitiesSimplifyNotDisjointSimplifySelectFiltersConsolidateSelectFiltersEliminateSelectMergeSelectsPushSelectIntoProjectMergeSelectInnerJoinPushSelectCondLeftIntoJoinLeftAndRightPushSelectIntoJoinLeftPushSelectIntoGroupByRemoveNotNullConditionPushSelectIntoProjectSetPushFilterIntoSetOpEliminateUnionAllLeftEliminateUnionAllRightEliminateWindowReduceWindowPartitionColsSimplifyWindowOrderingPushSelectIntoWindowPushLimitIntoWindowInlineWithstartExploreRuleReplaceScalarMinMaxWithLimitReplaceMinWithLimitReplaceMaxWithLimitGenerateStreamingGroupByReorderJoinsCommuteLeftJoinCommuteSemiJoinConvertSemiToInnerJoinGenerateMergeJoinsGenerateLookupJoinsGenerateInvertedJoinsGenerateInvertedJoinsFromSelectGenerateLookupJoinsWithFilterPushJoinIntoIndexJoinGenerateLimitedScansPushLimitIntoFilteredScanPushLimitIntoIndexJoinSplitScanIntoUnionScansEliminateIndexJoinInsideProjectGenerateIndexScansGeneratePartialIndexScansGenerateConstrainedScansGenerateInvertedIndexScansGenerateZigzagJoinsGenerateInvertedIndexZigzagJoinsSplitDisjunctionSplitDisjunctionAddKeyNumRuleNames"

var _RuleName_index = [...]uint16{0, 15, 35, 48, 76, 94, 114, 133, 148, 163, 179, 195, 209, 223, 238, 253, 266, 279, 290, 302, 313, 329, 341, 350, 358, 382, 402, 424, 445, 467, 489, 511, 533, 556, 566, 583, 607, 634, 647, 667, 697, 724, 737, 765, 795, 815, 836, 858, 882, 907, 922, 943, 963, 984, 1011, 1041, 1064, 1091, 1112, 1139, 1161, 1183, 1207, 1227, 1248, 1265, 1285, 1304, 1324, 1341, 1360, 1383, 1407, 1429, 1456, 1481, 1493, 1506, 1524, 1543, 1561, 1572, 1586, 1595, 1605, 1614, 1628, 1636, 1651, 1667, 1679, 1696, 1720, 1743, 1772, 1802, 1819, 1837, 1862, 1889, 1924, 1950, 1982, 2007, 2033, 2063, 2086, 2115, 2136, 2150, 2172, 2193, 2216, 2240, 2270, 2292, 2308, 2327, 2350, 2380, 2401, 2423, 2454, 2476, 2499, 2515, 2532, 2549, 2580, 2597, 2628, 2651, 2675, 2696, 2716, 2743, 2764, 2781, 2803, 2826, 2849, 2873, 2899, 2921, 2935, 2950, 2970, 2991, 3010, 3033, 3054, 3076, 3086, 3109, 3133, 3149, 3180, 3192, 3204, 3217, 3228, 3239, 3249, 3260, 3279, 3300, 3322, 3345, 3371, 3394, 3423, 3453, 3469, 3482, 3504, 3533, 3558, 3582, 3606, 3622, 3635, 3650, 3664, 3679, 3696, 3714, 3740, 3752, 3768, 3783, 3802, 3818, 3837, 3858, 3878, 3900, 3922, 3945, 3962, 3975, 3992, 4011, 4031, 4049, 4073, 4098, 4116, 4126, 4138, 4155, 4171, 4184, 4200, 4210, 4230, 4253, 4275, 4297, 4317, 4337, 4363, 4387, 4410, 4432, 4454, 4465, 4491, 4516, 4543, 4562, 4583, 4607, 4622, 4634, 4655, 4675, 4713, 4735, 4756, 4778, 4802, 4821, 4842, 4864, 4879, 4904, 4926, 4946, 4965, 4975, 4991, 5019, 5038, 5057, 5081, 5093, 5108, 5123, 5145, 5163, 5182, 5203, 5234, 5263, 5284, 5304, 5329, 5351, 5374, 5405, 5423, 5448, 5472, 5498, 5517, 5549, 5565, 5587, 5599}

func (i RuleName) String() string {
	if i >= RuleName(len(_RuleName_index)-1) {
		return "RuleName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleName_name[_RuleName_index[i]:_RuleName_index[i+1]]
}
