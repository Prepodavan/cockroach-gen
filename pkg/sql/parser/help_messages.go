// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1264
	`ALTER`: {
		//line sql.y: 1265
		Category: hGroup,
		//line sql.y: 1266
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1283
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1284
		Category: hDDL,
		//line sql.y: 1285
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1324
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1339
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1340
		Category: hDDL,
		//line sql.y: 1341
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1360
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1365
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1366
		Category: hDDL,
		//line sql.y: 1367
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1370
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1378
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1379
		Category: hDDL,
		//line sql.y: 1380
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1405
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1406
		Category: hDDL,
		//line sql.y: 1407
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1410
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1426
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1427
		Category: hDDL,
		//line sql.y: 1428
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1440
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1445
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1446
		Category: hDDL,
		//line sql.y: 1447
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1463
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1972
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1973
		Category: hDDL,
		//line sql.y: 1974
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1990
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2097
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2098
		Category: hMisc,
		//line sql.y: 2099
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2126
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2127
		Category: hCCL,
		//line sql.y: 2128
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2148
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2252
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2253
		Category: hCCL,
		//line sql.y: 2254
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2323
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2401
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2402
		Category: hCCL,
		//line sql.y: 2403
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2424
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2545
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2546
		Category: hCCL,
		//line sql.y: 2547
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2575
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2619
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2620
		Category: hCCL,
		//line sql.y: 2621
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2630
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2766
	`CANCEL`: {
		//line sql.y: 2767
		Category: hGroup,
		//line sql.y: 2768
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2775
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2776
		Category: hMisc,
		//line sql.y: 2777
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2780
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2802
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2803
		Category: hMisc,
		//line sql.y: 2804
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2807
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2838
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2839
		Category: hMisc,
		//line sql.y: 2840
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2843
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2913
	`CREATE`: {
		//line sql.y: 2914
		Category: hGroup,
		//line sql.y: 2915
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 2928
	`CREATE EXTENSION`: {
		//line sql.y: 2929
		Category: hCfg,
		//line sql.y: 2930
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3007
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3008
		Category: hMisc,
		//line sql.y: 3009
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3152
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3153
		Category: hDML,
		//line sql.y: 3154
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3158
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3178
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3179
		Category: hCfg,
		//line sql.y: 3180
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3192
	`DROP`: {
		//line sql.y: 3193
		Category: hGroup,
		//line sql.y: 3194
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3213
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3214
		Category: hDDL,
		//line sql.y: 3215
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3216
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3246
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3247
		Category: hDDL,
		//line sql.y: 3248
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3249
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3261
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3262
		Category: hDDL,
		//line sql.y: 3263
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3264
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3276
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3277
		Category: hDDL,
		//line sql.y: 3278
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3279
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3301
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3302
		Category: hDDL,
		//line sql.y: 3303
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3304
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3324
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3325
		Category: hDDL,
		//line sql.y: 3326
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3362
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3363
		Category: hDDL,
		//line sql.y: 3364
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3394
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3395
		Category: hPriv,
		//line sql.y: 3396
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3397
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3421
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3422
		Category: hMisc,
		//line sql.y: 3423
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3426
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3449
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3450
		Category: hMisc,
		//line sql.y: 3451
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3464
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3571
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3572
		Category: hMisc,
		//line sql.y: 3573
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3574
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3605
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3606
		Category: hMisc,
		//line sql.y: 3607
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3608
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3638
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3639
		Category: hMisc,
		//line sql.y: 3640
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3641
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3661
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3662
		Category: hPriv,
		//line sql.y: 3663
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3678
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3708
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3709
		Category: hPriv,
		//line sql.y: 3710
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3725
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3793
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3794
		Category: hCfg,
		//line sql.y: 3795
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3796
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3808
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3809
		Category: hCfg,
		//line sql.y: 3810
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3811
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3820
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3821
		Category: hCfg,
		//line sql.y: 3822
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3825
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3846
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3847
		Category: hExperimental,
		//line sql.y: 3848
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3856
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3862
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3863
		Category: hExperimental,
		//line sql.y: 3864
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3872
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3880
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3881
		Category: hExperimental,
		//line sql.y: 3882
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3893
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3948
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3949
		Category: hCfg,
		//line sql.y: 3950
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3951
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3972
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3973
		Category: hCfg,
		//line sql.y: 3974
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3980
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3997
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3998
		Category: hTxn,
		//line sql.y: 3999
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4008
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4200
	`SHOW`: {
		//line sql.y: 4201
		Category: hGroup,
		//line sql.y: 4202
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4281
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4282
		Category: hCfg,
		//line sql.y: 4283
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4284
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4305
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4306
		Category: hExperimental,
		//line sql.y: 4307
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4314
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4327
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4328
		Category: hExperimental,
		//line sql.y: 4329
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4333
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4346
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4347
		Category: hCCL,
		//line sql.y: 4348
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4349
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4403
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4404
		Category: hCfg,
		//line sql.y: 4405
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4408
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4434
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4435
		Category: hDDL,
		//line sql.y: 4436
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4437
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4445
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4446
		Category: hDDL,
		//line sql.y: 4447
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4448
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4468
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4469
		Category: hDDL,
		//line sql.y: 4470
		Text: `SHOW DATABASES
`,
		//line sql.y: 4471
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4479
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4480
		Category: hMisc,
		//line sql.y: 4481
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4489
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4490
		Category: hMisc,
		//line sql.y: 4491
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4499
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4500
		Category: hPriv,
		//line sql.y: 4501
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4507
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4520
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4521
		Category: hDDL,
		//line sql.y: 4522
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4523
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4553
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4554
		Category: hDDL,
		//line sql.y: 4555
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4556
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4569
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4570
		Category: hMisc,
		//line sql.y: 4571
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4572
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4593
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4594
		Category: hMisc,
		//line sql.y: 4595
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4599
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4643
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4644
		Category: hMisc,
		//line sql.y: 4645
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4648
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4695
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4696
		Category: hMisc,
		//line sql.y: 4697
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4699
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4722
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4723
		Category: hMisc,
		//line sql.y: 4724
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4725
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4738
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4739
		Category: hDDL,
		//line sql.y: 4740
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4741
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4769
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4770
		Category: hMisc,
		//line sql.y: 4771
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4788
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4789
		Category: hDDL,
		//line sql.y: 4790
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4802
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4803
		Category: hDDL,
		//line sql.y: 4804
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4816
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4817
		Category: hMisc,
		//line sql.y: 4818
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4827
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4828
		Category: hMisc,
		//line sql.y: 4829
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4837
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4838
		Category: hCfg,
		//line sql.y: 4839
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4847
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4848
		Category: hCfg,
		//line sql.y: 4849
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4850
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4869
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4870
		Category: hDDL,
		//line sql.y: 4871
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4872
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4890
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4891
		Category: hPriv,
		//line sql.y: 4892
		Text: `SHOW USERS
`,
		//line sql.y: 4893
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4901
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4902
		Category: hPriv,
		//line sql.y: 4903
		Text: `SHOW ROLES
`,
		//line sql.y: 4904
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4960
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4961
		Category: hMisc,
		//line sql.y: 4962
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4983
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4984
		Category: hMisc,
		//line sql.y: 4985
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5239
	`PAUSE`: {
		//line sql.y: 5240
		Category: hMisc,
		//line sql.y: 5241
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5251
	`RESUME`: {
		//line sql.y: 5252
		Category: hMisc,
		//line sql.y: 5253
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5263
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5264
		Category: hMisc,
		//line sql.y: 5265
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5268
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5303
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5304
		Category: hMisc,
		//line sql.y: 5305
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5309
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5330
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5331
		Category: hDDL,
		//line sql.y: 5332
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5365
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5366
		Category: hDDL,
		//line sql.y: 5367
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5393
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5394
		Category: hDDL,
		//line sql.y: 5395
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5425
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6252
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6253
		Category: hDDL,
		//line sql.y: 6254
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6264
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6329
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6330
		Category: hDML,
		//line sql.y: 6331
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6332
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6350
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6351
		Category: hPriv,
		//line sql.y: 6352
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6353
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6365
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6366
		Category: hPriv,
		//line sql.y: 6367
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6368
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6397
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6398
		Category: hDDL,
		//line sql.y: 6399
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6400
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6575
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6576
		Category: hDDL,
		//line sql.y: 6577
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6620
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6621
		Category: hDDL,
		//line sql.y: 6622
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6632
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6986
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6987
		Category: hTxn,
		//line sql.y: 6988
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6989
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6997
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6998
		Category: hMisc,
		//line sql.y: 6999
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7002
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7024
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7025
		Category: hMisc,
		//line sql.y: 7026
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7032
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7053
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7054
		Category: hMisc,
		//line sql.y: 7055
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 7061
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7082
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7083
		Category: hTxn,
		//line sql.y: 7084
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7085
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7100
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7101
		Category: hTxn,
		//line sql.y: 7102
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7110
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7123
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7124
		Category: hTxn,
		//line sql.y: 7125
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7128
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7152
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7153
		Category: hTxn,
		//line sql.y: 7154
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7157
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7271
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7272
		Category: hDDL,
		//line sql.y: 7273
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7274
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7359
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7360
		Category: hDML,
		//line sql.y: 7361
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7369
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7388
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7389
		Category: hDML,
		//line sql.y: 7390
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7394
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7510
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7511
		Category: hDML,
		//line sql.y: 7512
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7519
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7744
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7745
		Category: hDML,
		//line sql.y: 7746
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7757
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7758
		Category: hDML,
		//line sql.y: 7759
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7771
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7846
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7847
		Category: hDML,
		//line sql.y: 7848
		Text: `TABLE <tablename>
`,
		//line sql.y: 7849
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8219
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8220
		Category: hDML,
		//line sql.y: 8221
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8222
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8331
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8332
		Category: hDML,
		//line sql.y: 8333
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8355
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
