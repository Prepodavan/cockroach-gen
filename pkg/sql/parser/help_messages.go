// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1237
	`ALTER`: {
		//line sql.y: 1238
		Category: hGroup,
		//line sql.y: 1239
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1256
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1257
		Category: hDDL,
		//line sql.y: 1258
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1297
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1312
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1313
		Category: hDDL,
		//line sql.y: 1314
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1333
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1338
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1339
		Category: hDDL,
		//line sql.y: 1340
		Text: `
ALTER VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1343
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1351
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1352
		Category: hDDL,
		//line sql.y: 1353
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1378
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1379
		Category: hDDL,
		//line sql.y: 1380
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
`,
		//line sql.y: 1382
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1390
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1391
		Category: hDDL,
		//line sql.y: 1392
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1404
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1409
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1410
		Category: hDDL,
		//line sql.y: 1411
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1427
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1929
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1930
		Category: hDDL,
		//line sql.y: 1931
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 1947
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2049
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2050
		Category: hMisc,
		//line sql.y: 2051
		Text: `
REFRESH MATERIALIZED VIEW view_name
`,
	},
	//line sql.y: 2060
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2061
		Category: hCCL,
		//line sql.y: 2062
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2082
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2174
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2175
		Category: hCCL,
		//line sql.y: 2176
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

  RECURRING NEVER indicates that the schedule is non recurring.
  If, in addition to 'NEVER', the 'first_run' schedule option is specified,
  then the schedule will execute once at that time (that is: it's a one-off execution).
  If the 'first_run' is not specified, then the created scheduled will be in 'PAUSED' state,
  and will need to be unpaused before it can execute.

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

EXPERIMENTAL SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.

`,
		//line sql.y: 2247
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2332
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2333
		Category: hCCL,
		//line sql.y: 2334
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2355
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2476
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2477
		Category: hCCL,
		//line sql.y: 2478
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2506
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2550
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2551
		Category: hCCL,
		//line sql.y: 2552
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2561
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2693
	`CANCEL`: {
		//line sql.y: 2694
		Category: hGroup,
		//line sql.y: 2695
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2702
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2703
		Category: hMisc,
		//line sql.y: 2704
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2707
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2729
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2730
		Category: hMisc,
		//line sql.y: 2731
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2734
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2765
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2766
		Category: hMisc,
		//line sql.y: 2767
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2770
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2840
	`CREATE`: {
		//line sql.y: 2841
		Category: hGroup,
		//line sql.y: 2842
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE
`,
	},
	//line sql.y: 2920
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 2921
		Category: hMisc,
		//line sql.y: 2922
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3065
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3066
		Category: hDML,
		//line sql.y: 3067
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3071
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3091
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3092
		Category: hCfg,
		//line sql.y: 3093
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3105
	`DROP`: {
		//line sql.y: 3106
		Category: hGroup,
		//line sql.y: 3107
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3126
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3127
		Category: hDDL,
		//line sql.y: 3128
		Text: `DROP VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3129
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3141
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3142
		Category: hDDL,
		//line sql.y: 3143
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3144
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3156
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3157
		Category: hDDL,
		//line sql.y: 3158
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3159
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3171
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3172
		Category: hDDL,
		//line sql.y: 3173
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3174
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3196
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3197
		Category: hDDL,
		//line sql.y: 3198
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3199
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3219
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3220
		Category: hDDL,
		//line sql.y: 3221
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3251
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3252
		Category: hDDL,
		//line sql.y: 3253
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3283
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3284
		Category: hPriv,
		//line sql.y: 3285
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3286
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3310
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3311
		Category: hMisc,
		//line sql.y: 3312
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3315
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3338
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3339
		Category: hMisc,
		//line sql.y: 3340
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3353
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3460
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3461
		Category: hMisc,
		//line sql.y: 3462
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3463
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3494
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3495
		Category: hMisc,
		//line sql.y: 3496
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3497
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3527
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3528
		Category: hMisc,
		//line sql.y: 3529
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3530
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3550
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3551
		Category: hPriv,
		//line sql.y: 3552
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3565
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3581
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3582
		Category: hPriv,
		//line sql.y: 3583
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]

`,
		//line sql.y: 3596
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3650
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3651
		Category: hCfg,
		//line sql.y: 3652
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3653
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3665
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3666
		Category: hCfg,
		//line sql.y: 3667
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3668
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3677
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3678
		Category: hCfg,
		//line sql.y: 3679
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3682
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3703
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3704
		Category: hExperimental,
		//line sql.y: 3705
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3713
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3719
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3720
		Category: hExperimental,
		//line sql.y: 3721
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3729
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3737
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3738
		Category: hExperimental,
		//line sql.y: 3739
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3750
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3805
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3806
		Category: hCfg,
		//line sql.y: 3807
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3808
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3829
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3830
		Category: hCfg,
		//line sql.y: 3831
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3837
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3854
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 3855
		Category: hTxn,
		//line sql.y: 3856
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 3863
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4055
	`SHOW`: {
		//line sql.y: 4056
		Category: hGroup,
		//line sql.y: 4057
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE SHOW TRANSACTION, SHOW USERS,
SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4129
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4130
		Category: hCfg,
		//line sql.y: 4131
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4132
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4153
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4154
		Category: hExperimental,
		//line sql.y: 4155
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4162
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4175
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4176
		Category: hExperimental,
		//line sql.y: 4177
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4181
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4194
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4195
		Category: hCCL,
		//line sql.y: 4196
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4197
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4236
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4237
		Category: hCfg,
		//line sql.y: 4238
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4241
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4267
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4268
		Category: hDDL,
		//line sql.y: 4269
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4270
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4278
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4279
		Category: hDDL,
		//line sql.y: 4280
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4281
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4301
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4302
		Category: hDDL,
		//line sql.y: 4303
		Text: `SHOW DATABASES
`,
		//line sql.y: 4304
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4312
	`SHOW ENUMS`: {
		ShortDescription: `list defined enums`,
		//line sql.y: 4313
		Category: hMisc,
		//line sql.y: 4314
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4322
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4323
		Category: hPriv,
		//line sql.y: 4324
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4330
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4343
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4344
		Category: hDDL,
		//line sql.y: 4345
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4346
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4376
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4377
		Category: hDDL,
		//line sql.y: 4378
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4379
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4392
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4393
		Category: hMisc,
		//line sql.y: 4394
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4395
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4416
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4417
		Category: hMisc,
		//line sql.y: 4418
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4422
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4466
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4467
		Category: hMisc,
		//line sql.y: 4468
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4471
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4518
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4519
		Category: hMisc,
		//line sql.y: 4520
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4522
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4545
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4546
		Category: hMisc,
		//line sql.y: 4547
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4548
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4561
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4562
		Category: hDDL,
		//line sql.y: 4563
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4564
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4596
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4597
		Category: hDDL,
		//line sql.y: 4598
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4610
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4611
		Category: hDDL,
		//line sql.y: 4612
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4624
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4625
		Category: hMisc,
		//line sql.y: 4626
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4635
	`SHOW LAST QUERY STATISTICS`: {
		ShortDescription: `display statistics for the last query issued`,
		//line sql.y: 4636
		Category: hMisc,
		//line sql.y: 4637
		Text: `SHOW LAST QUERY STATISTICS
`,
	},
	//line sql.y: 4645
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4646
		Category: hCfg,
		//line sql.y: 4647
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4655
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4656
		Category: hCfg,
		//line sql.y: 4657
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4658
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4677
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4678
		Category: hDDL,
		//line sql.y: 4679
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4680
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4698
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4699
		Category: hPriv,
		//line sql.y: 4700
		Text: `SHOW USERS
`,
		//line sql.y: 4701
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4709
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4710
		Category: hPriv,
		//line sql.y: 4711
		Text: `SHOW ROLES
`,
		//line sql.y: 4712
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4768
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4769
		Category: hMisc,
		//line sql.y: 4770
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4791
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4792
		Category: hMisc,
		//line sql.y: 4793
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5039
	`PAUSE`: {
		//line sql.y: 5040
		Category: hMisc,
		//line sql.y: 5041
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5051
	`RESUME`: {
		//line sql.y: 5052
		Category: hMisc,
		//line sql.y: 5053
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5063
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5064
		Category: hMisc,
		//line sql.y: 5065
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5068
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5103
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5104
		Category: hMisc,
		//line sql.y: 5105
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5109
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5130
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5131
		Category: hDDL,
		//line sql.y: 5132
		Text: `
CREATE SCHEMA [IF NOT EXISTS] <schemaname>
`,
	},
	//line sql.y: 5150
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5151
		Category: hDDL,
		//line sql.y: 5152
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5173
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5174
		Category: hDDL,
		//line sql.y: 5175
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5205
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6029
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6030
		Category: hDDL,
		//line sql.y: 6031
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6041
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6106
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6107
		Category: hDML,
		//line sql.y: 6108
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6109
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6127
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6128
		Category: hPriv,
		//line sql.y: 6129
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6130
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6142
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6143
		Category: hPriv,
		//line sql.y: 6144
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6145
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6174
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6175
		Category: hDDL,
		//line sql.y: 6176
		Text: `CREATE [TEMPORARY | TEMP] VIEW <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6177
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6284
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6285
		Category: hDDL,
		//line sql.y: 6286
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6329
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6330
		Category: hDDL,
		//line sql.y: 6331
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6341
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 6621
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 6622
		Category: hTxn,
		//line sql.y: 6623
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6624
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6632
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 6633
		Category: hMisc,
		//line sql.y: 6634
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 6637
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 6659
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 6660
		Category: hMisc,
		//line sql.y: 6661
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 6667
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6688
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 6689
		Category: hMisc,
		//line sql.y: 6690
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULES <jobid>

`,
		//line sql.y: 6696
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6717
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 6718
		Category: hTxn,
		//line sql.y: 6719
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 6720
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 6735
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 6736
		Category: hTxn,
		//line sql.y: 6737
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 6745
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 6758
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 6759
		Category: hTxn,
		//line sql.y: 6760
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 6763
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 6787
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 6788
		Category: hTxn,
		//line sql.y: 6789
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 6792
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 6892
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 6893
		Category: hDDL,
		//line sql.y: 6894
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 6895
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 6964
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 6965
		Category: hDML,
		//line sql.y: 6966
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT [( <colnames...> )] {DO UPDATE SET ... [WHERE <expr>] | DO NOTHING}]
       [RETURNING <exprs...>]
`,
		//line sql.y: 6971
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 6990
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 6991
		Category: hDML,
		//line sql.y: 6992
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 6996
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7107
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7108
		Category: hDML,
		//line sql.y: 7109
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7116
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7341
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7342
		Category: hDML,
		//line sql.y: 7343
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7354
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7355
		Category: hDML,
		//line sql.y: 7356
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7368
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7443
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7444
		Category: hDML,
		//line sql.y: 7445
		Text: `TABLE <tablename>
`,
		//line sql.y: 7446
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7803
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 7804
		Category: hDML,
		//line sql.y: 7805
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 7806
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 7915
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 7916
		Category: hDML,
		//line sql.y: 7917
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 7939
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
