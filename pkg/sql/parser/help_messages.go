// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1267
	`ALTER`: {
		//line sql.y: 1268
		Category: hGroup,
		//line sql.y: 1269
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1286
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1287
		Category: hDDL,
		//line sql.y: 1288
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1327
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1342
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1343
		Category: hDDL,
		//line sql.y: 1344
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1363
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1368
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1369
		Category: hDDL,
		//line sql.y: 1370
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1373
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1381
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1382
		Category: hDDL,
		//line sql.y: 1383
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1408
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1409
		Category: hDDL,
		//line sql.y: 1410
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1413
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1429
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1430
		Category: hDDL,
		//line sql.y: 1431
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1443
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1448
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1449
		Category: hDDL,
		//line sql.y: 1450
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1466
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1987
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1988
		Category: hDDL,
		//line sql.y: 1989
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2005
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2112
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2113
		Category: hMisc,
		//line sql.y: 2114
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2141
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2142
		Category: hCCL,
		//line sql.y: 2143
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2163
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2267
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2268
		Category: hCCL,
		//line sql.y: 2269
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] TO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2338
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2416
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2417
		Category: hCCL,
		//line sql.y: 2418
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2439
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2560
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2561
		Category: hCCL,
		//line sql.y: 2562
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2590
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2634
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2635
		Category: hCCL,
		//line sql.y: 2636
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2645
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2781
	`CANCEL`: {
		//line sql.y: 2782
		Category: hGroup,
		//line sql.y: 2783
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2790
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2791
		Category: hMisc,
		//line sql.y: 2792
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2795
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2817
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2818
		Category: hMisc,
		//line sql.y: 2819
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2822
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2853
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2854
		Category: hMisc,
		//line sql.y: 2855
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2858
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2928
	`CREATE`: {
		//line sql.y: 2929
		Category: hGroup,
		//line sql.y: 2930
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 2943
	`CREATE EXTENSION`: {
		//line sql.y: 2944
		Category: hCfg,
		//line sql.y: 2945
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3023
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3024
		Category: hMisc,
		//line sql.y: 3025
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3168
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3169
		Category: hDML,
		//line sql.y: 3170
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3174
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3194
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3195
		Category: hCfg,
		//line sql.y: 3196
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3208
	`DROP`: {
		//line sql.y: 3209
		Category: hGroup,
		//line sql.y: 3210
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3229
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3230
		Category: hDDL,
		//line sql.y: 3231
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3232
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3262
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3263
		Category: hDDL,
		//line sql.y: 3264
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3265
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3277
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3278
		Category: hDDL,
		//line sql.y: 3279
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3280
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3292
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3293
		Category: hDDL,
		//line sql.y: 3294
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3295
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3317
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3318
		Category: hDDL,
		//line sql.y: 3319
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3320
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3340
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3341
		Category: hDDL,
		//line sql.y: 3342
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3378
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3379
		Category: hDDL,
		//line sql.y: 3380
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3400
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3401
		Category: hPriv,
		//line sql.y: 3402
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3403
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3427
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3428
		Category: hMisc,
		//line sql.y: 3429
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3432
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3455
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3456
		Category: hMisc,
		//line sql.y: 3457
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3470
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3577
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3578
		Category: hMisc,
		//line sql.y: 3579
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3580
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3611
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3612
		Category: hMisc,
		//line sql.y: 3613
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3614
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3644
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3645
		Category: hMisc,
		//line sql.y: 3646
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3647
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3667
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3668
		Category: hPriv,
		//line sql.y: 3669
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3684
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3714
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3715
		Category: hPriv,
		//line sql.y: 3716
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3731
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3799
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3800
		Category: hCfg,
		//line sql.y: 3801
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3802
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3814
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3815
		Category: hCfg,
		//line sql.y: 3816
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3817
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3826
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3827
		Category: hCfg,
		//line sql.y: 3828
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3831
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3852
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3853
		Category: hExperimental,
		//line sql.y: 3854
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3862
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3868
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3869
		Category: hExperimental,
		//line sql.y: 3870
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3878
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3886
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3887
		Category: hExperimental,
		//line sql.y: 3888
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3899
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3954
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3955
		Category: hCfg,
		//line sql.y: 3956
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3957
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3978
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3979
		Category: hCfg,
		//line sql.y: 3980
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 3986
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4003
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4004
		Category: hTxn,
		//line sql.y: 4005
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4014
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4206
	`SHOW`: {
		//line sql.y: 4207
		Category: hGroup,
		//line sql.y: 4208
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4287
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4288
		Category: hCfg,
		//line sql.y: 4289
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4290
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4311
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4312
		Category: hExperimental,
		//line sql.y: 4313
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4320
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4333
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4334
		Category: hExperimental,
		//line sql.y: 4335
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4339
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4352
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4353
		Category: hCCL,
		//line sql.y: 4354
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4355
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4409
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4410
		Category: hCfg,
		//line sql.y: 4411
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4414
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4440
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4441
		Category: hDDL,
		//line sql.y: 4442
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4443
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4451
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4452
		Category: hDDL,
		//line sql.y: 4453
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4454
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4474
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4475
		Category: hDDL,
		//line sql.y: 4476
		Text: `SHOW DATABASES
`,
		//line sql.y: 4477
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4485
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4486
		Category: hMisc,
		//line sql.y: 4487
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4495
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4496
		Category: hMisc,
		//line sql.y: 4497
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4505
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4506
		Category: hPriv,
		//line sql.y: 4507
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4513
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4526
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4527
		Category: hDDL,
		//line sql.y: 4528
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4529
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4559
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4560
		Category: hDDL,
		//line sql.y: 4561
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4562
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4575
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4576
		Category: hMisc,
		//line sql.y: 4577
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4578
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4599
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4600
		Category: hMisc,
		//line sql.y: 4601
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4605
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4649
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4650
		Category: hMisc,
		//line sql.y: 4651
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4654
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4701
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4702
		Category: hMisc,
		//line sql.y: 4703
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4705
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4728
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4729
		Category: hMisc,
		//line sql.y: 4730
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4731
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4744
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4745
		Category: hDDL,
		//line sql.y: 4746
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4747
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4775
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4776
		Category: hMisc,
		//line sql.y: 4777
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4794
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4795
		Category: hDDL,
		//line sql.y: 4796
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4808
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4809
		Category: hDDL,
		//line sql.y: 4810
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4822
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4823
		Category: hMisc,
		//line sql.y: 4824
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4840
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4841
		Category: hCfg,
		//line sql.y: 4842
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4850
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4851
		Category: hCfg,
		//line sql.y: 4852
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4853
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4872
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4873
		Category: hDDL,
		//line sql.y: 4874
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4875
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4893
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4894
		Category: hPriv,
		//line sql.y: 4895
		Text: `SHOW USERS
`,
		//line sql.y: 4896
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4904
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4905
		Category: hPriv,
		//line sql.y: 4906
		Text: `SHOW ROLES
`,
		//line sql.y: 4907
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4963
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4964
		Category: hMisc,
		//line sql.y: 4965
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 4986
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 4987
		Category: hMisc,
		//line sql.y: 4988
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5242
	`PAUSE`: {
		//line sql.y: 5243
		Category: hMisc,
		//line sql.y: 5244
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5254
	`RESUME`: {
		//line sql.y: 5255
		Category: hMisc,
		//line sql.y: 5256
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5266
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5267
		Category: hMisc,
		//line sql.y: 5268
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5271
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5306
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5307
		Category: hMisc,
		//line sql.y: 5308
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5312
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5333
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5334
		Category: hDDL,
		//line sql.y: 5335
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5368
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5369
		Category: hDDL,
		//line sql.y: 5370
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5396
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5397
		Category: hDDL,
		//line sql.y: 5398
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5428
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6266
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6267
		Category: hDDL,
		//line sql.y: 6268
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6278
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6343
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6344
		Category: hDML,
		//line sql.y: 6345
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6346
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6364
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6365
		Category: hPriv,
		//line sql.y: 6366
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6367
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6379
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6380
		Category: hPriv,
		//line sql.y: 6381
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6382
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6411
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6412
		Category: hDDL,
		//line sql.y: 6413
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6414
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6589
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6590
		Category: hDDL,
		//line sql.y: 6591
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6634
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6635
		Category: hDDL,
		//line sql.y: 6636
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6646
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7000
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7001
		Category: hTxn,
		//line sql.y: 7002
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7003
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7011
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7012
		Category: hMisc,
		//line sql.y: 7013
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7016
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7038
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7039
		Category: hMisc,
		//line sql.y: 7040
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULES <jobid>

`,
		//line sql.y: 7046
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7067
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7068
		Category: hMisc,
		//line sql.y: 7069
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleid>

`,
		//line sql.y: 7075
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7096
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7097
		Category: hTxn,
		//line sql.y: 7098
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7099
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7114
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7115
		Category: hTxn,
		//line sql.y: 7116
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7124
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7137
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7138
		Category: hTxn,
		//line sql.y: 7139
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7142
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7166
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7167
		Category: hTxn,
		//line sql.y: 7168
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7171
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7285
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7286
		Category: hDDL,
		//line sql.y: 7287
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7288
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7373
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7374
		Category: hDML,
		//line sql.y: 7375
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7383
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7402
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7403
		Category: hDML,
		//line sql.y: 7404
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7408
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7524
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7525
		Category: hDML,
		//line sql.y: 7526
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7533
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7758
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7759
		Category: hDML,
		//line sql.y: 7760
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7771
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7772
		Category: hDML,
		//line sql.y: 7773
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7785
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7860
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7861
		Category: hDML,
		//line sql.y: 7862
		Text: `TABLE <tablename>
`,
		//line sql.y: 7863
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8233
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8234
		Category: hDML,
		//line sql.y: 8235
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8236
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8345
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8346
		Category: hDML,
		//line sql.y: 8347
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8369
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
