// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:658
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10781

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1182,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	420, 183,
	-2, 0,
	-1, 76,
	201, 1006,
	213, 1006,
	228, 285,
	322, 285,
	331, 804,
	360, 285,
	369, 804,
	406, 804,
	430, 285,
	455, 804,
	-2, 0,
	-1, 81,
	228, 289,
	-2, 0,
	-1, 82,
	118, 1182,
	207, 1182,
	440, 1182,
	441, 1182,
	-2, 0,
	-1, 94,
	133, 1153,
	150, 1153,
	163, 1153,
	210, 1153,
	240, 1153,
	282, 1153,
	292, 1153,
	435, 1153,
	-2, 1124,
	-1, 126,
	140, 713,
	227, 713,
	325, 693,
	374, 693,
	423, 713,
	-2, 0,
	-1, 127,
	4, 1184,
	21, 1184,
	22, 1184,
	23, 1184,
	24, 1184,
	25, 1184,
	26, 1184,
	28, 1184,
	29, 1184,
	35, 1184,
	40, 1184,
	41, 1184,
	42, 1184,
	43, 1184,
	44, 1184,
	45, 1184,
	46, 1184,
	47, 1184,
	48, 1184,
	50, 1184,
	51, 1184,
	52, 1184,
	54, 1184,
	55, 1184,
	56, 1184,
	57, 1184,
	58, 1184,
	62, 1184,
	63, 1184,
	64, 1184,
	65, 1184,
	67, 1184,
	68, 1184,
	69, 1184,
	73, 1184,
	74, 1184,
	75, 1184,
	76, 1184,
	77, 1184,
	78, 1184,
	79, 1184,
	82, 1184,
	83, 1184,
	84, 1184,
	85, 1184,
	87, 1184,
	89, 1184,
	90, 1184,
	91, 1184,
	93, 1184,
	95, 1184,
	96, 1184,
	104, 1184,
	105, 1184,
	106, 1184,
	107, 1184,
	109, 1184,
	110, 1184,
	111, 1184,
	113, 1184,
	114, 1184,
	115, 1184,
	117, 1184,
	118, 1184,
	120, 1184,
	121, 1184,
	124, 1184,
	125, 1184,
	126, 1184,
	128, 1184,
	129, 1184,
	131, 1184,
	132, 1184,
	134, 1184,
	135, 1184,
	136, 1184,
	137, 1184,
	138, 1184,
	139, 1184,
	140, 1184,
	141, 1184,
	142, 1184,
	143, 1184,
	144, 1184,
	145, 1184,
	146, 1184,
	147, 1184,
	149, 1184,
	155, 1184,
	156, 1184,
	157, 1184,
	158, 1184,
	162, 1184,
	164, 1184,
	168, 1184,
	169, 1184,
	170, 1184,
	171, 1184,
	172, 1184,
	173, 1184,
	175, 1184,
	176, 1184,
	178, 1184,
	179, 1184,
	181, 1184,
	182, 1184,
	183, 1184,
	184, 1184,
	185, 1184,
	186, 1184,
	187, 1184,
	188, 1184,
	189, 1184,
	191, 1184,
	192, 1184,
	194, 1184,
	195, 1184,
	196, 1184,
	197, 1184,
	201, 1184,
	202, 1184,
	203, 1184,
	204, 1184,
	207, 1184,
	208, 1184,
	209, 1184,
	211, 1184,
	213, 1184,
	215, 1184,
	217, 1184,
	218, 1184,
	219, 1184,
	221, 1184,
	225, 1184,
	226, 1184,
	227, 1184,
	228, 1184,
	229, 1184,
	231, 1184,
	232, 1184,
	234, 1184,
	235, 1184,
	237, 1184,
	238, 1184,
	241, 1184,
	242, 1184,
	243, 1184,
	246, 1184,
	247, 1184,
	248, 1184,
	249, 1184,
	251, 1184,
	252, 1184,
	253, 1184,
	254, 1184,
	255, 1184,
	256, 1184,
	257, 1184,
	258, 1184,
	259, 1184,
	260, 1184,
	261, 1184,
	263, 1184,
	265, 1184,
	266, 1184,
	267, 1184,
	268, 1184,
	269, 1184,
	271, 1184,
	273, 1184,
	275, 1184,
	277, 1184,
	278, 1184,
	279, 1184,
	280, 1184,
	281, 1184,
	284, 1184,
	287, 1184,
	288, 1184,
	289, 1184,
	290, 1184,
	293, 1184,
	294, 1184,
	295, 1184,
	297, 1184,
	299, 1184,
	300, 1184,
	301, 1184,
	302, 1184,
	303, 1184,
	304, 1184,
	305, 1184,
	306, 1184,
	307, 1184,
	308, 1184,
	309, 1184,
	311, 1184,
	312, 1184,
	313, 1184,
	314, 1184,
	315, 1184,
	316, 1184,
	317, 1184,
	318, 1184,
	319, 1184,
	321, 1184,
	323, 1184,
	324, 1184,
	325, 1184,
	326, 1184,
	327, 1184,
	328, 1184,
	329, 1184,
	330, 1184,
	331, 1184,
	332, 1184,
	339, 1184,
	341, 1184,
	342, 1184,
	343, 1184,
	344, 1184,
	345, 1184,
	346, 1184,
	347, 1184,
	348, 1184,
	350, 1184,
	351, 1184,
	353, 1184,
	354, 1184,
	355, 1184,
	356, 1184,
	357, 1184,
	358, 1184,
	360, 1184,
	361, 1184,
	362, 1184,
	363, 1184,
	364, 1184,
	365, 1184,
	366, 1184,
	367, 1184,
	369, 1184,
	370, 1184,
	371, 1184,
	372, 1184,
	373, 1184,
	374, 1184,
	376, 1184,
	377, 1184,
	378, 1184,
	379, 1184,
	380, 1184,
	382, 1184,
	383, 1184,
	384, 1184,
	386, 1184,
	388, 1184,
	389, 1184,
	390, 1184,
	391, 1184,
	392, 1184,
	393, 1184,
	394, 1184,
	395, 1184,
	396, 1184,
	397, 1184,
	398, 1184,
	399, 1184,
	400, 1184,
	402, 1184,
	403, 1184,
	405, 1184,
	407, 1184,
	408, 1184,
	409, 1184,
	410, 1184,
	411, 1184,
	412, 1184,
	413, 1184,
	415, 1184,
	416, 1184,
	417, 1184,
	418, 1184,
	419, 1184,
	421, 1184,
	423, 1184,
	424, 1184,
	425, 1184,
	426, 1184,
	427, 1184,
	429, 1184,
	430, 1184,
	431, 1184,
	433, 1184,
	434, 1184,
	437, 1184,
	438, 1184,
	439, 1184,
	440, 1184,
	441, 1184,
	442, 1184,
	443, 1184,
	445, 1184,
	448, 1184,
	449, 1184,
	450, 1184,
	451, 1184,
	452, 1184,
	453, 1184,
	455, 1184,
	456, 1184,
	457, 1184,
	462, 1184,
	463, 1184,
	464, 1184,
	465, 1184,
	466, 1184,
	467, 1184,
	-2, 0,
	-1, 128,
	1, 1058,
	217, 1058,
	321, 1058,
	329, 1058,
	470, 1058,
	494, 1058,
	-2, 0,
	-1, 130,
	1, 1058,
	494, 1058,
	-2, 0,
	-1, 131,
	1, 1058,
	494, 1058,
	-2, 0,
	-1, 132,
	1, 1058,
	420, 1058,
	494, 1058,
	-2, 0,
	-1, 159,
	133, 1152,
	150, 1152,
	163, 1152,
	210, 1152,
	240, 1152,
	282, 1152,
	292, 1152,
	435, 1152,
	-2, 1127,
	-1, 192,
	4, 1191,
	5, 1191,
	6, 1191,
	7, 1191,
	8, 1191,
	9, 1191,
	10, 1191,
	21, 1191,
	22, 1191,
	23, 1191,
	24, 1191,
	25, 1191,
	26, 1191,
	28, 1191,
	29, 1191,
	35, 1191,
	36, 1191,
	40, 1191,
	41, 1191,
	42, 1191,
	43, 1191,
	44, 1191,
	45, 1191,
	46, 1191,
	47, 1191,
	48, 1191,
	50, 1191,
	51, 1191,
	52, 1191,
	54, 1191,
	55, 1191,
	56, 1191,
	57, 1191,
	58, 1191,
	59, 1191,
	60, 1191,
	61, 1191,
	62, 1191,
	63, 1191,
	64, 1191,
	65, 1191,
	67, 1191,
	68, 1191,
	69, 1191,
	71, 1191,
	73, 1191,
	74, 1191,
	75, 1191,
	76, 1191,
	77, 1191,
	78, 1191,
	79, 1191,
	82, 1191,
	83, 1191,
	84, 1191,
	85, 1191,
	87, 1191,
	89, 1191,
	90, 1191,
	91, 1191,
	93, 1191,
	94, 1191,
	95, 1191,
	96, 1191,
	97, 1191,
	98, 1191,
	99, 1191,
	100, 1191,
	101, 1191,
	102, 1191,
	103, 1191,
	104, 1191,
	105, 1191,
	106, 1191,
	107, 1191,
	108, 1191,
	109, 1191,
	110, 1191,
	111, 1191,
	112, 1191,
	113, 1191,
	114, 1191,
	115, 1191,
	117, 1191,
	118, 1191,
	120, 1191,
	121, 1191,
	124, 1191,
	125, 1191,
	126, 1191,
	128, 1191,
	129, 1191,
	131, 1191,
	132, 1191,
	134, 1191,
	135, 1191,
	136, 1191,
	137, 1191,
	138, 1191,
	139, 1191,
	140, 1191,
	141, 1191,
	142, 1191,
	143, 1191,
	144, 1191,
	145, 1191,
	146, 1191,
	147, 1191,
	148, 1191,
	149, 1191,
	155, 1191,
	156, 1191,
	157, 1191,
	158, 1191,
	162, 1191,
	164, 1191,
	167, 1191,
	168, 1191,
	169, 1191,
	170, 1191,
	171, 1191,
	172, 1191,
	173, 1191,
	175, 1191,
	176, 1191,
	178, 1191,
	179, 1191,
	181, 1191,
	182, 1191,
	183, 1191,
	184, 1191,
	185, 1191,
	186, 1191,
	187, 1191,
	188, 1191,
	189, 1191,
	190, 1191,
	191, 1191,
	192, 1191,
	194, 1191,
	195, 1191,
	196, 1191,
	197, 1191,
	201, 1191,
	202, 1191,
	203, 1191,
	204, 1191,
	206, 1191,
	207, 1191,
	208, 1191,
	209, 1191,
	211, 1191,
	213, 1191,
	214, 1191,
	215, 1191,
	216, 1191,
	217, 1191,
	218, 1191,
	219, 1191,
	220, 1191,
	221, 1191,
	225, 1191,
	226, 1191,
	227, 1191,
	228, 1191,
	229, 1191,
	231, 1191,
	232, 1191,
	234, 1191,
	235, 1191,
	236, 1191,
	237, 1191,
	238, 1191,
	239, 1191,
	241, 1191,
	242, 1191,
	243, 1191,
	244, 1191,
	245, 1191,
	246, 1191,
	247, 1191,
	248, 1191,
	249, 1191,
	251, 1191,
	252, 1191,
	253, 1191,
	254, 1191,
	255, 1191,
	256, 1191,
	257, 1191,
	258, 1191,
	259, 1191,
	260, 1191,
	261, 1191,
	263, 1191,
	264, 1191,
	265, 1191,
	266, 1191,
	267, 1191,
	268, 1191,
	269, 1191,
	270, 1191,
	271, 1191,
	272, 1191,
	273, 1191,
	274, 1191,
	275, 1191,
	276, 1191,
	277, 1191,
	278, 1191,
	279, 1191,
	280, 1191,
	281, 1191,
	284, 1191,
	288, 1191,
	289, 1191,
	290, 1191,
	293, 1191,
	294, 1191,
	295, 1191,
	296, 1191,
	297, 1191,
	298, 1191,
	299, 1191,
	300, 1191,
	301, 1191,
	302, 1191,
	303, 1191,
	304, 1191,
	305, 1191,
	306, 1191,
	307, 1191,
	308, 1191,
	309, 1191,
	311, 1191,
	312, 1191,
	313, 1191,
	314, 1191,
	315, 1191,
	316, 1191,
	317, 1191,
	318, 1191,
	319, 1191,
	321, 1191,
	323, 1191,
	324, 1191,
	325, 1191,
	326, 1191,
	327, 1191,
	328, 1191,
	329, 1191,
	330, 1191,
	331, 1191,
	332, 1191,
	339, 1191,
	341, 1191,
	342, 1191,
	343, 1191,
	344, 1191,
	345, 1191,
	346, 1191,
	347, 1191,
	348, 1191,
	350, 1191,
	351, 1191,
	352, 1191,
	353, 1191,
	354, 1191,
	355, 1191,
	356, 1191,
	357, 1191,
	358, 1191,
	360, 1191,
	361, 1191,
	362, 1191,
	363, 1191,
	364, 1191,
	365, 1191,
	366, 1191,
	367, 1191,
	369, 1191,
	370, 1191,
	371, 1191,
	372, 1191,
	373, 1191,
	374, 1191,
	375, 1191,
	376, 1191,
	377, 1191,
	378, 1191,
	379, 1191,
	380, 1191,
	381, 1191,
	382, 1191,
	383, 1191,
	384, 1191,
	386, 1191,
	388, 1191,
	389, 1191,
	390, 1191,
	391, 1191,
	392, 1191,
	393, 1191,
	394, 1191,
	395, 1191,
	396, 1191,
	397, 1191,
	398, 1191,
	399, 1191,
	400, 1191,
	402, 1191,
	403, 1191,
	404, 1191,
	405, 1191,
	407, 1191,
	408, 1191,
	409, 1191,
	410, 1191,
	411, 1191,
	412, 1191,
	413, 1191,
	415, 1191,
	416, 1191,
	417, 1191,
	418, 1191,
	419, 1191,
	421, 1191,
	423, 1191,
	424, 1191,
	425, 1191,
	426, 1191,
	427, 1191,
	428, 1191,
	429, 1191,
	430, 1191,
	431, 1191,
	433, 1191,
	434, 1191,
	436, 1191,
	437, 1191,
	438, 1191,
	439, 1191,
	440, 1191,
	441, 1191,
	442, 1191,
	443, 1191,
	444, 1191,
	445, 1191,
	448, 1191,
	449, 1191,
	450, 1191,
	451, 1191,
	452, 1191,
	453, 1191,
	455, 1191,
	456, 1191,
	457, 1191,
	462, 1191,
	463, 1191,
	464, 1191,
	465, 1191,
	466, 1191,
	467, 1191,
	468, 1191,
	475, 1191,
	482, 1191,
	483, 1191,
	484, 1191,
	491, 1191,
	495, 1191,
	-2, 0,
	-1, 584,
	166, 1897,
	420, 1897,
	474, 1897,
	493, 1897,
	-2, 0,
	-1, 585,
	166, 1978,
	420, 1978,
	474, 1978,
	493, 1978,
	-2, 0,
	-1, 586,
	166, 1885,
	420, 1885,
	474, 1885,
	493, 1885,
	-2, 0,
	-1, 588,
	166, 2069,
	420, 2069,
	474, 2069,
	493, 2069,
	-2, 0,
	-1, 590,
	166, 2098,
	420, 2098,
	474, 2098,
	493, 2098,
	-2, 0,
	-1, 597,
	166, 1993,
	420, 1993,
	474, 1993,
	493, 1993,
	-2, 551,
	-1, 626,
	493, 1838,
	496, 1838,
	-2, 766,
	-1, 627,
	493, 1840,
	496, 1840,
	-2, 767,
	-1, 628,
	493, 1839,
	496, 1839,
	-2, 768,
	-1, 629,
	496, 1773,
	-2, 769,
	-1, 671,
	455, 983,
	-2, 805,
	-1, 709,
	4, 1004,
	21, 1004,
	22, 1004,
	23, 1004,
	24, 1004,
	25, 1004,
	26, 1004,
	28, 1004,
	29, 1004,
	35, 1004,
	40, 1004,
	41, 1004,
	42, 1004,
	43, 1004,
	44, 1004,
	45, 1004,
	46, 1004,
	47, 1004,
	48, 1004,
	50, 1004,
	51, 1004,
	52, 1004,
	54, 1004,
	55, 1004,
	56, 1004,
	57, 1004,
	58, 1004,
	62, 1004,
	63, 1004,
	64, 1004,
	65, 1004,
	67, 1004,
	68, 1004,
	69, 1004,
	73, 1004,
	74, 1004,
	75, 1004,
	76, 1004,
	77, 1004,
	78, 1004,
	79, 1004,
	82, 1004,
	83, 1004,
	84, 1004,
	85, 1004,
	87, 1004,
	89, 1004,
	90, 1004,
	91, 1004,
	93, 1004,
	95, 1004,
	96, 1004,
	104, 1004,
	105, 1004,
	106, 1004,
	107, 1004,
	109, 1004,
	110, 1004,
	111, 1004,
	113, 1004,
	114, 1004,
	115, 1004,
	117, 1004,
	118, 1004,
	120, 1004,
	121, 1004,
	124, 1004,
	125, 1004,
	126, 1004,
	128, 1004,
	129, 1004,
	131, 1004,
	132, 1004,
	134, 1004,
	135, 1004,
	136, 1004,
	137, 1004,
	138, 1004,
	139, 1004,
	140, 1004,
	141, 1004,
	142, 1004,
	143, 1004,
	144, 1004,
	145, 1004,
	146, 1004,
	147, 1004,
	149, 1004,
	155, 1004,
	156, 1004,
	157, 1004,
	158, 1004,
	162, 1004,
	164, 1004,
	168, 1004,
	169, 1004,
	170, 1004,
	171, 1004,
	172, 1004,
	173, 1004,
	175, 1004,
	176, 1004,
	178, 1004,
	179, 1004,
	181, 1004,
	182, 1004,
	183, 1004,
	184, 1004,
	185, 1004,
	186, 1004,
	187, 1004,
	188, 1004,
	189, 1004,
	191, 1004,
	192, 1004,
	194, 1004,
	195, 1004,
	196, 1004,
	197, 1004,
	201, 1004,
	202, 1004,
	203, 1004,
	204, 1004,
	207, 1004,
	208, 1004,
	209, 1004,
	211, 1004,
	213, 1004,
	215, 1004,
	217, 1004,
	218, 1004,
	219, 1004,
	221, 1004,
	225, 1004,
	226, 1004,
	227, 1004,
	228, 1004,
	229, 1004,
	231, 1004,
	232, 1004,
	234, 1004,
	235, 1004,
	237, 1004,
	238, 1004,
	241, 1004,
	242, 1004,
	243, 1004,
	246, 1004,
	247, 1004,
	248, 1004,
	249, 1004,
	251, 1004,
	252, 1004,
	253, 1004,
	254, 1004,
	255, 1004,
	256, 1004,
	257, 1004,
	258, 1004,
	259, 1004,
	260, 1004,
	261, 1004,
	263, 1004,
	265, 1004,
	266, 1004,
	267, 1004,
	268, 1004,
	269, 1004,
	271, 1004,
	273, 1004,
	275, 1004,
	277, 1004,
	278, 1004,
	279, 1004,
	280, 1004,
	281, 1004,
	284, 1004,
	288, 1004,
	289, 1004,
	290, 1004,
	293, 1004,
	294, 1004,
	295, 1004,
	297, 1004,
	299, 1004,
	300, 1004,
	301, 1004,
	302, 1004,
	303, 1004,
	304, 1004,
	305, 1004,
	306, 1004,
	307, 1004,
	308, 1004,
	309, 1004,
	311, 1004,
	312, 1004,
	313, 1004,
	314, 1004,
	315, 1004,
	316, 1004,
	317, 1004,
	318, 1004,
	319, 1004,
	321, 1004,
	323, 1004,
	324, 1004,
	325, 1004,
	326, 1004,
	327, 1004,
	328, 1004,
	329, 1004,
	330, 1004,
	331, 1004,
	332, 1004,
	339, 1004,
	341, 1004,
	342, 1004,
	343, 1004,
	344, 1004,
	345, 1004,
	346, 1004,
	347, 1004,
	348, 1004,
	350, 1004,
	351, 1004,
	353, 1004,
	354, 1004,
	355, 1004,
	356, 1004,
	357, 1004,
	358, 1004,
	360, 1004,
	361, 1004,
	362, 1004,
	363, 1004,
	364, 1004,
	365, 1004,
	366, 1004,
	367, 1004,
	369, 1004,
	370, 1004,
	371, 1004,
	372, 1004,
	373, 1004,
	374, 1004,
	376, 1004,
	377, 1004,
	378, 1004,
	379, 1004,
	380, 1004,
	382, 1004,
	383, 1004,
	384, 1004,
	386, 1004,
	388, 1004,
	389, 1004,
	390, 1004,
	391, 1004,
	392, 1004,
	393, 1004,
	394, 1004,
	395, 1004,
	396, 1004,
	397, 1004,
	398, 1004,
	399, 1004,
	400, 1004,
	402, 1004,
	403, 1004,
	405, 1004,
	407, 1004,
	408, 1004,
	409, 1004,
	410, 1004,
	411, 1004,
	412, 1004,
	413, 1004,
	415, 1004,
	416, 1004,
	417, 1004,
	418, 1004,
	419, 1004,
	421, 1004,
	423, 1004,
	424, 1004,
	425, 1004,
	426, 1004,
	427, 1004,
	429, 1004,
	430, 1004,
	431, 1004,
	433, 1004,
	434, 1004,
	437, 1004,
	438, 1004,
	439, 1004,
	440, 1004,
	441, 1004,
	442, 1004,
	443, 1004,
	445, 1004,
	448, 1004,
	449, 1004,
	450, 1004,
	451, 1004,
	452, 1004,
	453, 1004,
	455, 1004,
	456, 1004,
	457, 1004,
	462, 1004,
	463, 1004,
	464, 1004,
	465, 1004,
	466, 1004,
	467, 1004,
	-2, 0,
	-1, 774,
	325, 694,
	374, 694,
	-2, 0,
	-1, 775,
	325, 693,
	374, 693,
	-2, 641,
	-1, 779,
	1, 723,
	490, 723,
	492, 723,
	494, 723,
	-2, 0,
	-1, 780,
	1, 765,
	163, 765,
	490, 765,
	492, 765,
	494, 765,
	-2, 0,
	-1, 788,
	1, 697,
	490, 697,
	492, 697,
	494, 697,
	-2, 0,
	-1, 791,
	1, 723,
	490, 723,
	492, 723,
	494, 723,
	-2, 0,
	-1, 792,
	1, 725,
	490, 725,
	492, 725,
	494, 725,
	-2, 0,
	-1, 793,
	1, 728,
	490, 728,
	492, 728,
	494, 728,
	-2, 0,
	-1, 798,
	1, 744,
	490, 744,
	492, 744,
	494, 744,
	-2, 0,
	-1, 799,
	1, 746,
	490, 746,
	492, 746,
	494, 746,
	-2, 0,
	-1, 844,
	150, 1193,
	163, 1193,
	240, 1193,
	282, 1193,
	-2, 1131,
	-1, 858,
	150, 1192,
	163, 1192,
	240, 1192,
	282, 1192,
	-2, 1128,
	-1, 884,
	493, 1837,
	-2, 559,
	-1, 912,
	5, 1829,
	491, 1827,
	-2, 1818,
	-1, 920,
	5, 1850,
	491, 1847,
	-2, 1838,
	-1, 921,
	5, 1851,
	491, 1848,
	-2, 1839,
	-1, 929,
	493, 1835,
	-2, 1817,
	-1, 930,
	491, 2176,
	-2, 1836,
	-1, 953,
	491, 2175,
	-2, 1852,
	-1, 954,
	5, 1357,
	-2, 2146,
	-1, 955,
	5, 1358,
	-2, 2147,
	-1, 956,
	5, 1359,
	-2, 2161,
	-1, 957,
	5, 1360,
	-2, 2126,
	-1, 958,
	5, 1361,
	-2, 2159,
	-1, 959,
	5, 1369,
	-2, 2138,
	-1, 960,
	5, 1356,
	-2, 2134,
	-1, 961,
	5, 1356,
	-2, 2133,
	-1, 962,
	5, 1356,
	-2, 2152,
	-1, 963,
	5, 1367,
	-2, 2128,
	-1, 964,
	5, 1372,
	-2, 2127,
	-1, 965,
	5, 1374,
	-2, 2171,
	-1, 968,
	5, 1396,
	-2, 2164,
	-1, 969,
	5, 1388,
	-2, 2165,
	-1, 970,
	5, 1396,
	-2, 2166,
	-1, 971,
	5, 1392,
	-2, 2167,
	-1, 972,
	5, 1343,
	-2, 2139,
	-1, 973,
	5, 1344,
	-2, 2140,
	-1, 1000,
	5, 1379,
	-2, 2172,
	-1, 1001,
	5, 1380,
	-2, 2162,
	-1, 1002,
	5, 1381,
	456, 1381,
	-2, 2129,
	-1, 1003,
	5, 1382,
	456, 1382,
	-2, 2130,
	-1, 1040,
	491, 1847,
	-2, 1838,
	-1, 1041,
	491, 1848,
	-2, 1839,
	-1, 1070,
	166, 2098,
	420, 2098,
	474, 2098,
	493, 2098,
	-2, 0,
	-1, 1073,
	1, 537,
	494, 537,
	-2, 1066,
	-1, 1198,
	341, 1813,
	484, 1813,
	-2, 1811,
	-1, 1210,
	495, 1813,
	-2, 1814,
	-1, 1214,
	1, 980,
	490, 980,
	492, 980,
	494, 980,
	-2, 1180,
	-1, 1259,
	331, 804,
	455, 804,
	-2, 284,
	-1, 1282,
	1, 980,
	490, 980,
	492, 980,
	494, 980,
	-2, 1180,
	-1, 1288,
	4, 1004,
	21, 1004,
	22, 1004,
	23, 1004,
	24, 1004,
	25, 1004,
	26, 1004,
	28, 1004,
	29, 1004,
	35, 1004,
	40, 1004,
	41, 1004,
	42, 1004,
	43, 1004,
	44, 1004,
	45, 1004,
	46, 1004,
	47, 1004,
	48, 1004,
	50, 1004,
	51, 1004,
	52, 1004,
	54, 1004,
	55, 1004,
	56, 1004,
	57, 1004,
	58, 1004,
	62, 1004,
	63, 1004,
	64, 1004,
	65, 1004,
	67, 1004,
	68, 1004,
	69, 1004,
	73, 1004,
	74, 1004,
	75, 1004,
	76, 1004,
	77, 1004,
	78, 1004,
	79, 1004,
	82, 1004,
	83, 1004,
	84, 1004,
	85, 1004,
	87, 1004,
	89, 1004,
	90, 1004,
	91, 1004,
	93, 1004,
	95, 1004,
	96, 1004,
	104, 1004,
	105, 1004,
	106, 1004,
	107, 1004,
	109, 1004,
	110, 1004,
	111, 1004,
	113, 1004,
	114, 1004,
	115, 1004,
	117, 1004,
	118, 1004,
	120, 1004,
	121, 1004,
	124, 1004,
	125, 1004,
	126, 1004,
	128, 1004,
	129, 1004,
	131, 1004,
	132, 1004,
	134, 1004,
	135, 1004,
	136, 1004,
	137, 1004,
	138, 1004,
	139, 1004,
	140, 1004,
	141, 1004,
	142, 1004,
	143, 1004,
	144, 1004,
	145, 1004,
	146, 1004,
	147, 1004,
	155, 1004,
	156, 1004,
	157, 1004,
	158, 1004,
	162, 1004,
	164, 1004,
	168, 1004,
	169, 1004,
	170, 1004,
	171, 1004,
	172, 1004,
	173, 1004,
	175, 1004,
	176, 1004,
	178, 1004,
	179, 1004,
	181, 1004,
	182, 1004,
	183, 1004,
	184, 1004,
	185, 1004,
	186, 1004,
	187, 1004,
	188, 1004,
	189, 1004,
	191, 1004,
	192, 1004,
	194, 1004,
	195, 1004,
	196, 1004,
	197, 1004,
	202, 1004,
	203, 1004,
	204, 1004,
	207, 1004,
	208, 1004,
	209, 1004,
	211, 1004,
	213, 1004,
	215, 1004,
	217, 1004,
	218, 1004,
	219, 1004,
	221, 1004,
	225, 1004,
	226, 1004,
	227, 1004,
	228, 1004,
	229, 1004,
	231, 1004,
	232, 1004,
	234, 1004,
	235, 1004,
	237, 1004,
	238, 1004,
	241, 1004,
	242, 1004,
	243, 1004,
	246, 1004,
	247, 1004,
	248, 1004,
	249, 1004,
	251, 1004,
	252, 1004,
	253, 1004,
	254, 1004,
	255, 1004,
	256, 1004,
	257, 1004,
	258, 1004,
	259, 1004,
	260, 1004,
	261, 1004,
	263, 1004,
	265, 1004,
	266, 1004,
	267, 1004,
	268, 1004,
	269, 1004,
	271, 1004,
	275, 1004,
	277, 1004,
	278, 1004,
	279, 1004,
	280, 1004,
	281, 1004,
	284, 1004,
	286, 1004,
	288, 1004,
	289, 1004,
	290, 1004,
	293, 1004,
	294, 1004,
	295, 1004,
	297, 1004,
	299, 1004,
	300, 1004,
	301, 1004,
	302, 1004,
	303, 1004,
	304, 1004,
	305, 1004,
	306, 1004,
	307, 1004,
	308, 1004,
	309, 1004,
	311, 1004,
	312, 1004,
	313, 1004,
	314, 1004,
	315, 1004,
	316, 1004,
	317, 1004,
	318, 1004,
	319, 1004,
	321, 1004,
	323, 1004,
	324, 1004,
	325, 1004,
	326, 1004,
	327, 1004,
	328, 1004,
	329, 1004,
	330, 1004,
	331, 1004,
	332, 1004,
	339, 1004,
	341, 1004,
	342, 1004,
	343, 1004,
	344, 1004,
	345, 1004,
	346, 1004,
	347, 1004,
	348, 1004,
	350, 1004,
	351, 1004,
	353, 1004,
	354, 1004,
	355, 1004,
	356, 1004,
	357, 1004,
	358, 1004,
	360, 1004,
	361, 1004,
	362, 1004,
	363, 1004,
	364, 1004,
	365, 1004,
	366, 1004,
	367, 1004,
	369, 1004,
	370, 1004,
	371, 1004,
	372, 1004,
	373, 1004,
	374, 1004,
	376, 1004,
	377, 1004,
	378, 1004,
	379, 1004,
	380, 1004,
	382, 1004,
	383, 1004,
	384, 1004,
	386, 1004,
	388, 1004,
	389, 1004,
	390, 1004,
	391, 1004,
	392, 1004,
	393, 1004,
	394, 1004,
	395, 1004,
	396, 1004,
	397, 1004,
	398, 1004,
	399, 1004,
	400, 1004,
	402, 1004,
	403, 1004,
	405, 1004,
	407, 1004,
	408, 1004,
	409, 1004,
	410, 1004,
	411, 1004,
	412, 1004,
	413, 1004,
	415, 1004,
	416, 1004,
	417, 1004,
	418, 1004,
	419, 1004,
	421, 1004,
	423, 1004,
	424, 1004,
	425, 1004,
	426, 1004,
	427, 1004,
	429, 1004,
	430, 1004,
	431, 1004,
	433, 1004,
	434, 1004,
	437, 1004,
	438, 1004,
	439, 1004,
	440, 1004,
	441, 1004,
	442, 1004,
	443, 1004,
	445, 1004,
	448, 1004,
	449, 1004,
	450, 1004,
	451, 1004,
	452, 1004,
	453, 1004,
	455, 1004,
	456, 1004,
	457, 1004,
	462, 1004,
	463, 1004,
	464, 1004,
	465, 1004,
	466, 1004,
	467, 1004,
	-2, 0,
	-1, 1353,
	1, 412,
	490, 412,
	492, 412,
	494, 412,
	-2, 1151,
	-1, 1356,
	4, 2170,
	11, 2170,
	12, 2170,
	14, 2170,
	15, 2170,
	16, 2170,
	17, 2170,
	18, 2170,
	19, 2170,
	21, 2170,
	22, 2170,
	23, 2170,
	24, 2170,
	25, 2170,
	26, 2170,
	28, 2170,
	29, 2170,
	32, 2170,
	33, 2170,
	35, 2170,
	37, 2170,
	40, 2170,
	41, 2170,
	42, 2170,
	43, 2170,
	44, 2170,
	45, 2170,
	46, 2170,
	47, 2170,
	48, 2170,
	50, 2170,
	51, 2170,
	52, 2170,
	54, 2170,
	55, 2170,
	56, 2170,
	57, 2170,
	58, 2170,
	62, 2170,
	63, 2170,
	64, 2170,
	65, 2170,
	67, 2170,
	68, 2170,
	69, 2170,
	70, 2170,
	73, 2170,
	74, 2170,
	75, 2170,
	76, 2170,
	77, 2170,
	78, 2170,
	79, 2170,
	80, 2170,
	82, 2170,
	83, 2170,
	84, 2170,
	85, 2170,
	87, 2170,
	88, 2170,
	89, 2170,
	90, 2170,
	91, 2170,
	93, 2170,
	94, 2170,
	95, 2170,
	96, 2170,
	104, 2170,
	105, 2170,
	106, 2170,
	107, 2170,
	109, 2170,
	110, 2170,
	111, 2170,
	113, 2170,
	114, 2170,
	115, 2170,
	117, 2170,
	118, 2170,
	120, 2170,
	121, 2170,
	124, 2170,
	125, 2170,
	126, 2170,
	128, 2170,
	129, 2170,
	131, 2170,
	132, 2170,
	134, 2170,
	135, 2170,
	136, 2170,
	137, 2170,
	138, 2170,
	139, 2170,
	140, 2170,
	141, 2170,
	142, 2170,
	143, 2170,
	144, 2170,
	145, 2170,
	146, 2170,
	147, 2170,
	151, 2170,
	152, 2170,
	153, 2170,
	154, 2170,
	155, 2170,
	156, 2170,
	157, 2170,
	158, 2170,
	161, 2170,
	162, 2170,
	164, 2170,
	167, 2170,
	168, 2170,
	169, 2170,
	170, 2170,
	171, 2170,
	172, 2170,
	173, 2170,
	175, 2170,
	176, 2170,
	178, 2170,
	179, 2170,
	181, 2170,
	182, 2170,
	183, 2170,
	184, 2170,
	185, 2170,
	186, 2170,
	187, 2170,
	188, 2170,
	189, 2170,
	190, 2170,
	191, 2170,
	192, 2170,
	193, 2170,
	194, 2170,
	195, 2170,
	196, 2170,
	197, 2170,
	199, 2170,
	200, 2170,
	202, 2170,
	203, 2170,
	204, 2170,
	206, 2170,
	207, 2170,
	208, 2170,
	209, 2170,
	211, 2170,
	213, 2170,
	214, 2170,
	215, 2170,
	216, 2170,
	217, 2170,
	218, 2170,
	219, 2170,
	220, 2170,
	221, 2170,
	223, 2170,
	224, 2170,
	225, 2170,
	226, 2170,
	227, 2170,
	228, 2170,
	229, 2170,
	231, 2170,
	232, 2170,
	234, 2170,
	235, 2170,
	236, 2170,
	237, 2170,
	238, 2170,
	239, 2170,
	241, 2170,
	242, 2170,
	243, 2170,
	246, 2170,
	247, 2170,
	248, 2170,
	249, 2170,
	250, 2170,
	251, 2170,
	252, 2170,
	253, 2170,
	254, 2170,
	255, 2170,
	256, 2170,
	257, 2170,
	258, 2170,
	259, 2170,
	260, 2170,
	261, 2170,
	263, 2170,
	264, 2170,
	265, 2170,
	266, 2170,
	267, 2170,
	268, 2170,
	269, 2170,
	271, 2170,
	274, 2170,
	275, 2170,
	277, 2170,
	278, 2170,
	279, 2170,
	280, 2170,
	281, 2170,
	284, 2170,
	288, 2170,
	289, 2170,
	290, 2170,
	291, 2170,
	293, 2170,
	294, 2170,
	295, 2170,
	297, 2170,
	299, 2170,
	300, 2170,
	301, 2170,
	302, 2170,
	303, 2170,
	304, 2170,
	305, 2170,
	306, 2170,
	307, 2170,
	308, 2170,
	309, 2170,
	311, 2170,
	312, 2170,
	313, 2170,
	314, 2170,
	315, 2170,
	316, 2170,
	317, 2170,
	318, 2170,
	319, 2170,
	321, 2170,
	323, 2170,
	324, 2170,
	325, 2170,
	326, 2170,
	327, 2170,
	328, 2170,
	329, 2170,
	330, 2170,
	331, 2170,
	332, 2170,
	339, 2170,
	340, 2170,
	341, 2170,
	342, 2170,
	343, 2170,
	344, 2170,
	345, 2170,
	346, 2170,
	347, 2170,
	348, 2170,
	350, 2170,
	351, 2170,
	352, 2170,
	353, 2170,
	354, 2170,
	355, 2170,
	356, 2170,
	357, 2170,
	358, 2170,
	359, 2170,
	360, 2170,
	361, 2170,
	362, 2170,
	363, 2170,
	364, 2170,
	365, 2170,
	366, 2170,
	367, 2170,
	369, 2170,
	370, 2170,
	371, 2170,
	372, 2170,
	373, 2170,
	374, 2170,
	376, 2170,
	377, 2170,
	378, 2170,
	379, 2170,
	380, 2170,
	381, 2170,
	382, 2170,
	383, 2170,
	384, 2170,
	386, 2170,
	388, 2170,
	389, 2170,
	390, 2170,
	391, 2170,
	392, 2170,
	393, 2170,
	394, 2170,
	395, 2170,
	396, 2170,
	397, 2170,
	398, 2170,
	399, 2170,
	400, 2170,
	402, 2170,
	403, 2170,
	405, 2170,
	407, 2170,
	408, 2170,
	409, 2170,
	410, 2170,
	411, 2170,
	412, 2170,
	413, 2170,
	415, 2170,
	416, 2170,
	417, 2170,
	418, 2170,
	419, 2170,
	421, 2170,
	423, 2170,
	424, 2170,
	425, 2170,
	426, 2170,
	427, 2170,
	429, 2170,
	430, 2170,
	431, 2170,
	433, 2170,
	434, 2170,
	437, 2170,
	438, 2170,
	439, 2170,
	440, 2170,
	441, 2170,
	442, 2170,
	443, 2170,
	445, 2170,
	448, 2170,
	449, 2170,
	450, 2170,
	451, 2170,
	452, 2170,
	453, 2170,
	455, 2170,
	456, 2170,
	457, 2170,
	462, 2170,
	463, 2170,
	464, 2170,
	465, 2170,
	466, 2170,
	467, 2170,
	468, 2170,
	469, 2170,
	472, 2170,
	473, 2170,
	474, 2170,
	475, 2170,
	476, 2170,
	477, 2170,
	479, 2170,
	480, 2170,
	481, 2170,
	482, 2170,
	483, 2170,
	484, 2170,
	485, 2170,
	486, 2170,
	487, 2170,
	489, 2170,
	492, 2170,
	493, 2170,
	495, 2170,
	496, 2170,
	-2, 0,
	-1, 1361,
	166, 2069,
	420, 2069,
	474, 2069,
	493, 2069,
	-2, 0,
	-1, 1395,
	325, 694,
	374, 694,
	-2, 0,
	-1, 1419,
	1, 689,
	490, 689,
	492, 689,
	494, 689,
	-2, 0,
	-1, 1420,
	1, 714,
	490, 714,
	492, 714,
	494, 714,
	-2, 0,
	-1, 1421,
	1, 696,
	490, 696,
	492, 696,
	494, 696,
	-2, 0,
	-1, 1423,
	1, 700,
	490, 700,
	492, 700,
	494, 700,
	-2, 0,
	-1, 1450,
	1, 2118,
	490, 2118,
	492, 2118,
	493, 2118,
	494, 2118,
	-2, 742,
	-1, 1451,
	1, 2066,
	490, 2066,
	492, 2066,
	493, 2066,
	494, 2066,
	-2, 743,
	-1, 1466,
	1, 1061,
	494, 1061,
	-2, 1066,
	-1, 1469,
	150, 1192,
	163, 1192,
	240, 1192,
	282, 1192,
	-2, 1132,
	-1, 1564,
	133, 1153,
	150, 1153,
	163, 1153,
	210, 1153,
	240, 1153,
	282, 1153,
	292, 1153,
	435, 1153,
	-2, 1557,
	-1, 1624,
	492, 1707,
	-2, 0,
	-1, 1659,
	133, 1153,
	150, 1153,
	163, 1153,
	210, 1153,
	240, 1153,
	282, 1153,
	292, 1153,
	435, 1153,
	-2, 1273,
	-1, 1706,
	491, 1384,
	-2, 1372,
	-1, 1739,
	1, 539,
	494, 539,
	-2, 1066,
	-1, 1951,
	1, 691,
	490, 691,
	492, 691,
	494, 691,
	-2, 0,
	-1, 1952,
	1, 716,
	490, 716,
	492, 716,
	494, 716,
	-2, 0,
	-1, 2024,
	357, 1219,
	358, 1219,
	-2, 1417,
	-1, 2055,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1437,
	-1, 2056,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1438,
	-1, 2057,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1439,
	-1, 2058,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1440,
	-1, 2059,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1441,
	-1, 2060,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1442,
	-1, 2061,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1443,
	-1, 2062,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1444,
	-1, 2074,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1456,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1457,
	-1, 2076,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1458,
	-1, 2079,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1463,
	-1, 2085,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1467,
	-1, 2087,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1475,
	-1, 2088,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1476,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1477,
	-1, 2090,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1478,
	-1, 2202,
	5, 1850,
	166, 1718,
	491, 1847,
	-2, 1838,
	-1, 2203,
	166, 1719,
	-2, 2122,
	-1, 2204,
	166, 1720,
	-2, 1992,
	-1, 2205,
	166, 1721,
	-2, 1908,
	-1, 2206,
	166, 1722,
	-2, 1949,
	-1, 2207,
	166, 1723,
	-2, 1987,
	-1, 2208,
	166, 1724,
	-2, 2064,
	-1, 2209,
	166, 1725,
	-2, 1540,
	-1, 2278,
	1, 1274,
	2, 1274,
	94, 1274,
	133, 1274,
	150, 1274,
	163, 1274,
	167, 1274,
	177, 1274,
	180, 1274,
	206, 1274,
	210, 1274,
	220, 1274,
	236, 1274,
	240, 1274,
	264, 1274,
	282, 1274,
	286, 1274,
	292, 1274,
	349, 1274,
	352, 1274,
	435, 1274,
	446, 1274,
	459, 1274,
	460, 1274,
	461, 1274,
	470, 1274,
	490, 1274,
	492, 1274,
	494, 1274,
	496, 1274,
	-2, 1273,
	-1, 2291,
	491, 1819,
	-2, 1833,
	-1, 2315,
	491, 1383,
	-2, 1373,
	-1, 2427,
	1, 980,
	490, 980,
	492, 980,
	494, 980,
	-2, 1180,
	-1, 2581,
	287, 1222,
	-2, 2160,
	-1, 2582,
	287, 1223,
	-2, 2053,
	-1, 2586,
	357, 1784,
	358, 1784,
	-2, 1538,
	-1, 2587,
	357, 1788,
	358, 1788,
	-2, 1539,
	-1, 2588,
	357, 1785,
	358, 1785,
	-2, 1538,
	-1, 2589,
	357, 1789,
	358, 1789,
	-2, 1539,
	-1, 2602,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1465,
	-1, 2603,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1469,
	-1, 2609,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1471,
	-1, 2806,
	217, 1066,
	321, 1066,
	329, 1066,
	470, 1066,
	-2, 536,
	-1, 2920,
	1, 980,
	490, 980,
	492, 980,
	494, 980,
	-2, 1180,
	-1, 3011,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1473,
	-1, 3018,
	214, 0,
	216, 0,
	274, 0,
	-2, 1492,
	-1, 3085,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1521,
	-1, 3086,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1522,
	-1, 3087,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1523,
	-1, 3091,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1527,
	-1, 3092,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1528,
	-1, 3093,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1529,
	-1, 3139,
	491, 1820,
	-2, 1834,
	-1, 3247,
	493, 2276,
	-2, 1110,
	-1, 3298,
	214, 0,
	216, 0,
	274, 0,
	-2, 1493,
	-1, 3301,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1496,
	-1, 3302,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1498,
	-1, 3496,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1497,
	-1, 3497,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1499,
	-1, 3508,
	214, 0,
	-2, 1530,
	-1, 3650,
	214, 0,
	-2, 1531,
	-1, 3794,
	47, 0,
	190, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 2125,
}

const sqlPrivate = 57344

const sqlLast = 92953

var sqlAct = [...]int{

	227, 3804, 3428, 3672, 3539, 3793, 3895, 3542, 2906, 3693,
	3281, 3580, 3757, 2736, 3754, 3769, 3739, 3805, 3161, 3806,
	3527, 2347, 2478, 3587, 1044, 3050, 2737, 3848, 1923, 3654,
	3459, 3454, 3792, 3413, 1348, 868, 1230, 2034, 1217, 3596,
	2935, 3485, 36, 1079, 3239, 885, 3196, 3420, 1347, 3441,
	3422, 3365, 3618, 2102, 2823, 1693, 3464, 2928, 3218, 1910,
	1478, 2406, 2902, 1790, 2042, 880, 3003, 2930, 628, 1665,
	595, 2234, 3162, 1102, 3513, 2467, 2513, 1351, 2441, 2595,
	2035, 2450, 2515, 1033, 2759, 2453, 1195, 2751, 628, 2779,
	2719, 2464, 1403, 3280, 3337, 2523, 4, 859, 2512, 2504,
	2740, 2506, 2479, 720, 2462, 919, 2349, 3110, 1930, 1834,
	1634, 1835, 2384, 2718, 2270, 1572, 2115, 2742, 867, 151,
	2271, 1203, 2039, 1799, 2418, 3655, 1275, 1815, 1908, 1831,
	2383, 2273, 3581, 1610, 2579, 1775, 1822, 2451, 2144, 916,
	2522, 1086, 1777, 1694, 1466, 1635, 1654, 2252, 2135, 2099,
	1328, 2023, 1765, 2006, 1369, 2004, 1200, 1354, 1344, 1338,
	2904, 2472, 1280, 921, 1865, 2339, 2785, 2231, 1024, 221,
	220, 629, 630, 563, 2516, 2138, 1075, 1027, 549, 714,
	2260, 923, 571, 1219, 1644, 1605, 1006, 2198, 2242, 2116,
	2188, 1556, 1479, 1480, 159, 1041, 160, 2005, 93, 1368,
	579, 151, 625, 1864, 589, 671, 2007, 1227, 1352, 696,
	912, 1789, 2028, 897, 566, 41, 40, 38, 29, 27,
	25, 1485, 1004, 769, 2630, 574, 1029, 1465, 786, 2626,
	3124, 1885, 3125, 1901, 2738, 3947, 863, 633, 636, 2251,
	1901, 1651, 1901, 1303, 1901, 3934, 2945, 3933, 2804, 2251,
	2146, 2251, 1023, 2594, 863, 3911, 3909, 633, 636, 3381,
	3381, 3905, 3831, 3828, 3826, 1841, 3832, 2251, 2251, 2639,
	2251, 2944, 3823, 1493, 1494, 2640, 3824, 2244, 3820, 1536,
	1537, 1538, 3821, 1055, 3815, 3790, 1493, 1494, 1841, 1841,
	731, 2475, 3789, 3788, 3784, 1524, 1841, 1916, 1916, 3783,
	1036, 3778, 1496, 1916, 3734, 3381, 3776, 3765, 1524, 1542,
	3381, 3576, 1021, 3752, 3647, 1496, 3733, 3381, 1007, 1007,
	2306, 3726, 3725, 3720, 3719, 2251, 2251, 3381, 3381, 3713,
	3652, 3632, 1495, 1841, 2306, 1841, 3629, 3589, 1060, 3559,
	3381, 3590, 1515, 1841, 3635, 1495, 845, 3558, 844, 3550,
	1512, 1841, 3549, 1841, 3519, 1515, 3381, 3498, 1841, 1056,
	864, 2306, 3483, 1512, 3472, 3408, 1916, 3399, 2960, 2251,
	3380, 2251, 3300, 3255, 3381, 3249, 2306, 2976, 1083, 2976,
	3216, 1916, 853, 3134, 3217, 858, 3132, 3135, 3117, 3034,
	3133, 3030, 2251, 1841, 2975, 2251, 2967, 2735, 2976, 2730,
	2968, 2251, 2729, 2251, 3114, 1039, 2251, 3294, 2682, 1010,
	1008, 1011, 2683, 1518, 1519, 1520, 1521, 1083, 2680, 2302,
	1493, 1494, 2681, 1501, 3576, 3114, 1518, 1519, 1520, 1521,
	2672, 2670, 2243, 2641, 2673, 2251, 1501, 2251, 3453, 3400,
	2251, 2528, 1524, 1931, 2502, 1916, 2501, 2323, 1919, 1496,
	1919, 2251, 1533, 2141, 1841, 1543, 2305, 1422, 2629, 2300,
	2306, 1523, 1525, 2251, 2294, 2250, 1918, 1841, 1841, 2251,
	1919, 2968, 2397, 2338, 1523, 1525, 1794, 1745, 1248, 1495,
	1900, 192, 715, 2960, 2447, 1510, 1511, 1840, 2414, 2336,
	1630, 1226, 3190, 3006, 2984, 1652, 1825, 2946, 1510, 1511,
	1405, 1531, 2287, 2286, 2285, 2284, 2283, 1012, 66, 1009,
	718, 717, 1516, 192, 1493, 1494, 2947, 3811, 852, 194,
	851, 850, 1902, 849, 67, 1516, 848, 847, 2142, 1902,
	966, 1902, 2559, 1902, 1493, 1494, 1524, 71, 843, 842,
	841, 840, 839, 1496, 838, 837, 836, 192, 835, 834,
	833, 194, 832, 831, 830, 829, 828, 767, 766, 765,
	219, 764, 763, 1496, 193, 762, 761, 760, 1899, 759,
	1501, 758, 76, 1495, 186, 1563, 2944, 757, 1056, 756,
	755, 914, 187, 1515, 754, 194, 753, 752, 751, 750,
	749, 748, 747, 1495, 921, 746, 193, 745, 921, 744,
	2143, 2140, 1522, 743, 161, 3353, 81, 2243, 1523, 1525,
	742, 741, 740, 1105, 729, 1522, 728, 1105, 92, 687,
	1222, 1517, 648, 82, 89, 647, 639, 1242, 638, 1085,
	193, 1236, 637, 1090, 1517, 609, 161, 601, 600, 3312,
	186, 599, 921, 1534, 921, 583, 921, 215, 187, 214,
	213, 212, 211, 210, 1518, 1519, 1520, 1521, 209, 1516,
	208, 207, 1247, 206, 1501, 205, 3145, 1211, 1056, 3128,
	2474, 2492, 83, 1222, 204, 203, 2977, 1206, 1914, 202,
	1900, 201, 1999, 200, 1501, 1235, 199, 1240, 198, 1246,
	197, 196, 195, 2402, 2782, 2691, 2692, 1214, 2709, 2710,
	2711, 1563, 1523, 1525, 2733, 2652, 2635, 1493, 1494, 2431,
	82, 2145, 1613, 1222, 2310, 2292, 3296, 1222, 1612, 2277,
	2171, 1222, 1285, 1287, 2734, 1926, 921, 2157, 2155, 2458,
	1532, 1222, 1773, 1678, 921, 1073, 1496, 1535, 1513, 1509,
	1616, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	1282, 1513, 1509, 1516, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 1655, 2706, 1583, 1495, 1613, 1517, 1367,
	1574, 1232, 1092, 1612, 1222, 1043, 3791, 1374, 3700, 3644,
	1098, 3512, 1192, 1197, 3537, 3473, 1492, 3468, 84, 3452,
	921, 3638, 3636, 1068, 3358, 1611, 1574, 3335, 1363, 1925,
	3334, 633, 636, 1229, 1228, 3328, 2370, 3327, 1370, 3326,
	2139, 1241, 1493, 1494, 1357, 1359, 3319, 3318, 3316, 3311,
	3308, 3307, 3215, 192, 3149, 158, 87, 192, 88, 3148,
	3222, 1423, 3147, 1290, 1524, 2319, 151, 151, 3138, 3105,
	1375, 1496, 3104, 1522, 192, 2697, 2691, 2692, 192, 3103,
	3026, 1387, 3022, 2777, 2971, 2726, 719, 1501, 1332, 1335,
	126, 194, 1517, 2717, 2690, 194, 2687, 1341, 2686, 2684,
	2679, 1495, 2691, 2692, 921, 921, 921, 921, 921, 921,
	921, 1515, 194, 2678, 1432, 2677, 194, 3188, 2674, 1512,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 2671, 2712, 2651,
	1355, 1581, 1575, 2634, 1573, 921, 193, 2627, 2503, 127,
	193, 921, 2278, 1424, 2128, 864, 186, 1492, 1020, 1846,
	186, 1876, 1491, 162, 187, 2460, 3942, 193, 187, 3904,
	2111, 193, 3903, 3015, 2707, 192, 1844, 186, 3841, 1306,
	192, 186, 1470, 2731, 3839, 187, 161, 126, 3830, 187,
	161, 1045, 1518, 1519, 1520, 1521, 3052, 2691, 2692, 3692,
	3682, 3679, 1501, 3678, 3677, 3671, 3664, 161, 2691, 2692,
	1566, 716, 1562, 194, 1571, 3633, 3617, 3616, 194, 2105,
	1464, 3604, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 3601, 3467, 192, 1380, 3577, 2697, 192, 3555, 3533,
	1523, 1525, 2691, 2692, 1396, 1497, 1498, 1499, 1500, 1502,
	1503, 3510, 3493, 3492, 921, 921, 921, 3480, 193, 3479,
	921, 3445, 2697, 193, 1510, 1511, 2706, 1041, 186, 1041,
	3352, 194, 1632, 186, 3333, 194, 187, 3221, 3270, 3267,
	3179, 187, 3178, 2708, 1105, 1467, 3165, 3164, 3120, 3108,
	3017, 1516, 921, 1560, 2978, 628, 2961, 1475, 161, 1711,
	628, 2921, 845, 161, 844, 2871, 1474, 2850, 921, 1469,
	918, 2826, 1222, 1669, 2825, 2799, 193, 2656, 1471, 2655,
	193, 2797, 1681, 1488, 1489, 2707, 186, 921, 2650, 2459,
	186, 1641, 1690, 1105, 187, 2618, 2440, 1734, 187, 1619,
	1618, 1617, 1614, 864, 1615, 1606, 1604, 2697, 2317, 1686,
	1742, 2707, 2316, 2289, 2282, 2249, 161, 2153, 2697, 1677,
	161, 1633, 1771, 1688, 1927, 1638, 1639, 1628, 1627, 1626,
	1493, 1494, 1036, 1625, 1036, 1624, 1736, 1007, 1623, 1737,
	1622, 1522, 2691, 2692, 2826, 1621, 1662, 1607, 1608, 151,
	1620, 1601, 2697, 1600, 1599, 1598, 2703, 2704, 2705, 1496,
	1517, 1597, 1596, 2702, 2700, 2701, 2693, 2694, 2695, 2696,
	2698, 2699, 1595, 1594, 1593, 1198, 1663, 1592, 1210, 1213,
	1499, 1500, 1502, 1503, 3656, 2774, 1591, 3448, 1684, 1495,
	1590, 1589, 1588, 1587, 2708, 1576, 2707, 1762, 1561, 1559,
	1554, 1067, 1058, 1682, 1051, 3354, 1660, 3304, 2308, 3144,
	2170, 3131, 3123, 2638, 2280, 1739, 3522, 2156, 2154, 3356,
	2708, 2691, 2692, 3143, 633, 636, 1222, 864, 1631, 633,
	636, 1783, 1575, 1105, 1213, 1213, 2795, 1039, 1557, 1039,
	1705, 2707, 3402, 1673, 2691, 2692, 1672, 1671, 1670, 1668,
	1667, 1666, 1764, 1657, 866, 3639, 3637, 1689, 1764, 1685,
	3901, 1764, 1733, 3894, 1812, 1035, 1653, 1814, 3680, 1089,
	1819, 1691, 1213, 3536, 1596, 3597, 2931, 1513, 1509, 3592,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 3591,
	3578, 1596, 2697, 3471, 3401, 3126, 2963, 1767, 1757, 2388,
	2962, 1087, 3225, 1370, 1083, 2708, 1613, 1080, 1655, 2676,
	1462, 1083, 1612, 1395, 2702, 2700, 2701, 2693, 2694, 2695,
	2696, 2698, 2699, 1088, 1083, 2675, 2600, 2372, 3177, 1084,
	826, 1585, 2908, 1798, 2907, 1404, 1924, 3588, 1740, 1823,
	3816, 2700, 2701, 2693, 2694, 2695, 2696, 2698, 2699, 3803,
	2708, 1405, 1836, 3210, 3193, 3181, 2853, 2738, 2982, 1222,
	3514, 1222, 3054, 1222, 3812, 2136, 1869, 1751, 2315, 1629,
	827, 1609, 1222, 1222, 2217, 1877, 1222, 2900, 1873, 1263,
	1838, 2707, 1433, 3825, 3822, 2940, 2408, 1582, 3156, 1222,
	1222, 1222, 1874, 3673, 2697, 3455, 633, 636, 1229, 1228,
	2644, 3751, 1882, 2894, 3661, 2829, 1933, 1019, 3172, 628,
	2510, 1081, 1932, 2471, 3864, 1074, 1943, 2998, 1818, 1082,
	1384, 3712, 1251, 3813, 3865, 2702, 2700, 2701, 2693, 2694,
	2695, 2696, 2698, 2699, 1839, 3575, 2808, 1890, 3391, 2324,
	1922, 2695, 2696, 2698, 2699, 2411, 3939, 824, 1879, 822,
	1370, 2014, 820, 1935, 3568, 818, 1756, 1755, 683, 815,
	1764, 1766, 3561, 1947, 3202, 1855, 1944, 1945, 1946, 1929,
	1856, 2342, 2701, 2693, 2694, 2695, 2696, 2698, 2699, 895,
	3201, 1985, 921, 2351, 921, 2340, 1261, 1983, 809, 3195,
	2708, 921, 2012, 1794, 1711, 1711, 1105, 3192, 921, 921,
	921, 921, 921, 921, 921, 921, 921, 921, 921, 921,
	921, 921, 921, 921, 921, 921, 921, 921, 921, 921,
	921, 921, 921, 921, 921, 921, 921, 921, 921, 921,
	921, 921, 921, 1888, 921, 1937, 921, 921, 921, 921,
	2016, 1884, 1355, 2003, 1355, 1752, 1431, 684, 1892, 1893,
	1306, 3159, 1887, 1080, 1887, 1089, 1262, 864, 921, 864,
	1083, 921, 921, 2796, 1759, 3191, 1068, 1920, 2810, 1921,
	921, 3153, 1934, 3152, 921, 2649, 921, 921, 633, 636,
	1936, 1382, 2354, 2648, 1105, 2419, 2647, 3206, 3711, 1708,
	921, 921, 921, 921, 2342, 921, 921, 921, 921, 921,
	921, 921, 921, 2014, 2646, 2013, 1503, 1778, 2340, 1088,
	1210, 1965, 1779, 2693, 2694, 2695, 2696, 2698, 2699, 2110,
	192, 921, 921, 921, 921, 921, 921, 921, 921, 921,
	1080, 3377, 2117, 2118, 921, 1566, 2027, 2040, 2041, 2604,
	1699, 1430, 3205, 2413, 2012, 2404, 1041, 2117, 2133, 2396,
	2395, 2375, 2301, 1105, 2086, 1089, 1468, 1081, 194, 1225,
	3373, 2309, 1041, 1761, 2184, 1082, 2011, 2183, 2002, 2000,
	2008, 2015, 2044, 2179, 1037, 1705, 1705, 2001, 921, 1105,
	845, 2852, 2031, 845, 845, 2032, 2033, 862, 1296, 2222,
	1295, 2132, 2201, 2201, 2215, 1760, 2117, 2699, 2468, 2235,
	2237, 1854, 1294, 193, 1293, 2241, 3374, 2010, 2983, 1088,
	1780, 2392, 1397, 186, 2265, 2693, 2694, 2695, 2696, 2698,
	2699, 187, 1997, 1941, 3403, 1782, 2385, 2386, 1429, 1270,
	812, 2136, 2385, 2386, 1081, 2385, 2386, 2353, 1317, 2421,
	1377, 561, 1082, 161, 1222, 2331, 3864, 2113, 2141, 2290,
	872, 1036, 3491, 3889, 2101, 2101, 1257, 2013, 864, 2420,
	2422, 2293, 1007, 2257, 861, 2130, 556, 1036, 864, 2577,
	1445, 1791, 864, 1441, 1105, 1461, 2363, 1473, 2279, 1662,
	686, 685, 1742, 1493, 1494, 2989, 1955, 1784, 2374, 2303,
	1993, 1996, 2256, 2807, 1405, 2407, 1958, 1787, 2264, 2425,
	2269, 1711, 3544, 2275, 2276, 1524, 1083, 1950, 3781, 2210,
	2197, 151, 1496, 2362, 2226, 2109, 1066, 2239, 2011, 3180,
	1792, 1793, 2107, 2142, 2410, 3809, 1105, 2247, 2248, 2262,
	2263, 2258, 2369, 2145, 3890, 607, 1889, 2327, 1222, 1660,
	1872, 1405, 1495, 2592, 1378, 921, 863, 921, 1788, 1393,
	2329, 2988, 3168, 2352, 2409, 2343, 1039, 2181, 1778, 1615,
	864, 2401, 2182, 1779, 1383, 2185, 3369, 2186, 2187, 816,
	3370, 816, 1039, 1794, 816, 3387, 2556, 817, 2322, 2330,
	1951, 816, 1932, 1083, 2405, 2318, 1995, 1778, 2433, 1785,
	2435, 1959, 1779, 1673, 2328, 2143, 2140, 2393, 2412, 1210,
	2444, 1904, 1984, 3043, 1906, 3546, 1607, 1608, 1982, 2321,
	1911, 2482, 2562, 1913, 3372, 2427, 3730, 1222, 1222, 3878,
	1222, 2325, 2377, 3892, 1428, 2846, 3914, 3375, 2473, 1952,
	606, 2473, 1222, 1501, 1768, 1769, 2387, 2389, 2390, 2391,
	2426, 681, 2341, 680, 2378, 2356, 2359, 2428, 2311, 1419,
	2524, 2591, 2498, 2346, 1048, 2365, 3877, 3490, 1281, 2526,
	738, 1780, 3810, 2495, 2530, 2531, 2376, 2299, 804, 2584,
	2585, 1523, 1525, 2536, 2537, 2538, 1782, 3853, 1932, 2394,
	921, 1932, 1705, 1932, 2937, 1442, 3286, 3285, 1046, 860,
	1780, 857, 3926, 2373, 2497, 1992, 1279, 1259, 1420, 2546,
	3898, 2547, 2864, 1901, 2858, 1782, 2145, 2565, 1785, 1370,
	633, 636, 1229, 2429, 2145, 2499, 1794, 1643, 2438, 2544,
	921, 2554, 1516, 2484, 1708, 1708, 921, 921, 1811, 2509,
	3371, 2448, 1998, 1781, 2097, 3385, 3040, 151, 1784, 1316,
	3808, 2466, 1796, 2529, 2874, 3674, 2532, 1800, 2533, 2541,
	2477, 557, 1281, 2567, 2488, 2569, 2489, 1256, 2490, 2548,
	2095, 2550, 2938, 2552, 3728, 3378, 1804, 1784, 713, 2494,
	805, 3425, 3891, 2809, 2496, 1699, 1699, 2500, 2342, 2560,
	3423, 921, 921, 1049, 3852, 2222, 2527, 921, 2511, 1443,
	1647, 1994, 2357, 2615, 1785, 3729, 1957, 1035, 2840, 1035,
	921, 921, 3169, 1355, 3425, 2139, 921, 921, 3041, 558,
	3545, 2564, 921, 3423, 1801, 2543, 2606, 2100, 1602, 2613,
	2793, 921, 921, 921, 2549, 2937, 2551, 921, 2553, 1650,
	1821, 1517, 608, 2561, 813, 605, 1785, 921, 2607, 3282,
	1785, 3437, 3834, 1645, 1379, 3503, 2839, 559, 3874, 560,
	3835, 1820, 1472, 2570, 921, 2842, 2574, 2573, 2583, 1648,
	1444, 3386, 1954, 1440, 2637, 2222, 2222, 2127, 2572, 1785,
	3762, 2578, 2027, 2091, 3691, 2108, 2813, 1816, 1381, 1553,
	804, 2593, 2083, 1949, 2092, 2654, 2844, 1646, 2093, 2261,
	3915, 1065, 2098, 2632, 2633, 2274, 863, 3056, 2636, 3447,
	1792, 1793, 640, 857, 3276, 1776, 1805, 3140, 3896, 2753,
	1061, 3287, 2563, 3000, 2575, 3694, 2628, 3807, 1407, 2145,
	921, 921, 921, 3863, 1392, 1394, 3487, 806, 1817, 921,
	921, 921, 2610, 2605, 921, 3861, 3708, 1483, 3851, 3603,
	2843, 1643, 3237, 1826, 921, 1041, 1105, 2611, 1833, 2924,
	921, 2616, 921, 1863, 1497, 1498, 1499, 1500, 1502, 1503,
	1041, 2745, 2746, 739, 1806, 1807, 855, 1640, 804, 1059,
	3283, 1054, 548, 1813, 3421, 1649, 1802, 3220, 1105, 2030,
	1795, 3927, 805, 2643, 1781, 2222, 2222, 2222, 1047, 3897,
	1041, 857, 1902, 1105, 1753, 3331, 3094, 3004, 2767, 3552,
	3660, 3424, 3551, 1482, 864, 2728, 3531, 1711, 2786, 3238,
	1803, 1105, 3438, 1781, 1647, 3627, 1477, 3199, 3899, 3155,
	3390, 2747, 2784, 921, 2925, 2081, 2358, 3389, 2084, 3920,
	2919, 1708, 856, 2821, 3424, 2817, 2757, 921, 2791, 807,
	2094, 3486, 2452, 3833, 2442, 1883, 1832, 1875, 1711, 2096,
	1036, 1868, 2776, 1650, 1750, 1850, 3695, 2803, 2805, 3039,
	2020, 2814, 2815, 3619, 921, 1036, 3109, 1645, 3740, 2752,
	805, 1198, 2811, 2780, 2080, 3620, 1989, 2755, 2830, 2756,
	808, 2834, 1699, 1648, 2765, 1210, 1746, 3001, 2781, 2739,
	2768, 2769, 3240, 1481, 3460, 1036, 2723, 2724, 2725, 2612,
	1808, 3621, 2773, 2439, 2766, 1105, 2754, 3288, 2614, 2847,
	2848, 1646, 2831, 2849, 1222, 2836, 2837, 1482, 641, 642,
	1319, 1748, 2818, 3586, 3584, 2771, 1222, 2772, 1553, 3532,
	2877, 2761, 1105, 2880, 2855, 1483, 2832, 2888, 2890, 806,
	2379, 2868, 2869, 1749, 1647, 2870, 3095, 1222, 2828, 3488,
	2794, 1482, 2883, 3332, 3096, 1039, 2827, 3623, 1222, 2879,
	2598, 2857, 2905, 2788, 2789, 2790, 2872, 1809, 2021, 2806,
	1039, 1783, 1041, 3622, 2913, 1213, 1213, 2491, 2918, 3289,
	2576, 2812, 2865, 1650, 2933, 1421, 1942, 3388, 1705, 3122,
	3624, 2822, 2253, 3919, 2750, 2749, 2524, 2259, 1783, 1649,
	1039, 2845, 1408, 2892, 2298, 2524, 1037, 1481, 1037, 735,
	1222, 1222, 2762, 1648, 2851, 861, 2082, 3696, 2942, 2861,
	1210, 1829, 2860, 2862, 2914, 644, 643, 806, 727, 1705,
	1823, 2863, 2959, 2873, 2867, 2920, 2297, 2895, 1823, 2881,
	2296, 1481, 2891, 2295, 2886, 1302, 2446, 1300, 1288, 1483,
	3667, 807, 2953, 2866, 1210, 3429, 1210, 2760, 2979, 2255,
	1289, 1827, 1105, 3540, 2254, 1105, 2972, 2800, 2801, 1881,
	2802, 2926, 2934, 645, 646, 2377, 2916, 1036, 2897, 2787,
	3477, 3871, 2764, 737, 3582, 3743, 3668, 2965, 2966, 3748,
	2380, 2381, 808, 1685, 3737, 921, 1828, 3529, 2957, 2958,
	2875, 921, 921, 3338, 3111, 921, 921, 921, 2941, 921,
	2152, 2151, 3873, 2974, 1459, 2939, 3827, 3681, 921, 1711,
	151, 151, 2954, 2970, 2948, 2995, 2932, 921, 1457, 1649,
	921, 1437, 1493, 1494, 3530, 2721, 1105, 854, 2994, 807,
	3476, 1435, 2985, 3509, 2986, 921, 2987, 2196, 2192, 1418,
	3330, 1416, 3541, 1105, 1524, 1414, 3211, 2720, 1412, 3744,
	3669, 1496, 2763, 1711, 1711, 921, 921, 1410, 921, 921,
	921, 2222, 2222, 864, 3019, 3002, 1402, 3016, 1400, 3625,
	808, 2980, 1039, 2991, 3626, 2685, 921, 2617, 2443, 2403,
	921, 1495, 1711, 1711, 921, 921, 921, 921, 921, 921,
	921, 921, 921, 921, 921, 921, 921, 921, 921, 921,
	921, 921, 921, 2999, 921, 2371, 1035, 2190, 2320, 2992,
	1680, 921, 921, 1711, 1676, 733, 734, 1298, 921, 3028,
	3029, 1460, 1035, 1372, 2194, 2195, 2193, 1981, 2997, 921,
	2996, 1477, 2558, 3024, 725, 726, 2557, 2535, 2009, 1991,
	1041, 1041, 1962, 1735, 921, 1301, 3035, 1299, 3802, 2222,
	2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222,
	2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 1458, 2222,
	3051, 2876, 1501, 1105, 1932, 3058, 3042, 3044, 3045, 2189,
	2191, 3127, 1456, 736, 3068, 1436, 3069, 1586, 1376, 3106,
	1705, 1274, 3071, 3407, 3398, 1434, 2040, 3059, 3066, 3098,
	3865, 921, 3067, 1417, 3073, 1415, 3736, 3458, 3412, 1413,
	1523, 1525, 1411, 3362, 3236, 3230, 921, 921, 3107, 3204,
	3175, 1409, 929, 3099, 3173, 2040, 3074, 1708, 3154, 2917,
	1401, 3150, 1399, 2909, 1705, 1705, 2493, 2469, 2457, 3113,
	151, 921, 921, 3115, 3116, 1036, 1036, 2449, 2436, 1917,
	1915, 3036, 1912, 1907, 1905, 1903, 3102, 3118, 3119, 1894,
	1847, 1516, 921, 1705, 1705, 223, 223, 223, 1708, 551,
	552, 1845, 567, 551, 567, 577, 582, 3130, 1699, 598,
	1837, 1297, 3129, 1824, 604, 1222, 1810, 1797, 1980, 1786,
	223, 3046, 814, 3849, 1705, 2929, 1711, 3610, 1486, 2887,
	1687, 2596, 1016, 3772, 1833, 3482, 724, 3475, 3187, 3189,
	223, 3474, 3182, 3186, 3065, 3419, 3200, 2525, 1772, 1699,
	3158, 1222, 1253, 3612, 2342, 1210, 2342, 1017, 921, 2361,
	3248, 1794, 1953, 3194, 1340, 1979, 1041, 921, 2340, 1978,
	2360, 1454, 1455, 3771, 3226, 3392, 1872, 3250, 1880, 1339,
	1039, 1039, 1960, 1222, 1222, 1222, 2482, 3414, 1398, 3242,
	3646, 1213, 3207, 3339, 3317, 2382, 2364, 3245, 1490, 1222,
	1517, 3867, 3227, 3859, 562, 1105, 3213, 2377, 3198, 1743,
	2408, 2416, 2597, 2415, 3262, 2398, 2400, 3241, 2524, 216,
	619, 1493, 1494, 1487, 3228, 2366, 3893, 1105, 3197, 2399,
	921, 921, 1832, 3274, 3735, 3704, 921, 921, 1711, 551,
	551, 921, 921, 3275, 921, 3701, 3666, 223, 921, 3579,
	3231, 3244, 1018, 819, 821, 823, 573, 1340, 1340, 921,
	3259, 3260, 3261, 545, 3243, 3229, 3252, 3251, 3246, 2822,
	3146, 1036, 3219, 1210, 1210, 921, 2368, 2950, 2951, 2952,
	1495, 3258, 3257, 2955, 3269, 2956, 2792, 3265, 3291, 2367,
	3263, 3264, 3272, 3299, 3137, 2476, 3268, 672, 2240, 3271,
	1493, 1494, 712, 3279, 1738, 3290, 1692, 1705, 3538, 3284,
	3918, 2691, 2692, 1493, 1494, 3303, 2334, 2335, 2332, 2333,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 1496,
	3703, 1386, 1563, 3309, 2147, 1041, 3142, 1385, 2334, 2332,
	2180, 1439, 3600, 1041, 1438, 1037, 1210, 1105, 3569, 1105,
	3415, 3411, 3410, 3305, 3234, 3141, 1041, 3047, 2878, 1495,
	1580, 1037, 1579, 3906, 3879, 3657, 1105, 3565, 3523, 1708,
	3521, 3444, 3355, 3273, 3254, 3214, 1039, 3344, 3212, 3171,
	3166, 2949, 3329, 2923, 2922, 921, 2540, 2539, 2486, 2461,
	2437, 2313, 2312, 2112, 3359, 3360, 1977, 1976, 1975, 1974,
	1897, 1896, 1895, 3383, 1878, 1858, 1857, 1853, 3347, 1852,
	1851, 1105, 1849, 1708, 1708, 3393, 1105, 1848, 1453, 1705,
	1699, 1452, 3384, 3350, 1327, 3336, 1326, 3343, 1325, 3346,
	3341, 3342, 1222, 1324, 1323, 3395, 3396, 1322, 1321, 2780,
	1036, 1320, 1708, 1708, 3416, 3351, 3417, 151, 1036, 1318,
	3394, 3361, 3340, 1313, 2024, 1312, 1311, 1105, 3427, 3430,
	3345, 1036, 1222, 3382, 1699, 1699, 3426, 1310, 1309, 1269,
	1268, 1267, 1266, 1708, 3418, 1265, 1264, 3409, 1258, 1252,
	1250, 1249, 3439, 1096, 1095, 1094, 1093, 1064, 921, 1063,
	999, 1744, 3450, 1699, 1699, 825, 811, 3405, 3543, 3406,
	3462, 3376, 1447, 1105, 80, 1260, 3478, 659, 75, 1830,
	2882, 3170, 3469, 667, 3750, 921, 921, 921, 3456, 2838,
	3431, 2417, 3446, 1961, 1699, 3465, 623, 3481, 3461, 1406,
	3449, 1963, 2775, 1105, 2281, 1035, 3451, 3727, 921, 3463,
	3313, 921, 921, 2653, 3653, 1039, 3502, 2150, 1584, 2732,
	1035, 921, 77, 1039, 1711, 905, 951, 3436, 3435, 921,
	921, 3363, 3157, 2514, 3433, 3432, 1039, 1696, 3470, 1698,
	871, 1108, 1754, 911, 1105, 1770, 3489, 1763, 2314, 2200,
	1035, 928, 925, 1700, 1702, 927, 926, 1105, 1701, 1603,
	924, 3494, 1695, 3233, 2218, 921, 3232, 2445, 2480, 1305,
	790, 1758, 921, 2106, 2134, 2642, 1052, 1577, 886, 3511,
	921, 907, 1711, 2131, 1057, 896, 2222, 2758, 3505, 921,
	2936, 3136, 921, 3174, 3499, 3176, 3466, 2019, 921, 675,
	2688, 3516, 2137, 1050, 1062, 1105, 3517, 3518, 3520, 3525,
	2223, 598, 2216, 2212, 2470, 1463, 1555, 2481, 1091, 889,
	2104, 3526, 1568, 2622, 2029, 2943, 1708, 3564, 1213, 3524,
	2222, 2778, 2307, 3768, 223, 3055, 223, 223, 1201, 3548,
	223, 223, 3574, 1862, 3547, 3594, 1015, 3203, 3585, 1105,
	1014, 1013, 1222, 3756, 223, 1231, 3753, 2905, 3566, 3266,
	2903, 3562, 1747, 2326, 2619, 2620, 3599, 1545, 1872, 3571,
	921, 921, 2910, 901, 1209, 2743, 2973, 1699, 1255, 3583,
	1271, 3598, 603, 921, 921, 913, 1544, 2424, 3630, 3631,
	3607, 1273, 3615, 1278, 3611, 3609, 223, 223, 3593, 1201,
	921, 1711, 3634, 2423, 3663, 1705, 1078, 1077, 1076, 223,
	3605, 3608, 2820, 3256, 3925, 3614, 1315, 3613, 3606, 3167,
	3628, 3465, 191, 2590, 921, 3554, 1484, 921, 1476, 223,
	223, 223, 1035, 1201, 223, 3670, 188, 190, 1708, 189,
	3659, 3641, 598, 3440, 223, 223, 921, 3209, 3184, 2896,
	20, 19, 18, 97, 3642, 3643, 3651, 39, 17, 724,
	125, 124, 123, 1705, 3676, 2222, 122, 3658, 121, 1222,
	120, 119, 114, 225, 118, 117, 116, 115, 3675, 3690,
	113, 112, 921, 921, 2714, 2715, 2716, 111, 110, 1699,
	3645, 109, 921, 108, 107, 921, 106, 1222, 105, 104,
	103, 102, 101, 100, 99, 98, 3683, 1222, 1222, 594,
	3705, 591, 3689, 3707, 3685, 3687, 55, 3686, 54, 96,
	223, 95, 16, 3718, 1222, 3702, 37, 3698, 3699, 3598,
	3697, 14, 59, 60, 223, 3709, 13, 921, 921, 32,
	33, 3716, 3717, 3710, 3715, 86, 3688, 2222, 2222, 85,
	31, 15, 30, 28, 11, 9, 8, 3714, 3721, 34,
	1664, 12, 5, 156, 3723, 3747, 3724, 3722, 155, 157,
	921, 921, 3745, 921, 154, 3732, 79, 153, 3755, 3758,
	152, 78, 1705, 26, 10, 148, 3595, 3224, 74, 150,
	3766, 149, 147, 3773, 146, 145, 72, 144, 3746, 143,
	73, 142, 24, 6, 3770, 58, 3760, 7, 3731, 3764,
	3484, 2981, 90, 3786, 1037, 91, 3785, 35, 70, 921,
	921, 921, 69, 68, 3787, 23, 57, 22, 3777, 1037,
	3782, 3780, 181, 180, 3774, 179, 884, 3775, 178, 173,
	3814, 3759, 921, 1872, 3763, 172, 3819, 177, 175, 174,
	176, 3801, 3798, 3799, 3800, 171, 1213, 183, 182, 1037,
	2580, 185, 169, 165, 3817, 164, 168, 170, 167, 166,
	3838, 163, 184, 141, 65, 3836, 3840, 140, 3845, 139,
	138, 137, 136, 135, 3846, 921, 134, 64, 3837, 21,
	3850, 2, 1, 2482, 3842, 0, 0, 0, 0, 0,
	0, 0, 3843, 3844, 0, 0, 0, 3847, 0, 0,
	1035, 1035, 3869, 3858, 3862, 3860, 3856, 3857, 3866, 0,
	0, 0, 3755, 0, 3868, 3758, 3870, 3872, 551, 0,
	921, 0, 921, 3884, 0, 3880, 3882, 3881, 3876, 3888,
	2218, 2218, 0, 0, 3770, 0, 3886, 3887, 3883, 223,
	3885, 223, 0, 0, 1708, 223, 0, 3875, 0, 0,
	3902, 0, 3900, 0, 0, 0, 0, 0, 1231, 1201,
	223, 0, 223, 0, 0, 3908, 0, 223, 1231, 567,
	3907, 0, 223, 1231, 921, 921, 3910, 0, 598, 3916,
	3913, 3912, 921, 0, 921, 921, 0, 3922, 0, 0,
	0, 0, 0, 3929, 0, 1699, 0, 0, 0, 3931,
	3928, 0, 1708, 0, 3930, 0, 0, 3932, 0, 0,
	0, 0, 0, 0, 3937, 1642, 610, 3936, 66, 3940,
	0, 0, 3935, 921, 0, 3938, 0, 0, 0, 3941,
	0, 1037, 3943, 0, 67, 3944, 0, 3946, 0, 3948,
	0, 0, 3556, 3557, 0, 0, 0, 71, 0, 0,
	2218, 2218, 2218, 1699, 0, 3923, 3924, 0, 0, 0,
	3012, 3013, 3570, 0, 0, 3572, 3573, 0, 3377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3945, 0, 1035, 3373, 0, 0,
	0, 3366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 3364, 0, 0,
	615, 1708, 0, 3368, 0, 0, 0, 0, 92, 0,
	0, 0, 1210, 82, 89, 0, 0, 0, 0, 223,
	0, 0, 0, 3374, 0, 0, 0, 0, 3075, 3076,
	3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086,
	3087, 3088, 3089, 3090, 3091, 3092, 3093, 0, 3097, 66,
	0, 0, 1699, 0, 0, 0, 0, 0, 870, 0,
	3367, 0, 83, 223, 0, 67, 0, 223, 0, 0,
	0, 621, 223, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 223, 0, 223, 617, 1213, 0, 551, 0,
	0, 0, 2268, 3684, 0, 0, 0, 0, 0, 0,
	0, 0, 1898, 76, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 884, 0, 0, 0, 1035, 0, 81, 0, 0,
	0, 0, 0, 1035, 598, 0, 1189, 0, 724, 92,
	1189, 0, 0, 0, 82, 89, 1035, 0, 66, 223,
	0, 1201, 223, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 3369, 67, 598, 0, 3370, 0, 1037,
	1037, 0, 223, 0, 0, 0, 0, 71, 0, 612,
	0, 223, 223, 0, 223, 0, 223, 0, 223, 0,
	223, 0, 0, 83, 0, 158, 87, 0, 88, 0,
	0, 616, 0, 0, 1986, 0, 0, 1987, 0, 1988,
	1031, 3372, 76, 0, 0, 0, 0, 0, 192, 0,
	223, 0, 0, 0, 3375, 0, 719, 620, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 614, 0, 598, 81, 0, 0, 0,
	0, 0, 0, 218, 218, 547, 194, 0, 92, 0,
	0, 0, 0, 82, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 3829, 0, 0, 0, 0, 0, 127,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 2304,
	0, 0, 0, 162, 0, 0, 2218, 2218, 0, 0,
	0, 193, 0, 0, 0, 618, 0, 0, 0, 84,
	0, 186, 83, 0, 0, 0, 0, 0, 622, 187,
	0, 0, 0, 0, 0, 0, 0, 3371, 0, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 158, 87, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3378, 0, 0, 1037, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 126, 0, 0, 2218, 2218, 2218, 2218, 2218, 2218,
	2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218,
	2218, 2218, 2218, 551, 2218, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 84, 0,
	127, 0, 906, 94, 223, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 223, 0,
	0, 0, 193, 2691, 2692, 0, 2709, 2710, 2711, 0,
	0, 0, 186, 0, 0, 158, 87, 0, 88, 870,
	187, 0, 0, 870, 3295, 0, 0, 0, 0, 0,
	0, 1493, 1494, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 161, 0, 1493, 1494, 719, 0, 0, 0,
	126, 0, 0, 1524, 0, 0, 0, 0, 567, 0,
	1496, 0, 0, 0, 0, 94, 1524, 1233, 0, 1237,
	0, 1243, 2706, 1496, 2691, 2692, 194, 2709, 2710, 2711,
	0, 0, 0, 0, 1037, 0, 0, 0, 0, 0,
	1495, 0, 1037, 0, 0, 3021, 0, 0, 0, 127,
	1515, 2350, 0, 1495, 0, 1037, 0, 0, 1512, 223,
	0, 0, 0, 162, 0, 0, 0, 1189, 0, 0,
	223, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 223, 846, 0, 0, 0, 0, 187,
	0, 0, 0, 2706, 865, 0, 0, 223, 0, 0,
	0, 1366, 3010, 2697, 0, 0, 0, 0, 0, 1373,
	884, 1360, 0, 223, 2430, 0, 1189, 0, 0, 0,
	0, 1518, 1519, 1520, 1521, 0, 0, 1025, 0, 0,
	0, 1501, 0, 0, 0, 0, 1231, 0, 0, 223,
	0, 0, 0, 0, 1501, 3508, 223, 0, 0, 0,
	0, 0, 2465, 0, 0, 0, 2712, 0, 0, 0,
	0, 0, 2350, 0, 551, 1425, 0, 2485, 0, 1523,
	1525, 0, 0, 223, 2697, 0, 223, 0, 223, 0,
	223, 0, 1523, 1525, 0, 1201, 0, 223, 223, 3534,
	0, 0, 2707, 1510, 1511, 1103, 0, 2507, 724, 1204,
	2350, 2350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 2712, 0, 0,
	223, 1201, 223, 1516, 0, 1231, 0, 1231, 0, 0,
	1201, 0, 1201, 0, 1201, 0, 0, 0, 0, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1189, 0, 0, 0,
	0, 0, 0, 2707, 0, 223, 223, 223, 223, 1201,
	223, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2708, 0, 223, 0, 0, 0, 0, 0, 0,
	1522, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 3650, 0, 0, 0, 1208, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	1636, 1636, 0, 0, 0, 0, 0, 1307, 0, 0,
	1231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2703, 2704, 2705, 1331, 1331, 1331,
	0, 2702, 2700, 2701, 2693, 2694, 2695, 2696, 2698, 2699,
	0, 0, 1364, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 1509, 0, 1506,
	1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0,
	0, 0, 870, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2703, 2704, 2705, 0, 0,
	0, 0, 2702, 2700, 2701, 2693, 2694, 2695, 2696, 2698,
	2699, 0, 0, 0, 0, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 1189,
	0, 2218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 551, 0, 0, 551, 0, 0, 551, 551,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 2218, 0, 0, 0, 0,
	0, 0, 0, 0, 1231, 94, 0, 94, 0, 94,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 0,
	0, 0, 0, 1231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1189, 1524, 0,
	0, 0, 2350, 2350, 223, 1496, 0, 0, 2350, 0,
	0, 2824, 0, 0, 0, 0, 1679, 0, 0, 2350,
	2824, 0, 2350, 2824, 2824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 223, 223, 223, 865,
	94, 94, 0, 0, 0, 1515, 0, 0, 0, 94,
	0, 0, 0, 1512, 0, 0, 0, 94, 223, 1201,
	0, 0, 0, 0, 0, 1774, 1189, 0, 0, 0,
	0, 2350, 0, 223, 2350, 1278, 0, 0, 2350, 2350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2218, 0, 1189, 0, 0, 0, 0, 3009, 0, 2899,
	0, 0, 2901, 2350, 0, 0, 223, 0, 0, 0,
	223, 94, 1278, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 2465,
	0, 0, 1201, 1674, 223, 0, 0, 2350, 0, 551,
	0, 0, 66, 0, 0, 0, 2350, 0, 1683, 0,
	1208, 0, 0, 0, 0, 223, 223, 0, 67, 0,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 2465, 0, 0, 2465, 0, 0, 1189, 1510, 1511,
	846, 0, 0, 2691, 2692, 0, 2709, 2710, 2711, 0,
	0, 0, 0, 0, 0, 1842, 76, 0, 0, 0,
	1558, 0, 0, 0, 3020, 1516, 0, 0, 0, 0,
	0, 0, 2990, 0, 0, 1201, 223, 1564, 223, 0,
	0, 1570, 0, 0, 0, 0, 0, 0, 0, 1189,
	81, 0, 0, 0, 0, 0, 0, 2018, 0, 2022,
	0, 0, 92, 0, 0, 0, 2036, 82, 89, 0,
	0, 223, 2706, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 0, 2085,
	0, 2087, 2088, 2089, 2090, 1522, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3053, 0, 0,
	0, 0, 0, 2114, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1565, 0, 0, 0, 2129,
	0, 0, 0, 2697, 0, 0, 0, 0, 0, 1656,
	0, 1659, 0, 94, 0, 2159, 2162, 2165, 2168, 0,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 0, 0, 0,
	0, 1860, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2214, 0,
	2225, 2227, 2232, 0, 0, 0, 2712, 0, 1307, 0,
	1886, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2707, 0, 551, 551, 0, 0, 0, 1208,
	0, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 0, 0, 158,
	87, 0, 88, 0, 0, 0, 0, 1231, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1939, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 0, 0, 0, 930, 0,
	1966, 0, 1968, 0, 1970, 598, 1972, 0, 1973, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 2708, 0, 127, 0, 0, 0, 0, 1990, 0,
	0, 224, 224, 224, 0, 0, 2148, 162, 0, 0,
	0, 0, 0, 223, 0, 193, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 186, 224, 0, 0, 0,
	223, 0, 0, 187, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 2350, 223, 0,
	2432, 0, 2434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2507, 2507, 0, 0, 0, 0, 724,
	724, 2350, 0, 0, 2465, 2465, 0, 0, 724, 2350,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 2291, 0, 0, 2703, 2704, 2705, 0, 0, 1189,
	0, 2702, 2700, 2701, 2693, 2694, 2695, 2696, 2698, 2699,
	0, 0, 0, 0, 0, 2691, 2692, 0, 2709, 2710,
	2711, 865, 0, 865, 0, 0, 0, 0, 0, 0,
	0, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 3314, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 2706, 2555, 2337, 0, 0, 0,
	884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2288, 223, 0, 0,
	0, 0, 0, 1231, 0, 223, 0, 0, 0, 0,
	0, 1546, 1547, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 846, 0,
	0, 846, 846, 0, 0, 2350, 2350, 2350, 1189, 0,
	0, 0, 0, 0, 0, 2697, 0, 0, 1231, 0,
	0, 0, 0, 0, 0, 0, 2350, 0, 2824, 0,
	0, 1231, 1231, 223, 0, 1189, 2602, 2603, 0, 0,
	0, 0, 2609, 0, 223, 223, 0, 2713, 0, 0,
	0, 0, 0, 0, 0, 2350, 2103, 2350, 223, 0,
	0, 2623, 2624, 0, 0, 0, 0, 2129, 2712, 0,
	2350, 0, 865, 0, 3442, 0, 2631, 0, 0, 0,
	0, 0, 1564, 223, 0, 0, 1564, 0, 0, 0,
	223, 0, 2645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2707, 0, 0, 0, 0, 2657,
	0, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 1231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 1025, 0,
	0, 0, 0, 0, 2456, 1189, 0, 0, 1189, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2232, 2232, 2232, 0, 0, 0,
	0, 2487, 0, 0, 1331, 0, 1331, 0, 1331, 1636,
	0, 0, 0, 0, 0, 94, 0, 2748, 0, 0,
	0, 0, 0, 2708, 0, 2350, 0, 2824, 0, 0,
	3528, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	2691, 2692, 2534, 2709, 2710, 2711, 0, 0, 0, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 2542, 0,
	2545, 0, 0, 598, 0, 0, 1189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 0, 2566, 1208, 2568, 1208, 0, 2571, 0,
	3528, 0, 870, 0, 0, 0, 0, 0, 2350, 2706,
	0, 0, 94, 0, 0, 0, 0, 0, 3602, 0,
	224, 1109, 224, 224, 0, 1109, 224, 224, 1109, 2841,
	1231, 1331, 0, 0, 0, 0, 2703, 2704, 2705, 2599,
	224, 94, 0, 2702, 2700, 2701, 2693, 2694, 2695, 2696,
	2698, 2699, 0, 223, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	94, 0, 0, 0, 0, 0, 0, 3053, 0, 0,
	0, 1109, 224, 224, 0, 0, 0, 0, 0, 0,
	2697, 0, 3528, 0, 0, 224, 1189, 0, 0, 2691,
	2692, 0, 2709, 2710, 2711, 0, 0, 0, 94, 0,
	0, 94, 0, 0, 0, 224, 224, 224, 2744, 0,
	224, 1109, 0, 0, 0, 1109, 0, 0, 0, 1109,
	224, 224, 0, 0, 0, 0, 0, 0, 223, 1109,
	0, 94, 0, 2712, 0, 0, 0, 0, 0, 0,
	2770, 0, 0, 3442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2783, 223, 0, 2706, 0,
	0, 0, 0, 0, 0, 2824, 0, 0, 0, 2707,
	0, 0, 1109, 2798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1231, 94, 1231, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 3741, 0, 0,
	0, 0, 0, 0, 1231, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2697,
	0, 0, 0, 0, 223, 2350, 0, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 3007, 3008, 0, 0,
	3011, 223, 0, 0, 3014, 0, 0, 0, 0, 0,
	0, 0, 0, 3018, 0, 0, 0, 0, 2708, 0,
	0, 0, 3025, 0, 0, 2748, 0, 3053, 1189, 0,
	0, 0, 0, 0, 2783, 0, 0, 2103, 0, 0,
	3037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 0, 0, 0, 0, 0, 1564, 0,
	3060, 3061, 0, 3062, 3063, 3064, 0, 0, 2707, 0,
	0, 0, 2816, 0, 2350, 0, 0, 0, 0, 0,
	0, 3070, 0, 0, 0, 3072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3528, 0, 0, 0, 0,
	0, 0, 0, 0, 2854, 2856, 2456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3100, 3101, 0, 0,
	0, 0, 0, 1231, 0, 2350, 0, 0, 0, 0,
	0, 2703, 2704, 2705, 3112, 0, 1493, 1494, 2702, 2700,
	2701, 2693, 2694, 2695, 2696, 2698, 2699, 0, 0, 3121,
	0, 0, 0, 0, 0, 0, 0, 0, 1524, 0,
	0, 0, 0, 0, 1204, 1496, 0, 1103, 0, 0,
	1189, 224, 1189, 0, 2911, 0, 0, 2708, 2915, 0,
	0, 0, 1109, 0, 0, 0, 224, 224, 224, 1189,
	0, 0, 0, 224, 0, 1495, 0, 1025, 224, 0,
	0, 0, 0, 0, 0, 1515, 3151, 0, 0, 0,
	1109, 0, 1025, 1512, 0, 0, 0, 0, 0, 0,
	0, 3160, 3163, 1208, 1208, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 1189, 0, 0, 0, 3032, 1189,
	0, 0, 0, 0, 0, 0, 0, 3183, 2969, 0,
	0, 0, 0, 0, 0, 3048, 0, 2608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	1189, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	2703, 2704, 2705, 0, 2993, 0, 1208, 2702, 2700, 2701,
	2693, 2694, 2695, 2696, 2698, 2699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	94, 0, 0, 94, 1523, 1525, 1189, 0, 0, 3005,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 3253, 0, 0, 0, 0, 0, 1510, 1511,
	0, 94, 94, 0, 0, 94, 1189, 0, 0, 0,
	0, 0, 0, 0, 1109, 224, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1189, 0, 0,
	0, 0, 0, 0, 0, 3292, 3293, 0, 0, 224,
	1189, 3297, 3298, 224, 0, 0, 3301, 3302, 224, 0,
	0, 0, 0, 3306, 1025, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 3310, 0, 224, 0, 224, 0,
	224, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	3315, 0, 0, 0, 94, 94, 0, 0, 1189, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 1109,
	0, 1109, 1189, 0, 0, 0, 0, 0, 0, 0,
	1109, 1109, 0, 0, 1109, 224, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 1109, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 224, 0,
	224, 0, 224, 0, 224, 0, 224, 0, 0, 0,
	3163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 222, 222, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2456, 0, 0, 1109, 0, 0, 0, 0, 0,
	3223, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3235, 0, 0, 0, 0,
	0, 634, 0, 3163, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	3495, 3496, 3497, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 1025, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2036, 3277, 0, 3506, 3507, 0, 0,
	0, 0, 1109, 0, 884, 0, 0, 0, 689, 0,
	0, 3349, 0, 0, 3515, 0, 0, 0, 0, 690,
	0, 0, 0, 0, 0, 0, 0, 0, 3357, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1038, 0,
	0, 0, 0, 0, 710, 0, 0, 3163, 0, 0,
	0, 0, 0, 0, 0, 3553, 0, 0, 0, 0,
	0, 1109, 692, 0, 3560, 0, 0, 870, 0, 0,
	0, 0, 0, 3567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 224, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 694, 0, 0, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 3163, 3163, 0, 0, 0,
	0, 0, 1109, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3397, 1109, 0, 0, 3500, 0, 0, 0, 0,
	0, 0, 2456, 0, 0, 224, 0, 0, 0, 3662,
	0, 0, 3665, 94, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 3163, 0, 0, 0, 0, 3500, 0, 0, 0,
	0, 2456, 0, 224, 1109, 0, 0, 0, 3457, 2043,
	697, 0, 0, 0, 0, 0, 1109, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 698, 0, 0, 0, 0, 3163, 0, 0,
	3163, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 2043, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 699, 0,
	0, 700, 0, 0, 0, 0, 0, 707, 0, 224,
	701, 0, 224, 2036, 224, 0, 224, 0, 0, 0,
	0, 0, 0, 224, 224, 1109, 1109, 0, 1109, 0,
	0, 94, 0, 0, 0, 0, 0, 1025, 0, 0,
	1109, 0, 0, 702, 708, 1025, 870, 0, 0, 0,
	224, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 224, 0, 224, 711,
	0, 0, 0, 0, 0, 0, 3535, 0, 0, 0,
	0, 0, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 3797, 3797, 3797, 0, 0, 0,
	0, 224, 224, 224, 224, 0, 224, 953, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 3818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 94, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 94, 0, 0, 222, 0, 222, 222, 0,
	3797, 222, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 634, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 3640, 1208, 0, 0, 0, 0, 0, 1529, 1524,
	0, 0, 0, 0, 0, 3163, 1496, 3163, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 222, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	222, 222, 222, 0, 1512, 222, 0, 0, 0, 3797,
	3917, 0, 0, 0, 0, 222, 222, 3921, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 3706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 222, 1533, 0, 0, 1543,
	0, 0, 0, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 3749, 0, 0, 0, 0,
	1539, 0, 1540, 0, 0, 0, 1109, 0, 0, 1510,
	1511, 0, 3767, 0, 2103, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 1531, 0, 0, 0, 3779,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 224, 224, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 224, 0, 1522, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 224,
	0, 0, 1109, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 224, 0, 0, 1109, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	1658, 0, 1038, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 1658, 222, 0, 0, 0, 0, 634, 0,
	0, 224, 224, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1109,
	0, 0, 0, 0, 94, 0, 224, 94, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 0, 3322, 0,
	0, 0, 3321, 0, 0, 0, 0, 0, 0, 0,
	1109, 0, 224, 1109, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	66, 0, 43, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 224, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	1042, 0, 0, 0, 1042, 0, 0, 1042, 0, 61,
	0, 0, 0, 0, 0, 0, 45, 0, 130, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 76, 0, 1493, 1494, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 47, 62, 1524, 0,
	1042, 0, 0, 48, 0, 1496, 0, 0, 81, 0,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 46,
	92, 0, 0, 0, 0, 82, 89, 0, 0, 0,
	0, 0, 0, 0, 222, 1495, 0, 0, 222, 0,
	1042, 0, 0, 222, 1042, 1515, 0, 0, 1042, 0,
	0, 0, 0, 1512, 0, 0, 49, 0, 1042, 0,
	0, 222, 0, 222, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2601, 0, 0,
	0, 1042, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 1523, 1525, 0, 0, 0, 0,
	0, 0, 634, 222, 0, 222, 0, 222, 0, 222,
	0, 222, 0, 0, 0, 0, 0, 0, 1510, 1511,
	84, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 222, 0, 0, 0, 1516, 627, 0, 0, 0,
	0, 63, 0, 1109, 0, 0, 53, 158, 87, 224,
	88, 0, 0, 51, 0, 0, 0, 132, 224, 0,
	0, 0, 0, 52, 0, 0, 224, 0, 0, 0,
	192, 0, 0, 224, 0, 0, 0, 0, 56, 1109,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 1109, 1109, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 1109, 0, 0,
	0, 127, 224, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 162, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 1109, 0, 0, 0, 1493,
	1494, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1042, 0, 1042, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 1042, 0, 161, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 1042,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 1038,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	1042, 0, 0, 0, 0, 1038, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 1109, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 1518,
	1519, 1520, 1521, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	224, 224, 0, 0, 1109, 0, 0, 1523, 1525, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 1510, 1511, 1042, 0, 0, 0, 0, 0, 224,
	1042, 222, 0, 0, 0, 1109, 224, 0, 0, 0,
	1109, 0, 0, 0, 222, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 222, 1522, 222,
	0, 222, 0, 0, 0, 0, 0, 0, 222, 222,
	0, 0, 1109, 651, 0, 669, 1042, 1517, 1042, 0,
	1042, 0, 0, 0, 0, 1109, 0, 0, 0, 1042,
	1042, 0, 0, 1042, 224, 222, 0, 0, 0, 652,
	0, 0, 653, 0, 0, 0, 1042, 1042, 1042, 0,
	0, 222, 0, 222, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 1106, 0, 1109, 0, 1106, 0, 674, 1223, 0,
	0, 0, 0, 0, 0, 0, 222, 222, 222, 222,
	0, 222, 0, 222, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 656, 0,
	1109, 657, 0, 0, 222, 0, 678, 0, 0, 0,
	621, 1223, 222, 0, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 224,
	224, 1712, 1712, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 1223, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 224, 0, 0, 1109, 0, 0,
	0, 1042, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 1109, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 620, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 670, 0, 0, 1042,
	0, 0, 0, 0, 0, 663, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 1042, 0, 1038, 0,
	0, 0, 0, 0, 668, 0, 0, 0, 0, 0,
	224, 0, 0, 1038, 0, 0, 0, 0, 664, 0,
	0, 681, 0, 680, 0, 0, 665, 224, 0, 0,
	0, 0, 0, 1107, 0, 0, 0, 1107, 0, 666,
	1224, 0, 0, 1658, 673, 0, 0, 0, 0, 682,
	0, 679, 0, 0, 0, 0, 0, 622, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 1042, 0, 1224, 0, 222, 0, 1529, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 222, 222,
	0, 0, 0, 1224, 0, 1495, 1658, 1224, 0, 0,
	0, 1224, 0, 1042, 0, 1515, 0, 0, 0, 222,
	0, 1224, 0, 1512, 0, 1042, 0, 0, 0, 0,
	0, 0, 1106, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 1224, 0, 0, 222, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 1038, 1501, 0, 0, 0,
	0, 0, 0, 0, 1042, 1042, 0, 1042, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 222, 0, 1042,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 222, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 1106, 222, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 1223,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 1223, 1224, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 1038, 1038, 0, 0, 1223, 1223, 1223,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 2666, 0, 0,
	0, 2667, 1042, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 0,
	1042, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 0, 1042, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 1107, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 1712, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1038,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 1042, 0, 0, 0, 1224,
	0, 1224, 0, 1224, 0, 0, 0, 0, 0, 1042,
	0, 0, 1224, 1224, 0, 0, 1224, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	1224, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 1042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 1038, 0,
	0, 0, 0, 0, 0, 0, 1038, 0, 0, 1042,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 1524, 0,
	0, 0, 0, 0, 222, 1496, 1712, 0, 0, 0,
	0, 0, 1542, 0, 1106, 222, 222, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 1223, 0, 0, 222,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	1042, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	1712, 1712, 0, 1512, 222, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 1712,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 1223, 0, 1223, 0,
	1712, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	1223, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 1042, 0,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 1107,
	1042, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 222, 1107, 0, 1042, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 1224, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	1042, 1042, 1042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 1712, 0, 1224, 1224, 0,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 1532, 1106, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 2125, 0, 0,
	0, 2126, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 1106,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 1042, 222, 1042, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1042, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 1042,
	0, 0, 1223, 0, 0, 1493, 1494, 0, 1526, 1527,
	1528, 1536, 1537, 1538, 1223, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 1042, 0, 1529, 1524, 0, 1042,
	0, 0, 0, 0, 1496, 1223, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	1042, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 1223,
	1042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	0, 1042, 0, 0, 0, 1518, 1519, 1520, 1521, 0,
	1106, 0, 0, 1106, 1042, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 1107, 1533, 0, 0, 1543, 0, 0,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 1107, 1042, 0, 0, 0, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 0, 0, 1510, 1511, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 1516, 0, 1042, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 0, 0, 1712, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1042, 0, 0, 0,
	0, 1106, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 0,
	1224, 1224, 0, 0, 1042, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1107, 0, 0, 1107, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 0, 1223, 0, 0, 0, 0, 1493, 1494,
	3320, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	1524, 0, 0, 0, 0, 0, 0, 1496, 0, 1223,
	0, 0, 0, 0, 1542, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1107, 0, 0, 0, 1495, 0, 0,
	0, 1223, 1223, 1223, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 1223, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	1543, 0, 0, 1107, 0, 0, 1523, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 0, 0, 0, 0, 0,
	1510, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 1531, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 1106, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1224, 0, 0, 0, 1106, 0, 0, 0, 0,
	1223, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 1224, 1224, 1493, 1494, 1534, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 1224,
	0, 1106, 0, 0, 0, 1107, 0, 1529, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 1107, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 1532, 0, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 1106, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 3023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 1106, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 0, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 1107, 0, 1543, 0,
	0, 0, 0, 0, 1523, 1525, 0, 1106, 0, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 1531, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 1224, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 1107, 1517, 1223, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 2669, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1224, 1224, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 1110, 238,
	239, 1111, 1112, 1113, 1224, 1114, 494, 1115, 1116, 1117,
	1118, 240, 241, 243, 242, 244, 245, 246, 495, 496,
	0, 497, 247, 498, 1119, 248, 249, 250, 251, 252,
	1120, 1121, 0, 253, 499, 500, 501, 1122, 254, 255,
	502, 1123, 1190, 1124, 256, 257, 258, 259, 260, 261,
	262, 0, 1125, 264, 265, 266, 263, 1126, 267, 0,
	268, 269, 270, 1127, 271, 983, 272, 273, 1128, 1129,
	1131, 1130, 1132, 1133, 1134, 274, 275, 276, 277, 0,
	278, 503, 504, 1135, 282, 279, 280, 1136, 283, 281,
	1137, 284, 285, 1138, 1139, 286, 287, 288, 1140, 289,
	290, 1141, 291, 292, 1142, 293, 294, 505, 295, 296,
	298, 300, 297, 301, 302, 303, 304, 506, 507, 1143,
	229, 1144, 0, 0, 0, 0, 305, 306, 307, 508,
	0, 0, 0, 308, 1145, 309, 1146, 1147, 984, 310,
	311, 509, 510, 312, 313, 1148, 314, 511, 1149, 512,
	315, 1150, 316, 317, 318, 319, 320, 513, 514, 515,
	373, 986, 321, 322, 1151, 323, 324, 325, 326, 0,
	0, 0, 230, 327, 328, 330, 1152, 985, 329, 516,
	517, 1153, 518, 1154, 331, 987, 519, 988, 332, 333,
	334, 989, 335, 0, 0, 0, 336, 337, 338, 339,
	340, 1155, 342, 341, 1156, 343, 520, 990, 344, 345,
	991, 1157, 346, 347, 348, 1158, 1159, 349, 350, 351,
	352, 0, 353, 354, 356, 358, 355, 357, 362, 359,
	360, 361, 364, 0, 363, 992, 365, 366, 369, 370,
	368, 993, 367, 1160, 231, 994, 371, 1161, 521, 372,
	522, 374, 375, 1162, 0, 376, 0, 1163, 1164, 378,
	379, 380, 1165, 1166, 381, 382, 523, 995, 383, 996,
	524, 384, 385, 377, 386, 387, 388, 389, 390, 391,
	392, 1167, 393, 394, 525, 526, 527, 395, 528, 396,
	397, 1168, 398, 0, 399, 400, 401, 402, 403, 404,
	405, 529, 406, 407, 1169, 0, 0, 0, 0, 0,
	408, 0, 410, 411, 412, 409, 413, 414, 415, 416,
	1170, 417, 418, 997, 419, 420, 421, 422, 530, 423,
	0, 424, 428, 429, 430, 431, 432, 433, 434, 1171,
	436, 437, 435, 438, 439, 440, 1172, 441, 425, 426,
	442, 443, 998, 444, 445, 531, 0, 446, 1173, 447,
	448, 449, 450, 427, 451, 456, 532, 452, 453, 454,
	455, 533, 1174, 458, 459, 0, 457, 1175, 460, 461,
	462, 463, 464, 299, 465, 1176, 466, 534, 535, 536,
	537, 1177, 473, 1178, 467, 468, 538, 469, 539, 1179,
	470, 471, 472, 0, 474, 475, 1180, 1181, 476, 477,
	478, 480, 481, 479, 482, 1182, 483, 1183, 0, 484,
	485, 486, 540, 541, 542, 1184, 488, 487, 543, 1185,
	1186, 1187, 1188, 489, 490, 544, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	2266, 0, 0, 0, 0, 0, 0, 0, 2267, 232,
	233, 234, 235, 236, 237, 1110, 238, 239, 1111, 1112,
	1113, 0, 1114, 494, 1115, 1116, 1117, 1118, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 1119, 248, 249, 250, 251, 252, 1120, 1121, 0,
	253, 499, 500, 501, 1122, 254, 255, 502, 1123, 1190,
	1124, 256, 257, 258, 259, 260, 261, 262, 0, 1125,
	264, 265, 266, 263, 1126, 267, 0, 268, 269, 270,
	1127, 271, 983, 272, 273, 1128, 1129, 1131, 1130, 1132,
	1133, 1134, 274, 275, 276, 277, 0, 278, 503, 504,
	1135, 282, 279, 280, 1136, 283, 281, 1137, 284, 285,
	1138, 1139, 286, 287, 288, 1140, 289, 290, 1141, 291,
	292, 1142, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 1143, 229, 1144, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 1145, 309, 1146, 1147, 984, 310, 311, 509, 510,
	312, 313, 1148, 314, 511, 1149, 512, 315, 1150, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 986, 321,
	322, 1151, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 1152, 985, 329, 516, 517, 1153, 518,
	1154, 331, 987, 519, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 1155, 342,
	341, 1156, 343, 520, 990, 344, 345, 991, 1157, 346,
	347, 348, 1158, 1159, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	1160, 231, 994, 371, 1161, 521, 372, 522, 374, 375,
	1162, 0, 376, 0, 1163, 1164, 378, 379, 380, 1165,
	1166, 381, 382, 523, 995, 383, 996, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 1167, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 1168, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 1169, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 1170, 417, 418,
	997, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 1171, 436, 437, 435,
	438, 439, 440, 1172, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 1173, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 1174,
	458, 459, 0, 457, 1175, 460, 461, 462, 463, 464,
	299, 465, 1176, 466, 534, 535, 536, 537, 1177, 473,
	1178, 467, 468, 538, 469, 539, 1179, 470, 471, 472,
	0, 474, 475, 1180, 1181, 476, 477, 478, 480, 481,
	479, 482, 1182, 483, 1183, 0, 484, 485, 486, 540,
	541, 542, 1184, 488, 487, 543, 1185, 1186, 1187, 1188,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 3031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3033, 232, 233, 234, 235, 236, 237,
	1110, 238, 239, 1111, 1112, 1113, 0, 1114, 494, 1115,
	1116, 1117, 1118, 240, 241, 243, 242, 244, 245, 246,
	495, 496, 0, 497, 247, 498, 1119, 248, 249, 250,
	251, 252, 1120, 1121, 0, 253, 499, 500, 501, 1122,
	254, 255, 502, 1123, 1190, 1124, 256, 257, 258, 259,
	260, 261, 262, 0, 1125, 264, 265, 266, 263, 1126,
	267, 0, 268, 269, 270, 1127, 271, 983, 272, 273,
	1128, 1129, 1131, 1130, 1132, 1133, 1134, 274, 275, 276,
	277, 0, 278, 503, 504, 1135, 282, 279, 280, 1136,
	283, 281, 1137, 284, 285, 1138, 1139, 286, 287, 288,
	1140, 289, 290, 1141, 291, 292, 1142, 293, 294, 505,
	295, 296, 298, 300, 297, 301, 302, 303, 304, 506,
	507, 1143, 229, 1144, 0, 0, 0, 0, 305, 306,
	307, 508, 0, 0, 0, 308, 1145, 309, 1146, 1147,
	984, 310, 311, 509, 510, 312, 313, 1148, 314, 511,
	1149, 512, 315, 1150, 316, 317, 318, 319, 320, 513,
	514, 515, 373, 986, 321, 322, 1151, 323, 324, 325,
	326, 0, 0, 0, 230, 327, 328, 330, 1152, 985,
	329, 516, 517, 1153, 518, 1154, 331, 987, 519, 988,
	332, 333, 334, 989, 335, 0, 0, 0, 336, 337,
	338, 339, 340, 1155, 342, 341, 1156, 343, 520, 990,
	344, 345, 991, 1157, 346, 347, 348, 1158, 1159, 349,
	350, 351, 352, 0, 353, 354, 356, 358, 355, 357,
	362, 359, 360, 361, 364, 0, 363, 992, 365, 366,
	369, 370, 368, 993, 367, 1160, 231, 994, 371, 1161,
	521, 372, 522, 374, 375, 1162, 0, 376, 0, 1163,
	1164, 378, 379, 380, 1165, 1166, 381, 382, 523, 995,
	383, 996, 524, 384, 385, 377, 386, 387, 388, 389,
	390, 391, 392, 1167, 393, 394, 525, 526, 527, 395,
	528, 396, 397, 1168, 398, 0, 399, 400, 401, 402,
	403, 404, 405, 529, 406, 407, 1169, 0, 0, 0,
	0, 0, 408, 0, 410, 411, 412, 409, 413, 414,
	415, 416, 1170, 417, 418, 997, 419, 420, 421, 422,
	530, 423, 0, 424, 428, 429, 430, 431, 432, 433,
	434, 1171, 436, 437, 435, 438, 439, 440, 1172, 441,
	425, 426, 442, 443, 998, 444, 445, 531, 0, 446,
	1173, 447, 448, 449, 450, 427, 451, 456, 532, 452,
	453, 454, 455, 533, 1174, 458, 459, 0, 457, 1175,
	460, 461, 462, 463, 464, 299, 465, 1176, 466, 534,
	535, 536, 537, 1177, 473, 1178, 467, 468, 538, 469,
	539, 1179, 470, 471, 472, 0, 474, 475, 1180, 1181,
	476, 477, 478, 480, 481, 479, 482, 1182, 483, 1183,
	0, 484, 485, 486, 540, 541, 542, 1184, 488, 487,
	543, 1185, 1186, 1187, 1188, 489, 490, 544, 491, 492,
	493, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3348, 232, 233, 234, 235, 236, 237, 1110,
	238, 239, 1111, 1112, 1113, 0, 1114, 494, 1115, 1116,
	1117, 1118, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 1119, 248, 249, 250, 251,
	252, 1120, 1121, 0, 253, 499, 500, 501, 1122, 254,
	255, 502, 1123, 1190, 1124, 256, 257, 258, 259, 260,
	261, 262, 0, 1125, 264, 265, 266, 263, 1126, 267,
	0, 268, 269, 270, 1127, 271, 983, 272, 273, 1128,
	1129, 1131, 1130, 1132, 1133, 1134, 274, 275, 276, 277,
	0, 278, 503, 504, 1135, 282, 279, 280, 1136, 283,
	281, 1137, 284, 285, 1138, 1139, 286, 287, 288, 1140,
	289, 290, 1141, 291, 292, 1142, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	1143, 229, 1144, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 1145, 309, 1146, 1147, 984,
	310, 311, 509, 510, 312, 313, 1148, 314, 511, 1149,
	512, 315, 1150, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 1151, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 1152, 985, 329,
	516, 517, 1153, 518, 1154, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 1155, 342, 341, 1156, 343, 520, 990, 344,
	345, 991, 1157, 346, 347, 348, 1158, 1159, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 1160, 231, 994, 371, 1161, 521,
	372, 522, 374, 375, 1162, 0, 376, 0, 1163, 1164,
	378, 379, 380, 1165, 1166, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 1167, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 1168, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 1169, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 1170, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	1171, 436, 437, 435, 438, 439, 440, 1172, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 1173,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 1174, 458, 459, 0, 457, 1175, 460,
	461, 462, 463, 464, 299, 465, 1176, 466, 534, 535,
	536, 537, 1177, 473, 1178, 467, 468, 538, 469, 539,
	1179, 470, 471, 472, 0, 474, 475, 1180, 1181, 476,
	477, 478, 480, 481, 479, 482, 1182, 483, 1183, 0,
	484, 485, 486, 540, 541, 542, 1184, 488, 487, 543,
	1185, 1186, 1187, 1188, 489, 490, 544, 491, 492, 493,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3501, 232, 233, 234,
	235, 236, 237, 1110, 238, 239, 1111, 1112, 1113, 0,
	1114, 494, 1115, 1116, 1117, 1118, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 1119,
	248, 249, 250, 251, 252, 1120, 1121, 0, 253, 499,
	500, 501, 1122, 254, 255, 502, 1123, 1190, 1124, 256,
	257, 258, 259, 260, 261, 262, 0, 1125, 264, 265,
	266, 263, 1126, 267, 0, 268, 269, 270, 1127, 271,
	983, 272, 273, 1128, 1129, 1131, 1130, 1132, 1133, 1134,
	274, 275, 276, 277, 0, 278, 503, 504, 1135, 282,
	279, 280, 1136, 283, 281, 1137, 284, 285, 1138, 1139,
	286, 287, 288, 1140, 289, 290, 1141, 291, 292, 1142,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 1143, 229, 1144, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 1145,
	309, 1146, 1147, 984, 310, 311, 509, 510, 312, 313,
	1148, 314, 511, 1149, 512, 315, 1150, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 1151,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 1152, 985, 329, 516, 517, 1153, 518, 1154, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 1155, 342, 341, 1156,
	343, 520, 990, 344, 345, 991, 1157, 346, 347, 348,
	1158, 1159, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 1160, 231,
	994, 371, 1161, 521, 372, 522, 374, 375, 1162, 0,
	376, 0, 1163, 1164, 378, 379, 380, 1165, 1166, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 1167, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 1168, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 1169,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 1170, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 1171, 436, 437, 435, 438, 439,
	440, 1172, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 1173, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 1174, 458, 459,
	0, 457, 1175, 460, 461, 462, 463, 464, 299, 465,
	1176, 466, 534, 535, 536, 537, 1177, 473, 1178, 467,
	468, 538, 469, 539, 1179, 470, 471, 472, 0, 474,
	475, 1180, 1181, 476, 477, 478, 480, 481, 479, 482,
	1182, 483, 1183, 0, 484, 485, 486, 540, 541, 542,
	1184, 488, 487, 543, 1185, 1186, 1187, 1188, 489, 490,
	544, 491, 492, 493, 1104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3404, 232, 233, 234, 235, 236, 237, 1110, 238, 239,
	1111, 1112, 1113, 0, 1114, 494, 1115, 1116, 1117, 1118,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 1119, 248, 249, 250, 251, 252, 1120,
	1121, 0, 253, 499, 500, 501, 1122, 254, 255, 502,
	1123, 1190, 1124, 256, 257, 258, 259, 260, 261, 262,
	0, 1125, 264, 265, 266, 263, 1126, 267, 0, 268,
	269, 270, 1127, 271, 983, 272, 273, 1128, 1129, 1131,
	1130, 1132, 1133, 1134, 274, 275, 276, 277, 0, 278,
	503, 504, 1135, 282, 279, 280, 1136, 283, 281, 1137,
	284, 285, 1138, 1139, 286, 287, 288, 1140, 289, 290,
	1141, 291, 292, 1142, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 1143, 229,
	1144, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 1145, 309, 1146, 1147, 984, 310, 311,
	509, 510, 312, 313, 1148, 314, 511, 1149, 512, 315,
	1150, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	986, 321, 322, 1151, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 1152, 985, 329, 516, 517,
	1153, 518, 1154, 331, 987, 519, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	1155, 342, 341, 1156, 343, 520, 990, 344, 345, 991,
	1157, 346, 347, 348, 1158, 1159, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 1160, 231, 994, 371, 1161, 521, 372, 522,
	374, 375, 1162, 0, 376, 0, 1163, 1164, 378, 379,
	380, 1165, 1166, 381, 382, 523, 995, 383, 996, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	1167, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	1168, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 1169, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 1170,
	417, 418, 997, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 1171, 436,
	437, 435, 438, 439, 440, 1172, 441, 425, 426, 442,
	443, 998, 444, 445, 531, 0, 446, 1173, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 1174, 458, 459, 0, 457, 1175, 460, 461, 462,
	463, 464, 299, 465, 1176, 466, 534, 535, 536, 537,
	1177, 473, 1178, 467, 468, 538, 469, 539, 1179, 470,
	471, 472, 0, 474, 475, 1180, 1181, 476, 477, 478,
	480, 481, 479, 482, 1182, 483, 1183, 0, 484, 485,
	486, 540, 541, 542, 1184, 488, 487, 543, 1185, 1186,
	1187, 1188, 489, 490, 544, 491, 492, 493, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3278, 232, 233, 234, 235, 236,
	237, 1110, 238, 239, 1111, 1112, 1113, 0, 1114, 494,
	1115, 1116, 1117, 1118, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 1119, 248, 249,
	250, 251, 252, 1120, 1121, 0, 253, 499, 500, 501,
	1122, 254, 255, 502, 1123, 1190, 1124, 256, 257, 258,
	259, 260, 261, 262, 0, 1125, 264, 265, 266, 263,
	1126, 267, 0, 268, 269, 270, 1127, 271, 983, 272,
	273, 1128, 1129, 1131, 1130, 1132, 1133, 1134, 274, 275,
	276, 277, 0, 278, 503, 504, 1135, 282, 279, 280,
	1136, 283, 281, 1137, 284, 285, 1138, 1139, 286, 287,
	288, 1140, 289, 290, 1141, 291, 292, 1142, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 1143, 229, 1144, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 1145, 309, 1146,
	1147, 984, 310, 311, 509, 510, 312, 313, 1148, 314,
	511, 1149, 512, 315, 1150, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 986, 321, 322, 1151, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 1152,
	985, 329, 516, 517, 1153, 518, 1154, 331, 987, 519,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 1155, 342, 341, 1156, 343, 520,
	990, 344, 345, 991, 1157, 346, 347, 348, 1158, 1159,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 1160, 231, 994, 371,
	1161, 521, 372, 522, 374, 375, 1162, 0, 376, 0,
	1163, 1164, 378, 379, 380, 1165, 1166, 381, 382, 523,
	995, 383, 996, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 1167, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 1168, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 1169, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 1170, 417, 418, 997, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 1171, 436, 437, 435, 438, 439, 440, 1172,
	441, 425, 426, 442, 443, 998, 444, 445, 531, 0,
	446, 1173, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 1174, 458, 459, 0, 457,
	1175, 460, 461, 462, 463, 464, 299, 465, 1176, 466,
	534, 535, 536, 537, 1177, 473, 1178, 467, 468, 538,
	469, 539, 1179, 470, 471, 472, 0, 474, 475, 1180,
	1181, 476, 477, 478, 480, 481, 479, 482, 1182, 483,
	1183, 0, 484, 485, 486, 540, 541, 542, 1184, 488,
	487, 543, 1185, 1186, 1187, 1188, 489, 490, 544, 491,
	492, 493, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3049, 232,
	233, 234, 235, 236, 237, 1110, 238, 239, 1111, 1112,
	1113, 0, 1114, 494, 1115, 1116, 1117, 1118, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 1119, 248, 249, 250, 251, 252, 1120, 1121, 0,
	253, 499, 500, 501, 1122, 254, 255, 502, 1123, 1190,
	1124, 256, 257, 258, 259, 260, 261, 262, 0, 1125,
	264, 265, 266, 263, 1126, 267, 0, 268, 269, 270,
	1127, 271, 983, 272, 273, 1128, 1129, 1131, 1130, 1132,
	1133, 1134, 274, 275, 276, 277, 0, 278, 503, 504,
	1135, 282, 279, 280, 1136, 283, 281, 1137, 284, 285,
	1138, 1139, 286, 287, 288, 1140, 289, 290, 1141, 291,
	292, 1142, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 1143, 229, 1144, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 1145, 309, 1146, 1147, 984, 310, 311, 509, 510,
	312, 313, 1148, 314, 511, 1149, 512, 315, 1150, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 986, 321,
	322, 1151, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 1152, 985, 329, 516, 517, 1153, 518,
	1154, 331, 987, 519, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 1155, 342,
	341, 1156, 343, 520, 990, 344, 345, 991, 1157, 346,
	347, 348, 1158, 1159, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	1160, 231, 994, 371, 1161, 521, 372, 522, 374, 375,
	1162, 0, 376, 0, 1163, 1164, 378, 379, 380, 1165,
	1166, 381, 382, 523, 995, 383, 996, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 1167, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 1168, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 1169, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 1170, 417, 418,
	997, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 1171, 436, 437, 435,
	438, 439, 440, 1172, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 1173, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 1174,
	458, 459, 0, 457, 1175, 460, 461, 462, 463, 464,
	299, 465, 1176, 466, 534, 535, 536, 537, 1177, 473,
	1178, 467, 468, 538, 469, 539, 1179, 470, 471, 472,
	0, 474, 475, 1180, 1181, 476, 477, 478, 480, 481,
	479, 482, 1182, 483, 1183, 0, 484, 485, 486, 540,
	541, 542, 1184, 488, 487, 543, 1185, 1186, 1187, 1188,
	489, 490, 544, 491, 492, 493, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2898, 232, 233, 234, 235, 236, 237, 1110,
	238, 239, 1111, 1112, 1113, 0, 1114, 494, 1115, 1116,
	1117, 1118, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 1119, 248, 249, 250, 251,
	252, 1120, 1121, 0, 253, 499, 500, 501, 1122, 254,
	255, 502, 1123, 1190, 1124, 256, 257, 258, 259, 260,
	261, 262, 0, 1125, 264, 265, 266, 263, 1126, 267,
	0, 268, 269, 270, 1127, 271, 983, 272, 273, 1128,
	1129, 1131, 1130, 1132, 1133, 1134, 274, 275, 276, 277,
	0, 278, 503, 504, 1135, 282, 279, 280, 1136, 283,
	281, 1137, 284, 285, 1138, 1139, 286, 287, 288, 1140,
	289, 290, 1141, 291, 292, 1142, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	1143, 229, 1144, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 1145, 309, 1146, 1147, 984,
	310, 311, 509, 510, 312, 313, 1148, 314, 511, 1149,
	512, 315, 1150, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 1151, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 1152, 985, 329,
	516, 517, 1153, 518, 1154, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 1155, 342, 341, 1156, 343, 520, 990, 344,
	345, 991, 1157, 346, 347, 348, 1158, 1159, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 1160, 231, 994, 371, 1161, 521,
	372, 522, 374, 375, 1162, 0, 376, 0, 1163, 1164,
	378, 379, 380, 1165, 1166, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 1167, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 1168, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 1169, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 1170, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	1171, 436, 437, 435, 438, 439, 440, 1172, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 1173,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 1174, 458, 459, 0, 457, 1175, 460,
	461, 462, 463, 464, 299, 465, 1176, 466, 534, 535,
	536, 537, 1177, 473, 1178, 467, 468, 538, 469, 539,
	1179, 470, 471, 472, 0, 474, 475, 1180, 1181, 476,
	477, 478, 480, 481, 479, 482, 1182, 483, 1183, 0,
	484, 485, 486, 540, 541, 542, 1184, 488, 487, 543,
	1185, 1186, 1187, 1188, 489, 490, 544, 491, 492, 493,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2149, 232, 233, 234,
	235, 236, 237, 1110, 238, 239, 1111, 1112, 1113, 0,
	1114, 494, 1115, 1116, 1117, 1118, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 1119,
	248, 249, 250, 251, 252, 1120, 1121, 0, 253, 499,
	500, 501, 1122, 254, 255, 502, 1123, 1190, 1124, 256,
	257, 258, 259, 260, 261, 262, 0, 1125, 264, 265,
	266, 263, 1126, 267, 0, 268, 269, 270, 1127, 271,
	983, 272, 273, 1128, 1129, 1131, 1130, 1132, 1133, 1134,
	274, 275, 276, 277, 0, 278, 503, 504, 1135, 282,
	279, 280, 1136, 283, 281, 1137, 284, 285, 1138, 1139,
	286, 287, 288, 1140, 289, 290, 1141, 291, 292, 1142,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 1143, 229, 1144, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 1145,
	309, 1146, 1147, 984, 310, 311, 509, 510, 312, 313,
	1148, 314, 511, 1149, 512, 315, 1150, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 1151,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 1152, 985, 329, 516, 517, 1153, 518, 1154, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 1155, 342, 341, 1156,
	343, 520, 990, 344, 345, 991, 1157, 346, 347, 348,
	1158, 1159, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 1160, 231,
	994, 371, 1161, 521, 372, 522, 374, 375, 1162, 0,
	376, 0, 1163, 1164, 378, 379, 380, 1165, 1166, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 1167, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 1168, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 1169,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 1170, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 1171, 436, 437, 435, 438, 439,
	440, 1172, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 1173, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 1174, 458, 459,
	0, 457, 1175, 460, 461, 462, 463, 464, 299, 465,
	1176, 466, 534, 535, 536, 537, 1177, 473, 1178, 467,
	468, 538, 469, 539, 1179, 470, 471, 472, 0, 474,
	475, 1180, 1181, 476, 477, 478, 480, 481, 479, 482,
	1182, 483, 1183, 0, 484, 485, 486, 540, 541, 542,
	1184, 488, 487, 543, 1185, 1186, 1187, 1188, 489, 490,
	544, 491, 492, 493, 1202, 0, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 232, 233, 234, 235, 236, 237, 1110,
	238, 239, 1111, 1112, 1113, 0, 1114, 494, 1115, 1116,
	1117, 1118, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 1119, 248, 249, 250, 251,
	252, 1120, 1121, 0, 253, 499, 500, 501, 1122, 254,
	255, 502, 1123, 1190, 1124, 256, 257, 258, 259, 260,
	261, 262, 0, 1125, 264, 265, 266, 263, 1126, 267,
	0, 268, 269, 270, 1127, 271, 983, 272, 273, 1128,
	1129, 1131, 1130, 1132, 1133, 1134, 274, 275, 276, 277,
	0, 278, 503, 504, 1135, 282, 279, 280, 1136, 283,
	281, 1137, 284, 285, 1138, 1139, 286, 287, 288, 1140,
	289, 290, 1141, 291, 292, 1142, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	1143, 229, 1144, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 1145, 309, 1146, 1147, 984,
	310, 311, 509, 510, 312, 313, 1148, 314, 511, 1149,
	512, 315, 1150, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 1151, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 1152, 985, 329,
	516, 517, 1153, 518, 1154, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 1155, 342, 341, 1156, 343, 520, 990, 344,
	345, 991, 1157, 346, 347, 348, 1158, 1159, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 1160, 231, 994, 371, 1161, 521,
	372, 522, 374, 375, 1162, 0, 376, 0, 1163, 1164,
	378, 379, 380, 1165, 1166, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 1167, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 1168, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 1169, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 1170, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	1171, 436, 437, 435, 438, 439, 440, 1172, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 1173,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 1174, 458, 459, 0, 457, 1175, 460,
	461, 462, 463, 464, 299, 465, 1176, 466, 534, 535,
	536, 537, 1177, 473, 1178, 467, 468, 538, 469, 539,
	1179, 470, 471, 472, 0, 474, 475, 1180, 1181, 476,
	477, 478, 480, 481, 479, 482, 1182, 483, 1183, 0,
	484, 485, 486, 540, 541, 542, 1184, 488, 487, 543,
	1185, 1186, 1187, 1188, 489, 490, 544, 491, 492, 493,
	1101, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 1110, 238, 239, 1111, 1112,
	1113, 0, 1114, 494, 1115, 1116, 1117, 1118, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 1119, 248, 249, 250, 251, 252, 1120, 1121, 0,
	253, 499, 500, 501, 1122, 254, 255, 502, 1123, 1190,
	1124, 256, 257, 258, 259, 260, 261, 262, 0, 1125,
	264, 265, 266, 263, 1126, 267, 0, 268, 269, 270,
	1127, 271, 983, 272, 273, 1128, 1129, 1131, 1130, 1132,
	1133, 1134, 274, 275, 276, 277, 0, 278, 503, 504,
	1135, 282, 279, 280, 1136, 283, 281, 1137, 284, 285,
	1138, 1139, 286, 287, 288, 1140, 289, 290, 1141, 291,
	292, 1142, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 1143, 229, 1144, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 1145, 309, 1146, 1147, 984, 310, 311, 509, 510,
	312, 313, 1148, 314, 511, 1149, 512, 315, 1150, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 986, 321,
	322, 1151, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 1152, 985, 329, 516, 517, 1153, 518,
	1154, 331, 987, 519, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 1155, 342,
	341, 1156, 343, 520, 990, 344, 345, 991, 1157, 346,
	347, 348, 1158, 1159, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	1160, 231, 994, 371, 1161, 521, 372, 522, 374, 375,
	1162, 0, 376, 0, 1163, 1164, 378, 379, 380, 1165,
	1166, 381, 382, 523, 995, 383, 996, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 1167, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 1168, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 1169, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 1170, 417, 418,
	997, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 1171, 436, 437, 435,
	438, 439, 440, 1172, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 1173, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 1174,
	458, 459, 0, 457, 1175, 460, 461, 462, 463, 464,
	299, 465, 1176, 466, 534, 535, 536, 537, 1177, 473,
	1178, 467, 468, 538, 469, 539, 1179, 470, 471, 472,
	0, 474, 475, 1180, 1181, 476, 477, 478, 480, 481,
	479, 482, 1182, 483, 1183, 0, 484, 485, 486, 540,
	541, 542, 1184, 488, 487, 543, 1185, 1186, 1187, 1188,
	489, 490, 544, 491, 492, 493, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 1110,
	238, 239, 1111, 1112, 1113, 0, 1114, 494, 1115, 1116,
	1117, 1118, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 1119, 248, 249, 250, 251,
	252, 1120, 1121, 0, 253, 499, 500, 501, 1122, 254,
	255, 502, 1123, 1190, 1124, 256, 257, 258, 259, 260,
	261, 262, 0, 1125, 264, 265, 266, 263, 1126, 267,
	0, 268, 269, 270, 1127, 271, 983, 272, 273, 1128,
	1129, 1131, 1130, 1132, 1133, 1134, 274, 275, 276, 277,
	0, 278, 503, 504, 1135, 282, 279, 280, 1136, 283,
	281, 1137, 284, 285, 1138, 1139, 286, 287, 288, 1140,
	289, 290, 1141, 291, 292, 1142, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	1143, 229, 1144, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 1145, 309, 1146, 1147, 984,
	310, 311, 509, 510, 312, 313, 1148, 314, 511, 1149,
	512, 315, 1150, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 1151, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 1152, 985, 329,
	516, 517, 1153, 518, 1154, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 1155, 342, 341, 1156, 343, 520, 990, 344,
	345, 991, 1157, 346, 347, 348, 1158, 1159, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 1160, 231, 994, 371, 1161, 521,
	372, 522, 374, 375, 1162, 0, 376, 0, 1163, 1164,
	378, 379, 380, 1165, 1166, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 1167, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 1168, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 1169, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 1170, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	1171, 436, 437, 435, 438, 439, 440, 1172, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 1173,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 1174, 458, 459, 0, 457, 1175, 460,
	461, 462, 463, 464, 299, 465, 1176, 466, 534, 535,
	536, 537, 1177, 473, 1178, 467, 468, 538, 469, 539,
	1179, 470, 471, 472, 0, 474, 475, 1180, 1181, 476,
	477, 478, 480, 481, 479, 482, 1182, 483, 1183, 0,
	484, 485, 486, 540, 541, 542, 1184, 488, 487, 543,
	1185, 1186, 1187, 1188, 489, 490, 544, 491, 492, 493,
	2124, 0, 920, 892, 893, 894, 890, 891, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 2121, 238, 239, 0, 0,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 910, 943, 877,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 278, 961, 960,
	881, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	2122, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 887, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	878, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 876, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 882, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 2120, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 879, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	873, 874, 2123, 0, 0, 0, 0, 0, 0, 904,
	2119, 0, 866, 902, 920, 892, 893, 894, 890, 891,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 192, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 194, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 1356, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 186, 489, 490, 544, 491, 492, 493, 879, 187,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 920, 892, 893, 894, 890, 891,
	903, 1569, 1567, 0, 0, 902, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 192, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 194, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 1356, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 186, 489, 490, 544, 491, 492, 493, 879, 187,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 920, 892, 893, 894, 890, 891,
	903, 1569, 2621, 0, 0, 902, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 192, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 194, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 1356, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 186, 489, 490, 544, 491, 492, 493, 879, 187,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 920, 892, 893, 894, 890, 891,
	903, 1569, 1567, 0, 0, 902, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 2228, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 2233, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 2229, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 2230, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 540, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 879, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 2169, 902, 920, 892, 893, 894,
	890, 891, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	0, 0, 0, 904, 2167, 0, 2166, 902, 920, 892,
	893, 894, 890, 891, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 0, 0,
	0, 0, 0, 0, 0, 904, 2164, 0, 2163, 902,
	920, 892, 893, 894, 890, 891, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	0, 0, 0, 0, 0, 0, 0, 904, 2161, 0,
	2160, 902, 920, 892, 893, 894, 890, 891, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 910, 943, 877,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 278, 961, 960,
	881, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 887, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	878, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 876, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 882, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 879, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	873, 874, 0, 0, 0, 0, 0, 0, 0, 904,
	2158, 0, 1427, 902, 920, 892, 893, 894, 890, 891,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 540, 965, 1000, 0, 488, 487, 543, 1426, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 879, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 869, 902, 920, 892, 893, 894,
	890, 891, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 883, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 920, 892, 893, 894,
	890, 891, 903, 904, 0, 0, 0, 902, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 3761, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 883, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 920, 892, 893, 894,
	890, 891, 903, 904, 0, 0, 0, 902, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 2038, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 2037, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 920, 892, 893, 894,
	890, 891, 903, 904, 0, 0, 0, 902, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 3563, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 883, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 920, 892, 893, 894,
	890, 891, 903, 904, 0, 0, 0, 902, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 3247, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 1637, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 0, 902, 920, 892,
	893, 894, 890, 891, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 3027, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 920, 892,
	893, 894, 890, 891, 903, 904, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	883, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 920, 892,
	893, 894, 890, 891, 903, 904, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 1637, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 902,
	920, 892, 893, 894, 890, 891, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 2233, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	0, 0, 0, 0, 0, 0, 0, 904, 1567, 0,
	2238, 902, 920, 892, 893, 894, 890, 891, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 910, 943, 877,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 278, 961, 960,
	881, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 887, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	878, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 876, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 882, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 879, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	873, 874, 0, 0, 0, 0, 0, 0, 0, 904,
	0, 0, 2236, 902, 920, 892, 893, 894, 890, 891,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 540, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 879, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 2224, 902, 920, 892, 893, 894,
	890, 891, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 945, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 2213, 902, 920, 892,
	893, 894, 890, 891, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 2211, 902,
	2202, 2209, 893, 894, 890, 891, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 2205, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	2206, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 2207, 2204, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 2208, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 2203, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	0, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	2199, 902, 2202, 2209, 893, 894, 890, 891, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 910, 943, 877,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 2205, 961, 960,
	881, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 887, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 2206, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 2207, 2204, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	878, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 2208, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 876, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 882, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 2203, 493, 879, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	873, 874, 920, 892, 893, 894, 890, 891, 903, 904,
	0, 0, 0, 902, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 910, 943, 877,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 278, 961, 960,
	881, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 887, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	878, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 876, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 882, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 879, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 0,
	873, 874, 0, 0, 0, 0, 0, 1575, 0, 904,
	0, 0, 0, 902, 920, 892, 893, 894, 890, 891,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 2017, 238, 239,
	0, 0, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 877, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 881, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 878, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 888, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 876, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 882, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 540, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 879, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 873, 874, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 1245, 902, 920, 892, 893, 894,
	890, 891, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 944, 908, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	957, 0, 964, 247, 963, 0, 248, 249, 250, 251,
	252, 910, 943, 877, 253, 1002, 1003, 501, 0, 254,
	255, 950, 0, 931, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 934,
	932, 933, 940, 936, 935, 939, 274, 275, 276, 277,
	967, 278, 961, 960, 881, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 952, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 887, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 974, 975,
	899, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	959, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 972, 973, 312, 313, 0, 314, 981, 0,
	909, 315, 0, 316, 317, 318, 319, 320, 1244, 946,
	949, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 985, 329,
	954, 955, 0, 915, 0, 331, 987, 947, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 982, 990, 344,
	345, 991, 0, 346, 347, 348, 938, 937, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 878, 231, 994, 371, 900, 948,
	372, 962, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 976, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 977, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 958, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 888,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 941, 441, 425,
	426, 442, 443, 998, 444, 445, 956, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 1001, 452, 453,
	454, 455, 978, 0, 458, 459, 876, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 968, 969,
	970, 971, 0, 473, 0, 467, 468, 979, 469, 980,
	898, 470, 471, 472, 0, 474, 475, 0, 882, 476,
	477, 478, 480, 481, 479, 482, 942, 483, 0, 0,
	484, 485, 486, 540, 965, 1000, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	879, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	0, 0, 0, 904, 0, 0, 1239, 902, 920, 892,
	893, 894, 890, 891, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	1238, 946, 949, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 987, 947,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 991, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 994, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 998, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 474, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 879, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 873, 874, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 1234, 902,
	920, 892, 893, 894, 890, 891, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 3796, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 3795,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 3794, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 3796, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 3795,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 2588, 2589, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 2586, 2587, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 873, 874,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 877, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 881, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 878, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	876, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 882, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 879, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 2025, 2026,
	920, 892, 893, 894, 890, 891, 903, 904, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 944, 908, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 957, 0, 964, 247, 963, 0,
	248, 249, 250, 251, 252, 910, 943, 0, 253, 1002,
	1003, 501, 0, 254, 255, 950, 0, 931, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 934, 932, 933, 940, 936, 935, 939,
	274, 275, 276, 277, 967, 278, 961, 960, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 952, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 887, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 974, 975, 899, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 959, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 972, 973, 312, 313,
	0, 314, 981, 0, 909, 315, 0, 316, 317, 318,
	319, 320, 945, 946, 949, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 985, 329, 954, 955, 0, 915, 0, 331,
	987, 947, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 982, 990, 344, 345, 991, 0, 346, 347, 348,
	938, 937, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 231,
	994, 371, 900, 948, 372, 962, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 976, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 977, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 958, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 888, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 941, 441, 425, 426, 442, 443, 998, 444, 445,
	956, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 1001, 452, 453, 454, 455, 978, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 968, 969, 970, 971, 0, 473, 0, 467,
	468, 979, 469, 980, 898, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	942, 483, 0, 0, 484, 485, 486, 540, 965, 1000,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 920, 892, 893, 894, 890, 891,
	903, 2221, 0, 0, 0, 0, 0, 0, 2219, 2220,
	0, 232, 233, 234, 235, 236, 237, 904, 238, 239,
	0, 902, 0, 0, 0, 944, 908, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 957, 0,
	964, 247, 963, 0, 248, 249, 250, 251, 252, 910,
	943, 0, 253, 1002, 1003, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 967, 278,
	961, 960, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 952, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 887, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 899, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 959, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	972, 973, 312, 313, 0, 314, 981, 0, 909, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 954, 955,
	0, 915, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 0, 231, 994, 371, 900, 948, 372, 962,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	958, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 2581, 2582, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 956, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 1001, 452, 453, 454, 455,
	978, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 968, 969, 970, 971,
	0, 473, 0, 467, 468, 979, 469, 980, 898, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 540, 965, 1000, 0, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 920, 892,
	893, 894, 890, 891, 903, 0, 0, 0, 0, 0,
	0, 0, 1768, 1769, 0, 232, 233, 234, 235, 236,
	237, 904, 238, 239, 0, 902, 0, 0, 0, 944,
	908, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 0, 957, 0, 964, 247, 963, 0, 248, 249,
	250, 251, 252, 910, 943, 877, 253, 1002, 1003, 501,
	0, 254, 255, 950, 0, 931, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	3796, 934, 932, 933, 940, 936, 935, 939, 274, 275,
	276, 277, 967, 278, 961, 960, 881, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 952,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	887, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	974, 975, 899, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 959, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 972, 973, 312, 313, 0, 314,
	981, 0, 909, 315, 0, 316, 317, 318, 319, 320,
	945, 946, 949, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	985, 329, 954, 955, 0, 915, 0, 331, 0, 947,
	0, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 982,
	990, 344, 345, 0, 0, 346, 347, 348, 938, 937,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 878, 231, 0, 371,
	900, 948, 372, 962, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 976, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 977,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 958, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 888, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 941,
	441, 425, 426, 442, 443, 0, 444, 445, 956, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 1001,
	452, 453, 454, 455, 978, 0, 458, 459, 876, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	968, 969, 970, 971, 0, 473, 0, 467, 468, 979,
	469, 980, 898, 470, 471, 472, 0, 3795, 475, 0,
	882, 476, 477, 478, 480, 481, 479, 482, 942, 483,
	0, 0, 484, 485, 486, 540, 965, 1000, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 920, 892, 893, 894, 890, 891, 903, 0,
	0, 0, 0, 0, 0, 0, 873, 874, 0, 232,
	233, 234, 235, 236, 237, 904, 238, 239, 0, 902,
	0, 0, 0, 944, 908, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 957, 0, 964, 247,
	963, 0, 248, 249, 250, 251, 252, 0, 943, 0,
	253, 1002, 1003, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 967, 278, 961, 960,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 899, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 959, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 972, 973,
	312, 313, 0, 314, 981, 0, 909, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 954, 955, 0, 915,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 231, 994, 371, 900, 948, 372, 962, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 958, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 888, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 956, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1001, 452, 453, 454, 455, 978, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 968, 969, 970, 971, 0, 473,
	0, 467, 468, 979, 469, 980, 898, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	965, 1000, 0, 488, 487, 543, 0, 866, 0, 1040,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 904,
	944, 0, 0, 902, 0, 240, 241, 243, 242, 244,
	245, 246, 495, 496, 0, 497, 247, 498, 0, 248,
	249, 250, 251, 252, 0, 943, 0, 253, 499, 500,
	501, 0, 254, 255, 950, 0, 931, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 983,
	272, 273, 934, 932, 933, 940, 936, 935, 939, 274,
	275, 276, 277, 0, 278, 503, 504, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 285, 0, 0, 286,
	287, 288, 0, 289, 290, 0, 291, 292, 0, 293,
	294, 505, 295, 296, 298, 300, 297, 301, 302, 303,
	304, 974, 975, 0, 229, 0, 0, 0, 0, 0,
	305, 306, 307, 508, 0, 0, 0, 308, 0, 309,
	0, 0, 984, 310, 311, 509, 510, 312, 313, 0,
	314, 981, 0, 512, 315, 0, 316, 317, 318, 319,
	320, 945, 946, 949, 373, 986, 321, 322, 0, 323,
	324, 325, 326, 0, 0, 0, 230, 327, 328, 330,
	0, 985, 329, 516, 517, 0, 518, 0, 331, 987,
	947, 988, 332, 333, 334, 989, 335, 0, 0, 0,
	336, 337, 338, 339, 340, 1026, 342, 341, 0, 343,
	982, 990, 344, 345, 991, 0, 346, 347, 348, 938,
	937, 349, 350, 351, 352, 0, 353, 354, 356, 358,
	355, 357, 362, 359, 360, 361, 364, 0, 363, 992,
	365, 366, 369, 370, 368, 993, 367, 0, 231, 994,
	371, 0, 948, 372, 522, 374, 375, 0, 0, 376,
	0, 0, 1032, 378, 379, 380, 0, 0, 381, 382,
	523, 995, 383, 996, 976, 384, 385, 377, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 394, 525, 526,
	977, 395, 528, 396, 397, 0, 398, 0, 399, 400,
	401, 402, 403, 404, 405, 529, 406, 407, 0, 0,
	0, 0, 0, 0, 408, 0, 410, 411, 412, 409,
	413, 414, 415, 416, 0, 417, 418, 997, 419, 420,
	421, 422, 530, 1034, 0, 424, 428, 429, 430, 431,
	432, 433, 434, 192, 436, 437, 435, 438, 439, 440,
	941, 441, 425, 426, 442, 443, 998, 444, 445, 531,
	0, 446, 0, 447, 448, 449, 450, 427, 451, 456,
	532, 452, 453, 454, 455, 978, 0, 458, 459, 0,
	457, 194, 460, 461, 462, 463, 464, 299, 465, 0,
	466, 534, 535, 536, 537, 0, 473, 0, 467, 468,
	979, 469, 980, 0, 470, 471, 472, 0, 474, 475,
	0, 0, 476, 477, 478, 480, 481, 479, 482, 942,
	483, 0, 0, 484, 485, 486, 1356, 541, 542, 0,
	488, 487, 543, 0, 1040, 0, 186, 489, 490, 544,
	491, 492, 493, 0, 187, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 1030, 944, 1661, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	943, 0, 253, 499, 500, 501, 0, 254, 255, 950,
	0, 931, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 934, 932, 933,
	940, 936, 935, 939, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 974, 975, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	509, 510, 312, 313, 0, 314, 981, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 945, 946, 949, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 985, 329, 516, 517,
	0, 518, 0, 331, 987, 947, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	1026, 342, 341, 0, 343, 982, 990, 344, 345, 991,
	0, 346, 347, 348, 938, 937, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 0, 231, 994, 371, 0, 948, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 1032, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 976,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 977, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 530, 1034, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 192, 436,
	437, 435, 438, 439, 440, 941, 441, 425, 426, 442,
	443, 998, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	978, 0, 458, 459, 0, 457, 194, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 979, 469, 980, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 942, 483, 0, 0, 484, 485,
	486, 1356, 541, 542, 0, 488, 487, 543, 0, 0,
	0, 186, 489, 490, 544, 491, 492, 493, 0, 187,
	0, 0, 0, 2741, 0, 1040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 1661, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 944, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 495, 496,
	0, 497, 247, 498, 0, 248, 249, 250, 251, 252,
	0, 943, 0, 253, 499, 500, 501, 0, 254, 255,
	950, 0, 931, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 983, 272, 273, 934, 932,
	933, 940, 936, 935, 939, 274, 275, 276, 277, 0,
	278, 503, 504, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 285, 0, 0, 286, 287, 288, 0, 289,
	290, 0, 291, 292, 0, 293, 294, 505, 295, 296,
	298, 300, 297, 301, 302, 303, 304, 974, 975, 0,
	229, 0, 0, 0, 0, 0, 305, 306, 307, 508,
	0, 0, 0, 308, 0, 309, 0, 0, 984, 310,
	311, 509, 510, 312, 313, 0, 314, 981, 0, 512,
	315, 0, 316, 317, 318, 319, 320, 945, 946, 949,
	373, 986, 321, 322, 0, 323, 324, 325, 326, 0,
	0, 0, 230, 327, 328, 330, 0, 985, 329, 516,
	517, 0, 518, 0, 331, 987, 947, 988, 332, 333,
	334, 989, 335, 0, 0, 0, 336, 337, 338, 339,
	340, 1026, 342, 341, 0, 343, 982, 990, 344, 345,
	991, 0, 346, 347, 348, 938, 937, 349, 350, 351,
	352, 0, 353, 354, 356, 358, 355, 357, 362, 359,
	360, 361, 364, 0, 363, 992, 365, 366, 369, 370,
	368, 993, 367, 0, 231, 994, 371, 0, 948, 372,
	522, 374, 375, 0, 0, 376, 0, 0, 1032, 378,
	379, 380, 0, 0, 381, 382, 523, 995, 383, 996,
	976, 384, 385, 377, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 394, 525, 526, 977, 395, 528, 396,
	397, 0, 398, 0, 399, 400, 401, 402, 403, 404,
	405, 529, 406, 407, 0, 0, 0, 0, 0, 0,
	408, 0, 410, 411, 412, 409, 413, 414, 415, 416,
	0, 417, 418, 997, 419, 420, 421, 422, 530, 1034,
	0, 424, 428, 429, 430, 431, 432, 433, 434, 0,
	436, 437, 435, 438, 439, 440, 941, 441, 425, 426,
	442, 443, 998, 444, 445, 531, 0, 446, 0, 447,
	448, 449, 450, 427, 451, 456, 532, 452, 453, 454,
	455, 978, 0, 458, 459, 0, 457, 0, 460, 461,
	462, 463, 464, 299, 465, 0, 466, 534, 535, 536,
	537, 0, 473, 0, 467, 468, 979, 469, 980, 0,
	470, 471, 472, 0, 474, 475, 0, 0, 476, 477,
	478, 480, 481, 479, 482, 942, 483, 0, 0, 484,
	485, 486, 540, 541, 542, 0, 488, 487, 543, 0,
	1022, 0, 1040, 489, 490, 544, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	1030, 0, 1028, 944, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 943, 0,
	253, 499, 500, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 509, 510,
	312, 313, 0, 314, 981, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 516, 517, 0, 518,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 1026, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 231, 994, 371, 0, 948, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 1032, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 530, 1034, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 978, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 979, 469, 980, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 0, 1040, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 1030, 944, 1028,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	495, 496, 0, 497, 247, 498, 0, 248, 249, 250,
	251, 252, 0, 943, 0, 253, 499, 500, 501, 0,
	254, 255, 950, 0, 931, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 983, 272, 273,
	934, 932, 933, 940, 936, 935, 939, 274, 275, 276,
	277, 0, 278, 503, 504, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 285, 0, 0, 286, 287, 288,
	0, 289, 290, 0, 291, 292, 0, 293, 294, 505,
	295, 296, 298, 300, 297, 301, 302, 303, 304, 974,
	975, 0, 229, 0, 0, 0, 0, 0, 305, 306,
	307, 508, 0, 0, 0, 308, 0, 309, 0, 0,
	984, 310, 311, 509, 510, 312, 313, 0, 314, 981,
	0, 512, 315, 0, 316, 317, 318, 319, 320, 945,
	946, 949, 373, 986, 321, 322, 0, 323, 324, 325,
	326, 0, 0, 0, 230, 327, 328, 330, 0, 985,
	329, 516, 517, 0, 518, 0, 331, 987, 947, 988,
	332, 333, 334, 989, 335, 0, 0, 0, 336, 337,
	338, 339, 340, 1026, 342, 341, 0, 343, 982, 990,
	344, 345, 991, 0, 346, 347, 348, 938, 937, 349,
	350, 351, 352, 0, 353, 354, 356, 358, 355, 357,
	362, 359, 360, 361, 364, 0, 363, 992, 365, 366,
	369, 370, 368, 993, 367, 0, 231, 994, 371, 0,
	948, 372, 522, 374, 375, 0, 0, 376, 0, 0,
	1032, 378, 379, 380, 0, 0, 381, 382, 523, 995,
	383, 996, 976, 384, 385, 377, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 394, 525, 526, 977, 395,
	528, 396, 397, 0, 398, 0, 399, 400, 401, 402,
	403, 404, 405, 529, 406, 407, 0, 0, 0, 0,
	0, 0, 408, 0, 410, 411, 412, 409, 413, 414,
	415, 416, 0, 417, 418, 997, 419, 420, 421, 422,
	530, 1034, 0, 424, 428, 429, 430, 431, 432, 433,
	434, 0, 436, 437, 435, 438, 439, 440, 941, 441,
	425, 426, 442, 443, 998, 444, 445, 531, 0, 446,
	0, 447, 448, 449, 450, 427, 451, 456, 532, 452,
	453, 454, 455, 978, 0, 458, 459, 0, 457, 0,
	460, 461, 462, 463, 464, 299, 465, 0, 466, 534,
	535, 536, 537, 0, 473, 0, 467, 468, 979, 469,
	980, 0, 470, 471, 472, 0, 474, 475, 0, 0,
	476, 477, 478, 480, 481, 479, 482, 942, 483, 0,
	0, 484, 485, 486, 540, 541, 542, 0, 488, 487,
	543, 0, 1040, 0, 0, 489, 490, 544, 491, 492,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 1030, 944, 1028, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 943, 0,
	253, 499, 500, 501, 0, 254, 255, 950, 0, 931,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 934, 932, 933, 940, 936,
	935, 939, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 974, 975, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 509, 510,
	312, 313, 0, 314, 981, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 945, 946, 949, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 985, 329, 516, 517, 0, 518,
	0, 331, 987, 947, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 982, 990, 344, 345, 991, 0, 346,
	347, 348, 938, 937, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 231, 994, 371, 0, 948, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 976, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 977, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 530, 1034, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 941, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 978, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 979, 469, 980, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 942, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 0, 866, 0, 1221,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 1559,
	494, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 495, 496, 0, 497, 247, 498, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 499, 500,
	501, 0, 254, 255, 502, 0, 1190, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 983,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 503, 504, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 285, 0, 0, 286,
	287, 288, 0, 289, 290, 0, 291, 292, 0, 293,
	294, 505, 295, 296, 298, 300, 297, 301, 302, 303,
	304, 506, 507, 0, 229, 0, 0, 0, 0, 0,
	305, 306, 307, 508, 0, 0, 0, 308, 0, 309,
	0, 0, 984, 310, 311, 509, 510, 312, 313, 0,
	314, 511, 0, 512, 315, 0, 316, 317, 318, 319,
	320, 513, 514, 515, 373, 986, 321, 322, 0, 323,
	324, 325, 326, 0, 0, 0, 0, 327, 328, 330,
	0, 985, 329, 516, 517, 0, 518, 0, 331, 987,
	519, 988, 332, 333, 334, 989, 335, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 342, 341, 0, 343,
	520, 990, 344, 345, 991, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 352, 0, 353, 354, 356, 358,
	355, 357, 362, 359, 360, 361, 364, 0, 363, 992,
	365, 366, 369, 370, 368, 993, 367, 0, 0, 994,
	371, 0, 521, 372, 522, 374, 375, 0, 0, 376,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	523, 995, 383, 996, 524, 384, 385, 377, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 394, 525, 526,
	527, 395, 528, 396, 397, 0, 398, 0, 399, 400,
	401, 402, 403, 404, 405, 529, 406, 407, 0, 0,
	0, 0, 0, 0, 408, 0, 410, 411, 412, 409,
	413, 414, 415, 416, 0, 417, 418, 997, 419, 420,
	421, 422, 530, 423, 0, 424, 428, 429, 430, 431,
	432, 433, 434, 192, 436, 437, 435, 438, 439, 440,
	0, 441, 425, 426, 442, 443, 998, 444, 445, 531,
	0, 446, 0, 447, 448, 449, 450, 427, 451, 456,
	532, 452, 453, 454, 455, 533, 0, 458, 459, 0,
	457, 194, 460, 461, 462, 463, 464, 299, 465, 0,
	466, 534, 535, 536, 537, 0, 473, 0, 467, 468,
	538, 469, 539, 0, 470, 471, 472, 0, 474, 475,
	0, 0, 476, 477, 478, 480, 481, 479, 482, 0,
	483, 0, 0, 484, 485, 486, 1356, 541, 542, 0,
	488, 487, 543, 0, 0, 0, 186, 489, 490, 544,
	491, 492, 493, 0, 187, 0, 0, 0, 1353, 0,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 1190, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 985, 329, 516, 517, 0, 518, 0, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 990, 344, 345, 991, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 0,
	994, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 192, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 194, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 1356, 541, 542,
	0, 488, 487, 543, 0, 0, 0, 186, 489, 490,
	544, 491, 492, 493, 0, 187, 0, 0, 0, 0,
	0, 1221, 1220, 0, 0, 0, 0, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 495, 496, 0, 497, 247, 498,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	499, 500, 501, 0, 254, 255, 502, 0, 1190, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 983, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 503, 504, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 285, 0,
	0, 286, 287, 288, 0, 289, 290, 0, 291, 292,
	0, 293, 294, 505, 295, 296, 298, 300, 297, 301,
	302, 303, 304, 506, 507, 0, 229, 0, 0, 0,
	0, 0, 305, 306, 307, 508, 0, 0, 0, 308,
	0, 309, 0, 0, 984, 310, 311, 509, 510, 312,
	313, 0, 314, 511, 0, 512, 315, 0, 316, 317,
	318, 319, 320, 513, 514, 515, 373, 986, 321, 322,
	0, 323, 324, 325, 326, 0, 0, 0, 0, 327,
	328, 330, 0, 985, 329, 516, 517, 0, 518, 0,
	331, 987, 519, 988, 332, 333, 334, 989, 335, 0,
	0, 0, 336, 337, 338, 339, 340, 0, 342, 341,
	0, 343, 520, 990, 344, 345, 991, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 352, 0, 353, 354,
	356, 358, 355, 357, 362, 359, 360, 361, 364, 0,
	363, 992, 365, 366, 369, 370, 368, 993, 367, 0,
	0, 994, 371, 0, 521, 372, 522, 374, 375, 0,
	0, 376, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 523, 995, 383, 996, 524, 384, 385, 377,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 394,
	525, 526, 527, 395, 528, 396, 397, 0, 398, 0,
	399, 400, 401, 402, 403, 404, 405, 529, 406, 407,
	0, 0, 0, 0, 0, 0, 408, 0, 410, 411,
	412, 409, 413, 414, 415, 416, 0, 417, 418, 997,
	419, 420, 421, 422, 530, 423, 0, 424, 428, 429,
	430, 431, 432, 433, 434, 0, 436, 437, 435, 438,
	439, 440, 0, 441, 425, 426, 442, 443, 998, 444,
	445, 531, 0, 446, 0, 447, 448, 449, 450, 427,
	451, 456, 532, 452, 453, 454, 455, 533, 0, 458,
	459, 0, 457, 0, 460, 461, 462, 463, 464, 299,
	465, 0, 466, 534, 535, 536, 537, 0, 473, 0,
	467, 468, 538, 469, 539, 0, 470, 471, 472, 0,
	474, 475, 0, 0, 476, 477, 478, 480, 481, 479,
	482, 0, 483, 0, 0, 484, 485, 486, 540, 541,
	542, 0, 488, 487, 543, 0, 0, 0, 0, 489,
	490, 544, 491, 492, 493, 1221, 1220, 0, 0, 0,
	0, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 2964, 238,
	239, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 495, 496,
	0, 497, 247, 498, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 499, 500, 501, 0, 254, 255,
	502, 0, 1190, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 983, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 503, 504, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 285, 0, 0, 286, 287, 288, 0, 289,
	290, 0, 291, 292, 0, 293, 294, 505, 295, 296,
	298, 300, 297, 301, 302, 303, 304, 506, 507, 0,
	229, 0, 0, 0, 0, 0, 305, 306, 307, 508,
	0, 0, 0, 308, 0, 309, 0, 0, 984, 310,
	311, 509, 510, 312, 313, 0, 314, 511, 0, 512,
	315, 0, 316, 317, 318, 319, 320, 513, 514, 515,
	373, 986, 321, 322, 0, 323, 324, 325, 326, 0,
	0, 0, 0, 327, 328, 330, 0, 985, 329, 516,
	517, 0, 518, 0, 331, 987, 519, 988, 332, 333,
	334, 989, 335, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 342, 341, 0, 343, 520, 990, 344, 345,
	991, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	352, 0, 353, 354, 356, 358, 355, 357, 362, 359,
	360, 361, 364, 0, 363, 992, 365, 366, 369, 370,
	368, 993, 367, 0, 0, 994, 371, 0, 521, 372,
	522, 374, 375, 0, 0, 376, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 523, 995, 383, 996,
	524, 384, 385, 377, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 394, 525, 526, 527, 395, 528, 396,
	397, 0, 398, 0, 399, 400, 401, 402, 403, 404,
	405, 529, 406, 407, 0, 0, 0, 0, 0, 0,
	408, 0, 410, 411, 412, 409, 413, 414, 415, 416,
	0, 417, 418, 997, 419, 420, 421, 422, 530, 423,
	0, 424, 428, 429, 430, 431, 432, 433, 434, 0,
	436, 437, 435, 438, 439, 440, 0, 441, 425, 426,
	442, 443, 998, 444, 445, 531, 0, 446, 0, 447,
	448, 449, 450, 427, 451, 456, 532, 452, 453, 454,
	455, 533, 0, 458, 459, 0, 457, 0, 460, 461,
	462, 463, 464, 299, 465, 0, 466, 534, 535, 536,
	537, 0, 473, 0, 467, 468, 538, 469, 539, 0,
	470, 471, 472, 0, 474, 475, 0, 0, 476, 477,
	478, 480, 481, 479, 482, 0, 483, 0, 0, 484,
	485, 486, 540, 541, 542, 0, 488, 487, 543, 0,
	0, 0, 0, 489, 490, 544, 491, 492, 493, 1221,
	1220, 0, 0, 0, 0, 1218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 1371, 238, 239, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 495, 496, 0, 497, 247, 498, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 499, 500,
	501, 0, 254, 255, 502, 0, 1190, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 983,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 503, 504, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 285, 0, 0, 286,
	287, 288, 0, 289, 290, 0, 291, 292, 0, 293,
	294, 505, 295, 296, 298, 300, 297, 301, 302, 303,
	304, 506, 507, 0, 229, 0, 0, 0, 0, 0,
	305, 306, 307, 508, 0, 0, 0, 308, 0, 309,
	0, 0, 984, 310, 311, 509, 510, 312, 313, 0,
	314, 511, 0, 512, 315, 0, 316, 317, 318, 319,
	320, 513, 514, 515, 373, 986, 321, 322, 0, 323,
	324, 325, 326, 0, 0, 0, 0, 327, 328, 330,
	0, 985, 329, 516, 517, 0, 518, 0, 331, 987,
	519, 988, 332, 333, 334, 989, 335, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 342, 341, 0, 343,
	520, 990, 344, 345, 991, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 352, 0, 353, 354, 356, 358,
	355, 357, 362, 359, 360, 361, 364, 0, 363, 992,
	365, 366, 369, 370, 368, 993, 367, 0, 0, 994,
	371, 0, 521, 372, 522, 374, 375, 0, 0, 376,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	523, 995, 383, 996, 524, 384, 385, 377, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 394, 525, 526,
	527, 395, 528, 396, 397, 0, 398, 0, 399, 400,
	401, 402, 403, 404, 405, 529, 406, 407, 0, 0,
	0, 0, 0, 0, 408, 0, 410, 411, 412, 409,
	413, 414, 415, 416, 0, 417, 418, 997, 419, 420,
	421, 422, 530, 423, 0, 424, 428, 429, 430, 431,
	432, 433, 434, 0, 436, 437, 435, 438, 439, 440,
	0, 441, 425, 426, 442, 443, 998, 444, 445, 531,
	0, 446, 0, 447, 448, 449, 450, 427, 451, 456,
	532, 452, 453, 454, 455, 533, 0, 458, 459, 0,
	457, 0, 460, 461, 462, 463, 464, 299, 465, 0,
	466, 534, 535, 536, 537, 0, 473, 0, 467, 468,
	538, 469, 539, 0, 470, 471, 472, 0, 474, 475,
	0, 0, 476, 477, 478, 480, 481, 479, 482, 0,
	483, 0, 0, 484, 485, 486, 540, 541, 542, 0,
	488, 487, 543, 1040, 0, 0, 0, 489, 490, 544,
	491, 492, 493, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 944, 0, 1362, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 495, 496, 0, 497,
	247, 498, 0, 248, 249, 250, 251, 252, 0, 943,
	0, 253, 499, 500, 501, 0, 254, 255, 950, 0,
	931, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 983, 272, 273, 934, 932, 933, 940,
	936, 935, 939, 274, 275, 276, 277, 0, 278, 503,
	504, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	285, 0, 0, 286, 287, 288, 0, 289, 290, 0,
	291, 292, 0, 293, 294, 505, 295, 296, 298, 300,
	297, 301, 302, 303, 304, 974, 975, 0, 229, 0,
	0, 0, 0, 0, 305, 306, 307, 508, 0, 0,
	0, 308, 0, 309, 0, 0, 984, 310, 311, 509,
	510, 312, 313, 0, 314, 981, 0, 512, 315, 0,
	316, 317, 318, 319, 320, 945, 946, 949, 373, 986,
	321, 322, 0, 323, 324, 325, 326, 0, 0, 0,
	230, 327, 328, 330, 0, 985, 329, 516, 517, 0,
	518, 0, 331, 987, 947, 988, 332, 333, 334, 989,
	335, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	342, 341, 0, 343, 982, 990, 344, 345, 991, 0,
	346, 347, 348, 938, 937, 349, 350, 351, 352, 0,
	353, 354, 356, 358, 355, 357, 362, 359, 360, 361,
	364, 0, 363, 992, 365, 366, 369, 370, 368, 993,
	367, 0, 231, 994, 371, 0, 948, 372, 522, 374,
	375, 0, 0, 376, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 523, 995, 383, 996, 976, 384,
	385, 377, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 394, 525, 526, 977, 395, 528, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 403, 404, 405, 529,
	406, 407, 0, 0, 0, 0, 0, 0, 408, 0,
	410, 411, 412, 409, 413, 414, 415, 416, 0, 417,
	418, 997, 419, 420, 421, 422, 530, 423, 0, 424,
	428, 429, 430, 431, 432, 433, 434, 0, 436, 437,
	435, 438, 439, 440, 941, 441, 425, 426, 442, 443,
	998, 444, 445, 531, 0, 446, 0, 447, 448, 449,
	450, 427, 451, 456, 532, 452, 453, 454, 455, 978,
	0, 458, 459, 0, 457, 0, 460, 461, 462, 463,
	464, 299, 465, 0, 466, 534, 535, 536, 537, 0,
	473, 0, 467, 468, 979, 469, 980, 0, 470, 471,
	472, 0, 474, 475, 0, 0, 476, 477, 478, 480,
	481, 479, 482, 942, 483, 0, 0, 484, 485, 486,
	540, 541, 542, 0, 488, 487, 543, 866, 0, 226,
	0, 489, 490, 544, 491, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 495, 496, 0, 497, 247, 498, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 499, 500,
	501, 0, 254, 255, 502, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 503, 504, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 285, 0, 0, 286,
	287, 288, 0, 289, 290, 0, 291, 292, 0, 293,
	294, 505, 295, 296, 298, 300, 297, 301, 302, 303,
	304, 506, 507, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 508, 0, 0, 0, 308, 0, 309,
	0, 0, 0, 310, 311, 509, 510, 312, 313, 0,
	314, 511, 0, 512, 315, 0, 316, 317, 318, 319,
	320, 513, 514, 515, 373, 0, 321, 322, 0, 323,
	324, 325, 326, 0, 0, 0, 0, 327, 328, 330,
	0, 0, 329, 516, 517, 0, 518, 0, 331, 0,
	519, 0, 332, 333, 334, 0, 335, 0, 0, 0,
	336, 337, 338, 339, 340, 0, 342, 341, 0, 343,
	520, 0, 344, 345, 0, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 352, 0, 353, 354, 356, 358,
	355, 357, 362, 359, 360, 361, 364, 0, 363, 0,
	365, 366, 369, 370, 368, 0, 367, 0, 0, 0,
	371, 0, 521, 372, 522, 374, 375, 0, 0, 376,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	523, 0, 383, 0, 524, 384, 385, 377, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 394, 525, 526,
	527, 395, 528, 396, 397, 0, 398, 0, 399, 400,
	401, 402, 403, 404, 405, 529, 406, 407, 0, 0,
	0, 0, 0, 0, 408, 0, 410, 411, 412, 409,
	413, 414, 415, 416, 0, 417, 418, 0, 419, 420,
	421, 422, 530, 423, 0, 424, 428, 429, 430, 431,
	432, 433, 434, 192, 436, 437, 435, 438, 439, 440,
	0, 441, 425, 426, 442, 443, 0, 444, 445, 531,
	0, 446, 0, 447, 448, 449, 450, 427, 451, 456,
	532, 452, 453, 454, 455, 533, 0, 458, 459, 0,
	457, 194, 460, 461, 462, 463, 464, 299, 465, 0,
	466, 534, 535, 536, 537, 0, 473, 0, 467, 468,
	538, 469, 539, 0, 470, 471, 472, 0, 474, 475,
	0, 0, 476, 477, 478, 480, 481, 479, 482, 0,
	483, 0, 0, 484, 485, 486, 1356, 541, 542, 0,
	488, 487, 543, 226, 0, 0, 186, 489, 490, 544,
	491, 492, 493, 0, 187, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 494, 0, 161, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 495, 496, 0, 497,
	247, 498, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 499, 500, 501, 0, 254, 255, 502, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 503,
	504, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	285, 0, 0, 286, 287, 288, 0, 289, 290, 0,
	291, 292, 0, 293, 294, 505, 295, 296, 298, 300,
	297, 301, 302, 303, 304, 506, 507, 0, 229, 0,
	0, 0, 0, 0, 305, 306, 307, 508, 0, 0,
	0, 308, 0, 309, 0, 0, 0, 310, 311, 509,
	510, 312, 313, 0, 314, 511, 0, 512, 315, 0,
	316, 317, 318, 319, 320, 513, 514, 515, 373, 0,
	321, 322, 0, 323, 324, 325, 326, 0, 0, 0,
	230, 327, 328, 330, 0, 0, 329, 516, 517, 0,
	518, 0, 331, 0, 519, 0, 332, 333, 334, 0,
	335, 0, 0, 0, 336, 337, 338, 339, 340, 0,
	342, 341, 0, 343, 520, 0, 344, 345, 0, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 352, 0,
	353, 354, 356, 358, 355, 357, 362, 359, 360, 361,
	364, 0, 363, 0, 365, 366, 369, 370, 368, 0,
	367, 0, 231, 0, 371, 0, 521, 372, 522, 374,
	375, 0, 0, 376, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 523, 0, 383, 0, 524, 384,
	385, 377, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 394, 525, 526, 527, 395, 528, 396, 397, 0,
	398, 0, 399, 400, 401, 402, 403, 404, 405, 529,
	406, 407, 0, 0, 0, 0, 0, 0, 408, 0,
	410, 411, 412, 409, 413, 414, 415, 416, 0, 417,
	418, 0, 419, 420, 421, 422, 530, 423, 0, 424,
	428, 429, 430, 431, 432, 433, 434, 0, 436, 437,
	435, 438, 439, 440, 0, 441, 425, 426, 442, 443,
	0, 444, 445, 531, 0, 446, 0, 447, 448, 449,
	450, 427, 451, 456, 532, 452, 453, 454, 455, 533,
	0, 458, 459, 0, 457, 0, 460, 461, 462, 463,
	464, 299, 465, 0, 466, 534, 535, 536, 537, 0,
	473, 0, 467, 468, 538, 469, 539, 0, 470, 471,
	472, 0, 474, 475, 0, 0, 476, 477, 478, 480,
	481, 479, 482, 0, 483, 0, 0, 484, 485, 486,
	540, 541, 542, 0, 488, 487, 543, 0, 1304, 0,
	226, 489, 490, 544, 491, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	1675, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 231,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 1308, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 231,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 2912, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 231,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 1308, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 226, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 2483, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 226, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 3052, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 0, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 0, 732, 0, 626, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 1928, 494, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 495, 496,
	0, 497, 247, 498, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 499, 500, 501, 0, 254, 255,
	502, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 632, 277, 0,
	278, 503, 504, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 285, 0, 0, 286, 287, 288, 0, 289,
	290, 0, 291, 292, 0, 293, 294, 505, 295, 296,
	298, 300, 297, 301, 302, 303, 304, 506, 507, 0,
	229, 0, 0, 0, 0, 0, 305, 306, 307, 508,
	0, 0, 0, 308, 0, 309, 0, 730, 0, 310,
	311, 509, 510, 312, 313, 0, 314, 511, 0, 512,
	315, 0, 316, 317, 318, 319, 320, 513, 514, 515,
	373, 0, 321, 322, 0, 323, 324, 325, 326, 0,
	0, 0, 230, 327, 328, 330, 0, 0, 329, 516,
	517, 0, 518, 0, 331, 0, 519, 0, 332, 333,
	334, 0, 335, 0, 0, 0, 336, 337, 338, 339,
	340, 0, 342, 341, 0, 343, 520, 0, 344, 345,
	0, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	352, 0, 353, 354, 356, 358, 355, 357, 362, 359,
	360, 361, 364, 0, 363, 0, 365, 366, 369, 370,
	368, 0, 367, 0, 231, 0, 371, 0, 521, 372,
	522, 374, 375, 0, 0, 376, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 523, 0, 383, 0,
	524, 384, 385, 377, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 394, 525, 526, 527, 395, 528, 396,
	397, 0, 398, 0, 399, 400, 401, 402, 403, 404,
	405, 529, 406, 407, 0, 0, 0, 0, 0, 0,
	408, 0, 410, 411, 412, 409, 413, 414, 415, 416,
	0, 417, 418, 0, 419, 420, 421, 422, 530, 423,
	0, 424, 428, 429, 430, 431, 432, 433, 434, 0,
	436, 437, 435, 438, 439, 440, 0, 441, 425, 426,
	442, 443, 0, 444, 445, 531, 0, 446, 0, 447,
	448, 449, 450, 427, 451, 456, 532, 452, 453, 454,
	455, 533, 0, 458, 459, 0, 457, 631, 460, 461,
	462, 463, 464, 299, 465, 0, 466, 534, 535, 536,
	537, 0, 473, 0, 467, 468, 538, 469, 539, 0,
	470, 471, 472, 0, 474, 475, 0, 0, 476, 477,
	478, 480, 481, 479, 482, 0, 483, 0, 0, 484,
	485, 486, 540, 541, 542, 0, 488, 487, 543, 0,
	624, 0, 626, 489, 490, 544, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 635, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 632, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 631, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 626, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 635, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 632, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 1964, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 631, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 626, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 635, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 632, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 631, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 1710, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 0, 1716, 0, 1706, 247,
	1722, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 1731, 1732, 0, 0, 254, 255, 0, 0, 1190,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 967, 278, 1720, 1719,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 952, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 0, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 1718, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 1727, 1728,
	312, 313, 0, 314, 0, 0, 0, 315, 0, 316,
	317, 318, 319, 320, 0, 0, 0, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 985, 329, 1713, 1714, 0, 1709,
	0, 331, 987, 0, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 0, 990, 344, 345, 991, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 0, 994, 371, 0, 0, 372, 1721, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 0, 995, 383, 996, 0, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 1703, 1704, 0, 395, 0, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 1717, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 0, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 998,
	444, 445, 1715, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 1730, 452, 453, 454, 455, 0, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 1723, 1724, 1725, 1726, 0, 473,
	0, 467, 468, 0, 469, 0, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 0,
	1707, 1729, 0, 488, 487, 0, 0, 0, 0, 0,
	489, 490, 0, 491, 492, 493, 1221, 1220, 0, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 1697, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 1190, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 985, 329,
	516, 517, 0, 518, 0, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 990, 344,
	345, 991, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 0, 0, 994, 371, 3208, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	1221, 1220, 0, 0, 0, 0, 1218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 1190, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 985, 329, 516, 517, 0, 518, 0, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 990, 344, 345, 991, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 0,
	994, 371, 2893, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 1221, 1220, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 1190, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 983, 272, 273, 0, 0, 0,
	0, 0, 0, 2884, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 984, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	986, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 985, 329, 516, 517,
	0, 518, 0, 331, 987, 519, 988, 332, 333, 334,
	989, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 990, 344, 345, 991,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 992, 365, 366, 369, 370, 368,
	993, 367, 0, 0, 994, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 995, 383, 996, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 997, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 2885, 441, 425, 426, 442,
	443, 998, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 1391, 0,
	1221, 1220, 0, 0, 0, 0, 1218, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 1190, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 1390, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 985, 329, 516, 517, 0, 518, 0, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 990, 344, 345, 991, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 0,
	994, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 1389, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	1388, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 1350, 0, 1221, 1220, 0, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 1190, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 1349, 514,
	515, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 985, 329,
	516, 517, 0, 518, 0, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 990, 344,
	345, 991, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 0, 0, 994, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	1284, 0, 1221, 1220, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 1190,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1283, 514, 515, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 985, 329, 516, 517, 0, 518,
	0, 331, 987, 519, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 990, 344, 345, 991, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 0, 994, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 1216, 0, 1221, 1220,
	0, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 1190, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 983, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 984, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	1215, 514, 515, 373, 986, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	985, 329, 516, 517, 0, 518, 0, 331, 987, 519,
	988, 332, 333, 334, 989, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	990, 344, 345, 991, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 992, 365,
	366, 369, 370, 368, 993, 367, 0, 0, 994, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	995, 383, 996, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 997, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 998, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 1221, 1220, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 1190,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 983, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 984, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 986, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 985, 329, 516, 517, 0, 518,
	0, 331, 987, 519, 988, 332, 333, 334, 989, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 990, 344, 345, 991, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 992, 365, 366, 369, 370, 368, 993, 367,
	0, 0, 994, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 995, 383, 996, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	997, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 998,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 1221, 1220, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 1190, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 983, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 1741, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 984,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 986, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 985, 329,
	516, 517, 0, 518, 0, 331, 987, 519, 988, 332,
	333, 334, 989, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 990, 344,
	345, 991, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 992, 365, 366, 369,
	370, 368, 993, 367, 0, 0, 994, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 995, 383,
	996, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 997, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 998, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	1221, 1220, 0, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 1190, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 985, 329, 516, 517, 0, 518, 0, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 990, 344, 345, 991, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 0,
	994, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	1221, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 1190, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	983, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 984, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 986, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 985, 329, 516, 517, 0, 518, 0, 331,
	987, 519, 988, 332, 333, 334, 989, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 990, 344, 345, 991, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	992, 365, 366, 369, 370, 368, 993, 367, 0, 0,
	994, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 995, 383, 996, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 997, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 998, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 2351, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 2348, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	2355, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 2521, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 2354, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 2518, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 2520,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 2517, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 2353, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 2519, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 2351, 254, 255, 502, 0, 0, 2345, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 2348, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	2355, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 2354, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 2344, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 2353, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 2352, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 1448, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 231, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 1451, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 1449, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 1450, 487, 543,
	1194, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1196, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 1032, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 1191, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	1193, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 231, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 1032, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 1097, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 1099, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 1032, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 576, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	575, 236, 237, 565, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 568, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	569, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 570, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 564, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 565,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 568, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 569, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 0, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	570, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 226, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 2859, 367, 0, 231, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 226, 488, 487, 543,
	0, 0, 0, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 231, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 1032,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	2455, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2454, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 1940, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 231, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 226, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 231, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	1866, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 1871, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 1870, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 1859, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 1861, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 231,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 1346, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 1345, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 231, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	1337, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1336, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 1334, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	1333, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 231, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 1330, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 1329, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 1286, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 229, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 230, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 231,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 1212, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 229, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 230, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 231, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	1205, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 229, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1207, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 230,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 231, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 546, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 229, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 230, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 231, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 217, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 568, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 569, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 570, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 1971, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 1969, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 1967, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 229,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 1909, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 230, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 231, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 723, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 722, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 721, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	226, 488, 487, 543, 0, 0, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 2521, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 3434, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 555, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 554,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 0, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	553, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	226, 3443, 0, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 226, 2508, 0, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 3185, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 226, 488, 487, 543, 0, 0,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 2272, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 226, 2508,
	0, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 0, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 2505, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 226, 488,
	487, 543, 0, 0, 0, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 1948, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 0, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 1938, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 596, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 1071, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 1069, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 597,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 593,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 1072,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 592, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 596, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	586, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 597, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 0, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 593, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 1361, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 592, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	1343, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1342, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 1292, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 255, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	1291, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 363, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 0, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 530, 423, 0, 424, 428, 429, 430, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 439, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	534, 535, 536, 537, 0, 473, 0, 467, 468, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 1277, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 1276, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 428, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 1272, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 1199, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 0, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	596, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	1071, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 1069, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 597, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 593, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 1072, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 592, 535, 536, 537, 0, 473,
	0, 467, 1070, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 1053, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 602, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 596, 0, 226, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 495, 496, 0, 497, 247, 498, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 499, 500, 501,
	0, 254, 586, 502, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 584, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 503, 504, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 285, 0, 0, 286, 287,
	288, 0, 289, 290, 0, 291, 292, 0, 293, 294,
	505, 295, 296, 298, 300, 297, 301, 302, 303, 304,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 305,
	306, 307, 508, 0, 0, 0, 308, 0, 309, 0,
	0, 0, 310, 311, 509, 510, 312, 313, 0, 314,
	511, 0, 512, 315, 0, 316, 317, 318, 319, 320,
	513, 514, 515, 373, 0, 321, 322, 0, 323, 324,
	325, 326, 0, 0, 0, 0, 327, 328, 330, 0,
	0, 329, 516, 517, 0, 518, 0, 331, 0, 519,
	0, 332, 333, 334, 0, 335, 0, 0, 0, 336,
	337, 338, 339, 340, 0, 342, 341, 0, 343, 520,
	0, 344, 345, 0, 0, 346, 347, 585, 0, 0,
	349, 350, 351, 352, 0, 353, 354, 356, 358, 355,
	357, 362, 359, 360, 361, 364, 0, 597, 0, 365,
	366, 369, 370, 368, 0, 367, 0, 0, 0, 371,
	0, 521, 372, 522, 374, 375, 0, 0, 376, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 523,
	0, 383, 0, 524, 384, 385, 377, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 394, 525, 526, 527,
	395, 528, 396, 397, 0, 398, 0, 399, 400, 401,
	402, 403, 404, 405, 529, 406, 407, 0, 0, 0,
	0, 0, 0, 408, 0, 410, 411, 412, 409, 413,
	414, 415, 416, 0, 417, 418, 0, 419, 420, 421,
	422, 587, 423, 0, 424, 428, 429, 593, 431, 432,
	433, 434, 0, 436, 437, 435, 438, 588, 440, 0,
	441, 425, 426, 442, 443, 0, 444, 445, 531, 0,
	446, 0, 447, 448, 449, 450, 427, 451, 456, 532,
	452, 453, 454, 455, 533, 0, 458, 459, 0, 457,
	0, 460, 461, 462, 463, 464, 299, 465, 0, 466,
	592, 535, 536, 537, 0, 473, 0, 467, 590, 538,
	469, 539, 0, 470, 471, 472, 0, 474, 475, 0,
	0, 476, 477, 478, 480, 481, 479, 482, 0, 483,
	0, 0, 484, 485, 486, 540, 541, 542, 0, 488,
	487, 543, 580, 0, 226, 0, 489, 490, 544, 491,
	492, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 495, 496, 0,
	497, 247, 498, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 499, 500, 501, 0, 254, 255, 502,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	503, 504, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 285, 0, 0, 286, 287, 288, 0, 289, 290,
	0, 291, 292, 0, 293, 294, 505, 295, 296, 298,
	300, 297, 301, 302, 303, 304, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 305, 306, 307, 508, 0,
	0, 0, 308, 0, 309, 0, 0, 0, 310, 311,
	509, 510, 312, 313, 0, 314, 511, 0, 512, 315,
	0, 316, 317, 318, 319, 320, 513, 514, 515, 373,
	0, 321, 322, 0, 323, 324, 325, 326, 0, 0,
	0, 0, 327, 328, 330, 0, 0, 329, 516, 517,
	0, 518, 0, 331, 0, 519, 0, 332, 333, 334,
	0, 335, 0, 0, 0, 336, 337, 338, 339, 340,
	0, 342, 341, 0, 343, 520, 0, 344, 345, 0,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 352,
	0, 353, 354, 356, 358, 355, 357, 362, 359, 360,
	361, 364, 0, 363, 0, 365, 366, 369, 370, 368,
	0, 367, 0, 0, 0, 371, 0, 521, 372, 522,
	374, 375, 0, 0, 376, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 523, 0, 383, 0, 524,
	384, 385, 377, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 394, 525, 526, 527, 395, 528, 396, 397,
	0, 398, 0, 399, 400, 401, 402, 403, 404, 405,
	529, 406, 407, 0, 0, 0, 0, 0, 0, 408,
	0, 410, 411, 412, 409, 413, 414, 415, 416, 0,
	417, 418, 0, 419, 420, 421, 422, 530, 423, 0,
	424, 581, 429, 430, 431, 432, 433, 434, 0, 436,
	437, 435, 438, 439, 440, 0, 441, 425, 426, 442,
	443, 0, 444, 445, 531, 0, 446, 0, 447, 448,
	449, 450, 427, 451, 456, 532, 452, 453, 454, 455,
	533, 0, 458, 459, 0, 457, 0, 460, 461, 462,
	463, 464, 299, 465, 0, 466, 534, 535, 536, 537,
	0, 473, 0, 467, 468, 538, 469, 539, 0, 470,
	471, 472, 0, 474, 475, 0, 0, 476, 477, 478,
	480, 481, 479, 482, 0, 483, 0, 0, 484, 485,
	486, 540, 541, 542, 0, 488, 487, 543, 578, 0,
	226, 0, 489, 490, 544, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 495, 496, 0, 497, 247, 498, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 499,
	500, 501, 0, 254, 255, 502, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 503, 504, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 285, 0, 0,
	286, 287, 288, 0, 289, 290, 0, 291, 292, 0,
	293, 294, 505, 295, 296, 298, 300, 297, 301, 302,
	303, 304, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 508, 0, 0, 0, 308, 0,
	309, 0, 0, 0, 310, 311, 509, 510, 312, 313,
	0, 314, 511, 0, 512, 315, 0, 316, 317, 318,
	319, 320, 513, 514, 515, 373, 0, 321, 322, 0,
	323, 324, 325, 326, 0, 0, 0, 0, 327, 328,
	330, 0, 0, 329, 516, 517, 0, 518, 0, 331,
	0, 519, 0, 332, 333, 334, 0, 335, 0, 0,
	0, 336, 337, 338, 339, 340, 0, 342, 341, 0,
	343, 520, 0, 344, 345, 0, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 352, 0, 353, 354, 356,
	358, 355, 357, 362, 359, 360, 361, 364, 0, 363,
	0, 365, 366, 369, 370, 368, 0, 367, 0, 0,
	0, 371, 0, 521, 372, 522, 374, 375, 0, 0,
	376, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 523, 0, 383, 0, 524, 384, 385, 377, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 394, 525,
	526, 527, 395, 528, 396, 397, 0, 398, 0, 399,
	400, 401, 402, 403, 404, 405, 529, 406, 407, 0,
	0, 0, 0, 0, 0, 408, 0, 410, 411, 412,
	409, 413, 414, 415, 416, 0, 417, 418, 0, 419,
	420, 421, 422, 530, 423, 0, 424, 428, 429, 430,
	431, 432, 433, 434, 0, 436, 437, 435, 438, 439,
	440, 0, 441, 425, 426, 442, 443, 0, 444, 445,
	531, 0, 446, 0, 447, 448, 449, 450, 427, 451,
	456, 532, 452, 453, 454, 455, 533, 0, 458, 459,
	0, 457, 0, 460, 461, 462, 463, 464, 299, 465,
	0, 466, 534, 535, 536, 537, 0, 473, 0, 467,
	468, 538, 469, 539, 0, 470, 471, 472, 0, 474,
	475, 0, 0, 476, 477, 478, 480, 481, 479, 482,
	0, 483, 0, 0, 484, 485, 486, 540, 541, 542,
	0, 488, 487, 543, 572, 0, 226, 0, 489, 490,
	544, 491, 492, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 495,
	496, 0, 497, 247, 498, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 499, 500, 501, 0, 254,
	255, 502, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 503, 504, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 285, 0, 0, 286, 287, 288, 0,
	289, 290, 0, 291, 292, 0, 293, 294, 505, 295,
	296, 298, 300, 297, 301, 302, 303, 304, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 305, 306, 307,
	508, 0, 0, 0, 308, 0, 309, 0, 0, 0,
	310, 311, 509, 510, 312, 313, 0, 314, 511, 0,
	512, 315, 0, 316, 317, 318, 319, 320, 513, 514,
	515, 373, 0, 321, 322, 0, 323, 324, 325, 326,
	0, 0, 0, 0, 327, 328, 330, 0, 0, 329,
	516, 517, 0, 518, 0, 331, 0, 519, 0, 332,
	333, 334, 0, 335, 0, 0, 0, 336, 337, 338,
	339, 340, 0, 342, 341, 0, 343, 520, 0, 344,
	345, 0, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 352, 0, 353, 354, 356, 358, 355, 357, 362,
	359, 360, 361, 364, 0, 363, 0, 365, 366, 369,
	370, 368, 0, 367, 0, 0, 0, 371, 0, 521,
	372, 522, 374, 375, 0, 0, 376, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 523, 0, 383,
	0, 524, 384, 385, 377, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 394, 525, 526, 527, 395, 528,
	396, 397, 0, 398, 0, 399, 400, 401, 402, 403,
	404, 405, 529, 406, 407, 0, 0, 0, 0, 0,
	0, 408, 0, 410, 411, 412, 409, 413, 414, 415,
	416, 0, 417, 418, 0, 419, 420, 421, 422, 530,
	423, 0, 424, 428, 429, 430, 431, 432, 433, 434,
	0, 436, 437, 435, 438, 439, 440, 0, 441, 425,
	426, 442, 443, 0, 444, 445, 531, 0, 446, 0,
	447, 448, 449, 450, 427, 451, 456, 532, 452, 453,
	454, 455, 533, 0, 458, 459, 0, 457, 0, 460,
	461, 462, 463, 464, 299, 465, 0, 466, 534, 535,
	536, 537, 0, 473, 0, 467, 468, 538, 469, 539,
	0, 470, 471, 472, 0, 474, 475, 0, 0, 476,
	477, 478, 480, 481, 479, 482, 0, 483, 0, 0,
	484, 485, 486, 540, 541, 542, 0, 488, 487, 543,
	550, 0, 226, 0, 489, 490, 544, 491, 492, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2927, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2889, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2835, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2833, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2819, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 2463, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 581,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 1891, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 0, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1314, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 1254, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 315, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 403, 404, 405, 529, 1005,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 423, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 226, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 495, 496, 0, 497, 247,
	498, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 499, 500, 501, 0, 254, 255, 502, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 503, 504,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 285,
	0, 0, 286, 287, 288, 0, 289, 290, 0, 291,
	292, 0, 293, 294, 505, 295, 296, 298, 300, 297,
	301, 302, 303, 304, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 508, 0, 0, 0,
	308, 0, 309, 0, 0, 0, 310, 311, 509, 510,
	312, 313, 0, 314, 511, 0, 512, 0, 0, 316,
	317, 318, 319, 320, 513, 514, 515, 373, 0, 321,
	322, 0, 323, 324, 325, 326, 0, 0, 0, 0,
	327, 328, 330, 0, 0, 329, 516, 517, 0, 518,
	0, 331, 0, 519, 0, 332, 333, 334, 0, 335,
	0, 0, 0, 336, 337, 338, 339, 340, 0, 342,
	341, 0, 343, 520, 0, 344, 345, 0, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 352, 0, 353,
	354, 356, 358, 355, 357, 362, 359, 360, 361, 364,
	0, 363, 0, 365, 366, 369, 370, 368, 0, 367,
	0, 0, 0, 371, 0, 521, 372, 522, 374, 375,
	0, 0, 376, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 523, 0, 383, 0, 524, 384, 385,
	377, 386, 387, 0, 389, 390, 391, 392, 0, 393,
	394, 525, 526, 527, 395, 528, 396, 397, 0, 398,
	0, 399, 400, 401, 402, 0, 404, 405, 529, 406,
	407, 0, 0, 0, 0, 0, 0, 408, 0, 410,
	411, 412, 409, 413, 414, 415, 416, 0, 417, 418,
	0, 419, 420, 421, 422, 530, 0, 0, 424, 428,
	429, 430, 431, 432, 433, 434, 0, 436, 437, 435,
	438, 439, 440, 0, 441, 425, 426, 442, 443, 0,
	444, 445, 531, 0, 446, 0, 447, 448, 449, 450,
	427, 451, 456, 532, 452, 453, 454, 455, 533, 0,
	458, 459, 0, 457, 0, 460, 461, 462, 463, 464,
	299, 465, 0, 466, 534, 535, 536, 537, 0, 473,
	0, 467, 468, 538, 469, 539, 0, 470, 471, 472,
	0, 474, 475, 0, 0, 476, 477, 478, 480, 481,
	479, 482, 0, 483, 0, 0, 484, 485, 486, 540,
	541, 542, 0, 488, 487, 543, 0, 0, 0, 0,
	489, 490, 544, 491, 492, 493, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	1529, 1524, 0, 0, 0, 1515, 0, 0, 1496, 0,
	0, 0, 0, 1512, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 1518,
	1519, 1520, 1521, 0, 1523, 1525, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 1543, 0, 0, 1531, 0, 0, 1523, 1525, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 1493, 1494,
	0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 1522, 1529,
	1524, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 2668, 0, 0, 0, 0, 0, 0, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 1532, 0, 1501, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 2665, 0, 0, 1533, 0, 0,
	1543, 0, 0, 0, 0, 0, 1523, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 0, 0, 0, 0, 0,
	1510, 1511, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 1529, 1524, 0, 0, 1516, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 1493, 1494, 0, 1526, 1527,
	1528, 1536, 1537, 1538, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 1543, 0, 1529, 1524, 0, 0,
	1523, 1525, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 1539, 0, 1540, 0, 0,
	0, 0, 0, 0, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 1516, 1512, 0, 0, 1532, 0, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 1541, 0, 0, 0, 0,
	0, 0, 0, 2664, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 1519, 1520, 1521, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1543, 0, 0,
	1517, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	1540, 0, 1534, 0, 0, 0, 0, 1510, 1511, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	1529, 1524, 0, 0, 1516, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 1532,
	0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 2663, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 1518,
	1519, 1520, 1521, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 1543, 0, 1529, 1524, 0, 0, 1523, 1525, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 1516, 1512,
	0, 0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 1541, 0, 0, 0, 0, 0, 0, 0,
	2126, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 1543, 0, 0, 1517, 0, 0,
	1523, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 1540, 0, 1534,
	0, 0, 0, 0, 1510, 1511, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 1529, 1524, 0,
	0, 1516, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1532, 0, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	3742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	1529, 1524, 0, 0, 1523, 1525, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 1516, 1512, 0, 0, 1532,
	0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 1541,
	0, 0, 0, 3738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1519, 1520, 1521, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 1543, 0, 0, 1517, 0, 0, 1523, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 0, 1534, 0, 0, 0,
	0, 1510, 1511, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 1529, 1524, 0, 0, 1516, 0,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 3649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 1543, 0, 1529, 1524, 0,
	0, 1523, 1525, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 1539, 0, 1540, 0,
	0, 0, 0, 0, 0, 1510, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 1516, 1512, 0, 0, 1532, 0, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 1541, 0, 0, 0,
	3648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 1517, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 1534, 0, 0, 0, 0, 1510, 1511,
	1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 1529, 1524, 0, 0, 1516, 0, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 0, 0, 3504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 1543, 0, 1529, 1524, 0, 0, 1523, 1525,
	0, 0, 1496, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 1539, 0, 1540, 0, 0, 0, 0,
	0, 0, 1510, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 1516,
	1512, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 1541, 0, 0, 0, 3379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 1543, 0, 0, 1517, 0,
	0, 1523, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1539, 0, 1540, 0,
	1534, 0, 0, 0, 0, 1510, 1511, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 1529, 1524,
	0, 0, 1516, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 1532, 0, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0,
	0, 3325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 1529, 1524, 0, 0, 1523, 1525, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	1539, 0, 1540, 0, 0, 0, 0, 0, 0, 1510,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 1516, 1512, 0, 0,
	1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	1541, 0, 0, 0, 3324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 1543, 0, 0, 1517, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 1540, 0, 1534, 0, 0,
	0, 0, 1510, 1511, 1493, 1494, 0, 1526, 1527, 1528,
	1536, 1537, 1538, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 1529, 1524, 0, 0, 1516,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 0, 3323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 1518, 1519, 1520, 1521, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 1543, 0, 1529, 1524,
	0, 0, 1523, 1525, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 0, 0, 1510, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 1516, 1512, 0, 0, 1532, 0, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 1541, 0, 0,
	0, 3057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 0, 1517, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 1540, 0, 1534, 0, 0, 0, 0, 1510,
	1511, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1529, 1524, 0, 0, 1516, 0, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 0, 2661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 1518, 1519, 1520, 1521, 0, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528,
	1536, 1537, 1538, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 1543, 0, 1529, 1524, 0, 0, 1523,
	1525, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 1539, 0, 1540, 0, 0, 0,
	0, 0, 0, 1510, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	1516, 1512, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 1541, 0, 0, 0, 2660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 1519, 1520, 1521, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 1543, 0, 0, 1517,
	0, 0, 1523, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 1540,
	0, 1534, 0, 0, 0, 0, 1510, 1511, 1493, 1494,
	0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 1529,
	1524, 0, 0, 1516, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 1532, 0,
	0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506,
	1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0,
	0, 0, 2659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 1534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	1543, 0, 0, 0, 0, 0, 1523, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 0, 0, 0, 0, 0,
	1510, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 1541, 0, 0, 0, 2658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 1522, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 1534, 0,
	0, 0, 0, 1512, 0, 1493, 1494, 0, 1526, 1527,
	1528, 1536, 1537, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 1524, 0, 0,
	0, 0, 2596, 0, 1496, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 1515, 0, 1501, 3855, 0, 0,
	0, 0, 1512, 0, 0, 1532, 0, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 1533, 0, 2625, 1543, 0,
	0, 0, 0, 2597, 1523, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 1518, 1519, 1520, 1521, 0,
	0, 0, 0, 0, 1531, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1543, 0, 1541,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 1539, 0,
	1540, 0, 0, 0, 0, 0, 0, 1510, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3854, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 1524, 0, 0, 0, 0,
	0, 0, 1496, 0, 1522, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 1534, 0, 0, 0, 0,
	1512, 0, 0, 1532, 0, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 2721, 0, 0, 2720, 0,
	0, 0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 1533, 0, 0, 1543, 0, 0, 0, 0,
	0, 1523, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1539, 0, 1540, 0,
	2246, 0, 0, 0, 0, 1510, 1511, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 1529, 1524,
	0, 0, 1516, 2245, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 1529, 1524, 0, 0, 1523, 1525, 0, 0, 1496,
	0, 0, 0, 0, 0, 0, 1542, 0, 0, 0,
	1539, 0, 1540, 0, 0, 0, 0, 0, 0, 1510,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 1516, 1512, 0, 0,
	1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 1543, 0, 0, 1517, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 1540, 0, 1534, 0, 0,
	0, 0, 1510, 1511, 1493, 1494, 0, 1526, 1527, 1528,
	1536, 1537, 1538, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 1529, 1524, 0, 0, 1516,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	1530, 863, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 1518, 1519, 1520, 1521, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 1543, 0, 1529, 1524,
	0, 0, 1523, 1525, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 0, 0, 1510, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 1516, 1512, 0, 0, 1532, 0, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 2727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 0, 1517, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 1540, 0, 1534, 0, 0, 0, 0, 1510,
	1511, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 1529, 1524, 0, 1516, 3038, 2722, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 1512,
	0, 1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 1534, 1493, 1494,
	0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	1524, 1533, 0, 0, 1543, 0, 0, 1496, 0, 0,
	1523, 1525, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 1540, 0, 0,
	0, 0, 0, 0, 1510, 1511, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	1531, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 1516, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 1493, 1494, 1501, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 1524, 0,
	0, 1522, 2662, 0, 0, 1496, 0, 1533, 0, 0,
	1543, 0, 1542, 0, 0, 0, 1523, 1525, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 1495, 0, 0, 0, 0,
	1510, 1511, 1534, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 2689, 0, 1532,
	0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 0, 0, 1533, 0, 1522, 1543, 0,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 1522, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 1524, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 1534, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 1529, 1524,
	0, 0, 1515, 0, 0, 0, 1496, 0, 0, 0,
	1512, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 1532, 1512, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 1543, 0, 1518, 1519, 1520,
	1521, 1523, 1525, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 1539, 0, 1540, 0,
	0, 0, 0, 0, 0, 1510, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 1531, 0, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 1540, 0, 0, 0, 0, 0, 0, 1510,
	1511, 0, 0, 0, 0, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	1494, 1517, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 1534, 0, 0, 1522, 0, 1496, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 1517, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1524, 0, 1534, 1515, 0,
	0, 0, 1496, 0, 0, 0, 1512, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 1515, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	1512, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1519, 1520, 1521, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 1532, 0, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 0, 1533, 0,
	0, 1543, 0, 1518, 1519, 1520, 1521, 1523, 1525, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 768, 0, 804,
	0, 0, 1533, 0, 0, 1543, 0, 1531, 0, 0,
	0, 1523, 1525, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1511, 0, 787, 773,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 774, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 784, 785, 0, 0, 0, 0, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 805, 779, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 1517, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 781, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 788, 0, 0, 0, 0, 0,
	0, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 809, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 801, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 792,
	0, 0, 0, 0, 0, 793, 0, 0, 770, 0,
	807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 0, 0,
	0, 0, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 0, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 800,
}
var sqlPact = [...]int{

	8232, -1000, -1000, -1000, -1000, 198, -1000, -1000, 197, 196,
	194, 192, 189, 187, 185, 181, -1000, -1000, -1000, -1000,
	-1000, -1000, 180, -1000, -1000, 171, -1000, 169, 167, 166,
	164, -1000, 159, 158, 157, -1000, -1000, -1000, -1000, 156,
	155, 153, 65680, 65224, 66130, 1986, 79738, 69742, 1739, 58402,
	79282, 57946, 78826, 78370, 151, -1000, 77914, 147, 144, 143,
	-1000, 77458, -1000, 1729, -1000, 141, 3934, 47898, 138, 134,
	132, 2200, 131, -1000, 128, -1000, 8973, 1340, -1000, 125,
	-1000, 7208, 480, 68836, 2526, 122, 120, 47441, 2507, 2581,
	-1000, -1000, 1898, -1000, -1000, 118, 117, 116, 109, 105,
	103, 101, 98, 97, -1000, 96, 95, 94, 93, 92,
	90, 86, -1000, 85, 83, 77, 75, 73, 72, 71,
	68, 67, 65, 64, 63, -1000, 92485, 1728, 1457, 1453,
	1450, 1447, 1445, 906, 62, 61, 60, 59, 58, 56,
	55, 54, -1000, 52, 51, 50, 48, 47, 46, 45,
	44, 145, 33, 32, 29, 27, 26, 24, 2264, -1000,
	1554, 1252, 23332, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 85138, 80188, 15, -85,
	13, -1000, 2910, 916, 39668, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 282, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 460, 1882, 713,
	-1000, -1000, -1000, 77008, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1985, -137, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 711, -1000, 1983, 172, 1921, -1000, -1000, -1000, -1000,
	-1000, 80188, -1000, -1000, 3267, 3265, 1814, 710, 76558, -1000,
	1413, -1000, 862, 26224, -1000, 1135, -1000, 26224, 279, -1000,
	-1000, -1000, -1000, -1000, -1000, 3264, 3263, 3262, 3261, -1000,
	-1000, 57490, 17518, 57034, 56578, 76102, 17052, 64768, 64312, 52944,
	-1000, -1000, -1000, 1239, -1000, -1000, -1000, -1000, -1000, -1000,
	-5, 51080, 80188, -1000, 278, -1000, -1000, -1000, -1000, -1000,
	-1000, 33076, 629, 32584, 625, 32092, 476, -1000, -1000, -1000,
	3259, 3258, 996, 3257, 2843, 84688, 1651, 3256, 1654, 1126,
	924, 3254, 3253, 3250, 3249, 3248, 3247, 1323, 75646, 2638,
	75190, 1627, 52478, 63856, 66130, 2347, 74734, 1294, 1280, -1000,
	-1000, -1000, -1000, 2725, 2545, 2543, 44726, -1000, 3246, 3245,
	3234, 3233, 3231, 84238, 1633, 3227, 2192, 3219, 3216, 3215,
	3212, 3211, 3206, 3204, 3202, -1000, 63400, 62944, 62488, 2957,
	74278, 62032, 52012, -1000, -1000, -1000, 41506, 5284, 4180, 73822,
	42905, 66130, 66130, -1000, -1000, 33556, 113, -1000, -1000, -1000,
	42441, 2567, -1000, 33556, 113, -1000, 80188, -1000, 2635, 1738,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2176, 1418, 3109, 51546, 1847, 1245, 2900, 2676, 2674, 1333,
	2216, 2665, 2656, 2653, 2649, 2647, 1624, 2266, 455, 22840,
	1501, 1380, 2639, 2629, 3119, 1771, 1768, 56122, 3199, 3196,
	2869, 2626, 2612, 2565, -1000, -1000, -1000, -1000, 1308, -1000,
	-1000, 59302, -1000, -1000, 1090, -1000, -1000, 1090, -1000, -1000,
	-1000, -1000, -1000, 1236, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1554, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1964, -1000, 1775, -1000, -1000, 2153,
	2881, 2881, 2881, 2923, 430, 425, -1000, 145, -1000, -1000,
	91912, -1000, -1000, 33556, 33556, 33556, 33556, 33556, 33556, 33556,
	1881, -1000, 709, -1000, -1000, 749, -1000, 708, 562, -1000,
	-1000, -1000, -1000, -1000, -1000, 707, -1000, -1000, -1000, -1000,
	-1000, -1000, 3104, -1000, 19900, -1000, -1000, -1000, 413, 704,
	33556, -1000, -1000, 3137, 3135, 896, -1000, 272, 869, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2634, 702, 701, -1000, 700, 699, 695, 686, 683,
	-1000, -1000, -1000, 682, 681, 671, 670, 664, 663, 662,
	660, -1000, 1801, -1000, -1000, -1000, -1000, -1000, -1000, 615,
	614, 614, 614, -1000, 915, -1000, -1000, -1000, 304, 611,
	249, 610, 609, 608, 659, 654, 649, 647, 644, 642,
	638, 637, 636, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 913,
	-1000, -1000, -1000, -1000, -6, 80188, -1000, 460, -6, -1000,
	-1000, 630, -1000, 26704, 26704, 26704, -1000, -1000, 1981, 33556,
	-1000, 2147, -1000, 0, 0, 839, 40578, -1000, 38740, 839,
	567, 759, 44269, -1000, 2558, -1000, -1000, 628, 240, -1000,
	-1000, -1000, -1000, 17982, 2554, 80188, 80188, 66130, 66130, 66130,
	2789, 33556, -1000, -1000, 48798, 80188, 66580, 3049, 49248, 48798,
	80188, 2590, -1000, -1000, -1000, 80188, -1000, 33556, -1000, 3047,
	1336, 53862, 2947, -19, -1000, -1000, -1000, -1000, -1000, -1000,
	2148, 2172, 1080, 2014, 1452, -1000, 26224, 2832, -1000, -1000,
	-1000, 239, 17982, -1000, -1000, -1000, -1000, -1000, 1864, 2763,
	1409, -1000, 2000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1701, 2761, -1000, 2010, 2760, 1687, -1000, -1000,
	1932, -1000, -1000, 2857, -1000, -1000, 1789, 2757, 1, -1000,
	-1000, 2220, -1000, -1000, 891, 2754, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 42441, 51080, -9, -1000, -1000,
	-29, -1000, 16586, 91912, -1000, -1000, -1000, 91912, 800, -1000,
	-1000, 2745, -1000, 91912, 783, -1000, -1000, 2734, -1000, -1000,
	-1000, 3195, -1000, 3190, 2083, 3188, 3187, 3185, -1000, 1533,
	1746, 3184, -1000, 3183, -1000, -1000, -1000, -1000, -1000, -1000,
	61576, 1967, -1000, -1000, 60664, -1000, 2079, -1000, -1000, 61120,
	923, -1000, 891, 2075, -1000, 884, -1000, 3182, 2956, 2368,
	891, 2073, -1000, -1000, -1000, -1000, -1000, 45626, -1000, 45626,
	-1000, 45626, -1000, 1460, -1000, 83788, 0, 0, 3104, -1000,
	-1000, -1000, -1000, -1000, 2733, 3180, 3179, 3178, -1000, 80188,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 184, 2729,
	-1000, -1000, 184, 2728, -1000, 184, 2727, -1000, 68380, -1000,
	-1000, 1945, 2726, -1000, 182, 2724, -1000, -1000, -115, 2723,
	-1000, -1000, -26, -1000, -1000, -1000, 916, -1000, 41035, -1000,
	41035, 73366, 53408, 875, 633, 46984, 91912, -1000, -53, -1000,
	-1000, 53408, 42441, 91912, -1000, 53408, 60664, -1000, 72910, 60214,
	-1000, -1000, 1317, 2265, -1000, -1000, -1000, 875, 53408, 53408,
	53408, -1000, 72454, -1000, -1000, 1805, 1555, 2859, 1784, 66130,
	-1000, 1690, -1000, -1000, -1000, 2888, 2589, -1000, 48348, 67930,
	-1000, 67480, -1000, 67030, -1000, 66130, -1000, 66130, -1000, 3177,
	3176, 3175, -1000, 3174, 2870, 91912, 2866, -1000, 2735, 1485,
	1479, 80188, -1000, -1000, 80188, -1000, 80188, -1000, -1000, -1000,
	-1000, -1000, 2138, -1000, -1000, -1000, -1000, 66130, -1000, -1000,
	-1000, -1000, -1000, -1000, 2586, -1000, 1589, -1000, 1685, -1000,
	1316, -1000, -1000, 186, -1000, -1000, -19, -1000, 83338, -1000,
	2153, -1000, 80188, -1000, 2267, 2578, 2585, 1378, 1955, 2301,
	-1000, 31600, 2203, 35956, 1999, 145, -1000, -1000, 145, 145,
	24292, -1000, -1000, 49248, 49248, 17982, 1256, 33556, 33556, 33556,
	33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556,
	33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556,
	33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556, 33556,
	33556, 33556, 2135, 33556, 1234, 33556, 33556, 33556, 33556, 1912,
	-1000, -1000, 1716, 488, 1788, -1000, 3082, 3082, 3082, 523,
	523, 92258, 92258, 439, 3171, 749, -1000, 33556, -1000, 113,
	33556, 18448, -1000, -1000, 425, 10255, 2130, -1000, 422, 18940,
	-1000, -1000, -1000, 19900, 562, 31108, 33556, 907, 91912, -1000,
	-1000, 1639, 3106, 16122, 2455, 2433, 626, 726, 725, 22348,
	21856, 21364, 20872, 718, 33556, 33556, 33556, 33556, 33556, 33556,
	33556, 33556, -1000, -1000, 3112, -1000, 3106, -1000, -1000, -1000,
	-1000, 3106, 1251, 1248, 3106, -1000, 3106, 3106, 2476, 2476,
	30628, 30136, 29644, 36436, 29152, 33556, 20380, 28660, 28168, -1000,
	80188, -6, 3041, 33556, 111, -1000, 90516, -1000, 111, 111,
	624, -27, 91912, 2311, 2311, 40123, 2277, 1893, 1893, 1893,
	-1000, 839, 12381, 839, 71550, 1902, 839, 839, 226, 294,
	420, 38285, 2147, 71550, 724, 623, 12, 11, 10, -1000,
	-1000, 9, 8, -1000, -1000, 66130, 622, 18448, 17982, 222,
	1368, -28, 2329, 2326, 2322, -1000, 2290, 1609, -33, 1232,
	-42, -1000, 4061, -36, -1000, 1172, 221, 3106, -1000, -1000,
	-1000, -1000, -1000, 3170, 3169, -1000, 912, 621, 617, 344,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 615, 614,
	614, 614, -1000, 304, 611, 249, 610, 609, 608, -1000,
	-1000, -1000, -1000, 2552, -29, 66580, 849, -45, 1015, -19,
	-1000, -1000, -1000, 53862, 1090, -1000, 1508, -1000, -1000, -1000,
	-1000, -1000, -1000, 1342, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 896, -1000, -1000, -1000, -1000, -1000, -1000, 3090, 3088,
	-7, -1000, -1000, 17982, -1000, -23, 1522, -1000, 55666, 2006,
	2864, 2853, 1437, -1000, 1385, 2921, 59302, 2965, 3029, 572,
	-1000, 2549, -1000, -1000, 860, 1587, 1231, 59302, 2010, -1000,
	49248, -1000, 2336, 2920, 1253, 1244, 1253, 1253, 1250, -1000,
	59302, 1230, -1000, 1229, -1000, -24, 2955, 2969, 459, -1000,
	2523, 1225, -1000, -1000, 66130, 17982, 1345, 1404, 1535, 1223,
	-8, -1000, 2952, 2950, -1000, 1492, -1000, 53408, 834, -9,
	51080, 80188, 216, -1000, 33556, 113, 33556, 113, -1000, -1000,
	2722, -1000, -1000, -1000, 3168, 1721, 2175, -1000, -1000, -1000,
	605, 2072, 2522, 80188, 2334, -12, 66130, -1000, 2721, 2010,
	2070, -1000, -1000, 59758, -1000, 2712, 598, 3167, -1000, 82888,
	-1000, 2863, 1289, 2711, 967, 179, 3038, -1000, 179, 46076,
	-1000, 80188, -1000, -1000, 80188, -1000, -1000, -1000, 3166, -1000,
	66130, -1000, -1000, 66130, -1000, 66130, -1000, 66130, 175, 2710,
	-1000, -1000, 80188, -1000, 66130, 66130, 53408, 53408, 3910, 54766,
	-46, -48, 416, -1000, 72004, 80188, 964, 55216, 80188, 2822,
	875, 42441, -1000, -51, -53, 875, 875, 834, -1000, 834,
	-1000, 66130, 2584, -1000, 875, 875, 875, -1000, -1000, -1000,
	-1000, 3165, 3164, -1000, -1000, -1000, 890, 66130, 80188, 66130,
	-1000, -1000, 80188, -1000, 80188, -1000, 890, 80188, 890, 80188,
	890, 80188, -1000, -1000, -1000, -1000, -1000, -1000, 113, 33556,
	1503, -1000, 2583, -1000, 2579, -1000, 39, -1000, -1000, -1000,
	-1000, 1806, 66130, 66130, 66130, 66130, 80188, 66130, -1000, 59302,
	-1000, 2267, 2578, -1000, -1000, -1000, -1000, -1000, -1000, 1226,
	1927, -1000, 2255, -1000, 1390, -1000, -1000, -1000, 91912, 36900,
	-1000, -1000, 91912, 1612, -1000, 35476, 34996, -1000, -1000, 1568,
	66130, 2305, -1000, 2305, -243, -1000, 90004, 2235, 66130, -1000,
	-1000, -1000, -1000, -1000, 859, 696, 696, 1119, 1119, 1119,
	1119, 3069, 409, 1772, 4543, 262, 262, 503, 503, 503,
	503, 503, 262, 2621, 523, 523, 2621, 2621, 2621, 2621,
	2621, 523, 523, 523, 262, 262, 262, 92258, 91956, 8315,
	33556, 33556, 1219, 1715, 488, 6665, 33556, 8678, 8678, 8678,
	8678, -1000, 1971, -1000, -1000, -1000, -1000, 2521, 604, 36436,
	36436, -1000, -1000, -1000, -1000, 19420, 33556, -1000, -1000, -1000,
	-1000, 27676, -1000, -1000, 89627, -270, 415, -226, -38, -1000,
	33556, 33556, 33556, 411, -1000, 213, 33556, 80188, -1000, 86774,
	723, -221, -1000, -59, 1273, -1000, 33556, -1000, -1000, 1184,
	-1000, 1166, 1163, 1155, -1000, 597, 407, -1000, 212, -1000,
	1888, 588, 586, 33556, -1000, -1000, -1000, -1000, -1000, 89413,
	-1000, -1000, 89250, -1000, -1000, 89036, -1000, -1000, 88873, -1000,
	-1000, -1000, 91575, 86611, 86397, 86088, 9425, 86045, 11735, -61,
	405, -62, 396, 858, 842, 393, 391, 378, -74, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -84, 377, -1000,
	2519, -226, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	376, -1000, 374, -1000, 91427, -226, 372, 5834, -1000, 36436,
	36436, 36436, -1000, 371, -1000, 90302, -1000, 91271, 27196, 27196,
	27196, 363, 91056, 33556, -226, -90, -1000, -93, -1000, -1000,
	452, -95, 898, 26704, 39211, 17982, -1000, 898, 898, 33556,
	-1000, 33556, 2275, -1000, -1000, -1000, 2274, 1923, 2311, 40123,
	-1000, -1000, -1000, -1000, 71550, -1000, 3104, 2393, -1000, 71550,
	-1000, -1000, 80188, 460, -1000, 71550, 71550, 17982, 839, -1000,
	839, 71550, 693, -1000, -1000, -1000, -1000, -1000, 361, 43359,
	-38, 201, 17982, 875, -1000, 2303, 2303, 2303, 2303, -1000,
	-1000, 80188, 3042, -1000, 1809, -1000, 49248, -1000, 747, 1073,
	17982, -1000, -1000, -1000, 584, -1000, 3106, 3106, -1000, 3106,
	80188, 82, 26224, -1000, 1090, -1000, -1000, 1359, -1000, 1744,
	-1000, 1152, -1000, -1000, -1000, -1000, 26224, -1000, 1835, 80188,
	80188, 66130, -1000, -1000, 2063, 82438, 2061, 49248, 80188, -1000,
	-1000, 583, 580, 2231, 2223, 959, 80188, 80188, 2211, 81988,
	81538, 80188, 1817, 33556, 1913, 1584, 113, 113, -1000, -1000,
	113, 576, 1235, 66130, 66130, 66130, 1663, -1000, -1000, -1000,
	-1000, -1000, 58852, -1000, -1000, 3111, 3110, -1000, 1253, -1000,
	-1000, -1000, 1253, 2010, 1661, 66130, 80188, 1831, 113, 113,
	-1000, -1000, 113, 574, 17982, 1703, -1000, 2595, 80188, 3133,
	66130, 80188, 80188, 50630, 2886, 81088, 80188, 1492, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 50176, 961, 891, 2381, -1000,
	-1000, 15658, 91912, -1000, 91912, -1000, 80188, -1000, 922, 80188,
	55216, 871, 2707, 45176, -29, 875, 53408, 66130, -12, 80188,
	-1000, 2010, 2703, 460, 2058, -1000, -1000, 53408, 570, 3162,
	3161, -1000, 1963, 2052, -1000, -1000, 80638, 2777, 802, 80188,
	898, 40123, 1776, -1000, 43815, 934, 80188, 1635, 80, -1000,
	-1000, -1000, 23, 80188, -1000, 3159, -1000, -1000, 184, 184,
	184, -1000, 66130, 66130, 1945, -1000, 182, -1000, -115, -1000,
	-1000, 3910, 3910, 875, -13, 565, -1000, 826, 822, 41977,
	53408, -96, -1000, -1000, -1000, -1000, -1000, 66130, 80188, 653,
	2365, 80188, -98, -1000, 183, 563, -1000, -1000, -1000, 875,
	2515, -1000, -1000, 897, -1000, 1302, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1, -29, -29, -1000, 890,
	-1000, 890, -1000, 890, -1000, 91912, -1000, 1478, 1412, 80188,
	-1000, 17982, 80188, 66130, 17982, 66130, 2577, 2575, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 977, -1000, 1612, 1926,
	-1000, 562, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2141, -1000, -16, 24292, 2019, -1000, -1000, 66130, -2,
	33556, 33556, 5135, 4530, 33556, 36436, 36436, -1000, 33556, 801,
	-1000, -1000, -1000, -1000, -1000, 2511, 559, 33556, 49248, 5352,
	4573, -1000, 360, 11367, 2621, -1000, 33556, -1000, 358, 25744,
	-1000, 90679, -56, -101, -1000, 12858, -226, -103, -1000, -1000,
	743, -1000, 2731, -1000, 33556, 90893, 2102, 1852, 1647, 1466,
	3106, 3132, 15194, -1000, 46530, 903, 1905, 88659, -1000, -1000,
	-1000, -1000, 49248, 49248, 33556, 33556, -1000, 33556, 33556, 33556,
	-1000, -1000, -1000, 3106, 843, -1000, -1000, -1000, 843, -1000,
	-1000, 1253, -1000, 1253, -1000, 33556, -1000, -1000, 2491, 33556,
	-1000, 49248, 49248, 36436, 36436, 36436, 36436, 36436, 36436, 36436,
	36436, 36436, 36436, 36436, 36436, 36436, 36436, 36436, 36436, 36436,
	36436, 36436, 2174, 36436, 3080, 3080, 3080, -1000, 2472, 2491,
	33556, 33556, 49248, 357, 350, 347, -1000, 33556, -226, -1000,
	-1000, 3910, 558, -1000, 2114, -1000, 2427, -1000, 33556, -1000,
	-92, -1000, 2147, -1000, -1000, 2427, 2427, -104, 91912, 40123,
	40123, -1000, 557, 33556, 2269, -1000, -1000, 722, -266, -1000,
	821, -1000, -1000, -1000, -1000, -1000, 460, -1000, -1000, -1000,
	176, 71550, 71550, 721, -1000, -106, -1000, -1000, -109, -1000,
	3037, 346, 17982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -29, 1918, 3130, -1000, 3108, 734, 719, 173, 3106,
	340, 337, 332, -29, 80188, -1000, -19, -1000, -1000, -1000,
	33556, -1000, -1000, 2862, 1153, 1151, -1000, 2702, -1000, 2047,
	-1000, 940, -1000, 1417, -1000, 33556, 33556, 556, 555, 3158,
	1726, 3157, 962, 2698, 1945, 2694, 1945, -1000, -1000, 863,
	-1000, 91912, 551, 549, -1000, -23, 1399, 894, -1000, -1000,
	33556, 33556, 71100, -1000, 392, 2857, -3, -1000, 1145, -1000,
	-1000, -1000, -1000, 2010, 1077, -1000, -1000, -1000, 893, -1000,
	-1000, 33556, -1000, -24, 1069, 2963, 2045, 66130, 1060, -1000,
	1044, -1000, -1000, -1000, -1000, -1000, -1000, 2949, 1945, 2693,
	1211, -1000, -1000, -1000, 49712, -1000, 892, 2490, -1000, 3156,
	66130, 3153, 330, -112, -25, 49248, 3015, 1993, 546, 66130,
	841, -1000, 3104, -1000, -1000, -1000, -1000, 66130, 3008, 2689,
	891, 3129, -1000, -1000, 66130, 2688, 1956, 2037, 2160, 802,
	54316, -1000, 891, 1904, -71, -1000, 1635, 25252, 2855, -117,
	-1000, -1000, -1000, 898, 46076, 40123, 33556, 3152, -119, -1000,
	-1000, -1000, -1000, -1000, 175, -1000, -1000, -1000, -1000, -1000,
	70650, 70650, 53408, 53408, 53408, 875, 80188, 80188, 55216, -1000,
	548, 80188, 80188, 547, -1000, 80188, 80188, 3151, 53408, -1000,
	113, -1000, 1914, 66130, 14730, -1000, -1000, -1000, -1000, -1000,
	890, -1000, -1000, 1834, 1990, 1834, 1630, 1629, -1000, 1924,
	-1000, -1000, -1000, -1000, 2250, 2873, 17982, 2990, 8678, 33556,
	33556, 275, 4502, 684, 8678, 33556, 33556, 49248, 92302, -120,
	33556, 33556, -1000, 33556, 717, 91912, 3128, 33556, 329, 328,
	-1000, -1000, -1000, 3105, -1000, -1000, -1000, 91912, 33556, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 327, -1000, 146, -1000,
	-1000, -1000, 85588, -1000, 33556, 326, 2919, -1000, 325, 324,
	10884, 7736, 88496, 88282, 88119, 317, -1000, -1000, 315, 313,
	91912, 2472, 91912, -1000, -1000, 957, 957, 1210, 1210, 1210,
	1210, 3080, 991, 1131, 861, 946, 946, 946, 835, 1233,
	1233, 946, 946, 946, 2484, 2173, 543, 6199, -1000, -1000,
	91912, 91912, 308, -1000, -1000, -1000, -226, 305, 3910, -1000,
	2423, 2918, 91912, -1000, 40123, 2423, 2423, -1000, -1000, 1923,
	80188, 91912, 40123, -1000, 2393, -1000, 13333, -1000, 17982, -1000,
	-1000, -1000, -1000, 3104, -1000, 43359, -1000, 539, -1000, 112,
	-1000, -1000, 715, 3150, 730, 17982, 302, -1000, -1000, -1000,
	-29, 91912, 80188, 80188, 80188, 2687, -1000, 3951, -1000, 959,
	87905, -122, -1000, 90004, 33556, 80188, -1000, -1000, 1763, 2215,
	1007, -1000, 2882, 80188, -1000, 80188, -1000, -1000, 80188, 80188,
	66130, 2662, -125, 91912, -57, -1000, 820, -1000, 1240, -1000,
	14266, 66130, 66130, 2661, -127, 17982, -1000, 3127, 3126, 2682,
	2897, 3125, 80188, -1000, 80188, 66130, 2820, -1000, -1000, -1000,
	1984, 53408, -1000, 460, -1000, 2351, -1000, 69286, 1992, 113,
	-1000, 70196, 3149, 530, -1000, 1909, -1000, 697, 2010, 113,
	66130, -1000, 297, -58, -1000, 949, 17982, 66130, 2681, 2163,
	802, 54316, -1000, 1289, 2301, -1000, -64, -1000, 501, 113,
	1904, -1000, -71, 91912, -1000, 819, -1000, -1000, -128, -1000,
	-1000, 293, -1000, 2816, 2812, -1000, 2445, 33556, 528, 526,
	80188, 2810, -1000, -1000, -130, -1000, 2140, -1000, -1000, -1000,
	-1000, -1000, 17982, 1551, -1000, 522, 521, -1000, -1000, -1000,
	-1000, 2873, 8678, 8678, 33556, 33556, 33556, 8678, 92302, -135,
	-1000, 8678, 8678, -226, -1000, -1000, 90679, -1000, -1000, -1000,
	91912, -1000, 13802, 1840, -1000, 87742, -1000, 24292, -1000, -1000,
	33556, 33556, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	36436, 2477, 520, 49248, -1000, -1000, 289, 900, 33556, 33556,
	2147, 900, 900, -1000, -138, -1000, -1000, -1000, 3104, 112,
	-1000, -1000, 3148, 17982, 727, -1000, 3146, -1000, -1000, -1000,
	-1000, -1000, 80188, -1000, 80188, -1000, 17982, 80188, 2448, 2030,
	-1000, -1000, 2204, 508, 36436, 66130, 782, -1000, 3059, 2447,
	1711, 33556, 2019, -140, -143, 2026, -1000, -1000, 2023, 33556,
	-1000, 49248, 507, 1945, 1945, -145, -153, -1000, 33556, 1042,
	80188, 24772, -1000, 3145, 2857, -1000, -1000, 33556, 1034, -1000,
	-1000, -1000, 3123, 1945, 17982, -1000, 1945, 1945, 2897, 1004,
	-72, 504, -1000, 816, -1000, -1000, -115, 2992, 1831, 2391,
	-1000, -1000, -1000, -1000, 2199, -1000, -1000, 80188, 2198, 876,
	-155, -1000, 815, 805, -1000, 55216, 871, 854, -1000, -1000,
	-1000, 460, -1000, 3117, 500, 80188, 1953, 490, 17982, -1000,
	802, 54316, -1000, 2777, 1635, -1000, 2784, 80188, 2847, -1000,
	2301, 488, -1000, 875, 486, 485, 2288, 2288, -156, 33556,
	33556, -161, 484, 875, -152, -1000, 765, 764, -1000, -1000,
	66130, 66130, 33556, 33556, -1000, 8678, 8678, 8678, -1000, 287,
	-1000, -1000, 1904, 2915, -1000, -182, 87528, 87365, 6358, 36436,
	49248, -162, -1000, -1000, 80188, 91912, -226, -1000, -1000, -1000,
	694, -1000, 3143, -1000, -1000, 1594, -1000, -1000, -1000, 80188,
	2028, -1000, 958, 33556, 6199, 475, 33556, -1000, 2989, -1000,
	2345, 2469, 2351, 474, -1000, -1000, -1000, -1000, -1000, 947,
	1712, -1000, -1000, 91912, 2897, 33556, -1000, -1000, 473, 472,
	91912, 470, 794, 2451, -1000, -1000, -1000, 91912, 469, 2963,
	-1000, -1000, -1000, -1000, 1945, 66130, 1951, 1951, 53408, 113,
	871, -1000, 1871, 1992, 468, -1000, -1000, 1929, 2251, -1000,
	70196, 37828, 37828, 286, 2988, 854, -1000, 3101, -1000, 2978,
	-1000, 33556, -1000, 66130, 33556, 1950, 54316, -1000, 2160, -1000,
	1148, -163, 80188, 1635, -1000, -1000, 53408, 53408, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 947,
	-168, -169, -1000, 53408, -1000, 2140, -1000, 80188, -1000, 80188,
	-1000, -1000, -170, -171, -1000, 1737, 33556, 24292, -1000, -1000,
	6358, -176, -1000, -192, -1000, 2977, -1000, -1000, -1000, -1000,
	2680, 2413, 87151, 2117, 80188, 86988, -1000, 2468, -1000, -1000,
	1831, 80188, 2351, 2408, 66130, 955, -179, 1834, 1834, 33556,
	23812, 1867, 33556, -1000, -1000, 2897, -1000, -185, -1000, -1000,
	1929, 66130, 80188, -1000, 2877, -1000, 2808, -1000, -1000, -1000,
	2351, 113, -1000, -1000, 113, -186, 949, -191, 66130, -1000,
	2163, 1432, -1000, 898, -1000, -1000, -193, -198, 1711, 947,
	898, -199, -1000, -200, -207, -1000, -1000, 284, 34516, 34516,
	34516, -226, -243, -1000, 80188, 465, 2609, 888, -1000, 1931,
	1658, 25, 966, -1000, -1000, 2447, -208, -1000, 879, 460,
	-1000, 33556, 947, -214, -1000, 933, -220, -1000, 932, -228,
	-1000, 2450, -1000, -229, 1945, -1000, -1000, 457, -230, -1000,
	-1000, 2024, -1000, 1831, 876, -1000, 947, 453, 1711, 447,
	-1000, 46076, -1000, 875, 875, 2351, 1711, -1000, 875, -1000,
	-1000, -1000, 2769, -1000, 37364, 1922, 1620, 89925, 2769, 2769,
	-1000, -1000, 80188, 2932, -1000, 1949, 1937, 1306, -1000, -1000,
	-1000, -1000, -1000, -1000, 898, -1000, 2930, 2117, 91912, 2351,
	-1000, 1834, 2388, -1000, 1834, 2446, -1000, 1845, -1000, -1000,
	80188, -1000, 80188, 1598, 1561, 3142, 871, 1929, 1711, 33556,
	2351, 33556, -225, -1000, -1000, 1831, 2351, -1000, -1000, 1657,
	2974, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 789,
	-1000, 2692, -1000, 974, 1942, 1942, -1000, 786, 1931, -1000,
	-1000, 441, -1000, 438, -1000, -231, -1000, -1000, 3141, -1000,
	1929, -1000, 2351, -236, 1831, -237, -1000, 898, 1831, 1569,
	-1000, -1000, 1896, 34036, 33556, -1000, 3068, -1000, -1000, 2217,
	-1000, 33556, 2447, 33556, 33556, 1934, -1000, -1000, 1831, 947,
	898, 1711, -1000, 898, -1000, -1000, -1000, 91912, -1000, -1000,
	-1000, 91912, -1000, -245, -247, -1000, -1000, -1000, 898, 1711,
	-1000, 2351, -1000, 1831, 1026, -1000, 2351, 1831, -1000, 435,
	1831, 898, 33556, 898, -1000, -257, -1000, 1831, -1000,
}
var sqlPgo = [...]int{

	0, 3802, 3801, 3799, 3797, 3796, 3793, 3792, 3791, 3790,
	3789, 3787, 3784, 3783, 3782, 3781, 3779, 3778, 3777, 3776,
	3775, 3773, 3772, 3771, 3768, 3767, 3765, 3760, 3759, 3758,
	3757, 3755, 3749, 3748, 3745, 3743, 3742, 3737, 3736, 3735,
	3733, 3732, 3728, 3727, 3725, 3722, 3721, 3720, 41, 3717,
	3715, 3713, 3712, 3711, 3710, 3709, 3707, 3706, 3705, 3704,
	3702, 3701, 3699, 3698, 3697, 3696, 39, 3695, 220, 3694,
	3693, 3691, 3690, 3687, 3686, 3684, 3679, 3678, 3673, 3672,
	219, 3671, 96, 3670, 3669, 3666, 3665, 3664, 218, 3663,
	3662, 3661, 3660, 3659, 3655, 3650, 3649, 154, 199, 3646,
	42, 3643, 3642, 3641, 3636, 3632, 3631, 3629, 3628, 3626,
	3621, 204, 3619, 217, 3615, 3614, 3613, 3612, 3611, 3610,
	3609, 3608, 3606, 3604, 3603, 3601, 3598, 3597, 3591, 3590,
	3587, 3586, 3585, 3584, 3582, 3581, 3580, 3578, 3576, 3572,
	3571, 3570, 223, 166, 3568, 3567, 216, 215, 3563, 3562,
	3561, 3560, 3559, 101, 99, 28, 3558, 3557, 50, 47,
	103, 49, 3553, 8, 198, 196, 4492, 194, 3549, 3547,
	3546, 206, 153, 3538, 193, 3536, 3533, 3532, 3529, 79,
	66, 142, 135, 136, 127, 568, 3524, 3522, 75, 57,
	44, 30, 3518, 3517, 3516, 2832, 91, 3514, 214, 200,
	124, 3513, 3497, 3496, 1479, 3495, 33, 3492, 156, 61,
	104, 21, 95, 3490, 125, 20, 3486, 131, 54, 3485,
	121, 73, 64, 7113, 4270, 3484, 86, 48, 85, 560,
	170, 169, 158, 126, 172, 171, 139, 210, 3483, 231,
	3482, 2999, 59, 128, 3477, 3473, 3472, 62, 160, 78,
	3470, 3469, 52, 9, 2, 11, 132, 10, 93, 14,
	3466, 12, 3463, 3461, 3460, 3456, 24, 140, 3453, 224,
	3445, 97, 37, 18, 3443, 36, 173, 3442, 188, 100,
	3441, 3435, 207, 164, 150, 3434, 71, 189, 3433, 3432,
	3430, 3429, 3428, 110, 22, 102, 3427, 3426, 107, 197,
	155, 3425, 40, 3424, 137, 81, 123, 221, 92, 180,
	87, 184, 147, 187, 3423, 3422, 3420, 167, 3413, 3412,
	175, 138, 3410, 3409, 159, 228, 31, 60, 192, 56,
	151, 134, 3407, 161, 3406, 3401, 3400, 227, 144, 176,
	3, 7, 76, 98, 26, 13, 191, 116, 241, 84,
	3397, 3935, 1374, 1750, 45, 3395, 113, 90, 53, 94,
	115, 213, 55, 3394, 3393, 65, 3391, 3388, 3387, 3385,
	148, 3384, 3383, 3381, 120, 114, 146, 3380, 80, 72,
	15, 117, 252, 226, 89, 177, 168, 243, 3379, 145,
	3378, 43, 108, 3377, 157, 208, 3376, 3373, 143, 3372,
	122, 581, 46, 133, 3370, 185, 3369, 3368, 3366, 3365,
	3364, 3363, 3362, 530, 190, 3361, 3359, 3358, 112, 152,
	3357, 212, 250, 130, 69, 35, 3355, 70, 4142, 3353,
	181, 183, 38, 3352, 77, 34, 0, 8780, 7677, 5678,
	8478, 3351, 3583, 3350, 3349, 3347, 174, 106, 3345, 3344,
	3343, 82, 3342, 58, 3341, 3338, 51, 3337, 16, 1,
	6, 19, 17, 1070, 105, 3336, 3335, 83, 111, 118,
	3332, 222, 186, 3329, 3328, 3327, 3326, 74, 3324, 29,
	3323, 25, 3320, 3317, 32, 5, 27, 3314, 3312, 202,
	3311, 203, 3309, 3306, 3303, 2984, 109, 3301, 3299, 211,
	63, 3294, 205, 3293, 3000, 141, 165, 3291, 3290, 3289,
	129, 3288, 3287, 3285, 209, 3284, 3282, 23, 3281, 4,
	3278, 3276, 162, 2902, 3275, 3271, 67, 3270, 149,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 499, 499, 20, 31, 21, 32,
	14, 500, 500, 500, 500, 25, 22, 33, 23, 23,
	23, 23, 23, 156, 156, 156, 156, 19, 19, 27,
	27, 182, 182, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 498, 498, 184, 184, 183,
	178, 178, 501, 501, 185, 185, 185, 187, 187, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 402, 402,
	402, 508, 508, 508, 509, 509, 510, 510, 510, 510,
	510, 37, 37, 493, 493, 157, 157, 157, 159, 159,
	158, 158, 158, 96, 96, 96, 97, 97, 98, 98,
	160, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	84, 84, 434, 434, 435, 435, 152, 152, 153, 153,
	153, 153, 154, 154, 155, 155, 155, 51, 39, 39,
	39, 39, 39, 39, 39, 40, 40, 40, 40, 41,
	41, 41, 41, 41, 41, 42, 42, 42, 42, 42,
	42, 49, 49, 49, 49, 143, 143, 52, 52, 52,
	52, 52, 52, 52, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 512, 512, 513, 513, 514, 514,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 63, 63, 268,
	268, 240, 240, 64, 64, 64, 65, 65, 66, 66,
	53, 53, 491, 491, 283, 283, 393, 393, 68, 68,
	303, 303, 69, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 77, 77, 77, 78, 78,
	78, 75, 75, 75, 73, 73, 73, 72, 72, 72,
	76, 76, 76, 232, 232, 74, 74, 74, 284, 284,
	79, 79, 79, 79, 241, 80, 80, 80, 80, 80,
	80, 80, 80, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 395, 395,
	81, 81, 81, 363, 363, 85, 85, 85, 318, 318,
	86, 86, 86, 86, 86, 87, 87, 87, 87, 99,
	99, 99, 99, 495, 495, 276, 276, 198, 198, 198,
	198, 92, 92, 92, 92, 93, 93, 93, 94, 94,
	148, 148, 105, 105, 105, 105, 105, 104, 104, 104,
	104, 104, 104, 43, 43, 43, 44, 44, 45, 45,
	46, 46, 47, 47, 48, 48, 48, 48, 48, 107,
	107, 505, 505, 109, 106, 106, 106, 108, 108, 108,
	108, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 427, 427, 292, 292, 425, 425, 443, 443,
	426, 426, 245, 245, 245, 245, 245, 246, 246, 246,
	433, 433, 433, 433, 433, 433, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	149, 149, 150, 151, 151, 151, 151, 132, 132, 132,
	142, 142, 142, 142, 142, 142, 142, 135, 135, 135,
	122, 122, 114, 114, 114, 114, 114, 118, 118, 118,
	118, 118, 118, 118, 118, 115, 115, 124, 124, 124,
	124, 124, 119, 119, 121, 121, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 116, 116, 116, 116, 126,
	126, 126, 126, 325, 325, 325, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 138, 138, 138, 138,
	138, 138, 377, 377, 133, 133, 133, 133, 137, 137,
	137, 137, 308, 308, 130, 130, 130, 131, 131, 131,
	136, 136, 134, 134, 139, 139, 139, 139, 117, 117,
	117, 516, 516, 516, 140, 140, 129, 129, 141, 141,
	141, 141, 141, 141, 141, 141, 128, 128, 128, 127,
	127, 127, 127, 120, 492, 492, 489, 489, 489, 489,
	489, 489, 489, 490, 490, 494, 494, 90, 90, 90,
	58, 58, 58, 59, 59, 163, 163, 163, 163, 253,
	253, 253, 253, 161, 161, 162, 162, 60, 60, 517,
	517, 517, 502, 502, 502, 503, 503, 503, 503, 503,
	503, 247, 247, 248, 248, 343, 343, 343, 343, 343,
	251, 251, 251, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 254, 254, 186, 186, 186, 257, 258, 258,
	255, 255, 256, 256, 256, 260, 260, 259, 262, 262,
	261, 342, 452, 452, 454, 454, 454, 454, 454, 454,
	454, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 456, 518, 518, 450, 450, 450, 451, 446, 446,
	447, 447, 447, 447, 447, 249, 249, 250, 250, 250,
	250, 448, 449, 274, 274, 380, 453, 453, 455, 455,
	457, 519, 519, 519, 519, 519, 519, 520, 520, 520,
	341, 341, 340, 340, 266, 266, 458, 458, 458, 458,
	459, 459, 459, 459, 459, 462, 461, 460, 460, 460,
	460, 460, 62, 62, 62, 305, 305, 304, 304, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 145, 145, 201, 201, 57, 57,
	57, 12, 12, 12, 504, 504, 504, 61, 61, 61,
	61, 200, 200, 200, 200, 200, 200, 497, 497, 496,
	496, 202, 202, 522, 522, 67, 67, 67, 67, 67,
	67, 67, 396, 396, 397, 397, 56, 56, 56, 56,
	56, 326, 326, 324, 324, 323, 323, 273, 273, 379,
	206, 206, 179, 179, 179, 24, 18, 18, 34, 34,
	35, 35, 30, 30, 506, 506, 507, 507, 91, 91,
	95, 95, 95, 103, 103, 144, 144, 144, 144, 144,
	144, 144, 38, 38, 38, 38, 50, 50, 50, 50,
	101, 524, 524, 524, 102, 102, 102, 523, 523, 199,
	199, 337, 337, 338, 338, 525, 525, 339, 339, 339,
	339, 193, 192, 194, 194, 55, 55, 55, 188, 188,
	189, 189, 190, 190, 191, 191, 526, 526, 88, 88,
	88, 147, 147, 239, 239, 239, 333, 333, 333, 267,
	267, 212, 212, 336, 336, 334, 334, 334, 334, 302,
	302, 302, 146, 146, 281, 281, 294, 294, 295, 295,
	390, 390, 296, 100, 100, 166, 166, 164, 164, 164,
	164, 164, 164, 164, 164, 171, 171, 172, 172, 173,
	173, 174, 175, 175, 175, 175, 285, 285, 176, 176,
	176, 165, 165, 165, 167, 167, 167, 167, 167, 167,
	167, 170, 170, 170, 170, 177, 177, 177, 169, 169,
	469, 469, 469, 471, 471, 473, 473, 472, 472, 468,
	468, 470, 470, 521, 521, 307, 307, 307, 264, 265,
	263, 263, 271, 271, 269, 270, 270, 272, 272, 378,
	378, 378, 180, 180, 180, 299, 299, 299, 299, 300,
	300, 329, 329, 327, 327, 327, 327, 328, 328, 330,
	330, 330, 331, 331, 332, 332, 298, 298, 359, 359,
	168, 168, 168, 278, 278, 278, 279, 279, 349, 349,
	349, 349, 349, 349, 350, 350, 348, 348, 348, 348,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 382,
	383, 383, 280, 280, 384, 335, 335, 487, 487, 487,
	488, 488, 376, 376, 385, 385, 385, 385, 385, 385,
	374, 374, 375, 375, 391, 392, 392, 311, 311, 311,
	311, 309, 309, 312, 312, 312, 312, 310, 310, 386,
	386, 386, 386, 301, 301, 387, 387, 387, 387, 388,
	344, 345, 345, 398, 398, 398, 398, 400, 277, 277,
	277, 277, 277, 445, 444, 444, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 414, 414, 414, 414, 414,
	414, 414, 414, 415, 415, 415, 415, 415, 415, 401,
	401, 401, 401, 401, 405, 405, 405, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 406, 406,
	411, 411, 412, 412, 412, 407, 408, 413, 413, 413,
	413, 527, 527, 417, 417, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 403, 403, 403, 410, 410, 410,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 319, 319, 321, 321, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 353, 353, 353, 353, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 463, 463, 463, 463, 463, 463, 463,
	463, 355, 355, 466, 466, 467, 467, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 474, 474, 475, 475,
	477, 477, 478, 478, 479, 480, 480, 480, 481, 482,
	482, 476, 476, 483, 483, 483, 483, 484, 484, 485,
	485, 485, 485, 485, 486, 486, 486, 486, 486, 365,
	365, 366, 366, 372, 372, 372, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 203, 203, 203, 203, 203, 290, 290, 288,
	288, 288, 291, 291, 289, 289, 287, 287, 286, 286,
	362, 362, 360, 360, 364, 364, 313, 313, 416, 416,
	416, 416, 416, 416, 416, 416, 314, 314, 314, 322,
	315, 315, 316, 316, 316, 316, 316, 356, 357, 317,
	317, 317, 358, 358, 367, 371, 371, 370, 369, 369,
	368, 368, 346, 346, 347, 347, 297, 297, 528, 528,
	293, 293, 389, 389, 389, 389, 243, 243, 282, 282,
	242, 242, 234, 234, 235, 235, 235, 235, 275, 275,
	373, 373, 418, 418, 419, 419, 420, 420, 421, 421,
	422, 423, 424, 361, 361, 222, 221, 209, 210, 220,
	219, 218, 208, 211, 215, 216, 217, 213, 214, 228,
	227, 226, 233, 224, 225, 394, 207, 236, 236, 237,
	237, 237, 238, 238, 238, 238, 204, 204, 205, 205,
	229, 229, 230, 231, 231, 223, 223, 223, 195, 195,
	195, 196, 196, 197, 197, 432, 432, 429, 429, 429,
	430, 430, 430, 431, 431, 431, 431, 428, 428, 428,
	428, 428, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 437, 437, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 439, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 442, 442,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 5, 6, 2, 1, 3, 1, 3,
	1, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 6, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 4, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 3, 2, 4, 3,
	3, 5, 4, 3, 5, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 1, 2, 0, 3, 3, 2,
	3, 6, 3, 11, 14, 0, 2, 4, 3, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 9, 9, 3, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 1, 2, 8, 4, 2, 5, 5,
	5, 2, 1, 3, 10, 11, 7, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	5, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 3,
	2, 0, 1, 1, 0, 6, 6, 8, 6, 8,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 2, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 8, 11, 3, 3, 0,
	3, 0, 3, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 8, 5, 3, 4, 3, 0, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 494, -82, -79, -51, -49, -85, -86,
	-69, -87, -81, -99, -103, -91, -105, -144, -149, -150,
	-151, -3, -37, -39, -52, -68, -70, -80, -89, -88,
	-90, -92, -96, -95, -84, -43, -100, -104, -113, -145,
	-146, -147, 31, 30, 90, 74, 137, 114, 121, 174,
	318, 351, 361, 344, -108, -109, 376, -38, -50, -102,
	-101, 67, 115, 339, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -63, -511, 92, -470, -71, -74,
	-515, 126, 143, 192, 308, -93, -94, 346, 348, 144,
	-45, -44, 138, -164, -166, -106, -107, -148, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -134, -130, -131, -132, -133, -135,
	-136, -137, -138, -139, -140, -141, 380, 429, 46, 390,
	76, 130, 355, 21, -5, -6, -7, -8, -9, -10,
	-11, -13, -53, -55, -56, -58, -59, -60, -67, -61,
	-62, -469, -72, -73, -75, -77, -78, -76, 345, -167,
	-165, 491, 443, -15, -20, -21, -16, -17, -19, -22,
	-18, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -24, -25, -14, -23, 461, 469, -170, -168,
	-169, -177, 368, 451, 406, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, -241, 2, -224, -229,
	-230, -231, -223, -195, -439, -442, 4, -436, -440, 149,
	201, 273, 21, 22, 23, 24, 25, 26, 28, 29,
	40, 41, 43, 42, 44, 45, 46, 51, 54, 55,
	56, 57, 58, 62, 67, 68, 73, 74, 75, 76,
	77, 78, 79, 85, 82, 83, 84, 87, 89, 90,
	91, 93, 95, 96, 104, 105, 106, 107, 109, 114,
	115, 118, 113, 117, 120, 121, 124, 125, 126, 128,
	129, 131, 132, 134, 135, 137, 138, 141, 139, 412,
	140, 142, 143, 144, 145, 155, 156, 157, 162, 164,
	168, 169, 172, 173, 175, 179, 181, 182, 183, 184,
	185, 191, 192, 194, 195, 196, 197, 202, 203, 207,
	204, 213, 217, 218, 219, 221, 225, 226, 227, 228,
	229, 232, 231, 234, 237, 238, 241, 242, 243, 246,
	247, 248, 249, 251, 252, 255, 253, 256, 254, 258,
	259, 260, 257, 263, 261, 265, 266, 271, 269, 267,
	268, 275, 278, 189, 280, 281, 284, 302, 288, 289,
	290, 293, 294, 297, 300, 301, 303, 304, 305, 306,
	307, 308, 309, 311, 312, 316, 318, 319, 321, 323,
	324, 325, 326, 327, 328, 329, 331, 332, 339, 344,
	341, 342, 343, 345, 346, 347, 348, 350, 351, 353,
	354, 355, 356, 358, 360, 377, 378, 392, 361, 362,
	363, 364, 365, 366, 367, 371, 369, 370, 372, 373,
	374, 376, 379, 380, 382, 383, 386, 388, 389, 390,
	391, 393, 396, 397, 398, 399, 394, 405, 402, 403,
	407, 408, 409, 410, 411, 413, 415, 423, 424, 426,
	429, 430, 431, 421, 433, 434, 437, 438, 439, 442,
	440, 441, 443, 445, 448, 449, 450, 456, 455, 462,
	463, 465, 466, 467, 35, 47, 48, 50, 52, 63,
	64, 65, 69, 110, 111, 136, 146, 147, 158, 170,
	171, 176, 178, 186, 187, 188, 208, 209, 211, 215,
	235, 277, 279, 295, 299, 313, 314, 315, 317, 330,
	357, 384, 395, 400, 416, 417, 418, 419, 425, 427,
	451, 452, 453, 457, 464, -241, 2, -224, 286, -217,
	2, -195, -195, 318, 27, 2, 27, 312, 370, 408,
	410, 2, -495, -276, 2, 27, -198, -195, 92, 174,
	368, -217, 2, -495, -276, 24, 2, -195, 2, -199,
	2, 361, -195, 494, 87, 243, 68, 357, 373, -111,
	424, -110, 416, 363, -112, -427, 2, 263, -195, 494,
	494, 494, 27, -207, -195, 406, 201, 106, 403, 494,
	2, 406, 305, 455, 369, 106, 327, 201, 431, -504,
	353, 177, 444, -493, 2, -489, 4, -440, -436, -235,
	-234, 406, 106, -231, -223, 484, -230, 494, 494, 494,
	2, 218, 219, 326, 325, 373, 374, 494, 494, 2,
	26, 60, 86, 89, 112, 145, 165, 168, 291, -512,
	252, 302, 324, 372, 405, 413, 426, -503, 391, 62,
	363, -502, -504, 431, 124, -323, 106, 243, 173, 438,
	410, 408, 436, 118, 207, 441, 440, 494, 26, 60,
	71, 89, 124, 145, 165, 168, -514, 302, 324, 360,
	363, 372, 405, 413, 426, 2, 455, 369, 406, 201,
	106, 431, -504, 322, -82, 2, 491, 31, 30, 376,
	-160, 406, 212, 2, -195, 218, 219, 2, 494, 494,
	166, -489, 2, 218, 219, 2, 212, 2, 62, 365,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 2, -142,
	373, 391, 183, 44, 68, 27, 323, 73, 306, 107,
	175, 201, 202, 226, 86, 87, -325, 43, 219, 218,
	-377, 407, 364, 370, 402, 361, 424, 92, 445, 354,
	467, 327, 328, 139, 4, 106, 263, 375, 416, 243,
	78, -521, 2, 406, -523, 2, 424, 424, 2, -523,
	2, -523, 2, -523, 2, -524, 424, 464, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, -165, -167, -166, 494, 494, 494,
	494, 494, 494, -142, 373, 2, 68, 27, -269, -271,
	435, 210, 133, 292, -164, -166, 2, -469, -425, 2,
	-351, -443, -353, 482, 483, 475, 404, 61, 272, 468,
	-365, 112, 436, 286, -442, -354, -367, 136, 357, -291,
	8, 9, 5, 6, 7, -204, -355, -361, 428, 148,
	276, -238, 495, 10, 491, -466, -166, -366, 36, 178,
	59, -429, -237, -205, -401, 211, -236, -223, -463, -464,
	4, -436, -437, -430, -404, -412, -408, -409, -415, -195,
	-439, 71, 98, 99, 97, 102, 101, 245, 244, 103,
	100, 375, 444, 60, 35, 186, 187, 215, 277, 188,
	69, -465, 125, -438, 208, 209, 384, 48, 330, 158,
	111, 110, 279, 52, 50, 452, -413, 108, 416, 417,
	418, 419, 170, 171, 146, 147, 299, 315, 400, 425,
	427, 176, 235, 94, 167, 206, 190, 214, 216, 220,
	236, 239, 264, 270, 274, 296, 298, 352, 381, -527,
	453, 395, 63, 64, -471, 331, -472, -217, -471, 494,
	494, 496, 494, -263, -264, -265, 2, 27, 122, 491,
	2, -381, 2, -382, -386, -166, 230, -385, 491, -383,
	489, -224, 287, -467, 358, -463, -464, -204, -223, -237,
	4, -436, -438, 493, -266, 491, 106, 406, 72, 201,
	-318, 491, -195, 27, 286, 420, 496, -363, 491, 286,
	166, 289, -195, 2, 2, 377, 2, 491, -111, 65,
	424, 42, 373, -338, 2, -339, -192, -193, -194, -391,
	217, 321, 329, 470, 467, -425, -505, 166, 474, 420,
	-425, -292, 493, 2, 2, 2, 2, 2, -386, 186,
	-224, 2, -221, -428, 4, -436, -440, -437, -441, -439,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 53,
	59, 60, 66, 70, 72, 81, 86, 92, 97, 98,
	100, 99, 101, 102, 103, 112, 116, 119, 122, 123,
	127, 130, 133, 148, 150, 163, 165, 166, 174, 177,
	180, 193, 205, 210, 212, 230, 233, 240, 244, 245,
	272, 276, 282, 286, 287, 291, 292, 310, 320, 333,
	349, 368, 375, 387, 401, 406, 414, 420, 422, 428,
	435, 436, 444, 446, 454, 458, 459, 460, 461, -442,
	71, 2, -386, 186, 2, -226, 186, -386, -229, 2,
	-208, -195, 2, -220, -428, 2, -242, 186, -224, -225,
	-229, -227, 2, -229, -434, 186, 2, -432, 10, -431,
	5, 4, -436, -440, -437, 420, 496, -282, -234, -235,
	-275, -195, 493, -351, 2, -100, 2, -351, 186, 2,
	-100, 186, 2, -351, 186, 2, -100, 186, 2, 2,
	2, 426, 2, 89, 186, -195, 406, 105, 2, 343,
	-513, 360, 430, 455, 2, 2, 2, 2, 2, 2,
	406, -213, 2, -195, 163, -233, 186, 2, -195, 369,
	-522, 331, -434, 186, 2, -227, 2, -227, 201, 213,
	-208, 186, 2, 410, 408, 410, 408, 166, 2, 212,
	2, 212, 2, -387, 2, -388, -382, -224, 489, 2,
	2, 2, 2, 2, 186, -195, 406, 105, 2, 228,
	2, 2, 2, 2, 2, 2, 2, 2, -284, 186,
	2, -224, -284, 186, 2, -284, 186, 2, -324, 2,
	81, -208, 186, 2, -232, 186, 2, -227, -435, 186,
	2, -434, -395, 2, -394, -431, 451, -82, 491, -82,
	491, 373, 491, -434, -224, -224, -351, -100, -98, -97,
	-434, 491, 166, -351, -100, -160, 163, 2, 106, 406,
	-142, 2, 163, 446, 2, 8, 2, -434, 364, 328,
	155, 2, 377, 2, 378, 68, -325, 467, 68, 166,
	2, 166, 2, -308, 2, 461, -492, 2, 286, 166,
	2, 166, 2, 166, 2, 166, 2, 166, 2, 325,
	374, 219, 2, -100, 458, -351, 458, 2, 423, 227,
	140, 166, -308, 2, 166, 2, 166, 2, 5, 2,
	392, 2, 217, 321, 392, 2, -224, -516, 2, 406,
	455, 369, 2, 2, 82, 83, 166, 2, 166, 2,
	166, 467, 2, -301, -386, -337, -338, -337, 420, -269,
	-271, -142, 377, 2, -171, -299, -173, 163, -327, -328,
	-174, 240, 150, 282, -175, -307, 27, 122, -307, -307,
	55, 492, 492, 11, 12, 70, 40, 482, 483, 484,
	485, 161, 486, 487, 480, 481, 479, 472, 473, 477,
	223, 224, 88, 476, 474, 80, 250, 359, 151, 152,
	153, 154, 340, 199, 33, 200, 14, 15, 16, 32,
	291, 239, 468, 190, 381, 475, 17, 18, 19, 214,
	216, 274, 47, 193, -203, -244, -351, -351, -351, -351,
	-351, -351, -351, 298, 491, -297, -346, 489, -166, 491,
	491, 491, -424, 8, -166, -351, -365, 492, -289, 491,
	-166, -365, -360, 491, 357, 489, 491, -368, -351, 5,
	5, 5, 491, 493, -474, 462, 163, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 317, -406, 491, -405, 491, -405, -405, 456,
	-403, 491, 469, 463, 491, -403, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 456,
	496, -471, -266, 491, -293, -389, -351, 484, -293, -293,
	286, -286, -351, 94, -311, 220, 264, 167, 236, 352,
	206, -348, 495, -348, -376, 469, -166, -383, -223, -166,
	-385, 491, -381, -376, -83, -424, -68, -80, -88, -100,
	-113, -146, -147, 484, -224, 491, 166, 491, 493, -428,
	166, -275, -208, -224, -236, -237, -242, 121, -286, -489,
	-275, -198, 37, -362, -398, -399, -445, 495, -444, -401,
	-411, -407, -410, 313, 314, -430, 50, 452, -413, 211,
	4, -436, -438, 208, 209, 384, 48, 330, 158, 111,
	110, 279, 52, 416, 417, 418, 419, 170, 171, 453,
	395, 63, 64, -489, -275, 163, -427, -286, 37, -338,
	2, 112, -432, 42, -525, 496, 238, -246, 249, 271,
	182, 287, 465, 280, -433, 5, 4, -361, -373, 112,
	243, 211, -418, -420, 8, -419, 9, -421, 482, 483,
	-426, -425, 96, 493, -428, -182, 341, -181, 23, 28,
	126, 449, 141, -256, 203, 305, 136, 388, 439, -499,
	-500, 362, 411, 412, 84, 280, 341, 136, -304, -306,
	37, 104, 266, 300, 56, 196, 254, 255, 390, 457,
	136, 341, -500, 341, -500, -184, 388, 439, -499, -500,
	362, 341, -183, -256, 136, 495, 23, 341, 376, 301,
	-509, -510, 126, 28, -496, -468, 461, 136, -97, -282,
	496, 496, -428, 484, 136, 136, 136, 136, 2, 2,
	272, 2, 2, 2, 168, -502, -514, 2, 2, 2,
	-224, 186, -268, 286, -491, -283, 406, -224, 272, -226,
	186, 2, -229, 455, -496, 272, 37, 491, 2, -324,
	2, 201, -468, 272, -387, -239, -224, -382, -239, 376,
	-217, 37, -348, -348, 136, 2, 2, 2, -195, -185,
	496, 58, 347, 136, -185, 136, -185, 136, -243, 186,
	-242, -185, 136, -185, 496, 136, 496, 136, 492, 496,
	-395, -395, -434, -155, 461, 166, 92, 491, 491, -160,
	-392, 496, -391, -435, -98, -434, -491, -208, 2, -224,
	2, 406, 221, -155, -434, -434, -434, -427, 27, 378,
	2, 325, 374, 83, 378, 2, -224, 406, 106, 201,
	74, -494, 163, -490, 353, -489, -224, 106, -224, 106,
	-224, 106, -224, -224, 2, 2, 2, 2, 79, 79,
	163, 2, 423, 2, 423, 2, -195, -195, -195, 238,
	-224, 163, 406, 201, 406, 201, 106, 406, -185, 496,
	-199, -171, -299, -427, -300, -299, -172, -171, -174, 163,
	329, 440, 266, 379, 225, -328, -327, 27, -351, -332,
	157, 265, -351, -330, -353, 482, 483, -419, -421, -285,
	280, -165, -165, -165, -272, -378, -351, 320, 201, -400,
	-398, -398, -222, -428, 416, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	239, 190, 381, 47, 193, -351, 420, -351, -351, -351,
	-351, 261, 272, 276, 428, 148, 437, 122, 280, -528,
	401, 39, -358, -166, -290, 491, -372, 34, 387, 27,
	-365, 491, 2, -346, -351, -347, -287, -286, -286, 492,
	454, 27, 122, 484, 2, 492, 496, 37, 492, -351,
	-287, -364, -360, -286, -371, -370, 458, -319, -320, 466,
	257, 109, 184, 256, -321, 367, -422, 8, -428, 484,
	-475, 156, 177, 491, 492, 2, 492, 2, 492, -351,
	2, 492, -351, 2, 492, -351, 2, 492, -351, 2,
	492, 2, -351, -351, -351, -351, -351, -351, -351, -286,
	8, -422, -422, 416, 416, -422, -422, -422, -414, 313,
	241, 314, 172, 260, 258, 259, 171, -414, -313, 2,
	-416, -286, 4, 466, 257, 109, 184, 256, 367, 5,
	-313, 2, -314, 2, -351, -286, -315, -352, -353, 482,
	483, 475, -365, -316, 2, -351, -287, -351, 53, 233,
	422, -317, -351, 166, -286, -286, 2, -286, 2, -472,
	37, -286, -278, 496, 166, 37, 4, -278, -278, 491,
	492, 496, -312, 181, 253, 248, -312, -381, -311, 220,
	-309, 296, -309, -309, -376, -209, 489, 497, -428, -376,
	-375, -374, 37, -217, 293, -376, -376, 493, 492, -375,
	490, -487, 491, 494, 494, 494, 494, 494, -224, 491,
	-286, -428, 493, 393, 492, 214, 214, 214, 214, 358,
	492, 420, 461, -82, 288, 492, 496, -277, 36, 489,
	493, -422, 2, 2, -417, 456, 491, 491, -320, 491,
	166, -276, -505, 492, 424, -339, -245, 329, 386, 342,
	371, 403, 8, 9, 8, 9, 496, -428, 496, -506,
	86, 420, 72, -342, 186, 72, -446, -211, 86, -447,
	-195, 66, 436, 320, 165, 134, -506, 86, 320, -506,
	86, 86, 376, 391, 55, -386, 40, 40, 27, -100,
	234, 166, 467, 406, 201, 420, -386, -306, -398, 104,
	254, 255, 55, -423, -418, 482, 483, -423, 55, -423,
	-423, -423, 461, -226, -386, 420, 420, 496, 40, 40,
	27, -100, 234, 166, 420, -242, -209, 450, 41, 450,
	420, 41, 363, 420, 496, 41, 41, -497, -200, 93,
	267, 247, 268, -201, -202, 307, 448, -434, -392, -234,
	-195, 493, -351, -100, -351, -100, 136, 2, -522, 228,
	491, -249, 272, 166, -275, -393, 212, 496, -283, 136,
	-305, -304, 272, -228, 186, 2, -224, 136, 131, 491,
	327, 2, -210, 186, -196, -195, -324, -188, 409, 136,
	-303, 446, -333, -100, 491, 112, 37, -333, -294, -295,
	-390, -296, -211, 491, -217, -195, 2, -224, -284, -284,
	-284, -185, 496, 136, -208, -227, -232, -434, -435, -82,
	-394, 492, 492, 492, -154, 290, -153, -195, 5, -160,
	446, -248, -343, -342, -450, -451, -446, 239, 201, 436,
	213, 149, -267, -212, -211, 105, -155, -97, 492, -392,
	-155, -155, -392, -392, -224, 163, -155, -155, -155, 2,
	2, -308, -224, -208, -242, -224, -275, -275, -308, -208,
	-308, -208, -308, -208, -100, -351, 373, 163, 163, 493,
	-308, 327, 106, 406, 305, 201, -224, -242, -224, -242,
	-208, -224, -386, -300, -172, 287, 225, 379, -330, -331,
	-353, 357, 358, -331, 357, 358, 8, 9, 8, 9,
	-176, 383, 275, -284, 496, -179, 38, 119, 225, -224,
	467, 132, -351, -351, 420, -528, 401, -358, 132, -351,
	261, 276, 428, 148, 437, 122, 280, 166, 491, -352,
	-352, 492, -288, -351, -351, 490, 499, 492, -271, 496,
	-269, -351, -286, -286, 492, 493, -286, -275, 490, 490,
	496, 492, -369, -370, 127, -351, 420, 420, 420, 420,
	491, 492, 493, -480, 297, 491, 491, -351, 492, 492,
	492, 492, 37, 496, 496, 496, 492, 496, 496, 496,
	492, 492, 492, 496, 492, 467, 467, 492, 492, 492,
	492, 496, 492, 496, 492, 166, 492, 492, -322, 310,
	492, 11, 12, 482, 483, 484, 485, 161, 486, 487,
	480, 481, 479, 472, 473, 474, 80, 250, 359, 14,
	15, 16, 214, 193, -352, -352, -352, 492, -356, -357,
	166, 163, 37, -317, -317, -317, 492, 166, -286, 492,
	492, 491, -473, 252, 272, 492, -345, -344, 459, -389,
	-279, 2, -381, -219, -428, -345, -345, -286, -351, 220,
	220, -310, 446, 286, -312, -381, -375, -424, -350, -349,
	164, 38, 119, 269, 189, -375, -217, -266, -375, -375,
	-428, -376, -376, -374, 492, -488, -424, 492, -280, -384,
	-467, -271, 493, -428, -155, -143, 5, 276, -143, -143,
	-143, -275, 24, 311, -398, 489, 490, 8, -428, 491,
	-422, -422, -422, -275, 166, -425, -338, 434, 77, 329,
	416, -425, -181, 341, -211, -211, -224, 272, -342, 186,
	-187, 272, -398, -218, -195, 491, 491, 225, 225, 446,
	-211, -218, 225, 186, -211, 186, -218, -218, -498, 329,
	281, -351, 242, 327, 273, -182, 341, -100, -100, -100,
	491, -505, 446, 121, -224, -242, -224, -228, 341, 270,
	-236, -423, -423, -304, 341, -226, -208, -183, -100, -100,
	-100, 491, -209, -184, 341, 5, 186, -211, 5, -227,
	-211, -233, -508, -432, 103, 375, -510, 23, -211, 186,
	-211, -200, -434, 276, 442, -496, -152, 197, 484, -195,
	455, -195, -247, -250, -248, -211, -163, 463, 461, 136,
	-240, -224, 489, -155, -434, -224, -233, 136, -266, 272,
	-434, 491, 2, 2, 286, 272, -210, 186, -189, 128,
	-526, 474, -208, -345, -279, -302, -336, 349, 286, -267,
	451, -217, -302, -281, 496, 166, 474, 493, -267, 2,
	-185, -185, -185, -242, -243, -185, -185, -82, -82, -155,
	496, 491, 474, 474, 491, -434, -434, 492, 496, -224,
	-210, 201, 201, -216, -196, 492, 496, 493, 491, -155,
	166, -46, 461, 406, 495, -308, -308, -308, 373, 373,
	-195, -220, -208, -224, -221, -242, 163, 163, 440, -331,
	287, 246, -378, -180, 278, -224, 495, -351, -351, 132,
	132, -351, -352, -352, -351, 132, 166, 491, -351, -362,
	32, 32, 492, 496, -347, -351, 492, 454, -271, -271,
	492, 484, -428, 495, 492, -360, 130, -351, 414, 257,
	184, 256, -321, 256, -321, -321, -422, 5, -428, 484,
	-481, -214, 491, -195, 459, -270, 292, 492, -400, -398,
	-351, -351, -351, -351, -351, -422, -403, -403, -418, -418,
	-351, -356, -351, -400, -398, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, 122, 272, 280, -352, -357, -356,
	-351, -351, -398, 492, 492, 492, -286, -82, 491, 252,
	-298, 177, -351, -392, 496, -298, -298, 492, -381, -381,
	491, -351, 220, 490, 496, 498, 474, -266, 493, -374,
	-375, 490, 492, 496, 492, 496, -335, 37, 492, -428,
	289, 5, 8, 489, 490, 493, -422, 492, 492, 492,
	-275, -351, 420, 420, 136, 272, 448, -452, -447, 134,
	-351, -273, -379, -351, 491, 491, 2, -178, 126, 376,
	-507, 2, 446, 136, -185, 136, -185, 465, 491, 491,
	420, 461, -286, -351, -156, 112, -427, -500, 495, -500,
	495, 420, 420, 461, -286, 420, -402, 45, 25, 272,
	-227, 420, 420, -185, 136, 431, 376, -434, 276, -157,
	461, 166, 2, -228, 2, 492, 492, 496, -453, 37,
	284, 491, 284, -224, -64, 461, -391, -424, -226, 37,
	136, -496, -396, -397, 5, -224, 136, 286, 272, -190,
	232, -526, -432, -468, -271, -302, -293, 273, 85, 492,
	-345, -295, -279, -351, 2, 492, -185, -153, -154, -434,
	-434, -434, -155, -160, -160, -343, -251, 491, -210, -196,
	491, -160, -212, 2, -435, -100, 290, -224, 484, -308,
	-258, -257, 305, 280, -258, 357, 357, 287, 157, 229,
	-179, -209, -351, -351, 132, 32, 32, -351, -351, -362,
	492, -351, -351, -286, 490, 5, -351, 492, 492, 8,
	-351, 492, 493, -482, -195, -351, 492, 55, 492, 492,
	496, 496, 492, 492, 492, 492, 492, 492, 492, -357,
	166, 122, 280, 491, 492, 492, -82, -359, 180, 55,
	-381, -359, -359, -310, -275, -381, -349, -209, 489, -428,
	-424, -384, 491, 493, 490, 2, 489, -428, 492, -211,
	-211, -342, 136, -454, 86, -456, 70, 149, 92, 272,
	276, 436, 320, 66, 112, 333, -518, 37, 471, 492,
	492, 496, -179, -273, -275, 272, 398, 112, 272, 112,
	105, 431, 73, -211, -218, -275, -275, -224, 142, 492,
	496, 474, 2, 484, 484, -228, -226, 142, 492, -209,
	5, 5, 136, -206, 70, 5, -211, -211, -227, 105,
	-159, 290, -158, 129, 350, 120, -435, -266, -254, 204,
	-211, -451, -448, -449, 320, -455, -457, 149, 320, -100,
	-162, -161, -195, 5, 2, 491, -249, 290, 490, -305,
	-100, -228, 492, 496, -326, 446, -209, -224, 136, -191,
	231, -526, -432, -188, -329, -327, -334, 491, 286, -100,
	-271, 474, 492, 492, 105, 105, 195, 135, -273, 491,
	491, -275, 105, 492, -47, -48, 201, 86, 309, -221,
	406, 201, 491, 491, -179, -351, -351, -351, 492, -271,
	-428, 484, -476, 305, 492, -378, -351, -351, -352, 166,
	491, -362, 492, -477, 460, -351, -286, -477, -477, 492,
	-424, 2, 489, 2, -342, -218, -222, -215, -195, 149,
	186, 276, 225, 491, -352, -224, 491, 2, 29, -519,
	116, 205, -341, -520, 91, 399, 194, -379, -180, 492,
	492, 276, 276, -351, -398, 491, -185, -185, 492, 492,
	-351, 420, -427, 90, -425, 2, -500, -351, 420, 5,
	-185, -222, -185, -185, -206, 431, 496, 491, 474, 37,
	-255, -256, 193, -453, 225, -215, 225, -517, 461, 492,
	496, 474, 474, -247, -163, -65, -66, 421, -391, -266,
	5, 491, -195, 286, 491, -209, -526, -432, -189, -302,
	123, -275, 86, -329, -358, -155, 491, 491, -252, 75,
	87, 113, 185, 169, 202, 391, 396, 27, -252, 492,
	-273, -273, 492, 491, -155, 496, 27, 491, 27, 491,
	-224, -242, -286, -286, 492, -271, 55, 496, 492, 492,
	-352, -362, 492, -478, -479, -214, 490, 2, -456, -215,
	272, 446, -351, -197, 491, -351, 37, 205, 117, 191,
	-254, 491, -340, 446, 333, -206, -273, 491, 491, 491,
	474, 166, 491, -402, -185, -227, -158, -159, -434, -100,
	-163, 303, 491, -253, 286, 105, 266, -161, -354, -354,
	492, 37, -66, 9, 37, -273, -224, -273, 286, -432,
	-190, 440, 273, 492, -218, -302, -435, -435, -340, 492,
	492, -435, -48, -275, -275, 492, 492, -483, 327, 358,
	179, -286, -272, 492, 496, 37, 136, 181, 492, -458,
	251, -195, 492, 117, 191, -255, -275, -254, 181, -224,
	-501, 446, 492, -260, -259, -257, -262, -261, -257, -286,
	-425, 90, 303, -286, -206, 492, -253, -224, -274, -380,
	-211, 76, 105, -254, -100, -100, 492, -326, 492, -224,
	-191, 376, -344, 492, 492, -341, -340, -345, 492, 492,
	492, 492, -484, -485, 47, 433, 96, -351, -484, -484,
	-479, -481, 149, 461, -459, -462, -461, 286, 382, 167,
	304, 492, 398, 457, -519, 492, 461, -266, -351, -340,
	492, 496, 451, 492, 496, 451, 492, 166, 492, -185,
	491, 492, 496, 319, 118, 126, -255, -517, -340, 491,
	-341, 491, -294, -155, -155, -254, -341, -155, -486, 134,
	-485, 316, 162, 357, 316, 162, -486, -486, -215, 51,
	-461, 286, -462, 286, 440, 118, -345, 51, -458, -254,
	-259, 193, -261, 166, 303, -275, -380, 358, 358, 2,
	-163, -253, -341, -273, -254, -273, -345, -255, -254, 96,
	177, 415, 266, 32, 474, -460, 266, 347, 58, 376,
	-460, 474, -459, 491, 491, 492, 2, -253, -254, 492,
	-255, 492, -345, -255, 357, 294, -485, -351, 22, 276,
	112, -351, -519, -286, -286, -186, 58, 347, -255, -340,
	-345, -341, -345, 492, 492, -345, -341, -254, -255, 420,
	-254, -255, 491, -255, -345, -286, -345, 492, -255,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 413, 414, 416, 417, 418, 420, 421, 423, 425,
	427, 429, 430, 432, 434, 436, 437, 438, 439, 440,
	442, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 504, 0, 1035, 1037, 1039,
	1041, 0, 632, 0, 30, 31, 0, -2, 228, 230,
	232, 0, 257, 259, 260, 262, -2, 0, 358, 359,
	361, -2, -2, 0, 0, 491, 493, 0, 0, 0,
	513, 514, 0, 1123, -2, 507, 509, 511, 576, 578,
	580, 582, 584, 586, 588, 589, 591, 593, 595, 597,
	599, 601, 603, 604, 606, 608, 610, 612, 614, 616,
	618, 620, 622, 624, 626, 628, -2, -2, -2, 0,
	-2, -2, -2, 1053, 34, 36, 38, 40, 42, 44,
	46, 48, 309, 310, 312, 314, 316, 318, 321, 323,
	325, 1181, 363, 365, 367, 369, 371, 373, 0, -2,
	1193, 0, 0, 50, 51, 52, 53, 54, 55, 56,
	57, 73, 74, 75, 76, 77, 78, 79, 80, 61,
	63, 64, 68, 69, 71, 59, 0, 0, 1154, 1156,
	1158, 1160, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 415, 419, 422, 424, 426, 428,
	431, 433, 435, 441, 443, 445, 400, 401, 404, 1813,
	1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 2194,
	2275, 2276, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 402, 403, 915, 0, 469,
	467, 1806, 470, 2026, 472, 474, 352, 353, 354, 355,
	356, 357, 0, 484, 478, 483, 485, 487, 488, 489,
	490, 464, 462, 0, 484, 1865, 482, 1033, 1034, 1028,
	1029, 2058, 1060, 503, -2, -2, -2, 2160, -2, 535,
	-2, 542, 2164, 2060, 547, 0, 549, -2, 552, 1036,
	1038, 1040, 630, 631, 1816, 0, 0, 0, 0, 32,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	964, 965, 966, 0, 182, 184, -2, -2, -2, -2,
	0, 0, 1906, 1774, 1832, 1777, 1772, 229, 231, 233,
	234, 0, 0, 0, 0, 0, 0, 258, 261, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 810,
	802, 803, 1005, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 0, -2,
	0, 0, 0, 288, 405, 406, 0, 1182, 1182, 0,
	0, 0, 0, 209, 200, 0, 0, 779, 492, 494,
	0, 0, 195, 0, 0, 1032, 0, 211, 0, 0,
	508, 510, 512, 577, 579, 581, 583, 585, 587, 590,
	592, 594, 596, 598, 600, 602, 605, 607, 609, 611,
	613, 615, 617, 619, 621, 623, 625, 627, 629, 637,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, -2, -2, -2, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 640, 642, 643, 644, 0, 695,
	712, 0, 955, 1183, 1062, 1043, 1057, 1062, 1045, 1046,
	1047, 1048, 1049, 1054, 1056, 1050, 1051, 1052, 35, 37,
	39, 41, 43, 45, 47, 49, 311, 313, 315, 317,
	319, 322, 324, 326, -2, 1152, 1153, 364, 366, 368,
	370, 372, 374, 495, 0, 497, 0, 641, -2, 0,
	1187, 1187, 1187, 0, 0, 1153, 1151, 0, 500, 501,
	556, 557, 1417, 0, 0, 0, 0, 0, 0, 0,
	1671, 1503, 0, 558, -2, 1534, 1536, 2135, 2160, 1670,
	1538, 1539, 1540, 1541, 1542, 0, 1544, 1545, 1546, 1547,
	1548, 1549, 0, 1551, 0, 1556, 1557, 1558, 0, 2142,
	1751, 1826, -2, 0, 0, 2148, 1822, 0, 1637, 1574,
	-2, -2, 1849, 1828, 1349, 1350, 1351, 1352, 1353, -2,
	-2, 2177, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 0, 2124, 2143, 2144, 2149, 2151, 2145,
	2132, 1599, 1917, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1376, 1385, -2, -2,
	-2, -2, -2, -2, 2136, 2137, 2154, 2157, 2163, 2168,
	2169, 2141, 2150, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 1377,
	-2, -2, -2, -2, 1170, 2036, 1173, 915, 1171, 1155,
	1157, 0, 1159, 0, 0, 0, 1164, 1190, 1188, 0,
	1231, 1168, 1169, 1249, 1249, 1273, 0, 1254, 0, 1273,
	1182, 1299, 0, 1260, 2053, 1575, 1576, 0, 1832, 1827,
	-2, -2, 2175, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 471, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 1059, 505, 506, 0, 530, 0, 534, 2131,
	-2, 1873, 2069, -2, 538, 1063, 1067, 1068, 1069, 1070,
	0, 0, 0, 0, 0, 544, 0, 0, 531, 532,
	550, 553, 0, 633, 634, 635, 636, 58, 0, 2143,
	1299, 60, 0, 1796, 1857, 1858, 1859, 1860, 1861, 2176,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2177, 62, 0, 2143, 65, 0, 2143, 0, -2, 70,
	0, 1802, 72, 0, 1799, 81, 0, 2143, 0, 1771,
	-2, 0, 167, 1810, -2, 2143, 963, 212, 213, 1845,
	1846, 1853, 1854, 1855, 1856, 0, 0, 771, 1768, 1773,
	772, 1778, 0, 235, 236, 237, 238, 239, 2143, 241,
	242, 0, 244, 245, 2143, 247, 248, 0, 250, 264,
	265, 0, 267, 0, 2143, 0, 0, 0, 273, -2,
	289, 0, 286, 0, 277, 278, 280, 281, 282, 283,
	0, 330, 328, 1807, 0, 780, 2143, 782, 1812, 0,
	0, 984, -2, 2143, 960, 990, 986, 0, -2, 0,
	1180, 2143, 1077, 806, 807, 808, 809, 0, 349, 0,
	1090, 0, 1092, 0, 1113, 1305, 1249, 1249, 0, 290,
	291, 292, 293, 294, 2143, 0, 0, 0, 299, 0,
	301, 302, 303, 304, 305, 306, 307, 308, 156, 2143,
	377, 398, 156, 2143, 380, 156, 2143, 383, 0, 386,
	1003, 156, 2143, 389, 156, 2143, 392, 393, 395, 2143,
	397, 214, 0, -2, 458, 1815, -2, 408, 0, 409,
	0, -2, 0, 226, 0, 0, 777, 778, 1286, 198,
	196, 0, 0, 1030, 1031, 0, 0, 515, 0, 0,
	638, 639, 0, 0, 649, 650, 651, 226, 2061, 2034,
	1935, 656, 0, 659, 662, -2, 0, 0, 0, 0,
	666, 0, 671, 672, 673, 0, 776, 675, 0, 0,
	677, 0, 681, 0, 684, 0, 686, 0, 688, -2,
	-2, -2, 699, -2, 0, 703, 0, 705, 0, 0,
	0, 0, 720, 721, 0, 726, 0, 729, 730, 731,
	732, 733, 0, 735, 736, 737, 738, 0, 740, 741,
	-2, -2, 745, 747, 0, 754, 0, 758, 0, 762,
	0, 645, 646, 156, 1303, 1042, -2, 1044, 0, -2,
	0, 496, 0, 499, 1210, 1138, 1135, 0, 1207, 1208,
	1139, 0, 0, 0, 1146, 0, 1185, 1186, 0, 0,
	0, 1125, 1126, 0, 0, 0, 0, 1676, 1677, 1678,
	1679, 1680, 1681, 1684, 1685, 1682, 1683, 1686, 1687, 0,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1689, 1690, 1691, 0,
	0, 1693, 0, 1695, 0, 0, 0, 0, 0, 0,
	1482, 1484, 1759, 0, 0, 1692, 1422, 1423, 1424, 1425,
	1426, 1461, 1462, 0, 0, 1535, 1756, 1755, 1537, 0,
	1707, 0, 1550, 1792, -2, 0, 1671, 1702, 0, 0,
	1559, 1560, 1561, 0, 0, 1707, 0, 0, 1750, 1571,
	1572, 1414, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 1362, 0, 1364, 0, 1365, 1366, 1373,
	1386, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 1731, -2, 0, 0, 0, 0, 1378,
	0, 1172, 0, 0, 1235, 1760, 1764, 1765, 1235, 1235,
	0, 0, 1708, 1296, 1296, 0, 0, 1292, 1292, 1292,
	1290, 1273, 0, 1273, 1283, 0, 1273, 1273, 0, -2,
	1254, 0, 0, 1283, 0, 1267, 446, 448, 450, 452,
	453, 454, 456, 1300, 1301, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	476, 486, 1182, 0, 1710, 1322, 1326, 0, 1328, 1329,
	1330, 1331, 1332, 0, 0, 1323, -2, 1374, 1376, 1397,
	1850, 1851, 1852, 1357, 1358, 1359, 1360, 1361, 1369, 1356,
	1356, 1356, 1367, 1396, 1388, 1396, 1392, 1343, 1344, 1379,
	1380, 1381, 1382, 0, 480, 0, 0, 0, 0, -2,
	540, 545, 546, 0, 0, 1065, 0, 1071, 567, 568,
	569, 1073, 1074, 0, 543, 570, 571, 572, 573, 574,
	575, 0, 1780, 1781, 1782, 1783, 1786, 1787, 0, 0,
	541, 560, 548, 0, 554, 82, 1025, 121, 0, 1025,
	1025, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	106, 117, 94, 95, 0, 0, 0, 0, 66, 937,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 105, 0, 100, 84, 0, 0, 0, 107,
	119, 0, 147, 149, 0, 0, 0, 0, 0, 0,
	166, 174, 0, 0, 961, 0, 1179, 0, 1286, 770,
	0, 0, 1833, 1776, 0, 0, 0, 0, 266, 268,
	0, 270, 271, 272, 0, 983, 0, 279, 276, 320,
	886, 2143, 0, 0, 347, 342, 0, 344, 0, 936,
	2143, 934, 1811, 0, 958, 0, 0, 0, 991, 1842,
	1000, 1004, 1079, 0, 351, 0, 1093, 1095, 0, 0,
	1306, 0, 1308, 1309, 0, 296, 297, 298, 0, 375,
	0, 154, 155, 0, 378, 0, 381, 0, 156, 2143,
	1766, 387, 0, 390, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	226, 0, 1285, 0, 1286, 226, 226, 1286, 517, 1286,
	519, 0, 0, 652, 226, 226, 226, 657, 658, 660,
	661, -2, -2, 755, 663, 664, 723, 0, 0, 0,
	722, 674, 0, 764, 2049, 774, 723, 1906, 723, 1906,
	723, 1906, 685, 687, 690, 715, 698, 702, 0, 0,
	0, 707, 0, 709, 0, 711, 723, 724, 727, 734,
	739, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	1055, 1210, 1138, 498, 1129, 1209, 1130, 1137, 1140, 0,
	0, 1142, 0, 1144, 0, 1205, 1206, 1213, 1214, 0,
	1224, 1225, 1217, 0, -2, 0, 0, 1220, 1221, 1148,
	0, 1165, 1166, 1167, 1194, 1197, 1014, 0, 2275, 1418,
	1317, 1419, 1420, 1795, 0, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, -2, -2, -2, -2, -2,
	-2, -2, -2, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, -2, -2, -2, 1459, 1460, -2,
	1694, 1696, 0, 1759, 0, -2, 0, -2, -2, -2,
	-2, 1479, 0, 1481, 1486, 1488, 1490, 0, 0, 0,
	0, 1758, 1500, 1742, 1743, 0, 0, 1673, 1674, 1675,
	1485, 0, 1504, 1757, 1754, 0, 0, 1706, 1193, 1563,
	0, 0, 0, 0, 1570, 1555, 1704, 0, 1703, 0,
	0, 0, 1714, 0, 1749, 1745, 0, 1793, 1413, 1400,
	1401, 1402, 1403, 1404, 1405, 1415, 0, 1790, 1819, 1825,
	1647, 0, 0, 0, 1600, 1601, 1602, 1603, 1604, 0,
	1606, 1607, 0, 1609, 1610, 0, 1612, 1613, 0, 1615,
	1616, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 0, 0, 1619,
	0, 1717, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1621, 0, 1623, 1708, 1728, 0, 0, 1505, 0,
	0, 0, 1671, 0, 1626, 1708, 1736, 0, 0, 0,
	0, 0, 1708, 0, 1741, 0, 1633, 0, 1635, 1174,
	0, 0, 1312, 0, 0, 0, 1763, 1312, 1312, 0,
	1230, 0, 0, 1293, 1294, 1295, 0, 0, 1296, 0,
	1287, 1291, 1288, 1289, 1283, 1246, 0, 0, 1797, 1283,
	1252, 1282, 0, 915, 1272, 1283, 1283, 0, -2, 1256,
	1273, 0, 0, 447, 449, 451, 455, 457, 0, 0,
	1193, -2, 0, 226, 914, 0, 0, 0, 0, 466,
	468, 0, 0, 460, 0, 463, 0, 1313, 1316, 0,
	0, 1327, 1333, 1334, 0, -2, 0, 0, 1398, 0,
	0, 0, 0, 533, 0, 1064, 1072, 0, 564, 0,
	566, 0, 1784, 1788, 1785, 1789, 0, 555, 0, 0,
	0, 0, 1024, 125, 2143, 0, 158, 0, 0, 879,
	1803, 0, 0, 0, 0, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 96,
	0, 0, 0, 0, 0, 0, 0, 938, 939, 941,
	948, 950, 0, 944, 1791, 0, 0, 945, 0, 947,
	949, 951, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 97, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 977, 971,
	972, 973, 974, 975, 976, 0, 0, -2, 217, 1769,
	1779, 0, 240, 243, 246, 249, 0, 274, 0, 0,
	812, 785, 0, 0, 329, 226, 0, 0, 343, 0,
	932, 935, 0, 915, 2143, 970, 1809, 0, 0, 0,
	0, 989, 0, 2143, 1798, 1841, 1842, 1081, 1087, 0,
	1312, 0, 1111, 1096, 0, 0, 0, 1111, 1115, 1116,
	1118, 1119, 0, 0, 1307, 0, 300, 399, 156, 156,
	156, 384, 0, 0, 156, 394, 156, 215, 396, 407,
	459, 1182, 1182, 226, 224, 2010, 222, 219, 221, 0,
	0, 0, 813, 815, 816, 817, 818, 0, 1842, 0,
	1961, 1842, 0, 1099, 1101, 0, 193, 199, 197, 226,
	0, 341, 516, 521, 647, 0, 653, 654, 655, 692,
	717, 665, 667, 668, 669, 0, 775, 773, 676, 723,
	679, 723, 682, 723, 701, 704, 706, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 759, 760,
	761, 763, 1304, 1133, 1134, 1136, 0, 1145, 0, 0,
	1219, -2, -2, 1218, 1222, 1223, -2, -2, -2, -2,
	1141, 0, 1150, 1147, 0, 1204, 1012, 1013, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1501, 0, -2,
	1480, 1483, 1487, 1489, 1491, 0, 0, 0, 0, 0,
	0, 1697, 0, 1699, 1502, 1752, 1755, 1669, 0, 0,
	1192, 1193, 1193, 0, 1569, 0, 1705, 0, 1712, 1713,
	0, 1562, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 1605, 1608,
	1611, 1614, 0, 0, 0, 0, 1594, 0, 0, 0,
	1598, 1368, 1354, 0, 1396, 1394, 1395, 1389, 1396, 1393,
	1346, 0, 1345, 0, 1618, 0, 1620, 1622, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 1509, 1510, 1625, 1734, 1735,
	0, 0, 0, 0, 0, 0, 1631, 0, 1740, 1632,
	1634, 1182, 0, 1175, 0, 1232, 1227, 1311, 0, 1761,
	1286, 1234, 1236, 1762, 1800, 1227, 1227, 0, 1709, 0,
	0, 1277, 0, 0, 0, 1279, 1250, 0, 0, 1244,
	0, 1240, 1241, 1242, 1243, 1251, 915, 1281, 1253, 1257,
	1819, 0, 1283, 0, 1268, 0, 1270, 1302, 0, 1262,
	1265, 0, 0, 1834, 227, 251, 255, 256, 252, 253,
	254, 475, 0, 0, 1711, 0, 1318, 0, 1324, 0,
	0, 0, 0, 479, 0, 529, -2, 562, 563, 565,
	0, 561, 122, 1025, 0, 0, 1016, 0, 127, 2143,
	136, 0, 853, 0, 1801, 0, 0, 0, 0, 0,
	1027, 0, 0, 2143, 156, 2143, 156, 139, 142, 0,
	146, 144, 0, 0, 844, 83, 1025, 86, 90, 98,
	0, 0, 0, 104, 0, 0, 0, 1018, 0, 942,
	943, 946, 952, 67, 0, 1020, 1015, 148, 88, 92,
	99, 0, 1022, 85, 0, 170, 0, 0, 0, 162,
	0, 163, 164, 171, 172, 173, 175, 0, 156, 2143,
	0, 978, 956, 957, 0, 962, 187, 0, 1775, 0,
	0, 0, 0, 0, 811, 897, 0, 0, 0, 0,
	335, 331, 0, 340, 346, 345, 781, 0, 0, 0,
	-2, 993, 987, 988, 0, 0, 0, 2143, 1083, 1087,
	0, 1086, 1180, 1193, 350, 1088, 1111, 0, 0, 0,
	1098, 1094, 1091, 1312, 0, 0, 0, 0, 0, 295,
	376, 379, 382, 1767, 156, 388, 391, 410, 411, 201,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 822,
	0, 1842, 1842, 0, 1805, 0, 0, 0, 0, 194,
	0, 518, 0, 0, 0, 678, 680, 683, 708, 710,
	723, 748, 749, 839, 0, 839, 0, 0, 1143, 0,
	1216, 1149, 1198, 1199, 0, 1014, 0, 1421, 1464, 0,
	0, -2, 0, 0, 1468, 0, 0, 0, -2, 0,
	0, 0, 1698, 1700, 0, 1754, 1564, 0, 0, 0,
	1568, 1552, 1553, 0, 1672, 1715, 1744, 1748, 0, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 0, 1794, 1820, 1824,
	1645, 1646, 1650, 1808, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 1387, 1391, 0, 0,
	1716, 1727, 1729, 1506, 1507, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, -2, -2, -2, 1524, 1525,
	1526, -2, -2, -2, 0, 0, 0, 1730, 1732, 1733,
	1737, 1738, 0, 1628, 1629, 1630, 1739, 0, 1182, 1176,
	1229, 0, 1310, 1233, 0, 1229, 1229, 1189, 1275, 0,
	0, 1298, 0, 1247, 0, 1248, 0, 1280, 0, 1255,
	1258, 1259, 1269, 0, 1261, 0, 1264, 0, 1564, -2,
	477, 461, 0, 0, 1320, 0, 0, 1371, 1375, 1399,
	481, 1284, 0, 0, 0, 0, 157, 851, 878, 0,
	0, 0, 1007, 1014, 0, 0, 884, 129, 0, 0,
	0, 137, 0, 0, 134, 0, 141, 145, 0, 0,
	0, 0, 0, 101, 102, 103, 0, 108, 0, 109,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	1011, 0, 0, 177, 0, 0, 0, 981, 982, 181,
	0, 0, 269, 915, 275, 833, 885, 0, 887, 0,
	786, 0, 0, 886, 327, 0, 334, 0, 936, 0,
	0, 959, 0, 992, 994, 1002, 0, 0, 0, 1085,
	1087, 0, 1078, 1079, 1212, 1089, 1109, -2, 1108, 0,
	1193, 1117, 1114, 1120, 1121, 0, 385, 223, 0, 218,
	220, 0, 204, 0, 0, 814, 819, 0, 0, 0,
	0, 0, 1100, 1102, 0, 210, 0, 648, 670, 718,
	750, 838, 0, 0, 752, 0, 0, 1215, 1202, 1203,
	1200, 1014, 1466, 1470, 0, 0, 0, 1472, -2, 0,
	1494, -2, -2, 1701, 1753, 1543, 1193, 1565, 1567, 1554,
	1747, 1416, 0, 1652, 1649, 0, 1636, 0, 1589, 1590,
	0, 0, 1593, 1595, 1596, 1597, 1355, 1348, 1347, 1726,
	0, 0, 0, 0, 1627, 1177, 0, 1641, 0, 0,
	1237, 1641, 1641, 1276, 0, 1278, 1245, 1238, 0, 1820,
	1271, 1263, 0, 0, 1314, 1319, 0, 1325, 1370, 123,
	124, 126, 0, 852, 0, 855, 0, 0, 0, 0,
	862, 863, 0, 0, 0, 0, 0, 872, 0, 901,
	911, 0, 1204, 0, 0, 0, 131, 151, 0, 0,
	1026, 0, 0, 156, 156, 0, 0, 1017, 0, 0,
	0, 0, 111, 0, 0, 1019, 1021, 0, 0, 1023,
	168, 169, 0, 156, 0, 161, 156, 156, 1011, 0,
	185, 0, 188, 0, 191, 192, 216, 0, 841, 0,
	897, 889, 890, 891, 0, 896, 898, 0, 0, 799,
	0, 795, 0, 0, 788, 812, 785, 0, 332, 933,
	967, 915, 985, 0, 0, 0, 0, 0, 0, 1075,
	1087, 0, 1080, 1081, 1111, 1211, 0, 0, 0, 1097,
	1212, 0, 225, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 520, 522, 0, 0, 528, 837,
	0, 0, 0, 0, 1201, 1474, -2, -2, 1495, 0,
	1821, 1823, 1193, 0, 1638, 1195, 0, 0, -2, 0,
	0, 0, 1178, 1161, 0, 1228, 1226, 1162, 1163, 1297,
	0, 1266, 0, 1321, 128, 0, 856, 857, 1804, 859,
	0, 861, 864, 0, 867, 1844, 0, 871, 0, 880,
	902, 0, 833, 0, 907, 908, 909, 1008, 1009, 913,
	0, 130, 132, 150, 1011, 0, 133, 140, 0, 0,
	87, 0, 0, 1899, 114, 112, 110, 89, 0, 170,
	176, 1010, 165, 178, 156, 0, 0, 0, 0, 0,
	785, 840, 0, 888, 0, 899, 900, 789, 0, 787,
	0, 0, 0, 0, 0, 333, 336, 0, 339, 0,
	995, 0, 1001, 0, 0, 0, 0, 1082, 1083, 348,
	0, 0, 0, 1111, 1122, 203, 0, 0, 820, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 821, 913,
	0, 0, 877, 0, 208, 0, 524, 0, 526, 0,
	751, 753, 0, 0, 1566, 1656, 0, 0, 1591, 1592,
	-2, 0, 1532, 1640, 1642, 0, 1239, 1315, 854, 858,
	0, 0, 0, 919, 0, 0, 873, 0, 905, 906,
	841, 0, 833, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 160, 179, 1011, 189, 0, 190, 968,
	789, 0, 0, 797, 0, 800, 0, 796, 793, 794,
	833, 0, 337, 338, 0, 0, 1002, 0, 0, 1084,
	1085, 0, 1104, 1105, 1107, 1112, 0, 0, 911, 913,
	1312, 0, 523, 0, 0, 756, 757, 0, 0, 0,
	0, 1651, 1196, 1533, 0, 0, 0, 0, 866, 924,
	0, 0, 0, 903, 904, 901, 0, 882, 0, 915,
	135, 0, 913, 0, 845, 0, 0, 848, 0, 0,
	115, 1899, 113, 0, 156, 186, 783, 0, 0, 893,
	895, 0, 801, 841, 799, 969, 913, 0, 911, 0,
	1076, 0, 1106, 226, 226, 833, 911, 876, 226, 525,
	527, 1648, 1668, 1657, -2, 2104, 1903, 0, 1668, 1668,
	1643, 1644, 0, 0, 868, 920, 921, 0, 916, 917,
	918, 1843, 869, 870, 1312, 910, 0, 919, 152, 833,
	842, 0, 0, 843, 0, 0, 118, 0, 120, 180,
	0, 892, 0, 0, 0, 0, 785, 789, 911, 0,
	833, 0, 1312, 205, 206, 841, 833, 207, 1653, 0,
	0, 1659, 1660, 1661, 1662, 1663, 1654, 1655, 860, 0,
	922, 0, 923, 0, 0, 0, 881, 0, 924, 138,
	846, 0, 849, 0, 116, 0, 894, 790, 0, 792,
	789, 798, 833, 0, 841, 0, 1103, 1312, 841, 0,
	1665, 1666, 0, 0, 0, 925, 0, 928, 929, 0,
	926, 0, 901, 0, 0, 836, 791, 784, 841, 913,
	1312, 911, 874, 1312, 1664, 1667, 1658, 865, 927, 930,
	931, 912, 883, 0, 0, 832, 834, 835, 1312, 911,
	998, 833, 875, 841, 0, 996, 833, 841, 847, 0,
	841, 1312, 0, 1312, 999, 0, 997, 841, 850,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 480, 3, 486, 481, 3,
	491, 492, 484, 482, 496, 483, 493, 485, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 499, 3,
	472, 474, 473, 477, 495, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 489, 3, 490, 487, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 497, 479, 498, 475,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 476,
	57815, 478, 57816, 488, 57817, 494, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1171
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1176
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1178
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1181
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1182
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1183
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1184
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1187
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1188
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1195
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1204
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1205
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1325
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1362
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1402
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1408
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1412
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1418
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1438
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1442
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1456
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1466
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1480
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1491
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1510
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1517
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1525
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1545
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1553
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1564
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1574
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1584
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1593
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1604
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1610
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1641
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1678
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1761
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].union.unresolvedObjectName(),
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1959
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1966
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2028
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2081
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2191
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2200
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2211
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2221
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2226
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2230
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2249
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2327
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2341
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2342
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2367
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2394
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2439
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2451
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2487
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2489
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			return helpWith(sqllex, "CREATE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2494
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			return unimplemented(sqllex, "create cast")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2502
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			return unimplemented(sqllex, "create operator")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			return unimplemented(sqllex, "create publication")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2509
		{
			return unimplemented(sqllex, "create rule")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			return unimplemented(sqllex, "create server")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2513
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2517
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2521
		{
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2525
		{
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2528
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2534
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2535
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2536
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2537
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2538
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2539
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			return unimplemented(sqllex, "drop server")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2544
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2550
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2554
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2577
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2627
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2638
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2666
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2701
		{

			sqlVAL.union.val = nil
		}
	case 348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2725
		{
			return helpWith(sqllex, "DELETE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2729
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2754
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "DROP")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2760
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2863
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2909
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2974
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2998
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3006
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "DELETE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "INSERT")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3048
		{
			return helpWith(sqllex, "DELETE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "INSERT")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3083
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3116
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "GRANT")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3228
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "RESET")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "RESET")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "USE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "USE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "set from current")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = tree.Low
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = tree.Normal
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = tree.High
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "SHOW")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3719
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.str = "client_encoding"
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.str = "timezone"
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3774
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3789
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3822
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3831
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4001
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = true
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = true
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = false
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4073
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = true
		}
	case 713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = false
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = true
		}
	case 723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = false
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4215
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4258
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4266
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4303
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4326
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4342
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4637
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4652
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = nil
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{

			sqlVAL.union.val = nil
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4694
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4699
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4704
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 797:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4731
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4744
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4758
		{
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = true
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = true
		}
	case 804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = false
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = true
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4788
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4856
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.str = ""
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 847:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 850:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5039
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5080
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5091
		{
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
		}
	case 874:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5109
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5187
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5225
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5305
		{
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5306
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5307
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5466
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5475
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5494
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5509
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5537
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = true
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5587
		{

			sqlVAL.union.val = true
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = false
		}
	case 967:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5602
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5616
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5628
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5639
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = nil
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5692
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5711
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5713
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5715
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5719
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = []string(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5755
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5772
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5790
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5806
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = false
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = true
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = false
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = true
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = false
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5867
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5927
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5933
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5941
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5947
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5955
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5961
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5979
		{
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6031
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6086
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6107
		{
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6150
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.str = ""
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.str = ""
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.str = ""
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.str = ""
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6263
		{
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6369
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6386
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6615
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6651
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6652
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = true
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = false
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6827
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = nil
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6841
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = true
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = false
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = false
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6870
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6871
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6933
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6938
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6967
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7055
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7059
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7115
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7152
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7185
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7243
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7253
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7299
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7329
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = nil
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = true
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = false
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.str = tree.AstFull
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.str = tree.AstRight
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.str = tree.AstInner
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.str = tree.AstHash
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.str = ""
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7631
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7639
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7640
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7658
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7660
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7668
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7688
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = types.Geography
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7774
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7782
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7808
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7816
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = nil
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = types.Int2
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = types.Int
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = types.Float4
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = types.Float
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = types.Bool
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = types.Float
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7908
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7914
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7936
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = types.String
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = true
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = false
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = types.Date
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7993
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8007
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8024
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = false
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = false
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = types.Interval
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8065
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = nil
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8194
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8572
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8793
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8843
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8873
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8884
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8885
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8900
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8975
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9132
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9171
		{
			return unimplemented(sqllex, "treat")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9244
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.str = ""
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9346
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9443
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = tree.Any
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = tree.Some
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.All
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.Div
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.LT
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.GT
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.LE
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.GE
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.NE
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.Like
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10003
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10023
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10221
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.str = ""
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
