// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11941

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1349,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	231, 202,
	481, 202,
	-2, 0,
	-1, 79,
	220, 1149,
	233, 1149,
	249, 340,
	372, 340,
	381, 931,
	413, 340,
	425, 931,
	466, 931,
	492, 340,
	518, 931,
	-2, 0,
	-1, 85,
	249, 344,
	-2, 0,
	-1, 86,
	128, 1349,
	226, 1349,
	503, 1349,
	504, 1349,
	-2, 0,
	-1, 102,
	145, 1320,
	163, 1320,
	176, 1320,
	229, 1320,
	262, 1320,
	325, 1320,
	335, 1320,
	498, 1320,
	-2, 1291,
	-1, 138,
	153, 808,
	248, 808,
	375, 777,
	430, 777,
	484, 808,
	486, 777,
	-2, 0,
	-1, 140,
	4, 1351,
	21, 1351,
	22, 1351,
	23, 1351,
	24, 1351,
	25, 1351,
	26, 1351,
	28, 1351,
	29, 1351,
	35, 1351,
	40, 1351,
	41, 1351,
	43, 1351,
	44, 1351,
	45, 1351,
	46, 1351,
	47, 1351,
	48, 1351,
	49, 1351,
	51, 1351,
	52, 1351,
	53, 1351,
	54, 1351,
	56, 1351,
	57, 1351,
	58, 1351,
	59, 1351,
	60, 1351,
	61, 1351,
	62, 1351,
	66, 1351,
	67, 1351,
	68, 1351,
	69, 1351,
	71, 1351,
	72, 1351,
	73, 1351,
	77, 1351,
	78, 1351,
	79, 1351,
	80, 1351,
	81, 1351,
	82, 1351,
	83, 1351,
	86, 1351,
	87, 1351,
	88, 1351,
	89, 1351,
	90, 1351,
	92, 1351,
	94, 1351,
	95, 1351,
	96, 1351,
	97, 1351,
	98, 1351,
	99, 1351,
	101, 1351,
	102, 1351,
	103, 1351,
	105, 1351,
	106, 1351,
	114, 1351,
	115, 1351,
	116, 1351,
	117, 1351,
	119, 1351,
	120, 1351,
	121, 1351,
	123, 1351,
	124, 1351,
	125, 1351,
	127, 1351,
	128, 1351,
	130, 1351,
	131, 1351,
	132, 1351,
	135, 1351,
	136, 1351,
	137, 1351,
	139, 1351,
	140, 1351,
	142, 1351,
	143, 1351,
	144, 1351,
	146, 1351,
	147, 1351,
	148, 1351,
	149, 1351,
	150, 1351,
	151, 1351,
	152, 1351,
	153, 1351,
	154, 1351,
	155, 1351,
	156, 1351,
	157, 1351,
	158, 1351,
	159, 1351,
	160, 1351,
	162, 1351,
	168, 1351,
	169, 1351,
	170, 1351,
	171, 1351,
	175, 1351,
	177, 1351,
	181, 1351,
	182, 1351,
	183, 1351,
	184, 1351,
	185, 1351,
	186, 1351,
	187, 1351,
	188, 1351,
	189, 1351,
	190, 1351,
	191, 1351,
	192, 1351,
	194, 1351,
	195, 1351,
	197, 1351,
	198, 1351,
	200, 1351,
	201, 1351,
	202, 1351,
	203, 1351,
	204, 1351,
	205, 1351,
	206, 1351,
	207, 1351,
	208, 1351,
	210, 1351,
	211, 1351,
	213, 1351,
	214, 1351,
	215, 1351,
	216, 1351,
	220, 1351,
	221, 1351,
	222, 1351,
	223, 1351,
	226, 1351,
	227, 1351,
	228, 1351,
	230, 1351,
	232, 1351,
	233, 1351,
	235, 1351,
	237, 1351,
	238, 1351,
	239, 1351,
	241, 1351,
	245, 1351,
	246, 1351,
	247, 1351,
	248, 1351,
	249, 1351,
	250, 1351,
	252, 1351,
	253, 1351,
	254, 1351,
	256, 1351,
	257, 1351,
	259, 1351,
	260, 1351,
	263, 1351,
	267, 1351,
	268, 1351,
	271, 1351,
	272, 1351,
	273, 1351,
	274, 1351,
	276, 1351,
	277, 1351,
	278, 1351,
	279, 1351,
	280, 1351,
	281, 1351,
	282, 1351,
	283, 1351,
	284, 1351,
	285, 1351,
	286, 1351,
	287, 1351,
	288, 1351,
	289, 1351,
	290, 1351,
	291, 1351,
	292, 1351,
	293, 1351,
	294, 1351,
	295, 1351,
	296, 1351,
	298, 1351,
	300, 1351,
	301, 1351,
	302, 1351,
	303, 1351,
	304, 1351,
	305, 1351,
	306, 1351,
	307, 1351,
	308, 1351,
	309, 1351,
	310, 1351,
	311, 1351,
	313, 1351,
	315, 1351,
	317, 1351,
	318, 1351,
	320, 1351,
	321, 1351,
	322, 1351,
	323, 1351,
	324, 1351,
	327, 1351,
	330, 1351,
	331, 1351,
	332, 1351,
	333, 1351,
	336, 1351,
	337, 1351,
	338, 1351,
	340, 1351,
	342, 1351,
	343, 1351,
	344, 1351,
	345, 1351,
	346, 1351,
	347, 1351,
	348, 1351,
	349, 1351,
	350, 1351,
	351, 1351,
	352, 1351,
	353, 1351,
	355, 1351,
	356, 1351,
	357, 1351,
	358, 1351,
	359, 1351,
	360, 1351,
	361, 1351,
	362, 1351,
	363, 1351,
	364, 1351,
	365, 1351,
	366, 1351,
	367, 1351,
	368, 1351,
	369, 1351,
	371, 1351,
	373, 1351,
	374, 1351,
	375, 1351,
	376, 1351,
	377, 1351,
	378, 1351,
	379, 1351,
	380, 1351,
	381, 1351,
	382, 1351,
	383, 1351,
	385, 1351,
	391, 1351,
	393, 1351,
	394, 1351,
	395, 1351,
	396, 1351,
	397, 1351,
	398, 1351,
	399, 1351,
	400, 1351,
	402, 1351,
	403, 1351,
	404, 1351,
	406, 1351,
	407, 1351,
	408, 1351,
	409, 1351,
	410, 1351,
	411, 1351,
	413, 1351,
	414, 1351,
	415, 1351,
	416, 1351,
	417, 1351,
	418, 1351,
	419, 1351,
	420, 1351,
	421, 1351,
	422, 1351,
	423, 1351,
	425, 1351,
	426, 1351,
	427, 1351,
	428, 1351,
	429, 1351,
	430, 1351,
	432, 1351,
	433, 1351,
	434, 1351,
	435, 1351,
	436, 1351,
	438, 1351,
	439, 1351,
	440, 1351,
	441, 1351,
	442, 1351,
	443, 1351,
	444, 1351,
	446, 1351,
	448, 1351,
	449, 1351,
	450, 1351,
	451, 1351,
	452, 1351,
	453, 1351,
	454, 1351,
	455, 1351,
	456, 1351,
	457, 1351,
	458, 1351,
	459, 1351,
	460, 1351,
	462, 1351,
	463, 1351,
	465, 1351,
	467, 1351,
	468, 1351,
	469, 1351,
	470, 1351,
	471, 1351,
	472, 1351,
	473, 1351,
	474, 1351,
	476, 1351,
	477, 1351,
	478, 1351,
	479, 1351,
	480, 1351,
	482, 1351,
	484, 1351,
	485, 1351,
	486, 1351,
	487, 1351,
	488, 1351,
	489, 1351,
	491, 1351,
	492, 1351,
	493, 1351,
	494, 1351,
	496, 1351,
	497, 1351,
	500, 1351,
	501, 1351,
	502, 1351,
	503, 1351,
	504, 1351,
	505, 1351,
	506, 1351,
	508, 1351,
	511, 1351,
	512, 1351,
	513, 1351,
	514, 1351,
	515, 1351,
	516, 1351,
	518, 1351,
	519, 1351,
	520, 1351,
	521, 1351,
	526, 1351,
	527, 1351,
	528, 1351,
	529, 1351,
	530, 1351,
	531, 1351,
	-2, 0,
	-1, 141,
	1, 1222,
	126, 1222,
	237, 1222,
	314, 1222,
	371, 1222,
	379, 1222,
	534, 1222,
	558, 1222,
	-2, 0,
	-1, 143,
	1, 1222,
	558, 1222,
	-2, 0,
	-1, 144,
	1, 1222,
	558, 1222,
	-2, 0,
	-1, 145,
	1, 1222,
	481, 1222,
	558, 1222,
	-2, 0,
	-1, 174,
	145, 1319,
	163, 1319,
	176, 1319,
	229, 1319,
	262, 1319,
	325, 1319,
	335, 1319,
	498, 1319,
	-2, 1294,
	-1, 212,
	4, 1358,
	5, 1358,
	6, 1358,
	7, 1358,
	8, 1358,
	9, 1358,
	10, 1358,
	21, 1358,
	22, 1358,
	23, 1358,
	24, 1358,
	25, 1358,
	26, 1358,
	28, 1358,
	29, 1358,
	35, 1358,
	36, 1358,
	40, 1358,
	41, 1358,
	42, 1358,
	43, 1358,
	44, 1358,
	45, 1358,
	46, 1358,
	47, 1358,
	48, 1358,
	49, 1358,
	51, 1358,
	52, 1358,
	53, 1358,
	54, 1358,
	56, 1358,
	57, 1358,
	58, 1358,
	59, 1358,
	60, 1358,
	61, 1358,
	62, 1358,
	63, 1358,
	64, 1358,
	65, 1358,
	66, 1358,
	67, 1358,
	68, 1358,
	69, 1358,
	71, 1358,
	72, 1358,
	73, 1358,
	75, 1358,
	77, 1358,
	78, 1358,
	79, 1358,
	80, 1358,
	81, 1358,
	82, 1358,
	83, 1358,
	86, 1358,
	87, 1358,
	88, 1358,
	89, 1358,
	90, 1358,
	92, 1358,
	94, 1358,
	95, 1358,
	96, 1358,
	97, 1358,
	98, 1358,
	99, 1358,
	101, 1358,
	102, 1358,
	103, 1358,
	104, 1358,
	105, 1358,
	106, 1358,
	107, 1358,
	108, 1358,
	109, 1358,
	110, 1358,
	111, 1358,
	112, 1358,
	113, 1358,
	114, 1358,
	115, 1358,
	116, 1358,
	117, 1358,
	118, 1358,
	119, 1358,
	120, 1358,
	121, 1358,
	122, 1358,
	123, 1358,
	124, 1358,
	125, 1358,
	127, 1358,
	128, 1358,
	130, 1358,
	131, 1358,
	132, 1358,
	135, 1358,
	136, 1358,
	137, 1358,
	139, 1358,
	140, 1358,
	142, 1358,
	143, 1358,
	144, 1358,
	146, 1358,
	147, 1358,
	148, 1358,
	149, 1358,
	150, 1358,
	151, 1358,
	152, 1358,
	153, 1358,
	154, 1358,
	155, 1358,
	156, 1358,
	157, 1358,
	158, 1358,
	159, 1358,
	160, 1358,
	161, 1358,
	162, 1358,
	168, 1358,
	169, 1358,
	170, 1358,
	171, 1358,
	175, 1358,
	177, 1358,
	180, 1358,
	181, 1358,
	182, 1358,
	183, 1358,
	184, 1358,
	185, 1358,
	186, 1358,
	187, 1358,
	188, 1358,
	189, 1358,
	190, 1358,
	191, 1358,
	192, 1358,
	194, 1358,
	195, 1358,
	197, 1358,
	198, 1358,
	200, 1358,
	201, 1358,
	202, 1358,
	203, 1358,
	204, 1358,
	205, 1358,
	206, 1358,
	207, 1358,
	208, 1358,
	209, 1358,
	210, 1358,
	211, 1358,
	213, 1358,
	214, 1358,
	215, 1358,
	216, 1358,
	220, 1358,
	221, 1358,
	222, 1358,
	223, 1358,
	225, 1358,
	226, 1358,
	227, 1358,
	228, 1358,
	230, 1358,
	232, 1358,
	233, 1358,
	234, 1358,
	235, 1358,
	236, 1358,
	237, 1358,
	238, 1358,
	239, 1358,
	240, 1358,
	241, 1358,
	245, 1358,
	246, 1358,
	247, 1358,
	248, 1358,
	249, 1358,
	250, 1358,
	252, 1358,
	253, 1358,
	254, 1358,
	256, 1358,
	257, 1358,
	258, 1358,
	259, 1358,
	260, 1358,
	261, 1358,
	263, 1358,
	267, 1358,
	268, 1358,
	269, 1358,
	270, 1358,
	271, 1358,
	272, 1358,
	273, 1358,
	274, 1358,
	276, 1358,
	277, 1358,
	278, 1358,
	279, 1358,
	280, 1358,
	281, 1358,
	282, 1358,
	283, 1358,
	284, 1358,
	285, 1358,
	286, 1358,
	287, 1358,
	288, 1358,
	289, 1358,
	290, 1358,
	291, 1358,
	292, 1358,
	293, 1358,
	294, 1358,
	295, 1358,
	296, 1358,
	298, 1358,
	299, 1358,
	300, 1358,
	301, 1358,
	302, 1358,
	303, 1358,
	304, 1358,
	305, 1358,
	306, 1358,
	307, 1358,
	308, 1358,
	309, 1358,
	310, 1358,
	311, 1358,
	312, 1358,
	313, 1358,
	314, 1358,
	315, 1358,
	316, 1358,
	317, 1358,
	318, 1358,
	319, 1358,
	320, 1358,
	321, 1358,
	322, 1358,
	323, 1358,
	324, 1358,
	327, 1358,
	331, 1358,
	332, 1358,
	333, 1358,
	336, 1358,
	337, 1358,
	338, 1358,
	339, 1358,
	340, 1358,
	341, 1358,
	342, 1358,
	343, 1358,
	344, 1358,
	345, 1358,
	346, 1358,
	347, 1358,
	348, 1358,
	349, 1358,
	350, 1358,
	351, 1358,
	352, 1358,
	353, 1358,
	355, 1358,
	356, 1358,
	357, 1358,
	358, 1358,
	359, 1358,
	360, 1358,
	361, 1358,
	362, 1358,
	363, 1358,
	364, 1358,
	365, 1358,
	366, 1358,
	367, 1358,
	368, 1358,
	369, 1358,
	371, 1358,
	373, 1358,
	374, 1358,
	375, 1358,
	376, 1358,
	377, 1358,
	378, 1358,
	379, 1358,
	380, 1358,
	381, 1358,
	382, 1358,
	383, 1358,
	385, 1358,
	391, 1358,
	393, 1358,
	394, 1358,
	395, 1358,
	396, 1358,
	397, 1358,
	398, 1358,
	399, 1358,
	400, 1358,
	402, 1358,
	403, 1358,
	404, 1358,
	405, 1358,
	406, 1358,
	407, 1358,
	408, 1358,
	409, 1358,
	410, 1358,
	411, 1358,
	413, 1358,
	414, 1358,
	415, 1358,
	416, 1358,
	417, 1358,
	418, 1358,
	419, 1358,
	420, 1358,
	421, 1358,
	422, 1358,
	423, 1358,
	425, 1358,
	426, 1358,
	427, 1358,
	428, 1358,
	429, 1358,
	430, 1358,
	431, 1358,
	432, 1358,
	433, 1358,
	434, 1358,
	435, 1358,
	436, 1358,
	437, 1358,
	438, 1358,
	439, 1358,
	440, 1358,
	441, 1358,
	442, 1358,
	443, 1358,
	444, 1358,
	446, 1358,
	448, 1358,
	449, 1358,
	450, 1358,
	451, 1358,
	452, 1358,
	453, 1358,
	454, 1358,
	455, 1358,
	456, 1358,
	457, 1358,
	458, 1358,
	459, 1358,
	460, 1358,
	462, 1358,
	463, 1358,
	464, 1358,
	465, 1358,
	467, 1358,
	468, 1358,
	469, 1358,
	470, 1358,
	471, 1358,
	472, 1358,
	473, 1358,
	474, 1358,
	476, 1358,
	477, 1358,
	478, 1358,
	479, 1358,
	480, 1358,
	482, 1358,
	484, 1358,
	485, 1358,
	486, 1358,
	487, 1358,
	488, 1358,
	489, 1358,
	490, 1358,
	491, 1358,
	492, 1358,
	493, 1358,
	494, 1358,
	496, 1358,
	497, 1358,
	499, 1358,
	500, 1358,
	501, 1358,
	502, 1358,
	503, 1358,
	504, 1358,
	505, 1358,
	506, 1358,
	507, 1358,
	508, 1358,
	511, 1358,
	512, 1358,
	513, 1358,
	514, 1358,
	515, 1358,
	516, 1358,
	518, 1358,
	519, 1358,
	520, 1358,
	521, 1358,
	526, 1358,
	527, 1358,
	528, 1358,
	529, 1358,
	530, 1358,
	531, 1358,
	532, 1358,
	539, 1358,
	546, 1358,
	547, 1358,
	548, 1358,
	555, 1358,
	559, 1358,
	-2, 0,
	-1, 665,
	179, 2097,
	481, 2097,
	538, 2097,
	557, 2097,
	-2, 0,
	-1, 666,
	179, 2195,
	481, 2195,
	538, 2195,
	557, 2195,
	-2, 0,
	-1, 667,
	179, 2084,
	481, 2084,
	538, 2084,
	557, 2084,
	-2, 0,
	-1, 669,
	179, 2317,
	481, 2317,
	538, 2317,
	557, 2317,
	-2, 0,
	-1, 671,
	179, 2351,
	481, 2351,
	538, 2351,
	557, 2351,
	-2, 0,
	-1, 678,
	179, 2220,
	481, 2220,
	538, 2220,
	557, 2220,
	-2, 619,
	-1, 709,
	557, 2035,
	560, 2035,
	-2, 866,
	-1, 710,
	557, 2037,
	560, 2037,
	-2, 867,
	-1, 711,
	557, 2036,
	560, 2036,
	-2, 868,
	-1, 712,
	560, 1969,
	-2, 869,
	-1, 734,
	176, 216,
	-2, 0,
	-1, 755,
	42, 2039,
	-2, 0,
	-1, 756,
	518, 1126,
	-2, 932,
	-1, 772,
	4, 1478,
	21, 1478,
	22, 1478,
	23, 1478,
	24, 1478,
	25, 1478,
	26, 1478,
	28, 1478,
	29, 1478,
	35, 1478,
	40, 1478,
	41, 1478,
	43, 1478,
	44, 1478,
	45, 1478,
	46, 1478,
	47, 1478,
	48, 1478,
	49, 1478,
	51, 1478,
	52, 1478,
	53, 1478,
	54, 1478,
	56, 1478,
	57, 1478,
	58, 1478,
	59, 1478,
	60, 1478,
	61, 1478,
	62, 1478,
	66, 1478,
	67, 1478,
	68, 1478,
	69, 1478,
	71, 1478,
	72, 1478,
	73, 1478,
	77, 1478,
	78, 1478,
	79, 1478,
	80, 1478,
	81, 1478,
	82, 1478,
	83, 1478,
	86, 1478,
	87, 1478,
	88, 1478,
	89, 1478,
	90, 1478,
	92, 1478,
	94, 1478,
	95, 1478,
	96, 1478,
	97, 1478,
	98, 1478,
	99, 1478,
	101, 1478,
	102, 1478,
	103, 1478,
	105, 1478,
	106, 1478,
	114, 1478,
	115, 1478,
	116, 1478,
	117, 1478,
	119, 1478,
	120, 1478,
	121, 1478,
	123, 1478,
	124, 1478,
	125, 1478,
	127, 1478,
	128, 1478,
	130, 1478,
	131, 1478,
	132, 1478,
	135, 1478,
	136, 1478,
	137, 1478,
	139, 1478,
	140, 1478,
	142, 1478,
	143, 1478,
	144, 1478,
	146, 1478,
	147, 1478,
	148, 1478,
	149, 1478,
	150, 1478,
	151, 1478,
	152, 1478,
	153, 1478,
	154, 1478,
	155, 1478,
	156, 1478,
	157, 1478,
	158, 1478,
	159, 1478,
	160, 1478,
	162, 1478,
	168, 1478,
	169, 1478,
	170, 1478,
	171, 1478,
	175, 1478,
	177, 1478,
	181, 1478,
	182, 1478,
	183, 1478,
	184, 1478,
	185, 1478,
	186, 1478,
	187, 1478,
	188, 1478,
	189, 1478,
	190, 1478,
	191, 1478,
	192, 1478,
	194, 1478,
	195, 1478,
	197, 1478,
	198, 1478,
	200, 1478,
	201, 1478,
	202, 1478,
	203, 1478,
	204, 1478,
	205, 1478,
	206, 1478,
	207, 1478,
	208, 1478,
	210, 1478,
	211, 1478,
	213, 1478,
	214, 1478,
	215, 1478,
	216, 1478,
	220, 1478,
	221, 1478,
	222, 1478,
	223, 1478,
	226, 1478,
	227, 1478,
	228, 1478,
	230, 1478,
	232, 1478,
	233, 1478,
	235, 1478,
	237, 1478,
	238, 1478,
	239, 1478,
	241, 1478,
	245, 1478,
	246, 1478,
	247, 1478,
	248, 1478,
	249, 1478,
	250, 1478,
	252, 1478,
	253, 1478,
	254, 1478,
	256, 1478,
	257, 1478,
	259, 1478,
	260, 1478,
	263, 1478,
	267, 1478,
	268, 1478,
	271, 1478,
	272, 1478,
	273, 1478,
	274, 1478,
	276, 1478,
	277, 1478,
	278, 1478,
	279, 1478,
	280, 1478,
	281, 1478,
	282, 1478,
	283, 1478,
	284, 1478,
	285, 1478,
	286, 1478,
	287, 1478,
	288, 1478,
	289, 1478,
	290, 1478,
	291, 1478,
	292, 1478,
	293, 1478,
	294, 1478,
	295, 1478,
	296, 1478,
	298, 1478,
	300, 1478,
	301, 1478,
	302, 1478,
	303, 1478,
	304, 1478,
	305, 1478,
	306, 1478,
	307, 1478,
	308, 1478,
	309, 1478,
	310, 1478,
	311, 1478,
	313, 1478,
	315, 1478,
	317, 1478,
	318, 1478,
	320, 1478,
	321, 1478,
	322, 1478,
	323, 1478,
	324, 1478,
	327, 1478,
	331, 1478,
	332, 1478,
	333, 1478,
	336, 1478,
	337, 1478,
	338, 1478,
	340, 1478,
	342, 1478,
	343, 1478,
	344, 1478,
	345, 1478,
	346, 1478,
	347, 1478,
	348, 1478,
	349, 1478,
	350, 1478,
	351, 1478,
	352, 1478,
	353, 1478,
	355, 1478,
	356, 1478,
	357, 1478,
	358, 1478,
	359, 1478,
	360, 1478,
	361, 1478,
	362, 1478,
	363, 1478,
	364, 1478,
	365, 1478,
	366, 1478,
	367, 1478,
	368, 1478,
	369, 1478,
	371, 1478,
	373, 1478,
	374, 1478,
	375, 1478,
	376, 1478,
	377, 1478,
	378, 1478,
	379, 1478,
	380, 1478,
	381, 1478,
	382, 1478,
	383, 1478,
	385, 1478,
	391, 1478,
	393, 1478,
	394, 1478,
	395, 1478,
	396, 1478,
	397, 1478,
	398, 1478,
	399, 1478,
	400, 1478,
	402, 1478,
	403, 1478,
	404, 1478,
	406, 1478,
	407, 1478,
	408, 1478,
	409, 1478,
	410, 1478,
	411, 1478,
	413, 1478,
	414, 1478,
	415, 1478,
	416, 1478,
	417, 1478,
	418, 1478,
	419, 1478,
	420, 1478,
	421, 1478,
	422, 1478,
	423, 1478,
	425, 1478,
	426, 1478,
	427, 1478,
	428, 1478,
	429, 1478,
	430, 1478,
	432, 1478,
	433, 1478,
	434, 1478,
	435, 1478,
	436, 1478,
	438, 1478,
	439, 1478,
	440, 1478,
	441, 1478,
	442, 1478,
	443, 1478,
	444, 1478,
	446, 1478,
	448, 1478,
	449, 1478,
	450, 1478,
	451, 1478,
	452, 1478,
	453, 1478,
	454, 1478,
	455, 1478,
	456, 1478,
	457, 1478,
	458, 1478,
	459, 1478,
	460, 1478,
	462, 1478,
	463, 1478,
	465, 1478,
	467, 1478,
	468, 1478,
	469, 1478,
	470, 1478,
	471, 1478,
	472, 1478,
	473, 1478,
	474, 1478,
	476, 1478,
	477, 1478,
	478, 1478,
	479, 1478,
	480, 1478,
	482, 1478,
	484, 1478,
	485, 1478,
	486, 1478,
	487, 1478,
	488, 1478,
	489, 1478,
	491, 1478,
	492, 1478,
	493, 1478,
	494, 1478,
	496, 1478,
	497, 1478,
	500, 1478,
	501, 1478,
	502, 1478,
	503, 1478,
	504, 1478,
	505, 1478,
	506, 1478,
	508, 1478,
	511, 1478,
	512, 1478,
	513, 1478,
	514, 1478,
	515, 1478,
	516, 1478,
	518, 1478,
	519, 1478,
	520, 1478,
	521, 1478,
	526, 1478,
	527, 1478,
	528, 1478,
	529, 1478,
	530, 1478,
	531, 1478,
	-2, 0,
	-1, 796,
	4, 1147,
	21, 1147,
	22, 1147,
	23, 1147,
	24, 1147,
	25, 1147,
	26, 1147,
	28, 1147,
	29, 1147,
	35, 1147,
	40, 1147,
	41, 1147,
	43, 1147,
	44, 1147,
	45, 1147,
	46, 1147,
	47, 1147,
	48, 1147,
	49, 1147,
	51, 1147,
	52, 1147,
	53, 1147,
	54, 1147,
	56, 1147,
	57, 1147,
	58, 1147,
	59, 1147,
	60, 1147,
	61, 1147,
	62, 1147,
	66, 1147,
	67, 1147,
	68, 1147,
	69, 1147,
	71, 1147,
	72, 1147,
	73, 1147,
	77, 1147,
	78, 1147,
	79, 1147,
	80, 1147,
	81, 1147,
	82, 1147,
	83, 1147,
	86, 1147,
	87, 1147,
	88, 1147,
	89, 1147,
	90, 1147,
	92, 1147,
	94, 1147,
	95, 1147,
	96, 1147,
	97, 1147,
	98, 1147,
	99, 1147,
	101, 1147,
	102, 1147,
	103, 1147,
	105, 1147,
	106, 1147,
	114, 1147,
	115, 1147,
	116, 1147,
	117, 1147,
	119, 1147,
	120, 1147,
	121, 1147,
	123, 1147,
	124, 1147,
	125, 1147,
	127, 1147,
	128, 1147,
	130, 1147,
	131, 1147,
	132, 1147,
	135, 1147,
	136, 1147,
	137, 1147,
	139, 1147,
	140, 1147,
	142, 1147,
	143, 1147,
	144, 1147,
	146, 1147,
	147, 1147,
	148, 1147,
	149, 1147,
	150, 1147,
	151, 1147,
	152, 1147,
	153, 1147,
	154, 1147,
	155, 1147,
	156, 1147,
	157, 1147,
	158, 1147,
	159, 1147,
	160, 1147,
	162, 1147,
	168, 1147,
	169, 1147,
	170, 1147,
	171, 1147,
	175, 1147,
	177, 1147,
	181, 1147,
	182, 1147,
	183, 1147,
	184, 1147,
	185, 1147,
	186, 1147,
	187, 1147,
	188, 1147,
	189, 1147,
	190, 1147,
	191, 1147,
	192, 1147,
	194, 1147,
	195, 1147,
	197, 1147,
	198, 1147,
	200, 1147,
	201, 1147,
	202, 1147,
	203, 1147,
	204, 1147,
	205, 1147,
	206, 1147,
	207, 1147,
	208, 1147,
	210, 1147,
	211, 1147,
	213, 1147,
	214, 1147,
	215, 1147,
	216, 1147,
	220, 1147,
	221, 1147,
	222, 1147,
	223, 1147,
	226, 1147,
	227, 1147,
	228, 1147,
	230, 1147,
	232, 1147,
	233, 1147,
	235, 1147,
	237, 1147,
	238, 1147,
	239, 1147,
	241, 1147,
	245, 1147,
	246, 1147,
	247, 1147,
	248, 1147,
	249, 1147,
	250, 1147,
	252, 1147,
	253, 1147,
	254, 1147,
	256, 1147,
	257, 1147,
	259, 1147,
	260, 1147,
	263, 1147,
	267, 1147,
	268, 1147,
	271, 1147,
	272, 1147,
	273, 1147,
	274, 1147,
	276, 1147,
	277, 1147,
	278, 1147,
	279, 1147,
	280, 1147,
	281, 1147,
	282, 1147,
	283, 1147,
	284, 1147,
	285, 1147,
	286, 1147,
	287, 1147,
	288, 1147,
	289, 1147,
	290, 1147,
	291, 1147,
	292, 1147,
	293, 1147,
	294, 1147,
	295, 1147,
	296, 1147,
	298, 1147,
	300, 1147,
	301, 1147,
	302, 1147,
	303, 1147,
	304, 1147,
	305, 1147,
	306, 1147,
	307, 1147,
	308, 1147,
	309, 1147,
	310, 1147,
	311, 1147,
	313, 1147,
	315, 1147,
	317, 1147,
	318, 1147,
	320, 1147,
	321, 1147,
	322, 1147,
	323, 1147,
	324, 1147,
	327, 1147,
	331, 1147,
	332, 1147,
	333, 1147,
	336, 1147,
	337, 1147,
	338, 1147,
	340, 1147,
	342, 1147,
	343, 1147,
	344, 1147,
	345, 1147,
	346, 1147,
	347, 1147,
	348, 1147,
	349, 1147,
	350, 1147,
	351, 1147,
	352, 1147,
	353, 1147,
	355, 1147,
	356, 1147,
	357, 1147,
	358, 1147,
	359, 1147,
	360, 1147,
	361, 1147,
	362, 1147,
	363, 1147,
	364, 1147,
	365, 1147,
	366, 1147,
	367, 1147,
	368, 1147,
	369, 1147,
	371, 1147,
	373, 1147,
	374, 1147,
	375, 1147,
	376, 1147,
	377, 1147,
	378, 1147,
	379, 1147,
	380, 1147,
	381, 1147,
	382, 1147,
	383, 1147,
	385, 1147,
	391, 1147,
	393, 1147,
	394, 1147,
	395, 1147,
	396, 1147,
	397, 1147,
	398, 1147,
	399, 1147,
	400, 1147,
	402, 1147,
	403, 1147,
	404, 1147,
	406, 1147,
	407, 1147,
	408, 1147,
	409, 1147,
	410, 1147,
	411, 1147,
	413, 1147,
	414, 1147,
	415, 1147,
	416, 1147,
	417, 1147,
	418, 1147,
	419, 1147,
	420, 1147,
	421, 1147,
	422, 1147,
	423, 1147,
	425, 1147,
	426, 1147,
	427, 1147,
	428, 1147,
	429, 1147,
	430, 1147,
	432, 1147,
	433, 1147,
	434, 1147,
	435, 1147,
	436, 1147,
	438, 1147,
	439, 1147,
	440, 1147,
	441, 1147,
	442, 1147,
	443, 1147,
	444, 1147,
	446, 1147,
	448, 1147,
	449, 1147,
	450, 1147,
	451, 1147,
	452, 1147,
	453, 1147,
	454, 1147,
	455, 1147,
	456, 1147,
	457, 1147,
	458, 1147,
	459, 1147,
	460, 1147,
	462, 1147,
	463, 1147,
	465, 1147,
	467, 1147,
	468, 1147,
	469, 1147,
	470, 1147,
	471, 1147,
	472, 1147,
	473, 1147,
	474, 1147,
	476, 1147,
	477, 1147,
	478, 1147,
	479, 1147,
	480, 1147,
	482, 1147,
	484, 1147,
	485, 1147,
	486, 1147,
	487, 1147,
	488, 1147,
	489, 1147,
	491, 1147,
	492, 1147,
	493, 1147,
	494, 1147,
	496, 1147,
	497, 1147,
	500, 1147,
	501, 1147,
	502, 1147,
	503, 1147,
	504, 1147,
	505, 1147,
	506, 1147,
	508, 1147,
	511, 1147,
	512, 1147,
	513, 1147,
	514, 1147,
	515, 1147,
	516, 1147,
	518, 1147,
	519, 1147,
	520, 1147,
	521, 1147,
	526, 1147,
	527, 1147,
	528, 1147,
	529, 1147,
	530, 1147,
	531, 1147,
	-2, 0,
	-1, 877,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 878,
	375, 777,
	430, 777,
	486, 777,
	-2, 719,
	-1, 882,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 883,
	1, 754,
	554, 754,
	556, 754,
	558, 754,
	-2, 0,
	-1, 884,
	1, 756,
	554, 756,
	556, 756,
	558, 756,
	-2, 0,
	-1, 885,
	1, 865,
	176, 865,
	554, 865,
	556, 865,
	558, 865,
	-2, 0,
	-1, 893,
	1, 781,
	554, 781,
	556, 781,
	558, 781,
	-2, 0,
	-1, 899,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 900,
	1, 824,
	554, 824,
	556, 824,
	558, 824,
	-2, 0,
	-1, 901,
	1, 827,
	554, 827,
	556, 827,
	558, 827,
	-2, 0,
	-1, 907,
	1, 844,
	554, 844,
	556, 844,
	558, 844,
	-2, 0,
	-1, 908,
	1, 846,
	554, 846,
	556, 846,
	558, 846,
	-2, 0,
	-1, 957,
	163, 1360,
	176, 1360,
	262, 1360,
	325, 1360,
	-2, 1298,
	-1, 972,
	163, 1359,
	176, 1359,
	262, 1359,
	325, 1359,
	-2, 1295,
	-1, 998,
	557, 2034,
	-2, 627,
	-1, 1026,
	5, 2026,
	555, 2024,
	-2, 2015,
	-1, 1034,
	5, 2047,
	555, 2044,
	-2, 2035,
	-1, 1035,
	5, 2048,
	555, 2045,
	-2, 2036,
	-1, 1043,
	557, 2032,
	-2, 2014,
	-1, 1044,
	555, 2433,
	-2, 2033,
	-1, 1067,
	555, 2432,
	-2, 2049,
	-1, 1068,
	5, 1553,
	-2, 2403,
	-1, 1069,
	5, 1554,
	-2, 2404,
	-1, 1070,
	5, 1555,
	-2, 2418,
	-1, 1071,
	5, 1556,
	-2, 2382,
	-1, 1072,
	5, 1557,
	-2, 2416,
	-1, 1073,
	5, 1565,
	-2, 2395,
	-1, 1074,
	5, 1552,
	-2, 2391,
	-1, 1075,
	5, 1552,
	-2, 2390,
	-1, 1076,
	5, 1552,
	-2, 2409,
	-1, 1077,
	5, 1563,
	-2, 2384,
	-1, 1078,
	5, 1568,
	-2, 2383,
	-1, 1079,
	5, 1570,
	-2, 2428,
	-1, 1082,
	5, 1592,
	-2, 2421,
	-1, 1083,
	5, 1584,
	-2, 2422,
	-1, 1084,
	5, 1592,
	-2, 2423,
	-1, 1085,
	5, 1588,
	-2, 2424,
	-1, 1086,
	5, 1538,
	-2, 2396,
	-1, 1087,
	5, 1539,
	-2, 2397,
	-1, 1088,
	5, 1540,
	-2, 2385,
	-1, 1116,
	5, 1575,
	-2, 2429,
	-1, 1117,
	5, 1576,
	-2, 2419,
	-1, 1118,
	5, 1577,
	519, 1577,
	-2, 2386,
	-1, 1119,
	5, 1578,
	519, 1578,
	-2, 2387,
	-1, 1156,
	555, 2044,
	-2, 2035,
	-1, 1157,
	555, 2045,
	-2, 2036,
	-1, 1187,
	179, 2351,
	481, 2351,
	538, 2351,
	557, 2351,
	-2, 0,
	-1, 1190,
	1, 605,
	558, 605,
	-2, 1230,
	-1, 1318,
	393, 2010,
	432, 2010,
	548, 2010,
	-2, 2007,
	-1, 1330,
	559, 2010,
	-2, 2011,
	-1, 1337,
	1, 1123,
	554, 1123,
	556, 1123,
	558, 1123,
	-2, 1347,
	-1, 1391,
	381, 931,
	518, 931,
	-2, 339,
	-1, 1410,
	42, 2038,
	-2, 2008,
	-1, 1415,
	1, 1123,
	554, 1123,
	556, 1123,
	558, 1123,
	-2, 1347,
	-1, 1422,
	4, 1147,
	21, 1147,
	22, 1147,
	23, 1147,
	24, 1147,
	25, 1147,
	26, 1147,
	28, 1147,
	29, 1147,
	35, 1147,
	40, 1147,
	41, 1147,
	43, 1147,
	44, 1147,
	45, 1147,
	46, 1147,
	47, 1147,
	48, 1147,
	49, 1147,
	51, 1147,
	52, 1147,
	53, 1147,
	54, 1147,
	56, 1147,
	57, 1147,
	58, 1147,
	59, 1147,
	60, 1147,
	61, 1147,
	62, 1147,
	66, 1147,
	67, 1147,
	68, 1147,
	69, 1147,
	71, 1147,
	72, 1147,
	73, 1147,
	77, 1147,
	78, 1147,
	79, 1147,
	80, 1147,
	81, 1147,
	82, 1147,
	83, 1147,
	86, 1147,
	87, 1147,
	88, 1147,
	89, 1147,
	90, 1147,
	92, 1147,
	94, 1147,
	95, 1147,
	96, 1147,
	97, 1147,
	98, 1147,
	99, 1147,
	101, 1147,
	102, 1147,
	103, 1147,
	105, 1147,
	106, 1147,
	114, 1147,
	115, 1147,
	116, 1147,
	117, 1147,
	119, 1147,
	120, 1147,
	121, 1147,
	123, 1147,
	124, 1147,
	125, 1147,
	127, 1147,
	128, 1147,
	130, 1147,
	131, 1147,
	132, 1147,
	135, 1147,
	136, 1147,
	137, 1147,
	139, 1147,
	140, 1147,
	142, 1147,
	143, 1147,
	144, 1147,
	146, 1147,
	147, 1147,
	148, 1147,
	149, 1147,
	150, 1147,
	151, 1147,
	152, 1147,
	153, 1147,
	154, 1147,
	155, 1147,
	156, 1147,
	157, 1147,
	158, 1147,
	159, 1147,
	160, 1147,
	168, 1147,
	169, 1147,
	170, 1147,
	171, 1147,
	175, 1147,
	177, 1147,
	181, 1147,
	182, 1147,
	183, 1147,
	184, 1147,
	185, 1147,
	186, 1147,
	187, 1147,
	188, 1147,
	189, 1147,
	190, 1147,
	191, 1147,
	192, 1147,
	194, 1147,
	195, 1147,
	197, 1147,
	198, 1147,
	200, 1147,
	201, 1147,
	202, 1147,
	203, 1147,
	204, 1147,
	205, 1147,
	206, 1147,
	207, 1147,
	208, 1147,
	210, 1147,
	211, 1147,
	213, 1147,
	214, 1147,
	215, 1147,
	216, 1147,
	221, 1147,
	222, 1147,
	223, 1147,
	226, 1147,
	227, 1147,
	228, 1147,
	230, 1147,
	232, 1147,
	233, 1147,
	235, 1147,
	237, 1147,
	238, 1147,
	239, 1147,
	241, 1147,
	245, 1147,
	246, 1147,
	247, 1147,
	248, 1147,
	249, 1147,
	250, 1147,
	252, 1147,
	253, 1147,
	254, 1147,
	256, 1147,
	257, 1147,
	259, 1147,
	260, 1147,
	263, 1147,
	267, 1147,
	268, 1147,
	271, 1147,
	272, 1147,
	273, 1147,
	274, 1147,
	276, 1147,
	277, 1147,
	278, 1147,
	279, 1147,
	280, 1147,
	281, 1147,
	282, 1147,
	283, 1147,
	284, 1147,
	285, 1147,
	286, 1147,
	287, 1147,
	288, 1147,
	289, 1147,
	290, 1147,
	291, 1147,
	292, 1147,
	293, 1147,
	294, 1147,
	295, 1147,
	296, 1147,
	298, 1147,
	300, 1147,
	301, 1147,
	302, 1147,
	303, 1147,
	304, 1147,
	305, 1147,
	306, 1147,
	307, 1147,
	308, 1147,
	309, 1147,
	310, 1147,
	311, 1147,
	313, 1147,
	317, 1147,
	318, 1147,
	320, 1147,
	321, 1147,
	322, 1147,
	323, 1147,
	324, 1147,
	327, 1147,
	329, 1147,
	331, 1147,
	332, 1147,
	333, 1147,
	336, 1147,
	337, 1147,
	338, 1147,
	340, 1147,
	342, 1147,
	343, 1147,
	344, 1147,
	345, 1147,
	346, 1147,
	347, 1147,
	348, 1147,
	349, 1147,
	350, 1147,
	351, 1147,
	352, 1147,
	353, 1147,
	355, 1147,
	356, 1147,
	357, 1147,
	358, 1147,
	359, 1147,
	360, 1147,
	361, 1147,
	362, 1147,
	363, 1147,
	364, 1147,
	365, 1147,
	366, 1147,
	367, 1147,
	368, 1147,
	369, 1147,
	371, 1147,
	373, 1147,
	374, 1147,
	375, 1147,
	376, 1147,
	377, 1147,
	378, 1147,
	379, 1147,
	380, 1147,
	381, 1147,
	382, 1147,
	383, 1147,
	385, 1147,
	391, 1147,
	393, 1147,
	394, 1147,
	395, 1147,
	396, 1147,
	397, 1147,
	398, 1147,
	399, 1147,
	400, 1147,
	402, 1147,
	403, 1147,
	404, 1147,
	406, 1147,
	407, 1147,
	408, 1147,
	409, 1147,
	410, 1147,
	411, 1147,
	413, 1147,
	414, 1147,
	415, 1147,
	416, 1147,
	417, 1147,
	418, 1147,
	419, 1147,
	420, 1147,
	421, 1147,
	422, 1147,
	423, 1147,
	425, 1147,
	426, 1147,
	427, 1147,
	428, 1147,
	429, 1147,
	430, 1147,
	432, 1147,
	433, 1147,
	434, 1147,
	435, 1147,
	436, 1147,
	438, 1147,
	439, 1147,
	440, 1147,
	441, 1147,
	442, 1147,
	443, 1147,
	444, 1147,
	446, 1147,
	448, 1147,
	449, 1147,
	450, 1147,
	451, 1147,
	452, 1147,
	453, 1147,
	454, 1147,
	455, 1147,
	456, 1147,
	457, 1147,
	458, 1147,
	459, 1147,
	460, 1147,
	462, 1147,
	463, 1147,
	465, 1147,
	467, 1147,
	468, 1147,
	469, 1147,
	470, 1147,
	471, 1147,
	472, 1147,
	473, 1147,
	474, 1147,
	476, 1147,
	477, 1147,
	478, 1147,
	479, 1147,
	480, 1147,
	482, 1147,
	484, 1147,
	485, 1147,
	486, 1147,
	487, 1147,
	488, 1147,
	489, 1147,
	491, 1147,
	492, 1147,
	493, 1147,
	494, 1147,
	496, 1147,
	497, 1147,
	500, 1147,
	501, 1147,
	502, 1147,
	503, 1147,
	504, 1147,
	505, 1147,
	506, 1147,
	508, 1147,
	511, 1147,
	512, 1147,
	513, 1147,
	514, 1147,
	515, 1147,
	516, 1147,
	518, 1147,
	519, 1147,
	520, 1147,
	521, 1147,
	526, 1147,
	527, 1147,
	528, 1147,
	529, 1147,
	530, 1147,
	531, 1147,
	-2, 0,
	-1, 1496,
	1, 478,
	554, 478,
	556, 478,
	558, 478,
	-2, 1318,
	-1, 1499,
	4, 2427,
	11, 2427,
	12, 2427,
	14, 2427,
	15, 2427,
	16, 2427,
	17, 2427,
	18, 2427,
	19, 2427,
	21, 2427,
	22, 2427,
	23, 2427,
	24, 2427,
	25, 2427,
	26, 2427,
	28, 2427,
	29, 2427,
	32, 2427,
	33, 2427,
	35, 2427,
	37, 2427,
	40, 2427,
	41, 2427,
	43, 2427,
	44, 2427,
	45, 2427,
	46, 2427,
	47, 2427,
	48, 2427,
	49, 2427,
	51, 2427,
	52, 2427,
	53, 2427,
	54, 2427,
	56, 2427,
	57, 2427,
	58, 2427,
	59, 2427,
	60, 2427,
	61, 2427,
	62, 2427,
	66, 2427,
	67, 2427,
	68, 2427,
	69, 2427,
	71, 2427,
	72, 2427,
	73, 2427,
	74, 2427,
	77, 2427,
	78, 2427,
	79, 2427,
	80, 2427,
	81, 2427,
	82, 2427,
	83, 2427,
	84, 2427,
	86, 2427,
	87, 2427,
	88, 2427,
	89, 2427,
	90, 2427,
	92, 2427,
	93, 2427,
	94, 2427,
	95, 2427,
	96, 2427,
	97, 2427,
	98, 2427,
	99, 2427,
	101, 2427,
	102, 2427,
	103, 2427,
	104, 2427,
	105, 2427,
	106, 2427,
	114, 2427,
	115, 2427,
	116, 2427,
	117, 2427,
	119, 2427,
	120, 2427,
	121, 2427,
	123, 2427,
	124, 2427,
	125, 2427,
	127, 2427,
	128, 2427,
	130, 2427,
	131, 2427,
	132, 2427,
	135, 2427,
	136, 2427,
	137, 2427,
	139, 2427,
	140, 2427,
	142, 2427,
	143, 2427,
	144, 2427,
	146, 2427,
	147, 2427,
	148, 2427,
	149, 2427,
	150, 2427,
	151, 2427,
	152, 2427,
	153, 2427,
	154, 2427,
	155, 2427,
	156, 2427,
	157, 2427,
	158, 2427,
	159, 2427,
	160, 2427,
	164, 2427,
	165, 2427,
	166, 2427,
	167, 2427,
	168, 2427,
	169, 2427,
	170, 2427,
	171, 2427,
	174, 2427,
	175, 2427,
	177, 2427,
	180, 2427,
	181, 2427,
	182, 2427,
	183, 2427,
	184, 2427,
	185, 2427,
	186, 2427,
	187, 2427,
	188, 2427,
	189, 2427,
	190, 2427,
	191, 2427,
	192, 2427,
	194, 2427,
	195, 2427,
	197, 2427,
	198, 2427,
	200, 2427,
	201, 2427,
	202, 2427,
	203, 2427,
	204, 2427,
	205, 2427,
	206, 2427,
	207, 2427,
	208, 2427,
	209, 2427,
	210, 2427,
	211, 2427,
	212, 2427,
	213, 2427,
	214, 2427,
	215, 2427,
	216, 2427,
	218, 2427,
	219, 2427,
	221, 2427,
	222, 2427,
	223, 2427,
	225, 2427,
	226, 2427,
	227, 2427,
	228, 2427,
	230, 2427,
	232, 2427,
	233, 2427,
	234, 2427,
	235, 2427,
	236, 2427,
	237, 2427,
	238, 2427,
	239, 2427,
	240, 2427,
	241, 2427,
	243, 2427,
	244, 2427,
	245, 2427,
	246, 2427,
	247, 2427,
	248, 2427,
	249, 2427,
	250, 2427,
	252, 2427,
	253, 2427,
	254, 2427,
	256, 2427,
	257, 2427,
	258, 2427,
	259, 2427,
	260, 2427,
	261, 2427,
	263, 2427,
	267, 2427,
	268, 2427,
	271, 2427,
	272, 2427,
	273, 2427,
	274, 2427,
	275, 2427,
	276, 2427,
	277, 2427,
	278, 2427,
	279, 2427,
	280, 2427,
	281, 2427,
	282, 2427,
	283, 2427,
	284, 2427,
	285, 2427,
	286, 2427,
	287, 2427,
	288, 2427,
	289, 2427,
	290, 2427,
	291, 2427,
	292, 2427,
	293, 2427,
	294, 2427,
	295, 2427,
	296, 2427,
	298, 2427,
	299, 2427,
	300, 2427,
	301, 2427,
	302, 2427,
	303, 2427,
	304, 2427,
	305, 2427,
	306, 2427,
	307, 2427,
	308, 2427,
	309, 2427,
	310, 2427,
	311, 2427,
	313, 2427,
	316, 2427,
	317, 2427,
	318, 2427,
	320, 2427,
	321, 2427,
	322, 2427,
	323, 2427,
	324, 2427,
	327, 2427,
	331, 2427,
	332, 2427,
	333, 2427,
	334, 2427,
	336, 2427,
	337, 2427,
	338, 2427,
	340, 2427,
	342, 2427,
	343, 2427,
	344, 2427,
	345, 2427,
	346, 2427,
	347, 2427,
	348, 2427,
	349, 2427,
	350, 2427,
	351, 2427,
	352, 2427,
	353, 2427,
	355, 2427,
	356, 2427,
	357, 2427,
	358, 2427,
	359, 2427,
	360, 2427,
	361, 2427,
	362, 2427,
	363, 2427,
	364, 2427,
	365, 2427,
	366, 2427,
	367, 2427,
	368, 2427,
	369, 2427,
	371, 2427,
	373, 2427,
	374, 2427,
	375, 2427,
	376, 2427,
	377, 2427,
	378, 2427,
	379, 2427,
	380, 2427,
	381, 2427,
	382, 2427,
	383, 2427,
	385, 2427,
	391, 2427,
	392, 2427,
	393, 2427,
	394, 2427,
	395, 2427,
	396, 2427,
	397, 2427,
	398, 2427,
	399, 2427,
	400, 2427,
	402, 2427,
	403, 2427,
	404, 2427,
	405, 2427,
	406, 2427,
	407, 2427,
	408, 2427,
	409, 2427,
	410, 2427,
	411, 2427,
	412, 2427,
	413, 2427,
	414, 2427,
	415, 2427,
	416, 2427,
	417, 2427,
	418, 2427,
	419, 2427,
	420, 2427,
	421, 2427,
	422, 2427,
	423, 2427,
	425, 2427,
	426, 2427,
	427, 2427,
	428, 2427,
	429, 2427,
	430, 2427,
	432, 2427,
	433, 2427,
	434, 2427,
	435, 2427,
	436, 2427,
	437, 2427,
	438, 2427,
	439, 2427,
	440, 2427,
	441, 2427,
	442, 2427,
	443, 2427,
	444, 2427,
	446, 2427,
	448, 2427,
	449, 2427,
	450, 2427,
	451, 2427,
	452, 2427,
	453, 2427,
	454, 2427,
	455, 2427,
	456, 2427,
	457, 2427,
	458, 2427,
	459, 2427,
	460, 2427,
	462, 2427,
	463, 2427,
	465, 2427,
	467, 2427,
	468, 2427,
	469, 2427,
	470, 2427,
	471, 2427,
	472, 2427,
	473, 2427,
	474, 2427,
	476, 2427,
	477, 2427,
	478, 2427,
	479, 2427,
	480, 2427,
	482, 2427,
	484, 2427,
	485, 2427,
	486, 2427,
	487, 2427,
	488, 2427,
	489, 2427,
	491, 2427,
	492, 2427,
	493, 2427,
	494, 2427,
	496, 2427,
	497, 2427,
	500, 2427,
	501, 2427,
	502, 2427,
	503, 2427,
	504, 2427,
	505, 2427,
	506, 2427,
	508, 2427,
	511, 2427,
	512, 2427,
	513, 2427,
	514, 2427,
	515, 2427,
	516, 2427,
	518, 2427,
	519, 2427,
	520, 2427,
	521, 2427,
	526, 2427,
	527, 2427,
	528, 2427,
	529, 2427,
	530, 2427,
	531, 2427,
	532, 2427,
	533, 2427,
	536, 2427,
	537, 2427,
	538, 2427,
	539, 2427,
	540, 2427,
	541, 2427,
	543, 2427,
	544, 2427,
	545, 2427,
	546, 2427,
	547, 2427,
	548, 2427,
	549, 2427,
	550, 2427,
	551, 2427,
	553, 2427,
	556, 2427,
	557, 2427,
	559, 2427,
	560, 2427,
	-2, 0,
	-1, 1504,
	179, 2317,
	481, 2317,
	538, 2317,
	557, 2317,
	-2, 0,
	-1, 1553,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 1579,
	1, 773,
	554, 773,
	556, 773,
	558, 773,
	-2, 0,
	-1, 1580,
	1, 809,
	554, 809,
	556, 809,
	558, 809,
	-2, 0,
	-1, 1581,
	1, 817,
	554, 817,
	556, 817,
	558, 817,
	-2, 0,
	-1, 1582,
	1, 780,
	554, 780,
	556, 780,
	558, 780,
	-2, 0,
	-1, 1584,
	1, 784,
	554, 784,
	556, 784,
	558, 784,
	-2, 0,
	-1, 1590,
	1, 791,
	554, 791,
	556, 791,
	558, 791,
	-2, 0,
	-1, 1618,
	1, 2373,
	554, 2373,
	556, 2373,
	557, 2373,
	558, 2373,
	-2, 842,
	-1, 1619,
	1, 2314,
	554, 2314,
	556, 2314,
	557, 2314,
	558, 2314,
	-2, 843,
	-1, 1634,
	1, 1225,
	558, 1225,
	-2, 1230,
	-1, 1637,
	163, 1359,
	176, 1359,
	262, 1359,
	325, 1359,
	-2, 1299,
	-1, 1731,
	145, 1320,
	163, 1320,
	176, 1320,
	229, 1320,
	262, 1320,
	325, 1320,
	335, 1320,
	498, 1320,
	-2, 1753,
	-1, 1791,
	556, 1903,
	-2, 0,
	-1, 1826,
	145, 1320,
	163, 1320,
	176, 1320,
	229, 1320,
	262, 1320,
	325, 1320,
	335, 1320,
	498, 1320,
	-2, 1440,
	-1, 1875,
	555, 1580,
	-2, 1568,
	-1, 1912,
	1, 607,
	558, 607,
	-2, 1230,
	-1, 2024,
	212, 217,
	-2, 2043,
	-1, 2025,
	212, 218,
	-2, 260,
	-1, 2153,
	1, 775,
	554, 775,
	556, 775,
	558, 775,
	-2, 0,
	-1, 2154,
	1, 811,
	554, 811,
	556, 811,
	558, 811,
	-2, 0,
	-1, 2155,
	1, 819,
	554, 819,
	556, 819,
	558, 819,
	-2, 0,
	-1, 2188,
	1, 793,
	554, 793,
	556, 793,
	558, 793,
	-2, 0,
	-1, 2234,
	410, 1386,
	411, 1386,
	-2, 1613,
	-1, 2265,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1633,
	-1, 2266,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1634,
	-1, 2267,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1635,
	-1, 2268,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1636,
	-1, 2269,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1637,
	-1, 2270,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1638,
	-1, 2271,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1639,
	-1, 2272,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1640,
	-1, 2284,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1652,
	-1, 2285,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1653,
	-1, 2286,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1654,
	-1, 2289,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1659,
	-1, 2295,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1663,
	-1, 2297,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1671,
	-1, 2298,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1672,
	-1, 2299,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1673,
	-1, 2300,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1674,
	-1, 2436,
	5, 2047,
	179, 1914,
	555, 2044,
	-2, 2035,
	-1, 2437,
	179, 1915,
	-2, 2378,
	-1, 2438,
	179, 1916,
	-2, 2219,
	-1, 2439,
	179, 1917,
	-2, 2113,
	-1, 2440,
	179, 1918,
	-2, 2163,
	-1, 2441,
	179, 1919,
	-2, 2204,
	-1, 2442,
	179, 1920,
	-2, 2312,
	-1, 2443,
	179, 1921,
	-2, 1736,
	-1, 2512,
	1, 1441,
	2, 1441,
	104, 1441,
	145, 1441,
	163, 1441,
	176, 1441,
	180, 1441,
	196, 1441,
	199, 1441,
	225, 1441,
	229, 1441,
	240, 1441,
	258, 1441,
	262, 1441,
	299, 1441,
	325, 1441,
	329, 1441,
	335, 1441,
	401, 1441,
	405, 1441,
	498, 1441,
	509, 1441,
	523, 1441,
	524, 1441,
	525, 1441,
	534, 1441,
	554, 1441,
	556, 1441,
	558, 1441,
	560, 1441,
	-2, 1440,
	-1, 2525,
	555, 2016,
	-2, 2030,
	-1, 2527,
	1, 276,
	-2, 1347,
	-1, 2552,
	555, 1579,
	-2, 1569,
	-1, 2689,
	1, 1123,
	554, 1123,
	556, 1123,
	558, 1123,
	-2, 1347,
	-1, 2869,
	330, 1389,
	-2, 2417,
	-1, 2870,
	330, 1390,
	-2, 2298,
	-1, 2874,
	410, 1980,
	411, 1980,
	-2, 1734,
	-1, 2875,
	410, 1984,
	411, 1984,
	-2, 1735,
	-1, 2876,
	410, 1981,
	411, 1981,
	-2, 1734,
	-1, 2877,
	410, 1985,
	411, 1985,
	-2, 1735,
	-1, 2890,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1661,
	-1, 2891,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1665,
	-1, 2897,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1667,
	-1, 3125,
	1, 604,
	554, 604,
	556, 604,
	558, 604,
	-2, 1230,
	-1, 3257,
	1, 1123,
	554, 1123,
	556, 1123,
	558, 1123,
	-2, 1347,
	-1, 3367,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1669,
	-1, 3374,
	234, 0,
	236, 0,
	316, 0,
	-2, 1688,
	-1, 3441,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1717,
	-1, 3442,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1718,
	-1, 3443,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1719,
	-1, 3447,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1723,
	-1, 3448,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1724,
	-1, 3449,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1725,
	-1, 3495,
	555, 2017,
	-2, 2031,
	-1, 3633,
	557, 2534,
	-2, 1277,
	-1, 3691,
	234, 0,
	236, 0,
	316, 0,
	-2, 1689,
	-1, 3694,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1692,
	-1, 3695,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1694,
	-1, 3907,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1693,
	-1, 3908,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1695,
	-1, 3919,
	234, 0,
	-2, 1726,
	-1, 4071,
	234, 0,
	-2, 1727,
	-1, 4220,
	48, 0,
	209, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 2381,
}

const sqlPrivate = 57344

const sqlLast = 111775

var sqlAct = [...]int{

	246, 4093, 2754, 3951, 4219, 4114, 3954, 4230, 4331, 3241,
	3048, 4194, 3674, 4178, 2785, 3831, 2588, 2021, 4175, 4231,
	2122, 4160, 4232, 3242, 4280, 4024, 3406, 3939, 2093, 4075,
	4218, 2627, 3864, 1160, 3997, 37, 4004, 2244, 3527, 3859,
	3143, 3896, 3269, 1487, 1340, 3625, 4013, 3845, 3566, 3761,
	3813, 4038, 3227, 2312, 3237, 1357, 3274, 982, 3267, 3869,
	1646, 3601, 3584, 1482, 1519, 994, 1862, 3924, 3586, 2252,
	711, 3359, 2106, 3528, 2807, 973, 676, 1222, 3324, 2245,
	2883, 2131, 1832, 2725, 2796, 2712, 3497, 2652, 2468, 2743,
	2794, 3322, 1149, 3091, 711, 3071, 1315, 3063, 3031, 3673,
	2804, 2793, 3730, 2787, 2738, 2721, 3052, 1026, 1801, 3054,
	2755, 2015, 2505, 1320, 1975, 2590, 3030, 2249, 4076, 2354,
	1739, 3466, 2504, 2325, 2867, 2129, 2016, 1965, 1323, 1777,
	1518, 2507, 2104, 810, 101, 706, 2803, 1408, 2010, 2001,
	1462, 2740, 2666, 1994, 2726, 1030, 1206, 1561, 981, 165,
	1951, 4, 2626, 2345, 1634, 1948, 2486, 1486, 2356, 1802,
	1821, 2233, 1863, 2309, 1938, 3998, 3098, 240, 1140, 239,
	2216, 2537, 2214, 3239, 1497, 1473, 1818, 2055, 1035, 628,
	1192, 1483, 1413, 650, 2748, 712, 713, 2797, 642, 2536,
	1772, 2348, 2465, 1811, 1143, 2579, 2476, 1122, 2494, 1342,
	2432, 2326, 1724, 2398, 1647, 2215, 658, 1648, 2054, 708,
	174, 1590, 175, 670, 2217, 1157, 1437, 1495, 783, 2079,
	2067, 756, 1139, 1352, 2238, 1964, 1011, 645, 42, 1033,
	41, 39, 30, 1145, 28, 165, 26, 717, 804, 720,
	1120, 653, 1653, 871, 2918, 1363, 891, 1633, 3480, 2914,
	3481, 4396, 2095, 1661, 1662, 2485, 2095, 3050, 977, 2095,
	4386, 717, 2095, 720, 3303, 3284, 4376, 4375, 4348, 2095,
	2485, 2485, 3777, 4346, 4342, 1692, 4260, 3777, 2029, 4254,
	4261, 4252, 1664, 2485, 4249, 2485, 4246, 4241, 4250, 4216,
	4247, 2029, 4215, 2029, 3283, 4214, 2029, 4209, 4208, 2115,
	4203, 2115, 2115, 825, 3777, 4201, 977, 3121, 3303, 3777,
	146, 978, 1037, 2882, 4173, 3120, 1663, 68, 3777, 44,
	43, 4154, 1155, 4147, 1137, 2543, 1683, 2485, 4146, 2485,
	4141, 2478, 2485, 69, 3777, 1680, 141, 4140, 1123, 1123,
	4134, 3777, 4107, 4073, 2029, 2648, 3823, 2543, 4055, 73,
	4052, 4049, 3662, 4006, 2029, 3777, 1377, 4007, 3971, 3970,
	63, 3962, 2029, 2029, 3961, 2029, 3930, 46, 3777, 143,
	2029, 3909, 1201, 3888, 3106, 2543, 958, 2115, 957, 4155,
	3877, 3808, 4068, 1080, 3303, 2485, 3687, 45, 3796, 79,
	1356, 3776, 2485, 3693, 1176, 3777, 3641, 2543, 2130, 3635,
	3319, 3599, 1171, 3319, 4056, 3600, 1686, 1687, 1688, 1689,
	1201, 2115, 3470, 48, 64, 2451, 1669, 967, 3490, 3488,
	972, 49, 3491, 3489, 3473, 3390, 85, 3386, 2485, 2029,
	144, 2485, 1126, 3318, 1127, 3310, 3470, 3319, 47, 3311,
	100, 2612, 1661, 1662, 1152, 86, 97, 3047, 1124, 2477,
	3042, 2485, 3041, 2113, 2485, 2994, 2485, 2539, 2968, 2995,
	1691, 1693, 2969, 2960, 1692, 2958, 2929, 2961, 2927, 2485,
	2485, 1664, 2810, 2783, 2928, 2782, 2115, 2118, 3858, 2118,
	2563, 1172, 50, 2485, 2485, 1678, 1679, 2542, 3823, 2534,
	2528, 2543, 2029, 2485, 2029, 2484, 3797, 2029, 3662, 2485,
	87, 1661, 1662, 3311, 2117, 1663, 2351, 2751, 2118, 2643,
	2578, 212, 1969, 212, 1917, 1661, 1662, 1684, 2094, 2110,
	2718, 1661, 1662, 1692, 2028, 2660, 2576, 1797, 1351, 3557,
	1664, 2917, 3362, 3340, 1819, 2004, 1563, 1692, 86, 3285,
	2521, 2520, 2519, 2518, 1664, 2517, 1128, 1125, 966, 965,
	1664, 964, 963, 214, 962, 214, 961, 960, 3286, 1376,
	956, 955, 954, 953, 1663, 952, 1661, 1662, 2847, 212,
	951, 950, 949, 948, 947, 1661, 1662, 946, 1663, 945,
	944, 943, 942, 941, 1663, 940, 922, 869, 1692, 2096,
	2352, 868, 867, 2096, 866, 1664, 2096, 865, 1028, 2096,
	864, 213, 863, 213, 1664, 1669, 2096, 862, 861, 212,
	1527, 214, 206, 860, 206, 859, 858, 857, 856, 855,
	207, 854, 207, 853, 852, 851, 850, 849, 848, 1663,
	847, 846, 845, 844, 1690, 843, 842, 841, 1663, 840,
	90, 839, 176, 838, 176, 3746, 3283, 1371, 828, 1691,
	1693, 214, 827, 823, 1685, 822, 816, 51, 815, 213,
	774, 773, 733, 732, 1669, 731, 723, 722, 2353, 721,
	2350, 690, 682, 681, 55, 1035, 680, 664, 1669, 1035,
	65, 234, 233, 232, 1669, 54, 173, 93, 1172, 96,
	231, 230, 229, 52, 1225, 228, 2113, 145, 1225, 213,
	176, 227, 1345, 3705, 53, 1032, 1684, 226, 1691, 1693,
	206, 225, 2477, 212, 224, 223, 222, 221, 207, 220,
	219, 58, 1691, 1693, 218, 138, 1035, 217, 1035, 1669,
	1035, 216, 1205, 215, 3507, 1345, 1210, 3484, 1669, 142,
	176, 3320, 1356, 3871, 3094, 2940, 2923, 1822, 2699, 2734,
	2771, 1583, 2547, 1196, 2094, 214, 2526, 2113, 1345, 2511,
	2110, 2381, 1362, 1331, 1369, 1684, 1375, 2209, 2367, 2365,
	1660, 1326, 4237, 1691, 1693, 1172, 1946, 1513, 212, 1684,
	140, 1845, 1681, 1677, 1365, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 2125, 177, 1750, 3045, 1355, 1780,
	1741, 1345, 1035, 213, 1531, 1779, 212, 1345, 1359, 212,
	2355, 1345, 1212, 1364, 206, 1159, 4217, 4121, 138, 1035,
	214, 1035, 207, 1419, 1421, 1345, 1190, 1783, 4059, 4065,
	1684, 1035, 3923, 1035, 3046, 4057, 3949, 3878, 1493, 3857,
	3753, 3728, 3727, 1685, 176, 3604, 1780, 3, 214, 3721,
	1370, 214, 1779, 3720, 3719, 1511, 3712, 1516, 1334, 3003,
	3004, 1218, 3711, 1312, 1317, 3709, 3704, 1525, 213, 1530,
	3701, 3700, 3598, 2124, 1778, 3314, 1424, 1345, 3511, 206,
	3510, 3509, 717, 1185, 720, 3003, 3004, 207, 3021, 3022,
	3023, 3494, 3461, 3460, 3459, 1035, 213, 1411, 1035, 213,
	1354, 1353, 1685, 3382, 3003, 3004, 3689, 206, 3378, 176,
	206, 1476, 3089, 1406, 3038, 207, 1685, 2349, 207, 3029,
	1151, 3002, 2999, 2998, 2996, 1365, 1517, 2967, 2966, 1584,
	2965, 3003, 3004, 2962, 2959, 1467, 1470, 176, 3873, 2939,
	2750, 978, 2556, 1742, 2922, 1740, 1741, 2915, 2784, 2512,
	2338, 1365, 1660, 1659, 1136, 2070, 165, 165, 3018, 1500,
	1502, 1748, 2036, 4390, 2034, 4340, 4339, 1685, 1532, 3605,
	1479, 4270, 805, 4268, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 3555, 2736, 4259, 3112, 1365, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1440, 1161, 3408, 68, 4113,
	808, 807, 4103, 4100, 3018, 4099, 1498, 4098, 1196, 4092,
	4085, 1196, 4053, 4037, 69, 4036, 2315, 4022, 4019, 1035,
	3967, 3945, 3009, 3921, 3904, 1035, 3903, 3885, 3884, 3848,
	73, 3824, 212, 1638, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 3745, 3726, 3663, 3003, 3004, 1599, 3009, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 1665, 1666, 1667, 1668,
	1670, 1671, 3657, 3654, 3545, 1512, 3544, 3009, 3531, 212,
	79, 3530, 3476, 3605, 214, 3043, 3464, 1526, 1494, 980,
	3373, 1728, 3321, 3304, 1733, 3003, 3004, 3260, 1738, 3199,
	3172, 2321, 1632, 3146, 3009, 3145, 3114, 2944, 2943, 1730,
	2938, 1665, 1666, 1667, 1668, 1670, 1671, 85, 3024, 2906,
	4077, 214, 1667, 1668, 1670, 1671, 1537, 1661, 1662, 3934,
	2711, 100, 213, 1786, 1785, 1554, 86, 97, 1784, 1781,
	1035, 1035, 1035, 206, 1773, 1771, 1035, 2554, 2553, 1586,
	2523, 207, 2516, 1157, 2483, 1157, 1664, 2363, 1844, 3019,
	1800, 1795, 1794, 978, 1793, 1792, 1791, 1799, 1790, 213,
	1225, 1789, 2735, 176, 3872, 1788, 1787, 1768, 1035, 1767,
	206, 711, 1766, 212, 1765, 1880, 711, 1635, 207, 1643,
	1663, 87, 1836, 1764, 1763, 1035, 1762, 1761, 1642, 1345,
	1760, 1759, 958, 1758, 957, 3019, 1757, 1756, 1755, 212,
	176, 1754, 1637, 1743, 1729, 1727, 1722, 1035, 3009, 1184,
	3146, 1174, 1639, 1225, 1782, 214, 1167, 1848, 1656, 1657,
	3851, 3749, 3697, 3506, 1808, 1438, 212, 1859, 3487, 3479,
	2926, 2545, 1906, 1915, 2514, 212, 1935, 3751, 1853, 1805,
	1806, 214, 3505, 1742, 3110, 1725, 3003, 3004, 3009, 2126,
	1155, 1443, 1155, 1123, 1829, 3289, 1855, 3003, 3004, 1909,
	1937, 3799, 1840, 213, 1944, 4337, 1774, 1775, 214, 1196,
	1937, 1585, 1852, 1910, 206, 4330, 1849, 214, 3270, 978,
	1209, 4101, 207, 1937, 1207, 4009, 3020, 1553, 4008, 213,
	3086, 3876, 3826, 3825, 3798, 165, 3748, 1822, 1929, 1928,
	206, 3666, 1937, 1939, 176, 1201, 1830, 3665, 207, 3019,
	1851, 3664, 3482, 4014, 3306, 2380, 213, 1820, 3305, 3608,
	2631, 90, 2366, 2364, 2964, 213, 1630, 206, 1201, 2351,
	176, 1009, 3020, 3543, 2963, 207, 206, 1208, 717, 1827,
	720, 2888, 1912, 717, 207, 720, 1780, 1752, 212, 3019,
	1345, 1345, 1779, 2614, 1204, 1908, 4060, 176, 1923, 1600,
	1225, 938, 1798, 4058, 1562, 1201, 176, 173, 93, 1763,
	96, 1763, 1152, 3175, 1152, 1839, 1824, 1838, 1837, 1835,
	1856, 1834, 4213, 1833, 1957, 1903, 3244, 2123, 3243, 3948,
	214, 4005, 4257, 4242, 212, 4229, 3007, 3008, 3010, 3011,
	1860, 2145, 809, 3228, 939, 2808, 138, 1563, 2017, 3009,
	3015, 3016, 3017, 2352, 2022, 2026, 1932, 3014, 3012, 3013,
	3005, 3006, 3007, 3008, 3010, 3011, 3563, 3562, 3548, 1940,
	3337, 1930, 3123, 3925, 3050, 3410, 214, 2346, 213, 3005,
	3006, 3007, 3008, 3010, 3011, 2552, 3020, 1796, 1990, 206,
	2932, 1993, 4238, 1776, 1998, 3235, 2064, 207, 1466, 1418,
	1974, 140, 1348, 3014, 3012, 3013, 3005, 3006, 3007, 3008,
	3010, 3011, 1179, 2071, 1442, 4251, 177, 2657, 4248, 176,
	3279, 4094, 2654, 918, 213, 3522, 3020, 1874, 3860, 4172,
	4082, 2353, 2002, 2350, 3149, 206, 2100, 3538, 2791, 2102,
	212, 212, 1345, 207, 1345, 2107, 1345, 1135, 2109, 2060,
	3019, 1749, 2112, 2747, 3221, 4239, 4296, 2019, 769, 717,
	3354, 720, 1345, 1345, 1934, 806, 4297, 2065, 3576, 3988,
	3127, 1969, 3111, 1345, 3787, 4321, 1598, 1354, 1353, 1383,
	2153, 2564, 214, 214, 976, 1345, 1153, 1345, 1345, 1345,
	1541, 2076, 1997, 1443, 2194, 1393, 936, 1924, 1877, 2192,
	1349, 934, 1933, 4385, 932, 2132, 2144, 3981, 930, 711,
	3973, 2084, 927, 3821, 3572, 2027, 3571, 3014, 3012, 3013,
	3005, 3006, 3007, 3008, 3010, 3011, 1209, 3129, 1913, 3575,
	213, 213, 1191, 3565, 3561, 2154, 3559, 3519, 2073, 2582,
	3518, 206, 206, 3224, 3105, 2937, 2936, 2098, 2935, 207,
	207, 2047, 2934, 2046, 2580, 2582, 770, 2086, 3012, 3013,
	3005, 3006, 3007, 3008, 3010, 3011, 2892, 2149, 975, 2664,
	2580, 176, 176, 2355, 1394, 2663, 978, 2659, 978, 1952,
	1597, 2650, 2128, 1208, 1953, 2642, 2394, 3020, 2078, 2137,
	1035, 2155, 1035, 2133, 1440, 2082, 2081, 1671, 2081, 1035,
	2208, 2641, 1880, 1880, 1225, 2640, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1498, 1035, 1498, 1035, 1035, 1035, 1035, 2226, 2639,
	2618, 2605, 1202, 2535, 2123, 2224, 1202, 2213, 1185, 2119,
	2296, 2120, 1209, 4322, 1539, 1636, 1035, 2393, 2254, 1035,
	1035, 1430, 3338, 1429, 977, 1596, 717, 1035, 720, 2045,
	2349, 1035, 2136, 1035, 1035, 1428, 1555, 1427, 2546, 2744,
	3174, 1225, 2592, 1954, 1452, 3902, 1389, 1035, 1035, 1035,
	1035, 688, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1956, 4325, 2222, 1868, 1164, 1579, 1442, 2635, 2170, 1208,
	3013, 3005, 3006, 3007, 3008, 3010, 3011, 2320, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 3011, 2628, 2629,
	2207, 1035, 1733, 2616, 2188, 2141, 924, 3800, 2628, 2629,
	1350, 1401, 2571, 1157, 1162, 2206, 2237, 2327, 2328, 2203,
	1225, 2628, 2629, 1198, 2250, 2251, 2161, 1198, 3525, 1157,
	1580, 2327, 2343, 2311, 2346, 2527, 2604, 1613, 1958, 1202,
	1941, 1942, 1534, 2210, 2212, 1035, 1225, 2198, 1151, 2220,
	1151, 2225, 2218, 2211, 1609, 1629, 2456, 2389, 2311, 1966,
	2595, 4326, 978, 2342, 958, 687, 2241, 958, 958, 2242,
	2243, 978, 3956, 2865, 3783, 978, 2435, 2435, 2449, 4349,
	2327, 1551, 1563, 2469, 2471, 2319, 1581, 1563, 3582, 2475,
	2850, 1962, 2317, 772, 771, 2224, 1810, 974, 3003, 3004,
	1203, 4296, 2158, 640, 1203, 2223, 2152, 2499, 4235, 2880,
	2603, 2083, 3534, 2293, 1641, 1967, 1968, 2656, 1165, 2205,
	1155, 1183, 2491, 3189, 2355, 3345, 2323, 3581, 635, 1123,
	2162, 3182, 2391, 2524, 3344, 724, 1155, 2392, 1829, 2844,
	2395, 3820, 2396, 2397, 2340, 1963, 3126, 1225, 2691, 2655,
	1198, 2567, 2222, 2513, 2653, 913, 1535, 1199, 1592, 836,
	1959, 1199, 3188, 978, 1960, 1200, 2569, 4328, 2490, 1200,
	3181, 1595, 1814, 2221, 1874, 1874, 4313, 1880, 971, 2498,
	3560, 2503, 1988, 3558, 2509, 2510, 3958, 2690, 3547, 2444,
	2431, 1840, 3223, 2460, 2853, 2473, 3193, 244, 1196, 2570,
	2611, 3901, 2481, 2482, 3546, 1225, 2658, 2492, 4352, 3167,
	165, 2638, 2617, 2540, 2496, 2497, 2583, 1817, 2568, 1345,
	2581, 1987, 4307, 1827, 1782, 2548, 767, 1203, 766, 1538,
	2879, 913, 1812, 2647, 1035, 1035, 2193, 1035, 3399, 928,
	2538, 2191, 1152, 2584, 928, 1877, 1877, 928, 3168, 2615,
	1815, 929, 2594, 3773, 971, 928, 2562, 1540, 1152, 1972,
	1345, 3009, 2307, 2033, 2032, 2202, 3781, 914, 2700, 3773,
	2555, 2703, 1610, 2705, 2291, 4236, 2651, 2294, 2872, 2873,
	1774, 1775, 2903, 2636, 1199, 2223, 3769, 2559, 4312, 2620,
	2305, 1813, 1200, 4285, 2558, 3396, 2560, 2565, 1971, 2533,
	2758, 2732, 3769, 3679, 2722, 1451, 3762, 1388, 689, 2715,
	2901, 686, 1969, 3678, 4366, 2749, 1345, 1345, 2749, 1345,
	1201, 3065, 2852, 3760, 1201, 1976, 2290, 2766, 1955, 2561,
	2607, 1345, 3764, 2770, 2630, 2632, 2633, 2634, 3770, 2621,
	2587, 4327, 2619, 914, 2805, 3276, 1345, 1980, 2694, 2597,
	2600, 2849, 2696, 2221, 3770, 2637, 2813, 2814, 4334, 1414,
	2779, 4151, 3019, 2095, 1163, 2204, 4234, 2820, 2821, 2822,
	1969, 725, 726, 3397, 2774, 998, 2160, 1391, 3332, 1991,
	2355, 2593, 3277, 4095, 2005, 4109, 1035, 3325, 1414, 2012,
	2014, 3128, 1607, 803, 3763, 2809, 717, 1816, 720, 3840,
	4263, 4284, 1977, 1412, 1769, 3108, 1611, 3535, 829, 4264,
	3782, 1960, 1960, 4306, 1354, 2697, 2582, 2760, 3675, 3160,
	2841, 2831, 2773, 2832, 2833, 2301, 3914, 986, 1952, 2709,
	1035, 2598, 3957, 1953, 2719, 2829, 1035, 1035, 2765, 2013,
	2851, 3589, 2768, 2302, 2769, 2898, 817, 1201, 2303, 915,
	3587, 2742, 2308, 4183, 3276, 2894, 3202, 636, 2790, 2811,
	1868, 1868, 4112, 2815, 2761, 2816, 165, 2753, 2899, 2780,
	925, 2776, 2904, 3589, 3159, 2828, 2855, 3898, 2857, 3327,
	2310, 3806, 3587, 2775, 2337, 2728, 2836, 1612, 2838, 1874,
	2840, 1035, 1035, 2781, 3326, 2456, 2777, 1035, 2011, 3020,
	2792, 3064, 2292, 1981, 1608, 2318, 1536, 2826, 728, 727,
	1035, 1035, 1550, 1552, 837, 2355, 1035, 1035, 1498, 2835,
	2858, 2837, 1035, 2839, 1721, 915, 2942, 637, 2495, 4353,
	3765, 1035, 1035, 1035, 2157, 3766, 2508, 1035, 2151, 977,
	4149, 2834, 1954, 2848, 3412, 1640, 3765, 1035, 2895, 3680,
	4341, 3766, 1182, 3850, 3669, 3502, 1567, 3590, 2871, 1956,
	1877, 1177, 729, 730, 1035, 3356, 2863, 1982, 1983, 638,
	1814, 639, 1960, 4115, 4150, 2456, 2456, 4233, 2860, 4295,
	3323, 2881, 916, 2862, 2861, 4293, 3768, 4130, 4021, 3590,
	1978, 2866, 4283, 2925, 2237, 3623, 3263, 969, 4332, 913,
	3771, 3676, 3768, 2053, 2916, 1807, 3897, 3841, 1175, 1952,
	1170, 1651, 3163, 627, 1953, 1817, 3771, 2000, 3603, 2304,
	2920, 2921, 971, 2240, 3360, 2924, 1989, 1958, 917, 2306,
	2493, 1979, 3724, 3005, 3006, 3007, 3008, 3010, 3011, 2900,
	1999, 4262, 1970, 3585, 830, 831, 3450, 1925, 1815, 2902,
	978, 4367, 3099, 1650, 1035, 1035, 1035, 2893, 916, 4030,
	3165, 4081, 4358, 1035, 1035, 1035, 1645, 970, 1035, 3964,
	3963, 1810, 1995, 3943, 1153, 1992, 1153, 3624, 1035, 1157,
	1225, 3569, 818, 819, 1035, 1650, 1035, 3328, 3329, 3330,
	3331, 3521, 3057, 3058, 1157, 4333, 1967, 1968, 2931, 3264,
	2096, 3256, 3786, 3141, 917, 2008, 1922, 3137, 2733, 3785,
	2599, 914, 1225, 3588, 2727, 3767, 2713, 2077, 1151, 2456,
	2456, 2456, 3164, 1954, 1157, 2066, 1996, 1225, 4335, 2058,
	2041, 3767, 2230, 4116, 1151, 3515, 3395, 2622, 1984, 3899,
	1956, 3079, 3465, 4161, 1880, 3588, 3357, 1814, 1225, 1959,
	663, 3774, 1649, 1960, 2006, 4131, 3040, 2199, 1918, 2710,
	3626, 3865, 4003, 1035, 1454, 1650, 4001, 3774, 3944, 3152,
	3148, 3147, 3059, 3681, 2886, 1868, 2864, 1035, 2142, 1920,
	2532, 3478, 3062, 3069, 1649, 3061, 1155, 1582, 1721, 1880,
	2531, 3104, 1817, 2007, 2530, 1816, 3133, 3134, 3132, 3088,
	3093, 1155, 2529, 3067, 1436, 1035, 1345, 1812, 1958, 1985,
	3594, 2717, 975, 3118, 3150, 1651, 3092, 3154, 1921, 1434,
	3124, 3068, 3725, 832, 833, 1815, 3077, 3451, 3085, 3952,
	3073, 1155, 3080, 3081, 3130, 835, 3452, 3051, 3078, 3151,
	4088, 1345, 3156, 3157, 3169, 3170, 1196, 1651, 3171, 3066,
	2722, 1225, 3832, 3682, 3097, 3035, 3036, 3037, 3332, 4357,
	1345, 820, 821, 2231, 1649, 1345, 1813, 3325, 3315, 2487,
	2075, 3205, 998, 3083, 3208, 3084, 998, 3138, 3213, 3215,
	3196, 3197, 3231, 1568, 3198, 2722, 4303, 3882, 1345, 3177,
	3999, 1309, 1422, 915, 1345, 1309, 1345, 3101, 3102, 3103,
	1225, 3784, 2623, 2624, 2722, 1423, 3109, 711, 1152, 2722,
	2812, 3162, 3115, 3116, 2695, 3117, 2693, 1955, 1345, 3125,
	4117, 3074, 3516, 1152, 1544, 2907, 2908, 3953, 3240, 3131,
	1959, 4164, 1345, 1852, 1960, 3941, 3191, 3249, 3200, 4089,
	3203, 3136, 2489, 4169, 1957, 4158, 3192, 2488, 1157, 3731,
	3467, 3142, 2362, 1152, 3881, 4187, 3194, 3272, 3226, 3327,
	3229, 3173, 3255, 3166, 4305, 3210, 3100, 2805, 1627, 3072,
	3217, 3184, 1816, 1957, 3326, 3179, 2805, 4253, 3942, 1949,
	4102, 3187, 3920, 3195, 3185, 3723, 1625, 3593, 3186, 1604,
	3032, 1345, 1345, 3372, 3291, 3201, 3190, 3293, 3294, 3211,
	3076, 3222, 3297, 1602, 3298, 3302, 3299, 238, 3218, 2002,
	3281, 3335, 1578, 1345, 4165, 1576, 3209, 2002, 1950, 3119,
	1574, 3216, 4090, 1572, 968, 662, 916, 2997, 2905, 2714,
	2649, 2613, 2557, 1435, 1847, 1843, 1628, 1522, 3033, 3180,
	3339, 2620, 3233, 3353, 3295, 3352, 1645, 3265, 1433, 2846,
	1225, 1570, 1560, 1225, 3273, 1155, 1874, 2190, 3253, 3271,
	1558, 3225, 1411, 2845, 834, 1432, 2818, 2219, 2201, 3026,
	3027, 3028, 917, 1591, 717, 2165, 720, 2038, 3252, 1907,
	1753, 1533, 1405, 1035, 3280, 978, 3333, 3278, 2361, 1035,
	1035, 4228, 3807, 1035, 1035, 1035, 3287, 1035, 1955, 3795,
	4157, 1874, 3863, 3075, 3313, 3296, 1035, 1880, 3292, 3812,
	3758, 3622, 3614, 3574, 926, 1035, 3541, 3539, 1035, 3520,
	3259, 3254, 3245, 2772, 1225, 2767, 3351, 1877, 2745, 2731,
	3350, 165, 165, 1035, 3300, 3301, 2720, 2707, 2692, 1520,
	3204, 1225, 2116, 3334, 3317, 1626, 2114, 2111, 2108, 4281,
	2103, 1880, 1880, 1035, 1035, 2101, 1035, 1035, 1035, 2456,
	2456, 3392, 3358, 1624, 3348, 2097, 1603, 3328, 3329, 3330,
	3331, 2088, 1877, 3375, 2037, 2035, 2018, 1152, 3347, 2003,
	1601, 1986, 1973, 1961, 3341, 3268, 3342, 4273, 3343, 1577,
	3499, 3355, 1575, 1654, 3212, 3384, 3385, 1573, 1035, 2012,
	1571, 3424, 1035, 1854, 1880, 1880, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1132, 1035, 3425, 1569, 1559,
	4297, 2189, 2884, 1035, 1035, 1880, 1926, 1557, 3380, 4197,
	1035, 3887, 1431, 3880, 3879, 3819, 3754, 2806, 1945, 3391,
	1133, 1035, 1385, 4032, 2602, 3398, 3400, 3401, 931, 933,
	935, 3407, 1157, 1157, 4025, 3634, 1035, 1969, 3414, 3498,
	2156, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
	2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
	2582, 2456, 3422, 1475, 2582, 1225, 3423, 3402, 2074, 1655,
	2185, 1622, 1623, 1474, 2184, 2580, 4196, 2163, 2011, 2601,
	3788, 3814, 3483, 2250, 3415, 1556, 4067, 3427, 3732, 3710,
	3421, 3429, 701, 2885, 2625, 1661, 1662, 2606, 3462, 3454,
	1035, 1661, 1662, 1658, 4299, 4291, 641, 3568, 4258, 2706,
	3611, 2187, 1868, 2654, 1153, 235, 1035, 1035, 3455, 2059,
	1188, 2662, 2661, 2644, 1664, 2646, 1134, 1309, 3567, 2608,
	1153, 3500, 3501, 4156, 4125, 4329, 2250, 3430, 2645, 1155,
	1155, 3474, 3475, 1035, 1035, 3512, 3513, 3514, 3469, 3471,
	3472, 1475, 4122, 3540, 1151, 3542, 1475, 1868, 1663, 652,
	624, 4087, 165, 2610, 1663, 3463, 3485, 3458, 4017, 1151,
	1035, 1043, 757, 4356, 998, 3996, 2609, 3486, 800, 3613,
	1309, 3602, 3493, 3258, 2752, 2474, 1911, 1861, 3950, 1874,
	4189, 3107, 1345, 3003, 3004, 4190, 4189, 1661, 1662, 1151,
	1356, 4190, 2574, 2575, 2572, 2573, 4124, 1543, 3702, 2357,
	3504, 1880, 3573, 1542, 4309, 242, 242, 242, 2574, 630,
	631, 3553, 646, 630, 646, 656, 661, 2572, 2390, 3524,
	679, 3549, 4018, 1874, 1874, 685, 3982, 3815, 3811, 3570,
	1345, 242, 1606, 3508, 3810, 1605, 3698, 1035, 3620, 3503,
	3403, 3206, 2502, 3592, 1747, 1157, 1035, 1746, 3564, 814,
	1877, 1152, 1152, 3636, 3616, 242, 4343, 4314, 4078, 3977,
	2758, 3935, 2620, 3932, 3554, 3556, 1345, 1345, 1345, 3368,
	3369, 3627, 3843, 3750, 3628, 3660, 1874, 1874, 3640, 3645,
	3597, 3642, 1345, 3595, 3537, 3643, 3532, 3290, 3609, 3649,
	3262, 3610, 3631, 3261, 1877, 1877, 2805, 2993, 2992, 2991,
	2990, 1225, 2989, 2988, 2987, 2986, 2985, 1874, 3630, 2984,
	2983, 3612, 3583, 2982, 2981, 3591, 2980, 1309, 2979, 2978,
	2977, 2976, 2975, 1225, 2974, 3661, 1035, 1035, 2973, 3615,
	2972, 3668, 1035, 1035, 1880, 2971, 2970, 1035, 1035, 2843,
	1035, 3579, 2825, 2824, 1035, 3632, 2823, 1877, 1877, 2763,
	2737, 3638, 1155, 2708, 3637, 1035, 2550, 2549, 3629, 2322,
	2186, 2183, 2182, 3142, 2181, 2180, 2179, 3644, 630, 630,
	2091, 1035, 2090, 3652, 2089, 2072, 242, 2048, 1877, 3655,
	3659, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439,
	3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449,
	3692, 3453, 3683, 3650, 3651, 3580, 2044, 2043, 2042, 2040,
	3684, 3677, 3658, 1151, 2039, 1621, 3596, 3656, 1620, 1565,
	3667, 1564, 1461, 1460, 1459, 1458, 1457, 1456, 3696, 1455,
	1453, 1157, 1448, 1447, 1446, 1445, 1444, 1400, 1399, 1157,
	3617, 1398, 1397, 1225, 1396, 1225, 1395, 1390, 1384, 1382,
	1381, 1216, 1157, 1215, 3672, 1214, 1213, 1181, 1180, 1115,
	1916, 937, 923, 1318, 3955, 1868, 1330, 1333, 1225, 3772,
	1615, 84, 1392, 745, 1152, 78, 2009, 3536, 896, 4186,
	1378, 4108, 752, 4171, 3158, 2665, 3722, 2164, 1566, 2166,
	3087, 1035, 3737, 2515, 4148, 3755, 3756, 3706, 2941, 4074,
	3913, 2360, 1751, 3044, 80, 1019, 1065, 3839, 3838, 1868,
	1868, 3759, 3523, 1874, 2795, 3836, 3789, 3835, 1225, 1865,
	1867, 985, 1228, 1927, 1025, 1943, 1225, 1333, 1333, 3779,
	3740, 1936, 3743, 3736, 3734, 3735, 3739, 2551, 1155, 2434,
	3733, 1042, 3790, 3747, 3092, 3744, 1155, 3780, 3738, 3816,
	1039, 3817, 1869, 1871, 1345, 1345, 1041, 1040, 1870, 1155,
	3791, 3792, 1868, 1868, 1770, 1038, 1333, 1864, 3619, 3618,
	3778, 3757, 1345, 165, 2716, 2756, 3729, 3833, 3288, 1441,
	1439, 898, 1931, 1225, 1877, 2316, 2344, 2930, 1345, 1744,
	3830, 1000, 1021, 1868, 2341, 1173, 3822, 3828, 3842, 3818,
	1010, 1337, 999, 3070, 3827, 3049, 3275, 3492, 2229, 3854,
	761, 3856, 3000, 3809, 2347, 1035, 2722, 1166, 3805, 3829,
	2457, 1309, 2450, 2446, 3122, 1345, 1345, 1345, 2746, 3866,
	1631, 3874, 3867, 1723, 1380, 2757, 1225, 1211, 1003, 2314,
	1735, 2910, 2239, 3282, 3090, 3834, 1874, 2544, 1035, 1035,
	1035, 3870, 3849, 3883, 4193, 3411, 3853, 1415, 2052, 4047,
	1152, 1131, 1130, 1129, 4177, 3794, 1225, 4174, 1152, 3653,
	3861, 1035, 3875, 3886, 1035, 1035, 3802, 3852, 3804, 3868,
	3238, 1152, 1919, 2566, 1035, 1713, 3246, 1880, 1015, 1329,
	3892, 3055, 1035, 1035, 3316, 1402, 684, 1027, 1712, 2686,
	1490, 3889, 3894, 2685, 4084, 1197, 1195, 1225, 1309, 1345,
	1506, 4039, 1194, 3900, 1193, 3890, 3140, 1877, 4365, 3533,
	211, 2878, 1652, 1225, 4040, 3905, 1644, 1151, 1151, 208,
	210, 1035, 209, 3844, 3496, 3910, 3096, 4256, 1035, 3551,
	3803, 3230, 21, 20, 19, 105, 1035, 40, 1880, 2456,
	3916, 18, 120, 3922, 137, 4041, 1035, 136, 113, 1035,
	135, 3937, 3928, 3929, 134, 133, 132, 139, 1035, 131,
	1153, 130, 125, 129, 128, 1225, 1545, 1309, 3968, 3969,
	127, 3927, 126, 124, 3931, 1153, 1345, 1345, 123, 122,
	121, 119, 3938, 118, 1168, 3855, 2456, 117, 116, 1868,
	115, 114, 3983, 1309, 112, 3985, 3986, 111, 110, 3936,
	3960, 3959, 109, 108, 4043, 1153, 3976, 107, 106, 4011,
	675, 672, 1178, 57, 1225, 3240, 56, 1345, 4002, 3987,
	104, 679, 103, 17, 3974, 38, 4042, 14, 61, 2234,
	62, 16, 3995, 13, 3984, 1035, 1035, 3992, 33, 4016,
	83, 3994, 3991, 4044, 242, 4000, 242, 242, 1321, 4035,
	242, 242, 1336, 4010, 1035, 1035, 95, 94, 4026, 4054,
	34, 4027, 92, 91, 32, 15, 242, 89, 1358, 88,
	3979, 1035, 1880, 4050, 4051, 31, 4029, 4028, 4031, 3978,
	4034, 29, 4015, 11, 4048, 4033, 3870, 9, 8, 35,
	1831, 12, 5, 1387, 1309, 170, 1035, 169, 172, 1035,
	3966, 4023, 168, 171, 82, 1404, 167, 1410, 166, 81,
	27, 242, 242, 10, 1321, 162, 4012, 3607, 1035, 4080,
	4091, 76, 1868, 1330, 164, 4062, 1223, 163, 3989, 161,
	1324, 160, 1450, 159, 77, 74, 2456, 4079, 4072, 4066,
	1151, 158, 4063, 4064, 242, 157, 242, 242, 75, 1321,
	242, 1336, 1309, 156, 25, 6, 4097, 4111, 60, 1035,
	1035, 679, 7, 242, 242, 3895, 4105, 4096, 2452, 3336,
	1035, 98, 99, 1035, 36, 72, 71, 1345, 70, 24,
	59, 4104, 4110, 23, 199, 198, 814, 1345, 1345, 1874,
	197, 196, 3990, 195, 194, 189, 188, 193, 191, 190,
	192, 4139, 4106, 4126, 1345, 4118, 187, 202, 4127, 4123,
	201, 4129, 203, 200, 205, 186, 4119, 4120, 1035, 1035,
	184, 4132, 180, 4135, 4133, 179, 183, 185, 182, 1153,
	4137, 4138, 181, 178, 204, 154, 155, 67, 153, 152,
	4136, 151, 150, 149, 4015, 148, 147, 4142, 4143, 66,
	1874, 1035, 1035, 22, 1035, 2, 4153, 1, 242, 4168,
	1877, 4176, 4179, 0, 4144, 0, 4145, 4191, 0, 0,
	0, 0, 0, 4045, 0, 242, 4166, 4188, 4046, 0,
	4195, 0, 0, 0, 0, 0, 0, 4198, 0, 3919,
	0, 0, 4211, 0, 0, 4207, 4210, 0, 4167, 0,
	1035, 1035, 1035, 0, 0, 0, 4152, 4185, 4199, 4181,
	0, 4200, 0, 0, 0, 4212, 4206, 0, 4202, 0,
	4240, 1877, 0, 1035, 4205, 4245, 1151, 0, 0, 0,
	0, 4224, 4225, 4227, 1151, 4226, 3946, 0, 0, 4180,
	0, 0, 4184, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 4267, 4243, 0, 0, 0, 691, 0,
	4269, 0, 0, 0, 4255, 0, 0, 0, 4277, 0,
	2063, 1035, 0, 4278, 0, 4282, 4276, 0, 0, 4274,
	4275, 0, 4272, 4265, 1874, 4279, 4266, 4271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4288,
	4289, 4298, 4294, 0, 4292, 0, 4290, 2681, 0, 0,
	4176, 4301, 0, 4179, 4304, 4300, 4302, 0, 0, 1035,
	0, 1035, 4316, 4311, 4317, 4315, 4308, 0, 4195, 0,
	0, 1330, 0, 0, 0, 4319, 0, 0, 0, 0,
	2673, 2671, 0, 4324, 0, 0, 0, 2675, 2677, 2667,
	0, 0, 0, 0, 0, 1877, 4336, 4318, 4338, 4320,
	0, 4323, 0, 0, 0, 4310, 0, 0, 0, 0,
	0, 4344, 696, 630, 0, 1868, 0, 0, 0, 0,
	1035, 1035, 0, 4345, 4354, 0, 4071, 0, 1035, 0,
	1035, 1035, 4360, 0, 242, 0, 242, 4350, 4369, 0,
	242, 0, 4372, 0, 4347, 4371, 4363, 0, 0, 4351,
	0, 4373, 0, 1358, 1321, 242, 2758, 242, 0, 0,
	0, 4370, 242, 1358, 646, 4374, 4379, 242, 1358, 4377,
	4368, 4380, 0, 4382, 679, 4383, 1868, 4381, 68, 4387,
	0, 1035, 4378, 1153, 1153, 4388, 0, 0, 0, 0,
	0, 0, 704, 4395, 69, 4397, 0, 0, 0, 0,
	4384, 0, 0, 4392, 0, 4394, 4389, 0, 0, 0,
	73, 0, 0, 4391, 0, 0, 698, 0, 4361, 4362,
	0, 4398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 2121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2868, 0, 0,
	79, 1490, 2134, 0, 68, 0, 0, 0, 2669, 0,
	0, 0, 2135, 0, 0, 0, 0, 1309, 2683, 4393,
	69, 0, 0, 702, 2143, 0, 2146, 2147, 2148, 0,
	0, 0, 0, 0, 0, 1947, 73, 85, 0, 2682,
	2674, 2672, 2676, 2678, 2668, 2670, 2684, 0, 0, 1309,
	0, 100, 0, 2680, 0, 0, 86, 97, 0, 0,
	1868, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 2452, 2452, 0,
	0, 0, 0, 0, 0, 1309, 2687, 0, 0, 0,
	242, 0, 0, 242, 693, 0, 0, 0, 0, 0,
	998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 85, 998, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 0, 100, 0, 0,
	0, 0, 86, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 242, 0, 0,
	0, 0, 703, 0, 242, 0, 1153, 0, 0, 0,
	242, 0, 0, 0, 0, 700, 0, 0, 0, 0,
	0, 695, 0, 0, 0, 242, 0, 242, 0, 0,
	0, 630, 2030, 242, 0, 0, 0, 87, 1309, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 242, 0,
	0, 0, 692, 0, 0, 242, 1661, 1662, 0, 0,
	0, 2452, 2452, 2452, 0, 0, 0, 0, 0, 0,
	0, 2541, 0, 0, 0, 0, 0, 1309, 1692, 699,
	0, 0, 0, 0, 0, 1664, 679, 2688, 0, 0,
	814, 90, 1333, 705, 0, 0, 2679, 0, 0, 0,
	0, 0, 1147, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 1321, 242, 1663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 679, 0, 0, 0, 0, 173, 93, 242,
	96, 0, 0, 0, 0, 0, 237, 237, 626, 0,
	242, 242, 0, 242, 0, 242, 0, 242, 0, 242,
	0, 0, 0, 0, 212, 0, 0, 90, 0, 0,
	0, 0, 809, 0, 1318, 0, 138, 0, 0, 0,
	2195, 0, 1153, 2196, 0, 2197, 0, 0, 0, 0,
	1153, 1330, 0, 0, 0, 0, 0, 242, 0, 1661,
	1662, 0, 0, 1153, 0, 0, 214, 0, 0, 1686,
	1687, 1688, 1689, 173, 93, 0, 96, 0, 661, 1669,
	0, 1692, 679, 0, 0, 0, 0, 1309, 1664, 0,
	1309, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 177, 0, 809, 0,
	0, 0, 138, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 1663, 1691, 1693, 206, 0, 0, 0, 0,
	0, 0, 1683, 207, 0, 0, 0, 0, 0, 0,
	0, 1680, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 1333, 1333,
	0, 1309, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 1661, 1662, 0, 0, 0, 1309, 0,
	1684, 0, 177, 0, 0, 0, 2253, 0, 0, 0,
	213, 0, 3371, 0, 0, 1692, 0, 0, 2689, 0,
	0, 206, 1664, 0, 0, 0, 0, 0, 0, 207,
	1330, 0, 1686, 1687, 1688, 1689, 0, 1333, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 1663, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 1330, 0, 1330, 242, 1680, 0, 0, 0, 0,
	0, 0, 0, 630, 0, 0, 1691, 1693, 0, 0,
	242, 0, 630, 2358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 0, 2778, 1490, 1690, 0, 242,
	1336, 0, 0, 0, 0, 0, 3366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 1684, 0, 2819, 1686, 1687, 1688, 1689,
	0, 0, 1309, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 1336, 0, 646,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2452, 2452, 0, 0, 0, 0, 0, 2525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2591, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 1678, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	1690, 0, 0, 0, 0, 242, 0, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 2577,
	242, 2698, 0, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
	2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
	2452, 2452, 0, 2452, 0, 1358, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 2741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2591, 0, 630, 0, 0,
	2762, 0, 0, 0, 0, 0, 242, 0, 0, 242,
	0, 0, 0, 242, 0, 242, 0, 0, 0, 0,
	1321, 0, 242, 242, 1690, 1336, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 2788, 814, 0, 2591, 2591,
	0, 0, 0, 0, 1685, 0, 0, 0, 1309, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	1309, 0, 242, 1321, 242, 0, 0, 1358, 0, 1358,
	1358, 242, 0, 0, 1321, 0, 1321, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 242, 242, 242, 1321, 242,
	0, 242, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 1328, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 2063, 0, 0,
	242, 0, 0, 0, 3003, 3004, 0, 3021, 3022, 3023,
	0, 0, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 3688, 0, 0, 0, 0,
	1309, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 1692, 0, 1465, 0, 1465, 1465, 0,
	1664, 0, 0, 0, 0, 0, 0, 3018, 1710, 0,
	0, 0, 0, 0, 1507, 1508, 0, 0, 0, 1358,
	0, 3003, 3004, 0, 3021, 3022, 3023, 0, 0, 0,
	0, 0, 0, 0, 1663, 1309, 0, 0, 0, 68,
	0, 0, 3377, 1309, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 69, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3018, 0, 0, 3009, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 3219, 0, 1614,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 3250, 0, 0,
	0, 1330, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 3257, 0, 1309, 0, 0, 0, 3024, 0, 0,
	242, 0, 100, 0, 0, 0, 0, 86, 97, 1701,
	0, 0, 1711, 0, 0, 242, 0, 0, 1691, 1693,
	630, 0, 0, 1309, 3009, 630, 0, 0, 630, 0,
	0, 630, 630, 1809, 0, 0, 0, 630, 3019, 0,
	0, 0, 0, 1678, 1679, 242, 0, 0, 0, 0,
	3308, 3309, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 1699, 87, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 1358,
	1309, 0, 3056, 0, 3024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2591, 2591, 242, 0, 1336, 0, 0, 2591, 0,
	0, 3144, 0, 0, 3082, 0, 998, 0, 0, 2591,
	3144, 0, 2591, 3144, 3144, 3019, 0, 0, 0, 3095,
	0, 0, 1309, 0, 0, 0, 0, 242, 242, 1336,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 242, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3020, 2591, 0, 3207, 2591,
	1336, 1309, 0, 2591, 2591, 1336, 0, 0, 0, 0,
	0, 1841, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 1850, 0, 1328, 0,
	0, 984, 1685, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 3234,
	0, 0, 3236, 2591, 0, 0, 242, 1702, 0, 0,
	242, 0, 1410, 0, 0, 0, 0, 0, 173, 93,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3020, 0, 2741, 0, 0, 1321, 0, 242,
	0, 2452, 2591, 0, 630, 212, 0, 0, 0, 0,
	0, 2591, 0, 809, 0, 0, 0, 138, 0, 242,
	0, 0, 0, 242, 242, 0, 0, 0, 0, 3015,
	3016, 3017, 3095, 0, 0, 0, 3014, 3012, 3013, 3005,
	3006, 3007, 3008, 3010, 3011, 0, 0, 214, 2452, 0,
	242, 2741, 0, 0, 2741, 0, 998, 998, 0, 0,
	0, 0, 1700, 1333, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 140, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 3346,
	0, 0, 1321, 242, 0, 242, 206, 0, 0, 0,
	0, 0, 2063, 0, 207, 0, 3015, 3016, 3017, 0,
	0, 0, 0, 3014, 3012, 3013, 3005, 3006, 3007, 3008,
	3010, 3011, 0, 0, 0, 0, 1503, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	0, 0, 0, 0, 2050, 0, 0, 0, 2057, 0,
	0, 0, 1324, 0, 0, 1223, 0, 0, 0, 0,
	1692, 2069, 0, 0, 3409, 0, 0, 1664, 2452, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 2080, 0,
	0, 3577, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 1465,
	0, 1683, 0, 0, 0, 0, 1328, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 3388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3646, 3647, 3648, 0, 0,
	0, 3365, 0, 0, 0, 0, 2057, 0, 0, 2139,
	0, 1490, 0, 242, 242, 0, 0, 0, 0, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	2159, 1669, 0, 0, 0, 630, 630, 0, 0, 0,
	0, 0, 2171, 0, 2173, 0, 2175, 0, 2177, 0,
	2178, 0, 0, 0, 0, 0, 0, 1358, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 0,
	0, 1358, 1358, 1358, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2200, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3003, 3004, 0, 3021, 3022, 3023, 2063,
	0, 0, 0, 0, 0, 0, 679, 3495, 0, 0,
	1663, 0, 1684, 1333, 3376, 0, 0, 0, 984, 0,
	1683, 0, 984, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 1661, 1662, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 242, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 3018, 242, 0, 1360,
	0, 1366, 0, 1372, 0, 0, 0, 242, 0, 0,
	2896, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 242, 0, 0, 0, 242, 0, 0, 1663, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 1683, 0,
	1669, 0, 0, 0, 0, 2591, 242, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1690,
	0, 0, 0, 0, 0, 2788, 2788, 0, 0, 0,
	0, 814, 814, 2591, 0, 1491, 2741, 2741, 0, 1685,
	814, 2591, 0, 0, 1691, 1693, 3009, 0, 0, 0,
	0, 0, 1509, 1490, 1514, 0, 0, 0, 2889, 0,
	242, 0, 0, 0, 1523, 0, 1528, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 2522, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 3024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3891, 0, 3893, 0, 1587, 0,
	3707, 1593, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3019, 68, 0,
	0, 2069, 0, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 69, 0, 0, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 242, 0, 0, 0, 0, 0, 1358, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 3933, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 1690, 0,
	79, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 0, 0,
	1330, 3003, 3004, 0, 3021, 3022, 3023, 0, 1685, 0,
	2591, 2591, 2591, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 1732, 1358, 0, 0, 0, 85, 1745, 0,
	0, 2591, 0, 3144, 0, 0, 1358, 1358, 242, 1336,
	0, 100, 0, 0, 0, 0, 86, 97, 0, 0,
	1336, 242, 1336, 242, 3020, 3993, 0, 3742, 0, 0,
	0, 0, 0, 0, 2591, 0, 2591, 242, 0, 2057,
	0, 0, 0, 0, 3018, 0, 1690, 2069, 0, 0,
	3752, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 0, 2591, 0, 0, 0, 1685, 3846, 0, 0,
	0, 87, 0, 0, 0, 0, 242, 2764, 0, 0,
	1465, 0, 0, 0, 1465, 242, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1803, 1803, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 1358,
	0, 0, 1044, 0, 2817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3009, 0, 0, 0, 0, 0,
	0, 0, 0, 2827, 0, 2830, 0, 0, 3015, 3016,
	3017, 0, 0, 0, 0, 3014, 3012, 3013, 3005, 3006,
	3007, 3008, 3010, 3011, 0, 0, 243, 243, 243, 0,
	2427, 2428, 2429, 2430, 2423, 2424, 2425, 2426, 0, 0,
	984, 0, 0, 0, 0, 2854, 1328, 2856, 1328, 0,
	2859, 0, 243, 0, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 0, 243, 0, 1223, 0,
	2591, 0, 3144, 1465, 0, 3940, 0, 0, 0, 1020,
	102, 2887, 0, 242, 0, 3019, 1490, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3911, 2403,
	2404, 2405, 2406, 1490, 0, 0, 0, 173, 93, 679,
	96, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	2415, 2416, 2417, 2418, 2411, 2412, 2413, 2414, 2419, 2420,
	2421, 2422, 1336, 242, 212, 0, 0, 0, 0, 3911,
	0, 0, 809, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 3940, 0, 0, 2253, 0, 0, 0, 0,
	2591, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 4020, 0, 0, 0, 214, 3003, 3004, 0,
	3021, 3022, 3023, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 2399, 2400, 2401, 2402, 2407, 2408, 2409,
	2410, 140, 0, 0, 0, 0, 0, 2253, 0, 0,
	0, 0, 0, 242, 242, 0, 177, 0, 0, 0,
	1661, 1662, 3020, 0, 213, 0, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 206, 0, 3409, 0, 0,
	0, 0, 1692, 207, 0, 959, 0, 0, 0, 1664,
	3018, 0, 0, 3940, 0, 0, 979, 1710, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 1141, 0, 0, 0, 0, 0,
	242, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	3009, 0, 0, 0, 3144, 0, 3015, 3016, 3017, 0,
	0, 0, 0, 3014, 3012, 3013, 3005, 3006, 3007, 3008,
	3010, 3011, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 1358, 1686, 1687, 1688, 1689, 0, 3025, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 3003, 3004, 0, 3021, 3022, 3023, 4162, 0, 0,
	3024, 0, 0, 0, 1358, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 3135, 0, 0, 0, 1701, 0,
	0, 1711, 0, 0, 242, 2591, 0, 1691, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3019, 242, 0, 0, 0, 0, 0, 3176, 3178,
	0, 2069, 1678, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3018, 0, 0, 3409, 0, 0,
	1699, 0, 0, 2228, 0, 2232, 0, 0, 0, 0,
	0, 0, 2246, 0, 1684, 0, 0, 0, 0, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 0, 2295, 0, 2297, 2298, 2299,
	2300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3940, 0, 0, 0, 0, 0, 0, 3247, 0, 2324,
	0, 3251, 0, 0, 3009, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 2339, 0, 0, 0, 0, 0,
	0, 1358, 0, 2591, 0, 0, 0, 0, 3020, 0,
	2369, 2372, 2375, 2378, 0, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1690, 0, 0, 1328, 1328, 0, 0, 0, 0,
	0, 0, 0, 2448, 3024, 2459, 2461, 2466, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 2788, 0, 3019, 0, 0, 0, 0,
	0, 2591, 0, 0, 0, 243, 1229, 243, 243, 0,
	1229, 243, 243, 0, 1229, 0, 2788, 0, 0, 0,
	0, 0, 0, 0, 3349, 0, 1328, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3015, 3016, 3017, 0, 0, 1229, 0, 3014,
	3012, 3013, 3005, 3006, 3007, 3008, 3010, 3011, 0, 3361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 243, 243, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 243, 0, 243, 243, 0,
	0, 243, 0, 1229, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 1229, 243, 243, 0, 0, 0, 0,
	0, 0, 3020, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 102, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 1229,
	0, 1664, 0, 0, 0, 0, 0, 2701, 2702, 1710,
	2704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 102, 0, 0, 1663, 979, 102, 102, 0,
	0, 0, 0, 0, 0, 1683, 243, 0, 0, 102,
	0, 102, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 102, 0, 102, 0, 0, 3015, 3016, 3017, 0,
	0, 0, 0, 3014, 3012, 3013, 3005, 3006, 3007, 3008,
	3010, 3011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 0, 0, 0, 0, 0, 1661, 1662, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 2069, 1692, 1714,
	1715, 959, 0, 0, 0, 1664, 0, 0, 2069, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 3606, 0,
	0, 1726, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 2069, 0, 0, 0, 3621, 0, 1731, 1663,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 2890, 2891, 0, 0, 1680, 0,
	2897, 243, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 1229, 0, 0, 0, 243, 243, 243, 2911,
	2912, 0, 0, 243, 0, 2339, 0, 0, 243, 0,
	0, 0, 0, 0, 2919, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	2933, 3670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 2945, 0, 1686,
	1687, 1688, 1689, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 1685, 1826, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 1691, 1693, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 1678, 1679,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2466, 2466, 2466, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	1684, 1803, 0, 0, 0, 0, 0, 1683, 0, 3060,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 243, 1229, 1229, 243, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 243, 3793,
	0, 0, 0, 0, 0, 243, 984, 1686, 1687, 1688,
	1689, 243, 2069, 0, 0, 0, 0, 1669, 0, 0,
	984, 0, 0, 0, 0, 0, 243, 0, 243, 0,
	0, 0, 0, 0, 243, 0, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3161, 0,
	0, 0, 1701, 0, 0, 1711, 0, 1685, 0, 243,
	0, 1691, 1693, 0, 0, 0, 243, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 3862, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 0, 1229, 0, 1229, 0, 1229, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 1229, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 1229, 243, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 1229,
	1229, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 243, 243, 0, 243, 0, 243, 0, 243, 0,
	243, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 979, 0, 979, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2246, 0, 0, 0,
	0, 0, 3363, 3364, 0, 0, 3367, 0, 0, 0,
	3370, 0, 0, 1229, 0, 0, 0, 0, 0, 3374,
	0, 0, 0, 959, 4061, 1328, 959, 959, 3381, 0,
	0, 3060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 3393, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 3416, 3417, 0, 3418,
	3419, 3420, 0, 3713, 0, 0, 0, 0, 0, 0,
	0, 2313, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 243, 1731, 0, 1229, 0,
	1731, 3426, 0, 0, 0, 3428, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4128, 0, 3456, 3457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3468, 0, 0, 243, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 3477,
	0, 0, 1141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 4170, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 4192, 243, 0, 0, 791,
	0, 0, 0, 3517, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 4204, 0, 0, 0, 0, 0, 3526,
	3529, 0, 0, 775, 0, 0, 243, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 3550, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 1229, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 778, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 0, 243, 0, 0,
	243, 0, 0, 0, 243, 0, 243, 102, 0, 0,
	0, 0, 779, 243, 243, 0, 0, 0, 1229, 1229,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 0, 0, 1229, 0, 780, 0, 0, 0, 3639,
	0, 0, 102, 0, 243, 102, 0, 102, 1229, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 782, 0,
	0, 0, 0, 243, 0, 243, 0, 0, 0, 0,
	0, 0, 243, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 796, 0, 0,
	0, 0, 0, 0, 0, 243, 243, 243, 243, 0,
	243, 0, 243, 0, 0, 0, 0, 0, 0, 3685,
	3686, 1031, 0, 0, 0, 3690, 3691, 102, 0, 0,
	3694, 3695, 0, 0, 0, 0, 0, 3699, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 3703, 0,
	0, 243, 0, 0, 793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3708, 241, 241, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 102, 0, 0, 0, 0, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	1697, 1692, 784, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	0, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 703, 3529, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 801, 802, 799, 0, 0, 0,
	0, 0, 794, 0, 2313, 787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 788, 795, 0, 0, 0, 0, 0, 0,
	0, 789, 1686, 1687, 1688, 1689, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 790, 0, 0, 0, 0,
	798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 3529, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 1229,
	0, 1678, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 3906, 3907, 3908, 0, 0, 0, 1067, 0, 1699,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 2246, 0, 0, 3917, 3918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 3926, 0, 0, 1141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1141, 1709, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 243,
	0, 243, 1698, 0, 0, 0, 0, 0, 243, 0,
	0, 3529, 0, 0, 0, 0, 0, 0, 0, 3965,
	0, 0, 243, 1229, 0, 0, 0, 0, 0, 3972,
	0, 0, 984, 1229, 0, 0, 0, 0, 0, 0,
	0, 3980, 1229, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 243, 1229, 0, 1229, 0,
	1685, 0, 1229, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 243, 102, 102,
	1229, 243, 102, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 3529, 3529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 243, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 1229, 0, 0, 0, 0, 4083,
	0, 243, 4086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	1700, 3529, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 3715, 0, 0, 0, 3714, 0,
	0, 0, 1229, 0, 243, 1229, 243, 1141, 0, 0,
	979, 0, 984, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3529, 0, 0, 3529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 102, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 241, 0, 241, 241, 0, 0,
	241, 241, 2246, 1697, 1692, 0, 1229, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 718, 0, 0, 1710,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 241, 241, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4223, 4223, 4223, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 241, 241, 0, 0,
	241, 0, 0, 0, 0, 0, 4244, 0, 0, 0,
	0, 0, 0, 241, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 4223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3529, 0, 3529, 1707, 0, 1708, 241, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 1699, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 1141, 1141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4223, 4355, 0, 0, 0, 0, 0,
	0, 4359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 1698, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 1158, 0, 0, 0, 1158, 0, 0, 243, 1158,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 243, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 1158, 0, 0, 1229, 1229,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 1229, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 1825, 1229, 1154, 0, 102, 0,
	241, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 1825, 241, 0, 0,
	0, 0, 718, 0, 1141, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 1158, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 102, 0, 2954, 0, 0,
	0, 2955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 243, 0, 243, 0, 0, 0, 1229, 0,
	241, 0, 0, 718, 102, 0, 0, 0, 243, 0,
	1141, 0, 0, 0, 0, 0, 0, 0, 1141, 0,
	0, 0, 0, 0, 0, 247, 1229, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 243, 0, 0,
	0, 0, 0, 241, 0, 1229, 243, 241, 0, 0,
	1229, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 241, 0, 710, 0, 1229, 1229, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 710,
	1158, 0, 1158, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 1229, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 1229,
	0, 1229, 0, 0, 0, 241, 0, 0, 241, 0,
	1158, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 241, 0, 241, 0, 241, 0, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 1229, 1229,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 1036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 1158, 0,
	0, 0, 0, 0, 243, 243, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 1710, 2313, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 243, 0, 0, 0, 0, 1229,
	1680, 0, 0, 0, 1154, 0, 0, 0, 0, 1229,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	1154, 1158, 0, 1158, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 1158,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 1158, 1158, 1158, 0, 243, 0,
	0, 1686, 1687, 1688, 1689, 0, 102, 0, 0, 0,
	0, 1669, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 102, 0, 0,
	241, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 1711,
	0, 0, 0, 0, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 1708, 0, 0, 0, 0, 0, 0,
	1678, 1679, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 1881,
	1881, 1158, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1226,
	0, 0, 0, 1226, 0, 0, 0, 1346, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 241,
	0, 0, 0, 241, 0, 241, 0, 0, 0, 1690,
	1346, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 241, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 1702, 0, 1158, 0, 0, 0,
	0, 0, 241, 0, 241, 0, 0, 0, 0, 0,
	0, 241, 0, 1158, 0, 0, 1346, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 241, 241, 241, 241, 0, 241,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 735, 0, 1700,
	241, 0, 1346, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 736, 0, 2335, 1158, 0, 0, 2336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 737,
	0, 754, 0, 0, 0, 0, 0, 1227, 0, 0,
	0, 1227, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 738, 0, 0, 0,
	0, 739, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 762, 0, 0, 0, 0, 0, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 1347, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 742, 1347, 0, 743, 0, 0, 0,
	1347, 0, 0, 0, 1347, 0, 0, 764, 0, 0,
	0, 704, 0, 1158, 1158, 0, 1158, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 0, 0, 241, 0, 0, 0, 0, 1226, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 241, 747,
	241, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	749, 0, 0, 767, 0, 766, 241, 0, 0, 750,
	241, 0, 0, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 751, 0, 1226, 0, 0, 759, 0,
	0, 0, 0, 0, 768, 0, 765, 0, 0, 1154,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 241, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 1158, 1158, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 241, 1158, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 1158, 0, 1346, 0, 1346,
	0, 1346, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	1346, 0, 1346, 1346, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 1347, 1347, 0, 0, 0, 1158, 0,
	0, 0, 0, 1227, 0, 0, 0, 1158, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 1158, 0, 1158, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 1154, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 1158,
	0, 0, 0, 0, 0, 1347, 1226, 1347, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 1347, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	1347, 1347, 1347, 0, 0, 0, 0, 1158, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 1158, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 241, 0, 0, 0, 241, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 1881,
	0, 0, 0, 0, 0, 0, 1154, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 1881, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	1158, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 870, 0, 913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	878, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 892, 876, 875, 0,
	0, 1346, 1346, 1825, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 877, 0, 0, 0, 0,
	880, 1346, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 889, 890, 0, 0, 0, 0,
	0, 0, 0, 906, 0, 0, 0, 0, 241, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 914,
	882, 241, 0, 241, 0, 0, 0, 0, 1881, 0,
	1227, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 1227, 0,
	0, 0, 0, 1158, 1158, 1158, 0, 885, 0, 0,
	0, 0, 1347, 0, 0, 874, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 886, 887, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 894, 893, 1347, 0, 0, 0, 0, 0, 888,
	1158, 0, 0, 903, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	1347, 915, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 920, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	1158, 0, 1158, 0, 0, 0, 879, 0, 0, 1158,
	910, 911, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	908, 0, 0, 0, 0, 1226, 0, 919, 904, 0,
	897, 895, 0, 900, 0, 0, 0, 0, 0, 901,
	0, 0, 872, 0, 916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 1226, 0, 0,
	0, 0, 0, 1158, 873, 0, 0, 0, 0, 0,
	0, 0, 1226, 241, 241, 902, 0, 0, 0, 0,
	899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 1158, 1158, 1226, 0, 0, 0, 0, 905, 0,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 907, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 909, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 1158, 1158, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 1158, 0, 1346, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 1346,
	0, 1346, 0, 0, 1158, 1226, 1158, 0, 0, 0,
	0, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 1346, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 241, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 1227, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 0, 1158, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 1227, 0, 0, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 0, 0, 1346, 0,
	0, 1158, 0, 0, 1158, 0, 1697, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 1226, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 1683, 1881,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	1697, 1692, 0, 0, 1347, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 1227, 0, 1710, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 1683, 0, 0, 0, 1226, 1347, 0, 1347,
	0, 1680, 0, 1227, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 1158, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 1711, 0, 0, 0,
	0, 1158, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 1707, 0,
	1708, 0, 1669, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 1347, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 1701, 0, 1684,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	1226, 1678, 1679, 1227, 0, 0, 1227, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 0, 1698, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1346, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 1346, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 1226, 0, 1227, 0,
	0, 0, 0, 0, 3379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 2957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	1226, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	1347, 1347, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 1227, 0, 0, 0, 0, 1346,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 1226, 1711,
	0, 0, 0, 1346, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 1708, 0, 0, 0, 0, 0, 0,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1346, 1346, 0, 0, 0, 0, 0, 1699, 0,
	0, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 1227, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 1226, 0, 1346, 0, 0, 0, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1690,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 1227,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 1346, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 1347, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 1226,
	0, 0, 1346, 0, 0, 0, 1227, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 1347,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 1227,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 2956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1227, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 1347, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 1230, 257, 258, 1231, 1232, 1233, 1347, 1234, 572,
	1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 1239,
	577, 268, 269, 270, 271, 272, 273, 1240, 1241, 0,
	274, 578, 579, 580, 1242, 275, 276, 581, 1243, 1310,
	1244, 277, 278, 279, 280, 281, 282, 283, 0, 1245,
	285, 286, 287, 284, 288, 1246, 289, 0, 290, 291,
	292, 293, 294, 295, 1247, 296, 297, 298, 1099, 299,
	300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302,
	303, 304, 0, 305, 582, 583, 1255, 309, 306, 307,
	1256, 310, 308, 1257, 311, 312, 313, 1258, 1259, 314,
	315, 316, 1260, 317, 318, 1261, 319, 320, 321, 1262,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 1263, 248, 1264, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	1265, 339, 1266, 1267, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 1268, 350, 590,
	1269, 591, 351, 1270, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 1271, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 1272, 1101,
	365, 595, 596, 1273, 597, 1274, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1275, 379, 381, 380, 1276,
	382, 599, 1106, 383, 384, 1107, 1277, 385, 0, 0,
	0, 386, 387, 1278, 1279, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 1280, 250,
	1110, 427, 428, 1281, 600, 429, 601, 431, 432, 1282,
	0, 433, 0, 1283, 1284, 435, 436, 437, 1285, 1286,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 1287, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 1288, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 1289, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 1290, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 1291, 506,
	507, 505, 508, 509, 510, 1292, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 1293, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 1294, 532, 533, 0, 531,
	1295, 534, 535, 536, 537, 538, 539, 329, 540, 1296,
	541, 613, 614, 615, 616, 1297, 550, 1298, 542, 543,
	544, 617, 545, 618, 1299, 546, 547, 548, 549, 0,
	551, 552, 1300, 1301, 553, 554, 555, 557, 558, 556,
	559, 1302, 560, 1303, 0, 561, 562, 563, 619, 620,
	621, 1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 2500, 0, 0,
	0, 0, 0, 0, 0, 2501, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 3387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3389, 251, 252, 253, 254, 255,
	256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234, 572,
	1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 1239,
	577, 268, 269, 270, 271, 272, 273, 1240, 1241, 0,
	274, 578, 579, 580, 1242, 275, 276, 581, 1243, 1310,
	1244, 277, 278, 279, 280, 281, 282, 283, 0, 1245,
	285, 286, 287, 284, 288, 1246, 289, 0, 290, 291,
	292, 293, 294, 295, 1247, 296, 297, 298, 1099, 299,
	300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302,
	303, 304, 0, 305, 582, 583, 1255, 309, 306, 307,
	1256, 310, 308, 1257, 311, 312, 313, 1258, 1259, 314,
	315, 316, 1260, 317, 318, 1261, 319, 320, 321, 1262,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 1263, 248, 1264, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	1265, 339, 1266, 1267, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 1268, 350, 590,
	1269, 591, 351, 1270, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 1271, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 1272, 1101,
	365, 595, 596, 1273, 597, 1274, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1275, 379, 381, 380, 1276,
	382, 599, 1106, 383, 384, 1107, 1277, 385, 0, 0,
	0, 386, 387, 1278, 1279, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 1280, 250,
	1110, 427, 428, 1281, 600, 429, 601, 431, 432, 1282,
	0, 433, 0, 1283, 1284, 435, 436, 437, 1285, 1286,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 1287, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 1288, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 1289, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 1290, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 1291, 506,
	507, 505, 508, 509, 510, 1292, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 1293, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 1294, 532, 533, 0, 531,
	1295, 534, 535, 536, 537, 538, 539, 329, 540, 1296,
	541, 613, 614, 615, 616, 1297, 550, 1298, 542, 543,
	544, 617, 545, 618, 1299, 546, 547, 548, 549, 0,
	551, 552, 1300, 1301, 553, 554, 555, 557, 558, 556,
	559, 1302, 560, 1303, 0, 561, 562, 563, 619, 620,
	621, 1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3741, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3912, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3801, 251, 252, 253, 254, 255, 256,
	1230, 257, 258, 1231, 1232, 1233, 0, 1234, 572, 1235,
	1236, 1237, 1238, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 1239, 577,
	268, 269, 270, 271, 272, 273, 1240, 1241, 0, 274,
	578, 579, 580, 1242, 275, 276, 581, 1243, 1310, 1244,
	277, 278, 279, 280, 281, 282, 283, 0, 1245, 285,
	286, 287, 284, 288, 1246, 289, 0, 290, 291, 292,
	293, 294, 295, 1247, 296, 297, 298, 1099, 299, 300,
	1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302, 303,
	304, 0, 305, 582, 583, 1255, 309, 306, 307, 1256,
	310, 308, 1257, 311, 312, 313, 1258, 1259, 314, 315,
	316, 1260, 317, 318, 1261, 319, 320, 321, 1262, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 1263, 248, 1264, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 1265,
	339, 1266, 1267, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 1268, 350, 590, 1269,
	591, 351, 1270, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 1102, 357, 358, 1271, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 1272, 1101, 365,
	595, 596, 1273, 597, 1274, 367, 368, 1103, 598, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 1275, 379, 381, 380, 1276, 382,
	599, 1106, 383, 384, 1107, 1277, 385, 0, 0, 0,
	386, 387, 1278, 1279, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 1280, 250, 1110,
	427, 428, 1281, 600, 429, 601, 431, 432, 1282, 0,
	433, 0, 1283, 1284, 435, 436, 437, 1285, 1286, 438,
	439, 602, 1111, 440, 1112, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 1287, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 1288, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 1289, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 1290, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 1291, 506, 507,
	505, 508, 509, 510, 1292, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	1293, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 1294, 532, 533, 0, 531, 1295,
	534, 535, 536, 537, 538, 539, 329, 540, 1296, 541,
	613, 614, 615, 616, 1297, 550, 1298, 542, 543, 544,
	617, 545, 618, 1299, 546, 547, 548, 549, 0, 551,
	552, 1300, 1301, 553, 554, 555, 557, 558, 556, 559,
	1302, 560, 1303, 0, 561, 562, 563, 619, 620, 621,
	1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308, 567,
	568, 623, 569, 570, 571, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3671, 251, 252, 253, 254, 255, 256, 1230, 257,
	258, 1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237,
	1238, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 1239, 577, 268, 269,
	270, 271, 272, 273, 1240, 1241, 0, 274, 578, 579,
	580, 1242, 275, 276, 581, 1243, 1310, 1244, 277, 278,
	279, 280, 281, 282, 283, 0, 1245, 285, 286, 287,
	284, 288, 1246, 289, 0, 290, 291, 292, 293, 294,
	295, 1247, 296, 297, 298, 1099, 299, 300, 1248, 1249,
	1251, 1250, 1252, 1253, 1254, 301, 302, 303, 304, 0,
	305, 582, 583, 1255, 309, 306, 307, 1256, 310, 308,
	1257, 311, 312, 313, 1258, 1259, 314, 315, 316, 1260,
	317, 318, 1261, 319, 320, 321, 1262, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 1263, 248, 1264, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 1265, 339, 1266,
	1267, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 1268, 350, 590, 1269, 591, 351,
	1270, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	1102, 357, 358, 1271, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 1272, 1101, 365, 595, 596,
	1273, 597, 1274, 367, 368, 1103, 598, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 1275, 379, 381, 380, 1276, 382, 599, 1106,
	383, 384, 1107, 1277, 385, 0, 0, 0, 386, 387,
	1278, 1279, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 1280, 250, 1110, 427, 428,
	1281, 600, 429, 601, 431, 432, 1282, 0, 433, 0,
	1283, 1284, 435, 436, 437, 1285, 1286, 438, 439, 602,
	1111, 440, 1112, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 1287, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 1288, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 1289, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 1290, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 1291, 506, 507, 505, 508,
	509, 510, 1292, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 1293, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 1294, 532, 533, 0, 531, 1295, 534, 535,
	536, 537, 538, 539, 329, 540, 1296, 541, 613, 614,
	615, 616, 1297, 550, 1298, 542, 543, 544, 617, 545,
	618, 1299, 546, 547, 548, 549, 0, 551, 552, 1300,
	1301, 553, 554, 555, 557, 558, 556, 559, 1302, 560,
	1303, 0, 561, 562, 563, 619, 620, 621, 1304, 565,
	564, 566, 622, 1305, 1306, 1307, 1308, 567, 568, 623,
	569, 570, 571, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3405,
	251, 252, 253, 254, 255, 256, 1230, 257, 258, 1231,
	1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 1239, 577, 268, 269, 270, 271,
	272, 273, 1240, 1241, 0, 274, 578, 579, 580, 1242,
	275, 276, 581, 1243, 1310, 1244, 277, 278, 279, 280,
	281, 282, 283, 0, 1245, 285, 286, 287, 284, 288,
	1246, 289, 0, 290, 291, 292, 293, 294, 295, 1247,
	296, 297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250,
	1252, 1253, 1254, 301, 302, 303, 304, 0, 305, 582,
	583, 1255, 309, 306, 307, 1256, 310, 308, 1257, 311,
	312, 313, 1258, 1259, 314, 315, 316, 1260, 317, 318,
	1261, 319, 320, 321, 1262, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	1263, 248, 1264, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 1265, 339, 1266, 1267, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 1268, 350, 590, 1269, 591, 351, 1270, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 1271, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 1272, 1101, 365, 595, 596, 1273, 597,
	1274, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1275, 379, 381, 380, 1276, 382, 599, 1106, 383, 384,
	1107, 1277, 385, 0, 0, 0, 386, 387, 1278, 1279,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 1280, 250, 1110, 427, 428, 1281, 600,
	429, 601, 431, 432, 1282, 0, 433, 0, 1283, 1284,
	435, 436, 437, 1285, 1286, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 1287, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 1288,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 1289, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	1290, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 1291, 506, 507, 505, 508, 509, 510,
	1292, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 1293, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	1294, 532, 533, 0, 531, 1295, 534, 535, 536, 537,
	538, 539, 329, 540, 1296, 541, 613, 614, 615, 616,
	1297, 550, 1298, 542, 543, 544, 617, 545, 618, 1299,
	546, 547, 548, 549, 0, 551, 552, 1300, 1301, 553,
	554, 555, 557, 558, 556, 559, 1302, 560, 1303, 0,
	561, 562, 563, 619, 620, 621, 1304, 565, 564, 566,
	622, 1305, 1306, 1307, 1308, 567, 568, 623, 569, 570,
	571, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3232, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2359, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 1322, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 1221, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	1230, 257, 258, 1231, 1232, 1233, 0, 1234, 572, 1235,
	1236, 1237, 1238, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 1239, 577,
	268, 269, 270, 271, 272, 273, 1240, 1241, 0, 274,
	578, 579, 580, 1242, 275, 276, 581, 1243, 1310, 1244,
	277, 278, 279, 280, 281, 282, 283, 0, 1245, 285,
	286, 287, 284, 288, 1246, 289, 0, 290, 291, 292,
	293, 294, 295, 1247, 296, 297, 298, 1099, 299, 300,
	1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302, 303,
	304, 0, 305, 582, 583, 1255, 309, 306, 307, 1256,
	310, 308, 1257, 311, 312, 313, 1258, 1259, 314, 315,
	316, 1260, 317, 318, 1261, 319, 320, 321, 1262, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 1263, 248, 1264, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 1265,
	339, 1266, 1267, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 1268, 350, 590, 1269,
	591, 351, 1270, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 1102, 357, 358, 1271, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 1272, 1101, 365,
	595, 596, 1273, 597, 1274, 367, 368, 1103, 598, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 1275, 379, 381, 380, 1276, 382,
	599, 1106, 383, 384, 1107, 1277, 385, 0, 0, 0,
	386, 387, 1278, 1279, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 1280, 250, 1110,
	427, 428, 1281, 600, 429, 601, 431, 432, 1282, 0,
	433, 0, 1283, 1284, 435, 436, 437, 1285, 1286, 438,
	439, 602, 1111, 440, 1112, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 1287, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 1288, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 1289, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 1290, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 1291, 506, 507,
	505, 508, 509, 510, 1292, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	1293, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 1294, 532, 533, 0, 531, 1295,
	534, 535, 536, 537, 538, 539, 329, 540, 1296, 541,
	613, 614, 615, 616, 1297, 550, 1298, 542, 543, 544,
	617, 545, 618, 1299, 546, 547, 548, 549, 0, 551,
	552, 1300, 1301, 553, 554, 555, 557, 558, 556, 559,
	1302, 560, 1303, 0, 561, 562, 563, 619, 620, 621,
	1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308, 567,
	568, 623, 569, 570, 571, 2334, 0, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	2331, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 2332, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	2330, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 2333, 0, 0, 0, 0, 0, 0, 1018, 2329,
	0, 980, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 212, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 214, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 1499, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 206, 567, 568, 623, 569, 570,
	571, 993, 207, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1736, 1734, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 212, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 214,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 1499, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 206, 567,
	568, 623, 569, 570, 571, 993, 207, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1736, 2909,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 212, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 214, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 1499, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 206, 567, 568, 623, 569, 570, 571, 993,
	207, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1736, 1734, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 2462, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	2467, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 2463, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 2464, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 2379,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 2377, 0, 2376, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 2374,
	0, 2373, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 2371, 0, 2370, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 2368, 0, 1589, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 1588, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 983,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 997, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1018, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 4182,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	997, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 2248, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 2247, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 997, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 3975, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 997, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 3633, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1804, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 0, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	3383, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1804, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 0, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 2467, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 1734, 0, 2472, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 2470, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 2458, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 2447, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 2445,
	1016, 2436, 2443, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 2439, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	2440, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 2441, 398,
	2438, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	2442, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 2437, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 2433, 1016, 2436, 2443, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 2439, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 2440, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 2441, 398, 2438, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 2442, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 2437, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	1742, 0, 1018, 0, 0, 0, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	2227, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 1594, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 1529, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 1524, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 1515,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 1510, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 1492, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 1374, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1373, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 1368, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1367, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 1361,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1018, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 4222, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 4221, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 4220, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 4222, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 4221, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 2876, 2877, 1017, 1018, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 2874, 2875, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1018, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 2235, 2236, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	0, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 2455, 0, 0, 0, 0, 0,
	0, 2453, 2454, 0, 251, 252, 253, 254, 255, 256,
	1018, 257, 258, 0, 1016, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 0, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 0, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 2869, 2870, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 1941,
	1942, 0, 251, 252, 253, 254, 255, 256, 1018, 257,
	258, 0, 1016, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 0,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 4222, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 0, 1061, 0, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 0, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 4221, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 1156, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	1016, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 1057, 0, 274, 578, 579, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1142, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 250, 1110, 427, 428, 0,
	1062, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	1148, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 1150, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 212, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	1093, 0, 532, 533, 0, 531, 214, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 1499, 620, 621, 0, 565, 564,
	566, 622, 0, 1156, 0, 206, 567, 568, 623, 569,
	570, 571, 0, 207, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 1146, 1058, 1828, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 1057, 0, 274, 578, 579, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1142, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 250, 1110, 427, 428, 0, 1062,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 1148,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	1150, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 212, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 1093,
	0, 532, 533, 0, 531, 214, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 1499, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 206, 567, 568, 623, 569, 570,
	571, 0, 207, 0, 0, 0, 3053, 0, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 1828, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 1057, 0,
	274, 578, 579, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1142, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 250,
	1110, 427, 428, 0, 1062, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 1148, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 1150, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 1093, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 1138, 0, 1156,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 1146, 0, 1144,
	1058, 0, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 1057,
	0, 274, 578, 579, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 595, 596, 0, 597, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1142, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	250, 1110, 427, 428, 0, 1062, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 1150, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 1093, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 1156, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 1146, 1058,
	1144, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 1057, 0,
	274, 578, 579, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1142, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 250,
	1110, 427, 428, 0, 1062, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 1148, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 1150, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 1093, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 1156, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 1146, 1058, 1144,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 1057, 0, 274,
	578, 579, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	595, 596, 0, 597, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 0, 250, 1110,
	427, 428, 0, 1062, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 1150, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 1093, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 0, 980, 0, 1344, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 1727, 572,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 212, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	214, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 1499, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 206,
	567, 568, 623, 569, 570, 571, 0, 207, 0, 0,
	0, 1496, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 212, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 214, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 1499, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 206, 567, 568, 623, 569, 570,
	571, 0, 207, 0, 0, 0, 0, 0, 1344, 1343,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 1521,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1344, 2024, 0, 0, 0, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 3307, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 1310, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 2023, 381, 380, 0, 382, 599, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 0, 1110, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 1344, 1343, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 1521, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 1310, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 1101, 365, 595, 596, 0, 597, 0,
	367, 368, 1103, 598, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 0, 1110, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1156, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 0, 1505, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	1057, 0, 274, 578, 579, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 250, 1110, 427, 428, 0, 1062, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 1093, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 980, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	212, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 214, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	1499, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 206, 567, 568, 623, 569, 570, 571, 0, 207,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 176, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 245, 2789, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 1842, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 4364, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 245, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 3248, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 245, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 1442, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 2759, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 3408, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 826, 0, 709,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 2127,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 716, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 824, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 714, 534, 535, 536, 537, 715, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 707, 0,
	709, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 719, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 716, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 250, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 714, 534, 535, 536, 537, 715, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 1879, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 0, 1885, 0,
	266, 1875, 267, 1891, 0, 1898, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 1901, 1902, 0, 0,
	275, 276, 0, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 1081, 305, 1889,
	1888, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	1887, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1896, 1897, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 0, 0, 0, 351, 0, 352,
	353, 354, 355, 356, 0, 0, 0, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 1882, 1883, 0, 1878,
	0, 367, 368, 1103, 0, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 0, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 0,
	429, 1890, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 0, 1111, 440,
	1112, 0, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 1872, 453, 454, 455,
	1873, 456, 457, 458, 0, 459, 0, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1886,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 0,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1884, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1900, 526, 527, 528, 529, 0,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1892, 1893, 1894, 1895,
	0, 550, 0, 542, 543, 544, 0, 545, 0, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 0, 1876, 1899, 0, 565, 564, 566,
	0, 0, 0, 1344, 1343, 567, 568, 0, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 1866, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 2723, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	2724, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 3578, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 709, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 716, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 714, 534, 535, 536,
	537, 715, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 1344, 1343, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 1310, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 1101, 365, 595, 596, 0, 597, 0,
	367, 368, 1103, 598, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 0, 1110, 427, 428, 3220, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 709, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 716, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 2167, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	2168, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 714, 534, 535,
	536, 537, 715, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 2169, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 709, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 719,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 716, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 1905, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 714, 534, 535, 536, 537,
	715, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 1904, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 709, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 719, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 716, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 1858, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 714, 534, 535, 536, 537, 715, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	1857, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1549,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 1548, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 1547, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 1546, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1489,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1488, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1417,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1416, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1379,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1339,
	0, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1338, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1344,
	1343, 0, 0, 0, 0, 1341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	1310, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	1101, 365, 595, 596, 0, 597, 0, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	0, 1110, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1344, 1343, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 719, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 1310, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 1914, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 0, 1110, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 1344, 1343,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 1344, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	2592, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 2589, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 2596, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 2802, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 2595, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	2799, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 2801, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 2798, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	2594, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 2800,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 2592, 275, 276, 581, 0, 0, 2586,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 2589, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 2596,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 2595, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 2585, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 2594, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 2593, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 1616, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 1619, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 1617,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 1618, 564, 566, 622, 1314, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 1316, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 1148, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 1311, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 1313, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 1148, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 1217, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 1219, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 1148, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 655, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 654, 255, 256,
	644, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 647, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 648, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 649, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 643, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	644, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 647, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 648, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 649, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 250, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 1148, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 3183, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 2730, 0, 245, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 2729, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 2140, 0, 245, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 2056, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 2062, 0, 245, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 2061, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 2049, 0, 245, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 2051, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	2020, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1481, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1480, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1472, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1471, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1469, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1468, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1464, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1463, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1420, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1332, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1325, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1327, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 625, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 236, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 647, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 648, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 649, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	2176, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 2174, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 2172, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 2105, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 2099, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 250, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 2068, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 813, 0, 245, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	812, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 811, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 2802, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 3837, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 677, 0, 245, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1188, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 1186, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	678, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 674, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 1189, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 673,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 677, 0, 245, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1188, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 1186, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	678, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 674, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 1189, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 673,
	614, 615, 616, 0, 550, 0, 542, 1187, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 634, 0, 245, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 633,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	632, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 245, 2789, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 245, 3847, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 3552, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 2506, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 245, 2789, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 2786, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 2150, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 2138, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 677, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 667, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 678, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 674, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 1504, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 673, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1485, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1484, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1478, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1477, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1426, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1425, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1409, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1407, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1403, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1335, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1319, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 1169, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 683, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 677, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 667, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 665, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 666,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 678,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 668, 490, 0, 491, 492, 498, 499, 493, 494,
	674, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	669, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 673, 614,
	615, 616, 0, 550, 0, 542, 671, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 659, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 660, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 657, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 651, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 629, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 3266, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 3214, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 3155, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 3153, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 3139, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 2739, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	660, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 2085, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	0, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 1449, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 1386,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 1121, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 0, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 0, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 0, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 0, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 1663, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 1683, 0, 0, 0, 1710,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	1701, 0, 0, 1711, 0, 1669, 0, 0, 0, 1691,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 1684, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 1684, 1709, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 1698, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 1701, 0, 0, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 1697, 1692, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 1707, 0, 1708, 1710,
	0, 0, 0, 1700, 0, 1678, 1679, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 1699, 0, 1663, 0, 0, 0, 0,
	0, 2953, 0, 0, 0, 1683, 0, 1684, 0, 0,
	0, 0, 0, 1700, 1680, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 2952, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 1690, 0, 1664, 0, 0, 0,
	1701, 0, 0, 1711, 1710, 0, 0, 0, 0, 1691,
	1693, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	1663, 0, 0, 0, 1678, 1679, 0, 0, 0, 1702,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 1698, 1683, 0, 0, 0,
	1669, 0, 0, 0, 1700, 1680, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 2951, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 1685, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 1699, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 1702, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 1701, 0, 0, 1711, 1710, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1707, 0, 1708, 0,
	0, 1663, 0, 0, 0, 1678, 1679, 0, 0, 0,
	1698, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 0, 1690, 0,
	0, 2336, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 1686, 1687, 1688, 1689, 0, 1698, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 1711,
	1697, 1692, 0, 0, 0, 1691, 1693, 0, 1664, 0,
	0, 0, 0, 0, 1690, 0, 1710, 0, 0, 0,
	0, 1707, 0, 1708, 0, 0, 0, 0, 0, 0,
	1678, 1679, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 1702,
	0, 1680, 1684, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 4163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 1701, 4159, 1690,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 1702, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 1697, 1692, 0, 0,
	0, 0, 0, 1684, 1664, 0, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 0, 4070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 0,
	1685, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 1702, 0, 0, 0, 0,
	1664, 0, 0, 1701, 0, 0, 1711, 0, 1710, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	1708, 0, 0, 0, 1663, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 1699, 1661, 1662, 0, 1694,
	1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 1697, 1692, 0,
	0, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	1700, 0, 0, 1710, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	1709, 0, 0, 0, 4069, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 1698, 1683,
	0, 0, 0, 0, 1669, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 1685, 0, 0, 1686,
	1687, 1688, 1689, 0, 0, 0, 0, 0, 0, 1669,
	0, 1699, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 1702, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 1701, 0, 0, 1711, 0, 1710,
	0, 0, 0, 1691, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 1707,
	0, 1708, 0, 0, 0, 1663, 0, 0, 1678, 1679,
	0, 0, 0, 0, 1698, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	3915, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 1686, 1687, 1688, 1689, 1698,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 1662, 0, 1694,
	1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 1697, 1692, 1691,
	1693, 0, 0, 0, 0, 1664, 0, 1690, 0, 0,
	0, 0, 0, 1710, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 1702, 0, 0, 0, 1684, 0, 1680, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 3775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	1687, 1688, 1689, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 3718, 0, 1690, 1701, 0, 0, 1711, 0, 0,
	0, 0, 0, 1691, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 1707,
	0, 1708, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 1699, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 3717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 1701, 0, 0, 1711, 1710,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 1663, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 3716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	1698, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 1711, 1697, 1692, 0, 0, 0, 1691,
	1693, 0, 1664, 0, 0, 0, 0, 0, 1690, 0,
	1710, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 1702, 0, 1680, 1684, 0, 0, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1692, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 1710, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 1683, 0, 0, 0, 1669, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 1701, 3413, 1690, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 1702, 0,
	0, 0, 1669, 1699, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 1701, 0, 0,
	1711, 1710, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 1707, 0, 1708, 0, 0, 1663, 0, 0,
	0, 1678, 1679, 0, 0, 0, 1698, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 1699,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 1684, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 2949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 1686, 1687, 1688,
	1689, 0, 1698, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 1711, 1697, 1692, 0, 0,
	0, 1691, 1693, 0, 1664, 0, 0, 0, 0, 0,
	1690, 0, 1710, 0, 0, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 1702, 0, 1680, 1684, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 2948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 1701, 2947, 1690, 1711, 0, 0, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 1707, 0,
	1708, 0, 0, 0, 0, 0, 0, 1678, 1679, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	1702, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 0, 0, 0, 0, 1684,
	1664, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 2946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 4287, 1685, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 1702, 0, 0, 2884, 0, 1664, 0, 0, 1701,
	0, 0, 1711, 0, 1710, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 1708, 0, 0, 0,
	1663, 0, 0, 1678, 1679, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2885, 1700, 0, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 1709, 0, 2913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 1698, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4286, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 1685, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 1702, 0, 0,
	0, 1684, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 2480, 0, 0, 0, 1669, 1685, 3033,
	1661, 1662, 3032, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1692, 1702, 0, 0, 2479, 0, 0, 1664,
	0, 0, 1701, 0, 0, 1711, 0, 1710, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 1708,
	0, 0, 0, 1663, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 1687, 1688, 1689, 1698, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 1711, 1697, 1692, 0, 0, 0, 1691, 1693, 0,
	1664, 0, 0, 0, 0, 1690, 0, 0, 1710, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	1702, 0, 0, 1680, 1684, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	1683, 0, 0, 0, 1669, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 1701,
	0, 1690, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 1702, 0, 0, 0,
	1669, 1699, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 1701, 0, 0, 1711, 0,
	1710, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 1663, 0, 0, 1678,
	1679, 0, 0, 0, 1698, 977, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1699, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 1684, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 1686, 1687, 1688, 1689,
	1698, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 3039, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 0, 0, 0, 1697, 1692,
	1691, 1693, 0, 3034, 0, 0, 1664, 0, 1690, 0,
	0, 0, 0, 0, 1710, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 1702, 0, 0, 0, 1684, 0, 1680,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3394, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 0, 0, 1690, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 1661, 1662, 1702,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 1684, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 1685, 0,
	1669, 0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 1697, 1692, 0, 0, 0, 2950,
	0, 0, 1664, 0, 0, 1701, 0, 0, 1711, 0,
	1710, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 1663, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1699, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 0, 0, 0, 1700, 0,
	1664, 0, 1675, 1676, 1682, 1703, 1681, 1677, 1710, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 1686, 1687, 1688, 1689,
	1698, 0, 0, 0, 1683, 0, 1669, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	3001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 1685, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 1699, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 1710, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 1702, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 1701, 0, 0, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671,
}
var sqlPact = [...]int{

	289, -1000, -1000, -1000, -1000, 175, -1000, -1000, 173, 169,
	166, 162, 161, 159, 158, 157, 156, -1000, -1000, -1000,
	-1000, -1000, -1000, 153, -1000, -1000, 149, -1000, 143, 137,
	134, -1000, -1000, 133, -1000, 132, -1000, -1000, -1000, -1000,
	125, 124, 123, 80735, 80215, 81248, 2084, 98831, 87432, 1901,
	71923, 98311, 71403, 97791, 97271, 2548, 119, -1000, 96751, 118,
	115, 114, -1000, 96231, -1000, 1645, -1000, 113, 4206, 58386,
	111, 109, 108, 1933, 107, -1000, 105, 104, -1000, 11325,
	1390, -1000, 103, 102, -1000, 8837, 970, 85359, 100, 98,
	2244, 97, 95, 57865, 94, 90, 2206, 2633, -1000, -1000,
	1893, -1000, -1000, 85, 83, 81, 79, 78, 77, 75,
	74, 73, 72, 70, -1000, 69, 68, 67, 66, 65,
	63, 61, 60, -1000, 59, 58, 57, 55, 50, 49,
	44, 42, 39, 36, 34, 33, 29, -1000, 12523, 28,
	1804, 1570, 1566, 1562, 1559, 1554, 876, 27, 25, 24,
	23, 22, 21, 19, 16, 15, -1000, 14, 13, 12,
	7, 5, 4, 3, 2, 145, -1, -2, -4, -6,
	-7, -9, -10, 2395, -1000, 1399, 1077, 27147, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 104987, 99344, -11, -126,
	-12, -1000, 3023, 952, 48485, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 441, 1698, 661, -1000,
	-1000, -1000, 95718, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2081, -79, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	656, -1000, 2079, 215, 2029, -1000, -1000, -1000, -1000, -1000,
	99344, -1000, 954, -1000, -1000, 3496, 3495, 1919, 654, 86912,
	-1000, 1590, -1000, 823, 28779, -1000, 1105, -1000, 28779, 255,
	-1000, -1000, -1000, -1000, -1000, -1000, 3494, 3493, 3491, 3489,
	-1000, -1000, 70883, 20565, 70363, 69843, 95205, 20035, 79695, 79175,
	94685, 65187, 944, -1000, -1000, -1000, 1329, -1000, -1000, -1000,
	-1000, -1000, -1000, -32, 66228, 3222, 99344, -1000, 251, -1000,
	-1000, -1000, -1000, -1000, -1000, 41507, 811, 40951, 645, 40395,
	354, -1000, -1000, -1000, 64657, -1000, 3488, 3487, 1051, 3486,
	2956, 104474, 1641, 3485, 1782, 1142, 3484, 3482, 3480, 3479,
	3476, 3475, 1345, 94165, 2706, 93645, 1778, 64127, 941, 78655,
	81248, 2472, 93125, 1277, 1263, -1000, -1000, -1000, -1000, 2863,
	2617, 2602, 1223, -1000, -1000, 3474, 3473, 3472, 3471, 3470,
	103961, 1639, 3468, 2315, 3467, 3465, 3464, 3463, 3462, 3461,
	3460, -1000, 78135, 940, 77615, 77095, 3101, 92605, 76575, 92085,
	63597, 39839, 1076, -1000, -1000, -1000, 50579, 6600, 5531, 91565,
	52698, 81248, 81248, -1000, -1000, -1000, -1000, -1000, 39283, 775,
	38727, 924, -1000, -1000, 51114, 2658, -1000, -1000, -1000, -1000,
	38171, 608, 37615, 802, 99344, -1000, 2705, 1840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2027, 1548, 3235, 2512, 63067, 1879, 1215, 3043,
	2858, 2850, 1362, 3459, 3457, 2354, 2849, 2821, 2818, 2813,
	2810, 1400, 2348, 749, 26591, 2697, 1540, 37059, 1487, 1357,
	2801, 2787, 3270, 1816, 1852, 1835, 69323, 3456, 3453, 3015,
	2784, 2766, 2657, -1000, -1000, -1000, -1000, 1324, -1000, -1000,
	-1000, -1000, -1000, 72436, -1000, -1000, 1713, -1000, -1000, 1713,
	-1000, -1000, -1000, -1000, -1000, 1244, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1399, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1951, -1000,
	1912, -1000, -1000, 2290, 2966, 2966, 2966, 3075, 397, 396,
	-1000, 145, -1000, -1000, 110880, -1000, -1000, 42051, 42051, 42051,
	42051, 42051, 42051, 42051, 1983, -1000, 651, -1000, -1000, 692,
	-1000, 650, 526, -1000, -1000, -1000, -1000, -1000, -1000, 649,
	-1000, -1000, -1000, -1000, -1000, -1000, 3222, -1000, 23267, -1000,
	-1000, -1000, 390, 648, 42051, -1000, -1000, 3282, 3279, 956,
	-1000, 239, 821, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2704, 646, 643, -1000, 642,
	641, 638, 636, 635, -1000, -1000, -1000, 632, 631, 629,
	628, 619, 617, 614, 612, -1000, 1837, -1000, -1000, -1000,
	-1000, -1000, -1000, 580, 579, 579, 579, -1000, 934, -1000,
	-1000, -1000, 319, 574, 272, 573, 569, 568, -1000, 611,
	610, 606, 603, 601, 600, 599, 597, 596, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 928, -1000, -1000, -1000, -1000,
	-33, 99344, -1000, 441, -33, -1000, -1000, 595, -1000, 30967,
	30967, 30967, -1000, -1000, 2076, 42051, -1000, 2367, -1000, -25,
	-25, 764, 49523, -1000, 47429, 764, 382, 714, 54249, -1000,
	2656, -1000, -1000, 593, 224, -1000, -1000, -1000, -1000, 21093,
	2655, 99344, 99344, 81248, 81248, 81248, 2871, 42051, -1000, -1000,
	62537, 99344, 81761, 3180, 58899, 62019, 99344, 2703, -1000, 3008,
	-1000, -1000, 99344, -1000, 42051, -1000, 3179, 1586, 66746, 3108,
	-46, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2298, 2305,
	1028, 2124, -1000, 2910, 1294, -1000, 28779, 2942, -1000, -1000,
	-1000, 219, 21093, -1000, -1000, -1000, -1000, -1000, 2386, 2835,
	1443, -1000, 2119, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1666, 2834, -1000, 2088, 2833, 1589, -1000, -1000,
	2082, -1000, -1000, 2979, -1000, -1000, 2024, 2831, -24, -1000,
	-1000, 2161, -1000, -1000, 1846, -1000, -1000, 883, 2828, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 76055, 52170,
	51114, 66228, -36, -1000, -1000, -1000, -1000, -63, -1000, 19505,
	110880, -1000, -1000, -1000, -1000, 1646, 110880, 816, -1000, -1000,
	2827, -1000, 110880, 814, -1000, -1000, 2826, -1000, 2701, -1000,
	-1000, -1000, -1000, 3452, -1000, 3447, 2216, 3446, 3445, 3444,
	-1000, 1558, 1821, 3415, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 75542, 2074, -1000, -1000, 74502, -1000, 2215, 3107, -1000,
	-1000, -1000, 75022, 938, -1000, 883, 2211, -1000, 84839, 918,
	-1000, 3413, 3096, 2450, 883, 2203, -1000, -1000, -1000, -1000,
	-1000, 921, -1000, 55799, -1000, 55799, -1000, 1479, -1000, 103448,
	-25, 81248, 3222, -1000, -1000, -1000, -1000, -1000, -1000, 2823,
	3412, 3410, 3408, -1000, 99344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 194, 2817, -1000, -1000, 84326, 194, 2807, -1000,
	194, 2802, -1000, 83813, -1000, -1000, 2101, 2800, -1000, 200,
	2799, -1000, -1000, 197, 2798, -1000, -1000, -149, 2794, -1000,
	-1000, 110880, -1000, -1000, -1000, -52, -1000, -1000, -1000, 952,
	-1000, 50044, -1000, 50044, 86392, 65715, 862, 694, 57344, 110880,
	-1000, -1000, -1000, -1000, 110880, -1000, -1000, -1000, -162, -1000,
	-1000, 65715, 51114, 110880, -1000, -1000, -1000, -1000, 110880, -1000,
	-1000, -1000, 65715, 74502, -1000, 91045, 73989, -1000, -1000, 1339,
	2337, -1000, -1000, -1000, 65715, 1189, 65715, 65715, 65715, -1000,
	90525, -1000, -1000, 1904, 1165, 2983, 1900, 81248, -1000, 1710,
	-1000, -1000, -1000, 3029, -1000, -1000, 2699, -1000, 61501, 83300,
	-1000, 82787, -1000, 82274, -1000, 81248, -1000, 81248, -1000, 3404,
	3403, 3402, 3400, -1000, 3399, 3021, -1000, 110880, 3017, -1000,
	3398, 3097, 2697, 110880, -1000, 2855, 1557, 1552, 99344, -1000,
	-1000, 99344, -1000, 99344, -1000, -1000, -1000, 1396, -1000, -1000,
	2297, -1000, -1000, -1000, -1000, 81248, -1000, -1000, -1000, -1000,
	-1000, -1000, 2692, -1000, 1599, -1000, 1699, -1000, 1334, -1000,
	-1000, 207, -1000, -1000, -46, -1000, 102935, -1000, 2290, -1000,
	99344, -1000, 2322, 2670, 2691, 1470, 2086, 2402, -1000, 36503,
	2362, 44771, 2100, 145, -1000, -1000, 145, 145, 28235, -1000,
	-1000, 58899, 58899, 21093, 1251, 42051, 42051, 42051, 42051, 42051,
	42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051,
	42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051,
	42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051,
	1865, 42051, 1239, 42051, 42051, 42051, 42051, 1929, -1000, -1000,
	1819, 461, 1858, -1000, 3216, 3216, 3216, 510, 510, 111223,
	111223, 536, 3397, 692, -1000, 42051, -1000, 87, 42051, 21623,
	-1000, 396, 10797, 2247, -1000, 394, 22179, -1000, -1000, -1000,
	23267, 526, 35947, 42051, 915, 110880, -1000, -1000, 1210, 3231,
	18977, 2719, 2556, 592, 767, 766, 26035, 25479, 24923, 24367,
	759, 42051, 42051, 42051, 42051, 42051, 42051, 42051, 42051, -1000,
	-1000, 3250, -1000, 3231, -1000, -1000, -1000, -1000, 3231, 1250,
	1169, 3231, -1000, 3231, 3231, 6726, 6726, 35403, 34847, 34291,
	45315, 33735, 42051, 23811, 33179, 32623, -1000, 99344, -33, 3178,
	42051, 152, -1000, 109769, -1000, 152, 152, 589, -61, 110880,
	2469, 2469, 49004, 2190, 1989, 1989, 1989, -1000, 764, 14724,
	764, 89494, 2000, 764, 764, 202, 214, 393, 46910, 2367,
	89494, 680, 587, -13, -15, -16, -1000, -1000, -17, -18,
	-1000, -1000, 81248, 585, 21623, 21093, 199, 1382, -66, 2368,
	2360, 2356, -1000, 2346, 1688, -67, 1232, 81248, 99344, -68,
	-1000, 4360, -69, -1000, 1195, 195, 3231, -1000, -1000, -1000,
	-1000, -1000, 3395, 3394, -1000, 926, 583, 582, 387, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 580, 579, 579,
	579, -1000, 319, 574, 272, 573, 569, 568, -1000, -1000,
	-1000, -1000, -1000, 2653, 81248, 99344, -63, 81761, 81248, 799,
	-76, 1056, -46, -1000, -1000, -1000, 1713, -1000, 1572, -1000,
	-1000, -1000, -1000, -1000, -1000, 1349, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 956, -1000, -1000, -1000, -1000, -1000,
	-1000, 3226, 3224, -34, -1000, -1000, 21093, -1000, -50, 1539,
	1597, -1000, 68803, 2140, 3018, 2963, 1478, -1000, 1385, 1230,
	3069, 72436, 3119, 3166, 185, -1000, 2652, -1000, -1000, 822,
	1583, 1593, 1229, 72436, 2088, -1000, 58899, -1000, 2423, 3066,
	1275, 1262, 1275, 1275, 1252, -1000, 72436, 1592, 1228, 1184,
	-1000, 1180, 1164, -1000, -51, 3113, 3128, 89, -1000, 2651,
	1160, -1000, -1000, 81248, 21093, 1441, 1436, 1587, 1156, -35,
	-1000, 3111, 3110, 1154, 1148, -1000, 4196, -1000, 65715, 1555,
	2790, 2504, 771, 2502, -1000, -1000, 771, -36, 66228, 99344,
	191, -1000, 87, 42051, 42051, 87, 42051, 87, 3095, -1000,
	-1000, 2789, -1000, -1000, -1000, 3391, 1807, 2310, -1000, -1000,
	565, 2202, 2650, 99344, 2380, -40, 81248, -1000, 2788, 59419,
	2088, 2200, -1000, -1000, 73469, -1000, 2781, 441, 2194, -1000,
	607, 3388, -1000, 102422, -1000, 3008, 1280, 2780, 1004, 385,
	3177, -1000, 385, 56318, -1000, 99344, -1000, -25, 99344, -1000,
	-1000, -1000, 3387, -1000, 81248, -1000, -1000, 81248, 194, 2777,
	-1000, 81248, -1000, 81248, 190, 2775, -1000, -1000, 99344, -1000,
	81248, 81248, -1000, 99344, 99344, 65715, 65715, 4436, 67777, -81,
	-83, 392, -1000, 90012, 99344, 989, 68290, 99344, 2932, 880,
	51114, -1000, -84, -162, 2498, 862, 862, 771, -1000, 771,
	-1000, 81248, 2690, -1000, -1000, 65715, 862, 862, 862, -1000,
	-1000, -1000, -1000, 3384, 3381, 3380, -1000, -1000, -1000, 882,
	81248, 99344, 81248, -1000, -1000, 99344, -1000, 99344, 99344, 81248,
	-1000, 882, 99344, 882, 99344, 882, 99344, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 87, 42051, -1000, -1000, 3377, 1510,
	-1000, 2687, -1000, 2673, -1000, 11, -1000, -1000, -1000, -1000,
	-1000, 1774, 81248, 81248, 81248, 81248, 99344, 81248, -1000, 72436,
	-1000, 2322, 2670, -1000, -1000, -1000, -1000, -1000, -1000, 1650,
	2036, -1000, 2331, -1000, 1438, -1000, -1000, -1000, 110880, 45843,
	-1000, -1000, 110880, 1668, -1000, 44227, 43683, -1000, -1000, 1591,
	81248, 2383, -1000, 2383, -247, -1000, 109366, 2329, 81248, -1000,
	-1000, -1000, -1000, -1000, 810, 564, 564, 1106, 1106, 1106,
	1106, 3114, 504, 555, 490, 7099, 7099, 4665, 4665, 4665,
	4665, 4665, 7099, 431, 510, 510, 431, 431, 431, 431,
	431, 510, 510, 510, 7099, 7099, 7099, 111223, 7701, 6394,
	42051, 42051, 1145, 1794, 461, 6306, 42051, 7915, 7915, 7915,
	7915, -1000, 1949, -1000, -1000, -1000, -1000, 2649, 554, 45315,
	45315, -1000, -1000, -1000, -1000, 22723, 42051, -1000, -1000, -1000,
	-1000, 32067, -1000, -1000, 108964, -314, 391, -231, -29, -1000,
	42051, 42051, 42051, 388, -1000, 189, 42051, 99344, -1000, 106501,
	676, -86, -1000, -90, 1312, -1000, 42051, -1000, -1000, 1131,
	-1000, 1127, 1125, 1124, -1000, 545, 383, -1000, 188, -1000,
	1986, 543, 542, 42051, -1000, -1000, -1000, -1000, -1000, 108783,
	-1000, -1000, 108618, -1000, -1000, 108532, -1000, -1000, 108351, -1000,
	-1000, -1000, 110792, 106312, 106061, 106021, 9751, 13867, 13308, -91,
	378, -93, 377, 803, 793, 374, 372, 371, -98, -1000,
	3374, 3373, 3368, -1000, 3366, 3362, 3360, -1000, 3359, 3358,
	3357, -1000, 3356, 3354, 3352, -1000, 3351, 3348, 3347, -1000,
	3344, 3343, 3342, -1000, 3341, 3340, 3338, -1000, 3337, 3336,
	3335, -101, 368, -1000, 2648, -231, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 367, -1000, 366, -1000, 110626, -231,
	365, 7056, -1000, 45315, 45315, 45315, -1000, 363, -1000, 109603,
	-1000, 110386, 31523, 31523, 31523, 358, 110202, 42051, -231, -104,
	-1000, -106, -1000, -1000, 520, -109, 911, 30967, 47964, 21093,
	-1000, 911, 911, 42051, -1000, 42051, 2345, -1000, -1000, -1000,
	2342, 1792, 2469, 49004, -1000, -1000, -1000, -1000, 89494, -1000,
	3222, 2592, -1000, 89494, -1000, -1000, 99344, 441, -1000, 89494,
	89494, 21093, 764, -1000, 764, 89494, 734, -1000, -1000, -1000,
	-1000, -1000, 356, 53216, -29, 187, 21093, 883, -1000, 2447,
	2447, 2447, 2447, -1000, -1000, 99344, 1123, -41, -107, 3197,
	-1000, 1850, -1000, 58899, -1000, 691, 978, 21093, -1000, -1000,
	-1000, 541, -1000, 3231, 3231, -1000, 3231, 99344, 2640, 136,
	128, 907, 28779, -1000, 1713, -1000, -1000, 1449, -1000, 1812,
	-1000, 1110, -1000, -1000, -1000, -1000, 28779, -1000, 2205, 99344,
	99344, 81248, -1000, 99344, -1000, 2193, 101909, 2189, 58899, 99344,
	-1000, -1000, 540, 538, 2326, 2325, 985, 99344, 99344, 2324,
	101396, 100883, 99344, 1895, 42051, 59419, 2145, 1616, 87, 87,
	-1000, -1000, 87, 535, 1241, 81248, 81248, 99344, 81248, 1538,
	-1000, -1000, -1000, -1000, -1000, 72949, -1000, -1000, 3249, 3240,
	-1000, 1275, -1000, -1000, -1000, 1275, 2088, 1530, 99344, 81248,
	59419, 1577, 99344, 1864, 87, 87, -1000, -1000, 87, 534,
	21093, 1863, -1000, 2735, 99344, 3276, 99344, 99344, 99344, 59419,
	2971, 100370, 99344, 99344, 59419, 4196, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60988, 1009, 883,
	1573, 1122, 72436, 51114, 878, 51114, 2466, -1000, -1000, 18449,
	-1000, 110880, 110880, -1000, 110880, -1000, 60460, 99344, -1000, 937,
	99344, 68290, 861, 2774, 55280, -63, 862, 65715, 81248, -40,
	99344, -1000, -1000, -1000, -1000, -1000, 2088, 2773, 441, 2187,
	-1000, 65715, 3176, 2772, 532, 3331, 3328, -1000, 2067, 2185,
	-1000, -1000, 99857, 2846, 740, 99344, 911, 49004, 1853, -1000,
	53736, 966, 99344, 1744, 86, -1000, -1000, -1000, 1, 99344,
	-1000, 707, 3325, -1000, -1000, 194, -1000, 81248, 194, 194,
	-1000, 81248, 81248, 2101, -1000, 200, -1000, 197, -1000, -149,
	-1000, -1000, 4436, 4436, 862, -252, 528, -1000, 780, 776,
	51642, 65715, -121, -1000, -1000, -1000, -1000, -1000, 81248, 99344,
	655, 2448, 99344, -123, -1000, 184, 527, -1000, 2047, -1000,
	-1000, 880, 51114, 2632, -1000, -1000, 905, -1000, 1266, 862,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-26, -63, -63, -63, -41, -1000, 882, -1000, 882, -1000,
	882, -1000, 110880, -1000, -1000, 1505, 1496, 99344, -1000, 21093,
	99344, 81248, 21093, 81248, 2669, 2667, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1017, -1000, 1668, 2035, -1000, 526,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2275,
	-1000, -42, 28235, 2103, -1000, -1000, 81248, -27, 42051, 42051,
	6107, 4922, 42051, 45315, 45315, -1000, 42051, 4808, -1000, -1000,
	-1000, -1000, -1000, 2614, 525, 42051, 58899, 6352, 5530, -1000,
	352, 13244, 431, -1000, 42051, -1000, 347, 30423, -1000, 109950,
	-77, -129, -1000, 15265, -231, -131, -1000, -1000, 690, -1000,
	2820, -1000, 42051, 110036, 2253, 1892, 1757, 1501, 3231, 3275,
	17921, -1000, 56831, 912, 2009, 108186, -1000, -1000, -1000, -1000,
	58899, 58899, 42051, 42051, -1000, 42051, 42051, 42051, -1000, -1000,
	-1000, 3231, 819, -1000, -1000, -1000, 819, -1000, -1000, 1275,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1275, -1000, 42051, -1000, -1000,
	2611, 42051, -1000, 58899, 58899, 45315, 45315, 45315, 45315, 45315,
	45315, 45315, 45315, 45315, 45315, 45315, 45315, 45315, 45315, 45315,
	45315, 45315, 45315, 45315, 2313, 45315, 3212, 3212, 3212, -1000,
	2662, 2611, 42051, 42051, 58899, 338, 337, 336, -1000, 42051,
	-231, -1000, -1000, 4436, 521, -1000, 2265, -1000, 2554, -1000,
	42051, -1000, -124, -1000, 2367, -1000, -1000, 2554, 2554, -132,
	110880, 49004, 49004, -1000, 517, 42051, 2341, -1000, -1000, 675,
	-312, -1000, 774, -1000, -1000, -1000, -1000, -1000, 441, -1000,
	-1000, -1000, 180, 89494, 89494, 674, -1000, -137, -1000, -1000,
	-138, -1000, 3175, 335, 21093, -1000, -1000, 2939, -1000, -1000,
	-1000, -1000, -1000, -1000, -63, 99344, 99344, 2023, 3274, -1000,
	3232, 689, 669, 177, 3231, 325, 324, 322, -63, 99344,
	99344, 99344, -1000, 2420, -1000, -46, -1000, -1000, -1000, 42051,
	-1000, -1000, 3014, 1119, 1116, -1000, -1000, 2771, -1000, 2177,
	-1000, 974, -1000, 1682, -1000, 42051, 42051, 516, 513, 3324,
	1775, 3322, 988, 2769, 2101, 2768, 2101, -1000, -1000, 804,
	-1000, 110880, -1000, 511, 509, -1000, -50, 1523, 1569, 903,
	-1000, -1000, 42051, 42051, 88981, -1000, 424, 2979, -30, -1000,
	-1000, 1564, 1115, -1000, -1000, -1000, -1000, 2088, 1561, 1113,
	-1000, -1000, -1000, 902, -1000, -1000, 901, -1000, -1000, 42051,
	-1000, -51, 1112, 3112, 2167, 81248, 1095, -1000, 1093, -1000,
	-1000, -1000, 3102, 2101, 2765, 1096, -1000, -1000, -1000, -1000,
	-1000, 59947, -1000, 99344, 81248, 1495, 771, -1000, 2110, 771,
	878, 2608, -1000, 2379, 3321, 81248, 3318, 316, -155, -57,
	58899, 3174, -1000, 2091, 518, 81248, 794, -1000, 3222, -1000,
	-1000, -1000, -1000, 3098, 81248, 3172, 2764, 883, 87, 81248,
	3273, -1000, -1000, 81248, 2763, 2066, 2163, 2306, 740, 67264,
	-1000, 883, 2004, -148, -1000, 1744, 29867, 2976, -157, -1000,
	-1000, -1000, 911, 56318, 49004, 42051, 3316, -160, -1000, -1000,
	-1000, -1000, 194, -1000, -1000, -1000, 190, -1000, -1000, -1000,
	-1000, -1000, -1000, 87950, 87950, 65715, 65715, 65715, 862, 99344,
	99344, 68290, -1000, 508, 99344, 99344, 507, -1000, 99344, 99344,
	3313, 65715, -62, 489, -1000, 773, 769, 763, -1000, -1000,
	-1000, -1000, -1000, -1000, -162, 87, -1000, 2021, 81248, -1000,
	17393, -1000, -1000, -1000, -1000, -1000, 882, -1000, -1000, 1870,
	2078, 1870, 1703, 1693, -1000, 2019, -1000, -1000, -1000, -1000,
	2403, 2994, 21093, 3120, 7915, 42051, 42051, 242, 5443, 874,
	7915, 42051, 42051, 58899, 5480, -163, 42051, 42051, -1000, 42051,
	668, 110880, 3271, 42051, 315, 314, -1000, -1000, -1000, 3230,
	-1000, -1000, -1000, 110880, 42051, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 310, -1000, 146, -1000, -1000, -1000, 105500, -1000,
	42051, 309, 3061, -1000, 306, 300, 8113, 9148, 107935, 107751,
	107585, 298, -1000, -1000, 297, 293, 110880, 2662, 110880, -1000,
	-1000, 848, 848, 1246, 1246, 1246, 1246, 3212, 1235, 1887,
	1074, 920, 920, 920, 1034, 893, 893, 920, 920, 920,
	2606, 2299, 488, 7270, -1000, -1000, 110880, 110880, 286, -1000,
	-1000, -1000, -231, 285, 4436, -1000, 2550, 3060, 110880, -1000,
	49004, 2550, 2550, -1000, -1000, 1792, 99344, 110880, 49004, -1000,
	2592, -1000, 15804, -1000, 21093, -1000, -1000, -1000, -1000, 3222,
	-1000, 53216, -1000, 487, -1000, 88, 2939, -1000, 758, -1000,
	-63, -63, -1000, -1000, 667, 3311, 684, 21093, 284, -1000,
	-1000, -1000, -63, -63, -63, -1000, 2931, 110880, 99344, 99344,
	99344, 2762, -1000, 2032, -1000, 985, 107500, -165, -1000, 109366,
	42051, 99344, -1000, -1000, 1752, 2387, 1041, -1000, 3033, 99344,
	-1000, 99344, -1000, -1000, 99344, 99344, 81248, 99344, 2744, -168,
	110880, -64, -1000, 756, -1000, 1259, -1000, 16865, 99344, 81248,
	99344, 81248, 1935, 2737, -175, 21093, -1000, 3269, 3263, 2761,
	3037, 3262, 99344, -1000, 99344, 81248, 2930, -1000, -1000, -1000,
	-1000, 1522, 1092, 878, -72, 476, -1000, 755, -1000, -1000,
	754, 878, -1000, 65715, 51114, -1000, 441, -1000, 2429, -1000,
	85872, 2037, 87, -1000, 3310, 88468, 474, -1000, 2020, -1000,
	666, 59419, 2088, 87, 81248, -1000, -1000, 441, 283, -82,
	-1000, 979, 21093, 81248, 2754, 2308, 740, 67264, -1000, 1280,
	2402, -1000, -111, -1000, 609, 87, 2004, -1000, -148, 110880,
	-1000, 753, -1000, -1000, -1000, -176, -1000, -1000, 281, -1000,
	2929, 2928, -1000, 2540, 42051, 473, 472, 99344, 2926, -1000,
	-1000, -183, 2527, 2527, 65715, 51114, 65715, 880, -1000, 2186,
	-1000, -1000, -1000, -1000, -1000, 21093, 1535, -1000, 471, 469,
	-1000, -1000, -1000, -1000, 2994, 7915, 7915, 42051, 42051, 42051,
	7915, 5480, -185, -1000, 7915, 7915, -231, -1000, -1000, 109950,
	-1000, -1000, -1000, 110880, -1000, 16337, 1878, -1000, 107334, -1000,
	28235, -1000, -1000, 42051, 42051, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 45315, 2603, 468, 58899, -1000, -1000, 276,
	909, 42051, 42051, 2367, 909, 909, -1000, -190, -1000, -1000,
	-1000, 3222, 88, -1000, -1000, 3301, 21093, -1000, 65715, 566,
	-1000, 3299, -1000, -1000, -1000, -1000, -1000, -1000, 99344, -1000,
	99344, -1000, 21093, 99344, 2573, 2154, -1000, -1000, 2323, 466,
	45315, 81248, 834, -1000, 3189, 2503, 1773, 42051, 2103, -192,
	-195, 2151, -1000, -1000, 2150, 42051, -1000, 58899, 465, 2101,
	2101, -197, -198, -1000, -1000, 42051, 1089, 99344, 29323, -1000,
	3297, 2979, -1000, -1000, -1000, -1000, 99344, 42051, 1086, -1000,
	-1000, -1000, 3261, 2101, 21093, -1000, 2101, 2101, 3037, 1036,
	99344, 81248, -1000, 2142, 2142, 65715, 51114, -1000, -149, 878,
	3168, 1864, 2478, -1000, -1000, -1000, -1000, 2321, -1000, -1000,
	99344, 2317, 866, -1000, -203, -1000, 750, 747, 68290, 861,
	831, -1000, -1000, -1000, -1000, 441, 3161, -1000, 3257, 463,
	99344, 2059, 462, 21093, 2974, 740, 67264, -1000, 2846, 1744,
	-1000, 2144, 99344, 2962, -1000, 2402, 461, -1000, 862, 460,
	458, 3672, 3672, -205, 42051, 42051, -206, 457, 862, -1000,
	-208, -1000, -1000, -1000, -1000, -156, -1000, 808, 801, -1000,
	-1000, 81248, 81248, 42051, 42051, -1000, 7915, 7915, 7915, -1000,
	273, -1000, -1000, 2004, 3058, -1000, -178, 107098, 106917, 6700,
	45315, 58899, -213, -1000, -1000, 99344, 110880, -231, -1000, -1000,
	-1000, 556, -1000, -1000, 3296, -1000, -1000, 2016, -1000, -1000,
	-1000, 99344, 2147, -1000, 981, 42051, 7270, 455, 42051, -1000,
	3154, -1000, 2416, 2612, 2429, 454, -1000, -1000, -1000, -1000,
	-1000, 972, 1799, -1000, -1000, 110880, 3037, 42051, -1000, -1000,
	452, 450, 110880, 448, 743, 2601, -1000, -1000, -1000, -1000,
	110880, 447, 3112, -1000, -1000, -1000, -1000, 2101, 81248, -1000,
	-1000, -1000, -214, -1000, -1000, 1803, 87, 861, -1000, 1916,
	2037, 444, -1000, -1000, 2044, 2418, -1000, 88468, 28779, 28779,
	261, 3145, 831, -1000, 3227, -1000, 3127, 87, -1000, 42051,
	-1000, 81248, 42051, 2058, -1000, 2293, 67264, -1000, 2306, -1000,
	-1000, -216, 99344, 1744, -1000, -1000, 65715, 65715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 972,
	-219, -226, -1000, 65715, -1000, -1000, 2186, -1000, 99344, -1000,
	99344, -1000, -1000, -228, -233, -1000, 1963, 42051, 28235, -1000,
	-1000, 6700, -235, -1000, -181, -1000, 3126, -1000, -1000, -1000,
	-1000, 2752, 2545, 106752, 2267, 99344, 106666, -1000, 2604, -1000,
	-1000, 1864, 99344, 2429, 2543, 81248, 980, -242, 1870, 1870,
	42051, 27691, 1907, 42051, -1000, -1000, 3037, -1000, 2575, 3221,
	-1000, 2044, 81248, 99344, -1000, 3026, -1000, 2924, -1000, -1000,
	-1000, 2429, 87, -1000, -1000, 87, -1000, -251, 979, -256,
	81248, 740, -1000, 2308, 911, -1000, -1000, -258, -259, 1773,
	972, 857, -261, -1000, -264, -267, -1000, -1000, 260, 43139,
	43139, 43139, -231, -247, -1000, 99344, 442, 2729, 870, -1000,
	2048, 1728, 216, 994, -1000, -1000, 2503, -269, -1000, 868,
	441, -1000, 42051, 972, -270, -1000, 964, -272, -1000, 961,
	-275, -1000, 2598, -1000, -277, 2101, 867, 3094, -1000, -1000,
	-1000, -1000, 430, -280, -1000, -1000, 2072, -1000, 1864, 866,
	-1000, 972, 418, 1773, 416, 1275, 2974, 2853, 862, 862,
	2429, 1773, 911, 414, 862, -1000, -1000, -1000, 2803, -1000,
	46371, 2026, 1683, 109200, 2803, 2803, -1000, -1000, 99344, 3082,
	-1000, 2056, 2050, 1398, -1000, -1000, -1000, -1000, -1000, -1000,
	911, -1000, 3081, 2267, 110880, 2429, -1000, 1870, 2474, -1000,
	1870, 2585, -1000, 1867, -1000, -1000, -1000, 1605, 3215, 99344,
	-1000, 99344, 1677, 1565, 3295, 861, 2044, 1773, 42051, 2429,
	42051, -1000, -1000, 1220, -1000, -1000, 1864, 2429, -1000, -1000,
	-1000, 1665, 3133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 737, -1000, 2902, -1000, 1013, 2096, 2096, -1000, 727,
	2048, -1000, -1000, 411, -1000, 410, -1000, 2017, -1000, -1000,
	-282, -1000, -1000, 3294, -1000, 2044, -1000, 2429, -283, 1864,
	-288, -1000, 1447, 857, 1864, 1598, -1000, -1000, 1992, 42595,
	42051, -1000, 3181, -1000, -1000, 2340, -1000, 42051, 2503, 42051,
	42051, 54767, 2052, -1000, -1000, 1864, 972, 857, 1773, 56318,
	911, 857, -1000, -1000, -1000, 110880, -1000, -1000, -1000, 110880,
	-1000, -289, -290, -252, 87950, -1000, -1000, -1000, 857, 1773,
	911, 2429, -266, -1000, 911, 1864, 1082, -296, 911, 2429,
	-1000, 1864, -1000, -1000, -1000, 408, -1000, -1000, 1864, 857,
	42051, 857, 911, -305, 911, -1000, 1864, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4107, 4105, 4103, 4099, 4096, 4095, 4093, 4092, 4091,
	4089, 4088, 4087, 4086, 4085, 4084, 4083, 4082, 4078, 4077,
	4076, 4075, 4072, 4070, 4065, 4064, 4063, 4062, 4060, 4057,
	4056, 4050, 4049, 4048, 4047, 4046, 4045, 4044, 4043, 4041,
	4040, 4035, 4034, 4033, 4030, 4029, 4028, 4026, 4025, 4024,
	4022, 4021, 4019, 4015, 41, 4012, 4008, 4005, 4004, 4003,
	3998, 3995, 3991, 3985, 3984, 3983, 3981, 3979, 3977, 3974,
	3971, 3967, 3966, 46, 3965, 236, 3963, 3960, 3959, 3958,
	3956, 3954, 3953, 3952, 3948, 3947, 3945, 3942, 234, 3941,
	151, 3940, 3939, 3938, 3937, 3933, 232, 3931, 3925, 3919,
	3917, 245, 3915, 3914, 3913, 3912, 3910, 3907, 3906, 3890,
	3888, 64, 130, 3883, 3881, 35, 3880, 3878, 3877, 3875,
	3873, 3872, 3870, 3866, 3863, 3861, 213, 3860, 231, 3858,
	3857, 3853, 3852, 3848, 3847, 3844, 3841, 3840, 3838, 3837,
	3833, 3831, 3830, 3829, 3828, 3823, 3822, 3820, 3814, 3813,
	3812, 3811, 3809, 3807, 3806, 3805, 3804, 3800, 3798, 3797,
	3794, 3792, 243, 166, 3791, 3787, 230, 228, 3785, 3784,
	3783, 3782, 3781, 103, 14, 20, 3779, 3777, 52, 68,
	62, 74, 78, 91, 3776, 86, 3774, 133, 47, 3773,
	9, 23, 134, 212, 6969, 210, 3772, 3770, 3769, 214,
	170, 3766, 207, 3762, 3761, 3760, 3759, 80, 71, 150,
	155, 139, 143, 28, 3758, 3756, 89, 58, 45, 32,
	25, 3754, 3752, 3746, 3745, 3201, 141, 3744, 227, 206,
	142, 3743, 3739, 3738, 1331, 3737, 50, 3736, 113, 87,
	104, 16, 100, 3735, 118, 27, 3734, 131, 40, 3731,
	128, 77, 69, 9081, 4722, 3729, 96, 63, 220, 2807,
	169, 167, 171, 157, 137, 181, 186, 185, 145, 107,
	3728, 219, 3726, 3145, 72, 132, 3725, 3723, 3722, 54,
	173, 85, 3720, 3709, 51, 5, 15, 34, 165, 12,
	99, 18, 3707, 13, 3704, 3703, 3702, 3701, 33, 136,
	3698, 244, 3695, 75, 37, 38, 3694, 55, 188, 3687,
	196, 106, 3684, 3683, 223, 177, 140, 3682, 88, 201,
	3681, 3680, 3679, 3678, 3677, 108, 2, 110, 3675, 3673,
	121, 205, 172, 3670, 56, 3668, 3664, 144, 83, 114,
	242, 147, 198, 97, 193, 156, 200, 3663, 3662, 3660,
	192, 3657, 3654, 191, 119, 3652, 3650, 175, 246, 39,
	60, 204, 59, 161, 124, 3648, 184, 3647, 3646, 247,
	154, 180, 1, 6, 90, 101, 3645, 10, 202, 123,
	176, 95, 3643, 5713, 415, 2227, 3642, 3640, 116, 98,
	53, 102, 120, 226, 66, 3635, 3634, 65, 3632, 3631,
	3629, 3627, 153, 3626, 3625, 3622, 112, 122, 160, 3621,
	79, 73, 11, 109, 222, 233, 93, 194, 168, 216,
	3620, 3619, 3618, 159, 3615, 81, 125, 3614, 174, 217,
	3609, 3608, 162, 3607, 117, 598, 48, 129, 3605, 190,
	3604, 3598, 3597, 3596, 3593, 3592, 3590, 383, 203, 3581,
	3579, 3577, 31, 164, 3571, 224, 158, 152, 82, 57,
	3565, 76, 3282, 3564, 312, 199, 44, 105, 3563, 2939,
	43, 0, 10703, 9407, 6862, 10455, 3562, 1997, 3561, 3560,
	3559, 187, 115, 3557, 3555, 3554, 84, 3552, 61, 3551,
	3548, 49, 3547, 21, 7, 8, 22, 19, 705, 229,
	3546, 3545, 92, 126, 148, 3544, 240, 197, 3543, 3542,
	3541, 3540, 67, 3539, 29, 3538, 26, 3537, 3534, 30,
	4, 24, 3533, 3530, 209, 3529, 189, 208, 3528, 135,
	3527, 3136, 111, 3525, 3524, 225, 127, 3523, 221, 3522,
	3122, 3521, 3520, 17, 3519, 3518, 211, 146, 195, 3517,
	3516, 138, 3515, 3513, 3512, 218, 3511, 3510, 36, 3509,
	3, 3504, 3502, 182, 2914, 3501, 3500, 42, 3499, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 535, 535, 21, 35, 22, 36,
	15, 536, 536, 536, 536, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 534, 534, 212, 212,
	211, 206, 206, 537, 537, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 436,
	436, 436, 467, 467, 467, 550, 550, 551, 551, 551,
	551, 551, 114, 114, 336, 336, 336, 43, 43, 43,
	43, 43, 529, 529, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 542, 542, 543, 543, 541,
	544, 544, 544, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 469,
	469, 470, 470, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 553,
	553, 554, 554, 555, 555, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 300, 300, 272, 272, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 527, 527, 315, 315,
	427, 427, 75, 75, 335, 335, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 526, 262, 262, 82, 82, 82, 265,
	265, 81, 81, 81, 316, 316, 87, 87, 87, 87,
	273, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 429, 429, 89, 89, 89, 395, 395, 93,
	93, 93, 351, 351, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 531, 531, 308, 308, 228, 228, 228, 228, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 547,
	547, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	461, 461, 324, 324, 459, 459, 478, 478, 460, 460,
	277, 277, 277, 277, 277, 278, 278, 278, 468, 468,
	468, 468, 468, 468, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 358, 358, 358,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 545, 545, 546,
	546, 155, 155, 155, 155, 155, 155, 409, 409, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 341, 341, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 557, 557, 557, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 528, 528, 524, 524, 524, 524,
	524, 524, 524, 524, 525, 525, 525, 525, 530, 530,
	98, 98, 98, 98, 98, 106, 106, 106, 106, 106,
	99, 99, 99, 99, 99, 101, 101, 100, 100, 100,
	100, 65, 65, 65, 65, 65, 14, 14, 14, 66,
	66, 190, 190, 190, 191, 191, 285, 285, 285, 285,
	188, 188, 189, 189, 67, 67, 558, 558, 558, 538,
	538, 538, 539, 539, 539, 539, 539, 539, 279, 279,
	280, 280, 375, 375, 375, 375, 375, 283, 283, 283,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 286,
	286, 214, 214, 214, 289, 290, 290, 287, 287, 288,
	288, 288, 292, 292, 291, 294, 294, 293, 374, 487,
	487, 489, 489, 489, 489, 489, 489, 489, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 559,
	559, 485, 485, 485, 486, 481, 481, 482, 482, 482,
	482, 482, 281, 281, 282, 282, 282, 282, 483, 484,
	306, 306, 412, 488, 488, 490, 490, 492, 560, 560,
	560, 560, 560, 560, 561, 561, 561, 373, 373, 372,
	372, 298, 298, 493, 493, 493, 493, 494, 494, 494,
	494, 494, 497, 496, 495, 495, 495, 495, 495, 69,
	69, 69, 338, 338, 337, 337, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 165, 165, 231, 231, 63, 63, 63, 12, 12,
	12, 540, 540, 540, 68, 68, 68, 68, 68, 68,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	533, 533, 532, 532, 232, 232, 563, 563, 74, 74,
	74, 74, 74, 74, 74, 430, 430, 431, 431, 62,
	62, 62, 62, 62, 359, 359, 357, 357, 356, 356,
	305, 305, 411, 236, 236, 207, 207, 207, 27, 26,
	19, 19, 24, 24, 39, 39, 39, 39, 42, 42,
	38, 38, 38, 38, 40, 40, 34, 34, 548, 548,
	549, 549, 102, 102, 107, 107, 107, 107, 107, 108,
	108, 108, 108, 109, 109, 109, 109, 118, 118, 164,
	164, 164, 164, 164, 164, 164, 44, 44, 44, 44,
	56, 56, 56, 56, 116, 565, 565, 565, 117, 117,
	117, 564, 564, 229, 229, 369, 369, 370, 370, 566,
	566, 371, 371, 371, 371, 371, 222, 221, 223, 223,
	224, 224, 61, 61, 61, 216, 216, 217, 217, 218,
	218, 219, 219, 220, 220, 567, 567, 96, 96, 96,
	167, 167, 271, 271, 271, 366, 366, 366, 299, 299,
	242, 242, 368, 368, 368, 368, 334, 334, 334, 166,
	166, 313, 313, 326, 326, 327, 327, 424, 424, 328,
	115, 115, 194, 194, 192, 192, 192, 192, 192, 192,
	192, 192, 199, 199, 200, 200, 201, 201, 202, 203,
	203, 203, 203, 317, 317, 204, 204, 204, 193, 193,
	193, 195, 195, 195, 195, 195, 195, 195, 198, 198,
	198, 198, 205, 205, 205, 197, 197, 504, 504, 504,
	506, 506, 508, 508, 507, 507, 503, 503, 505, 505,
	562, 562, 340, 340, 340, 296, 297, 295, 295, 303,
	303, 301, 302, 302, 304, 304, 410, 410, 410, 208,
	208, 208, 331, 331, 331, 331, 332, 332, 362, 362,
	360, 360, 360, 360, 361, 361, 363, 363, 363, 364,
	364, 365, 365, 330, 330, 391, 391, 196, 196, 196,
	310, 310, 310, 311, 311, 381, 381, 381, 381, 381,
	381, 382, 382, 380, 380, 380, 380, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 414, 415, 415, 312,
	312, 416, 367, 367, 522, 522, 522, 523, 523, 408,
	408, 417, 417, 417, 417, 417, 417, 406, 406, 407,
	407, 425, 426, 426, 344, 344, 344, 344, 342, 342,
	345, 345, 345, 345, 343, 343, 418, 418, 418, 418,
	333, 333, 419, 419, 419, 419, 420, 421, 421, 422,
	422, 376, 377, 377, 432, 432, 432, 432, 434, 309,
	309, 309, 309, 309, 480, 479, 479, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 449, 449,
	449, 449, 449, 449, 449, 435, 435, 435, 435, 435,
	439, 439, 439, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 440, 440, 445, 445, 446, 446,
	446, 441, 442, 447, 447, 447, 447, 568, 568, 451,
	451, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	437, 437, 437, 444, 444, 444, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 352,
	352, 354, 354, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	385, 385, 385, 385, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 498,
	498, 498, 498, 498, 498, 498, 498, 387, 387, 501,
	501, 502, 502, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 509, 509, 510, 510, 512, 512, 513, 513,
	514, 515, 515, 515, 516, 517, 517, 511, 511, 518,
	518, 518, 518, 519, 519, 520, 520, 520, 520, 520,
	521, 521, 521, 521, 521, 397, 397, 398, 398, 404,
	404, 404, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 233, 233,
	233, 233, 233, 322, 322, 320, 320, 320, 323, 323,
	321, 321, 319, 319, 318, 318, 394, 394, 392, 392,
	396, 396, 346, 346, 450, 450, 450, 450, 450, 450,
	450, 450, 347, 347, 347, 355, 348, 348, 349, 349,
	349, 349, 349, 388, 389, 350, 350, 350, 390, 390,
	399, 403, 403, 402, 401, 401, 400, 400, 378, 378,
	379, 379, 329, 329, 569, 569, 325, 325, 423, 423,
	423, 423, 275, 275, 314, 314, 274, 274, 266, 266,
	267, 267, 267, 267, 307, 307, 405, 405, 452, 452,
	453, 453, 454, 454, 455, 455, 456, 457, 458, 393,
	393, 252, 251, 239, 240, 250, 249, 248, 238, 241,
	245, 246, 247, 243, 244, 258, 257, 256, 263, 264,
	254, 255, 428, 237, 268, 268, 269, 269, 269, 270,
	270, 270, 270, 234, 234, 235, 235, 259, 259, 260,
	261, 261, 253, 253, 253, 225, 225, 225, 226, 226,
	227, 227, 466, 466, 463, 463, 463, 464, 464, 464,
	465, 465, 465, 465, 462, 462, 462, 462, 462, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 472, 472, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 474, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 477, 477,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 11,
	14, 1, 2, 3, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 1, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	1, 2, 8, 4, 2, 5, 5, 5, 2, 1,
	3, 11, 12, 8, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 9, 12, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 558, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 98, 78, 149, 124, 132,
	193, 368, 404, 415, 396, 385, -123, -124, 432, -44,
	-56, -117, -116, 71, 125, 391, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -552, 100,
	-505, -78, -81, -109, -556, 137, 156, 211, -99, -100,
	351, -104, -105, 398, -107, -108, 400, 157, -51, -50,
	151, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 436, -153,
	491, 47, 450, 80, 141, 408, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -504, -79, -80, -83, -85,
	-86, -82, -84, 397, -195, -193, 555, 506, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 525, 533, -198, -196,
	-197, -205, 424, 514, 466, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, -273, 2, -254, -259, -260,
	-261, -253, -225, -474, -477, 4, -471, -475, 162, 220,
	315, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 90, 92,
	94, 95, 96, 97, 98, 99, 101, 102, 103, 105,
	106, 114, 115, 116, 117, 119, 124, 125, 128, 123,
	127, 130, 131, 132, 135, 136, 137, 139, 140, 142,
	143, 144, 146, 147, 149, 150, 151, 154, 152, 473,
	153, 155, 156, 157, 158, 168, 169, 170, 175, 177,
	181, 182, 185, 186, 187, 188, 189, 190, 191, 192,
	194, 198, 200, 201, 202, 203, 204, 210, 211, 213,
	214, 215, 216, 221, 222, 226, 223, 232, 233, 237,
	238, 239, 241, 245, 246, 247, 248, 249, 250, 252,
	254, 253, 256, 259, 260, 263, 267, 268, 271, 272,
	273, 274, 276, 277, 280, 278, 281, 279, 282, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	295, 283, 298, 296, 300, 301, 302, 313, 311, 306,
	307, 303, 308, 304, 305, 309, 310, 317, 318, 321,
	208, 323, 324, 327, 345, 331, 332, 333, 336, 337,
	340, 343, 344, 346, 347, 348, 349, 350, 351, 352,
	353, 355, 356, 358, 359, 360, 362, 363, 364, 366,
	368, 369, 371, 373, 374, 375, 376, 377, 378, 379,
	382, 381, 383, 385, 391, 396, 393, 394, 395, 397,
	398, 399, 400, 402, 403, 404, 406, 407, 408, 409,
	411, 413, 414, 417, 418, 433, 434, 452, 415, 416,
	419, 420, 421, 422, 423, 427, 425, 426, 428, 429,
	430, 432, 435, 436, 438, 439, 440, 441, 442, 443,
	446, 448, 449, 450, 451, 453, 456, 457, 458, 459,
	454, 465, 462, 463, 467, 468, 469, 470, 471, 472,
	474, 476, 484, 485, 486, 488, 491, 492, 493, 494,
	482, 496, 497, 500, 501, 502, 505, 503, 504, 506,
	508, 511, 512, 513, 519, 518, 520, 526, 527, 529,
	530, 531, 35, 48, 49, 52, 54, 56, 67, 68,
	69, 73, 120, 121, 148, 159, 160, 171, 183, 184,
	195, 197, 205, 206, 207, 227, 228, 230, 235, 257,
	320, 322, 338, 342, 357, 361, 365, 367, 380, 410,
	444, 455, 460, 477, 478, 479, 480, 487, 489, 514,
	515, 516, 521, 528, -273, 2, -254, 329, -247, 2,
	-225, -225, 368, 27, 2, 27, 356, 426, 468, 470,
	2, -531, -308, 2, 27, -228, -225, 100, 193, 424,
	-247, 2, -531, -308, 24, 2, -225, 2, -229, 2,
	415, -225, 277, 2, 558, 92, 268, 72, 410, 429,
	-126, 485, -125, 477, 419, -127, -461, 2, 298, -225,
	558, 558, 558, 27, -237, -225, 466, 220, 116, 463,
	558, 2, 466, 348, 518, 425, 116, 377, 220, 493,
	419, -540, 277, 406, 196, 507, -529, 2, -524, 4,
	-475, -471, -267, -266, 466, 471, 116, -261, -253, 548,
	-260, 558, 558, 558, 2, 238, 239, 376, 375, 429,
	430, 558, 558, 558, 417, 2, 26, 64, 91, 96,
	122, 158, 178, 181, 334, -553, 345, 374, 428, 465,
	474, 488, -539, 451, 66, 419, -538, -540, 277, 493,
	135, -356, 116, 268, 192, 501, 470, 468, 499, 128,
	226, 504, 503, 558, 558, 26, 64, 75, 96, 135,
	158, 178, 181, -555, 345, 374, 413, 428, 465, 474,
	488, 2, 518, 277, 425, 466, 220, 116, 493, 419,
	-540, 417, 418, 372, -90, 2, 555, 31, 30, 432,
	-187, 466, 231, 2, -225, 558, 558, 2, 238, 239,
	417, 418, 558, 558, 179, -524, 2, 558, 558, 2,
	238, 239, 417, 418, 231, 2, 66, 421, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	2, -162, 429, 451, 202, 45, 44, 72, 27, 373,
	77, 349, 117, 143, 494, 194, 220, 221, 246, 91,
	92, -358, 43, 239, 238, 418, -545, 417, -409, 467,
	420, 426, 462, 250, 415, 485, 100, 508, 407, 531,
	377, 378, 152, 4, 116, 298, 431, 477, 268, 414,
	352, 82, 558, -562, 2, 466, -564, 2, 485, 485,
	2, -564, 2, -564, 2, -564, 2, -565, 485, 528,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, -193, -195, -194,
	558, 558, 558, 558, 558, 558, 558, -162, 429, 2,
	72, 27, -301, -303, 498, 229, 145, 335, -192, -194,
	2, -504, -459, 2, -383, -478, -385, 546, 547, 539,
	464, 65, 314, 532, -397, 122, 499, 329, -477, -386,
	-399, 148, 410, -323, 8, 9, 5, 6, 7, -234,
	-387, -393, 490, 161, 319, -270, 559, 10, 555, -501,
	-194, -398, 36, 197, 63, -463, -269, -235, -435, 230,
	-268, -253, -498, -499, 4, -471, -472, -464, -438, -446,
	-442, -443, -449, -225, -474, 75, 108, 109, 107, 112,
	111, 270, 269, 113, 110, 431, 507, 64, 35, 205,
	206, 235, 320, 207, 73, -500, 136, -473, 227, 228,
	444, 49, 380, 171, 121, 120, 322, 54, 52, 515,
	-447, 118, 477, 478, 479, 480, 183, 184, 56, 159,
	160, 342, 365, 460, 487, 489, 195, 257, 42, 104,
	180, 225, 209, 234, 236, 240, 258, 261, 299, 312,
	316, 339, 341, 405, 437, -568, 516, 455, 67, 68,
	-506, 381, -507, -247, -506, 558, 558, 560, 558, -295,
	-296, -297, 2, 27, 133, 555, 2, -413, 2, -414,
	-418, -194, 251, -417, 555, -415, 553, -254, 330, -502,
	411, -498, -499, -234, -253, -269, 4, -471, -473, 557,
	-298, 555, 116, 466, 76, 220, -351, 555, -225, 27,
	329, 481, 560, -395, 555, 329, 179, 332, -225, 518,
	2, 2, 433, 2, 555, -126, 69, 485, 42, 429,
	-370, 2, -371, -221, -222, -223, -425, -224, 237, 371,
	379, 534, 126, 314, 531, -459, -547, 179, 538, 481,
	-459, -324, 557, 2, 2, 2, 2, 2, -418, 205,
	-254, 2, -251, -462, 4, -471, -475, -472, -476, -474,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 55,
	63, 64, 70, 74, 76, 85, 91, 100, 107, 108,
	110, 109, 111, 112, 113, 122, 126, 129, 133, 134,
	138, 141, 145, 161, 163, 176, 178, 179, 193, 196,
	199, 212, 224, 229, 231, 251, 255, 262, 269, 270,
	314, 319, 325, 329, 330, 334, 335, 354, 370, 384,
	401, 424, 431, 447, 461, 466, 475, 481, 483, 490,
	498, 499, 507, 509, 517, 522, 523, 524, 525, -477,
	75, 2, -418, 205, 2, -256, 205, -418, -259, 2,
	-238, -225, 2, -250, -462, 2, -274, 205, -254, -255,
	-259, -257, 2, -259, -263, 2, -225, -469, 205, 2,
	-466, 10, -465, 5, 4, -471, -475, -472, 518, 231,
	481, 560, -314, -266, -267, -458, 8, -307, -225, 557,
	-383, 2, -115, -101, 2, 176, -383, 205, 2, -115,
	205, 2, -383, 205, 2, -115, 205, 2, -542, 2,
	-469, 2, 2, 488, 2, 96, 205, -225, 466, 115,
	2, 395, -554, 413, 492, 2, 2, 2, 2, 2,
	2, 466, -243, 2, -225, 176, -263, 205, -264, 2,
	-225, -226, 425, -563, 381, -469, 205, 2, 518, -257,
	2, -257, 220, 233, -238, 205, 2, 470, 468, 470,
	468, 179, 2, 231, 2, 231, 2, -419, 2, -420,
	-414, -421, 553, 330, 2, 2, 2, 2, 2, 205,
	-225, 466, 115, 2, 249, 2, 2, 2, 2, 2,
	2, 2, -316, 205, 2, -254, 518, -316, 205, 2,
	-316, 205, 2, -357, 2, 85, -238, 205, 2, -262,
	205, 2, -257, -265, 205, 2, -263, -470, 205, 2,
	-469, -383, 2, -115, 2, -429, 2, -428, -465, 514,
	-90, 555, -90, 555, 429, 555, -469, -254, -254, -383,
	2, -115, -101, 2, -383, 2, -115, 2, -112, -111,
	-469, 555, 179, -383, 2, -115, -101, 2, -383, 2,
	-115, 2, -187, 176, 2, 116, 466, -162, 2, 176,
	509, 2, 8, 2, 212, -469, 420, 378, 168, 2,
	433, 2, 434, 72, -358, 531, 72, 179, 2, 179,
	2, -341, 2, 525, 2, 2, -528, 2, 329, 179,
	2, 179, 2, 179, 2, 179, 2, 179, 2, 375,
	430, 486, 239, 2, -115, 522, -101, -383, 522, 2,
	-546, 176, 418, -383, 2, 484, 248, 153, 179, -341,
	2, 179, 2, 179, 2, 5, 2, 376, 452, 2,
	237, 371, 452, 2, -254, -557, 2, 466, 518, 425,
	2, 2, 86, 87, 179, 2, 179, 2, 179, 531,
	2, -333, -418, -369, -370, -369, 481, -301, -303, -162,
	433, 2, -199, -331, -201, 176, -360, -361, -202, 262,
	163, 325, -203, -340, 27, 133, -340, -340, 58, 556,
	556, 11, 12, 74, 40, 546, 547, 548, 549, 174,
	550, 551, 544, 545, 543, 536, 537, 541, 243, 244,
	93, 540, 538, 84, 275, 412, 164, 165, 166, 167,
	392, 218, 33, 219, 14, 15, 16, 32, 334, 261,
	532, 209, 437, 539, 17, 18, 19, 234, 236, 316,
	48, 212, -233, -276, -383, -383, -383, -383, -383, -383,
	-383, 341, 555, -329, -378, 553, -194, 555, 555, 555,
	-458, -194, -383, -397, 556, -321, 555, -194, -397, -392,
	555, 410, 553, 555, -400, -383, 5, 5, 5, 555,
	557, -509, 526, 176, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 367,
	-440, 555, -439, 555, -439, -439, 519, -437, 555, 533,
	527, 555, -437, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 519, 560, -506, -298,
	555, -325, -423, -383, 548, -325, -325, 329, -318, -383,
	104, -344, 240, 299, 180, 258, 405, 225, -380, 559,
	-380, -408, 533, -194, -415, -253, -194, -417, 555, -413,
	-408, -91, -458, -75, -88, -96, -115, -128, -166, -167,
	548, -254, 555, 179, 555, 557, -462, 179, -307, -238,
	-254, -268, -269, -274, 132, -318, -524, 493, 419, -307,
	-228, 37, -394, -432, -433, -480, 559, -479, -435, -445,
	-441, -444, 357, 361, -464, 52, 515, -447, 230, 4,
	-471, -473, 227, 228, 444, 49, 380, 171, 121, 120,
	322, 54, 477, 478, 479, 480, 183, 184, 56, 516,
	455, 67, 68, -524, 493, 419, -307, 176, -357, -461,
	-318, 37, -370, 2, 122, -466, -566, 560, 260, -278,
	274, 313, 201, 330, 529, 323, 126, -468, 5, 4,
	-393, -405, 122, 268, 230, -452, -454, 8, -453, 9,
	-455, 546, 547, -460, -459, 106, 557, -462, -210, 393,
	432, -209, 23, 28, 137, 512, 154, -288, 222, 344,
	348, 148, 448, 502, -535, -536, 416, 472, 473, 88,
	323, 432, 393, 148, -337, -339, 37, 114, 302, 343,
	59, 215, 279, 280, 450, 521, 148, 432, 393, 344,
	-536, 97, 393, -536, -212, 448, 502, -535, -536, 416,
	393, -211, -288, 148, 559, 23, 393, 432, 344, -550,
	-551, 137, 28, 393, 344, -532, -503, 525, 148, -418,
	205, -543, -111, 252, 5, 10, -111, -314, 560, 560,
	-462, 548, 418, 417, 148, 148, 148, 148, 176, 2,
	2, 314, 2, 2, 2, 181, -538, -555, 2, 2,
	-254, 205, -300, 329, -527, -315, 466, -254, 314, 42,
	-256, 205, 2, -259, 518, -532, 314, -258, 205, -254,
	37, 555, 2, -357, 2, 220, -503, 314, -419, -271,
	-254, -414, -271, 432, -247, 37, -380, -254, 148, 2,
	2, 2, -225, -213, 560, 62, 399, 148, -316, 205,
	-213, 148, -213, 148, -275, 205, -274, -213, 148, -213,
	560, 148, -213, 560, 148, 560, 148, 556, 560, -429,
	-429, -469, -175, 525, 179, 100, 555, 555, -187, -426,
	560, -425, -470, -112, -469, -469, -527, -238, 2, -254,
	2, 466, 241, -469, -175, 212, -469, -469, -469, -461,
	27, 434, 2, 375, 430, 486, 87, 434, 2, -254,
	466, 116, 220, 78, -530, 176, -525, 406, 419, 493,
	-524, -254, 116, -254, 116, -254, 116, -254, -254, 2,
	2, 2, 2, 2, 83, 83, 2, 44, -546, 176,
	2, 484, 2, 484, 2, -225, -225, -225, 451, 260,
	-254, 176, 466, 220, 466, 220, 116, 466, -213, 560,
	-229, -199, -331, -461, -332, -331, -200, -199, -202, 176,
	379, 503, 302, 435, 245, -361, -360, 27, -383, -365,
	170, 301, -383, -363, -385, 546, 547, -453, -455, -317,
	323, -193, -193, -193, -304, -410, -383, 370, 220, -434,
	-432, -432, -252, -462, 477, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	261, 209, 437, 48, 212, -383, 481, -383, -383, -383,
	-383, 296, 314, 319, 490, 161, 500, 133, 323, -569,
	461, 39, -390, -194, -322, 555, -404, 34, 447, 27,
	-397, 555, 2, -378, -383, -379, -319, -318, -318, 556,
	517, 27, 133, 548, 2, 556, 560, 37, 556, -383,
	-319, -396, -392, -318, -403, -402, 522, -352, -353, 530,
	283, 119, 203, 281, -354, 423, -456, 8, -462, 548,
	-510, 169, 196, 555, 556, 2, 556, 2, 556, -383,
	2, 556, -383, 2, 556, -383, 2, 556, -383, 2,
	556, 2, -383, -383, -383, -383, -383, -383, -383, -318,
	8, -456, -456, 477, 477, -456, -456, -456, -448, 357,
	358, 359, 360, 263, 264, 265, 266, 361, 362, 363,
	364, 288, 289, 290, 291, 284, 285, 286, 287, 292,
	293, 294, 295, 188, 189, 190, 191, 184, 185, 186,
	187, -448, -346, 2, -450, -318, 4, 530, 283, 119,
	203, 281, 423, 5, -346, 2, -347, 2, -383, -318,
	-348, -384, -385, 546, 547, 539, -397, -349, 2, -383,
	-319, -383, 55, 255, 483, -350, -383, 179, -318, -318,
	2, -318, 2, -507, 37, -318, -310, 560, 179, 37,
	4, -310, -310, 555, 556, 560, -345, 200, 278, 273,
	-345, -413, -344, 240, -342, 339, -342, -342, -408, -239,
	553, 561, -462, -408, -407, -406, 37, -247, 336, -408,
	-408, 557, 556, -407, 554, -522, 555, 558, 558, 558,
	558, 558, -254, 555, -318, -462, 557, 453, 556, 234,
	234, 234, 234, 411, 556, 481, -526, -262, -265, 525,
	-90, 331, 556, 560, -309, 36, 553, 557, -456, 2,
	2, -451, 519, 555, 555, -353, 555, 179, -526, -265,
	-308, -258, -547, 556, 485, -371, -277, 379, 446, 394,
	427, 463, 8, 9, 8, 9, 560, -462, 560, -548,
	91, 481, 76, 419, -374, 205, 76, -481, -241, 91,
	-482, -225, 70, 499, 370, 178, 146, -548, 91, 370,
	-548, 91, 91, 432, 451, 481, 58, -418, 40, 40,
	27, -115, 256, 179, 531, 466, 220, 419, 481, -418,
	-339, -432, 114, 279, 280, 58, -457, -452, 546, 547,
	-457, 58, -457, -457, -457, 525, -256, -418, 419, 481,
	481, 481, 481, 560, 40, 40, 27, -115, 256, 179,
	481, -274, -239, 513, 41, 513, 481, 41, 419, 481,
	560, 41, 41, 481, 481, -533, -230, 103, 308, 272,
	309, 95, 305, 94, 304, 101, 306, 102, 307, 520,
	317, 61, 303, 282, 310, -231, -232, 350, 511, -469,
	432, 393, 148, 212, -426, 212, -426, -266, -225, 557,
	-115, -383, -383, -115, -383, -115, 44, 148, 2, -563,
	249, 555, -281, 314, 179, -307, -427, 231, 560, -315,
	148, -467, -466, 113, 431, -338, -337, 314, -258, 205,
	2, 148, -298, 314, 142, 555, 377, 2, -240, 205,
	-226, -225, -357, -216, 469, 148, -335, 509, -366, -115,
	555, 122, 37, -366, -326, -327, -424, -328, -241, 555,
	-247, -380, -225, 2, -254, -316, -213, 148, -316, -316,
	-213, 560, 148, -238, -257, -262, -263, -265, -469, -470,
	-90, -428, 556, 556, 556, -174, 333, -173, -225, 5,
	-187, 509, -280, -375, -374, -485, -486, -481, 261, 220,
	499, 233, 162, -299, -242, -241, 115, -181, 525, -111,
	556, -426, 212, -175, -175, -426, -426, -254, 176, -469,
	-175, -175, -175, 2, 2, 2, -341, -254, -238, -274,
	-254, -307, -307, -307, -262, -341, -238, -341, -238, -341,
	-238, -115, -383, 2, 429, 176, 176, 557, -341, 377,
	116, 466, 348, 220, -254, -274, -254, -274, -238, -254,
	-418, -332, -200, 330, 245, 435, -363, -364, -385, 410,
	411, -364, 410, 411, 8, 9, 8, 9, -204, 439,
	318, -316, 560, -207, 38, 129, 245, -254, 531, 144,
	-383, -383, 481, -569, 461, -390, 144, -383, 296, 319,
	490, 161, 500, 133, 323, 179, 555, -384, -384, 556,
	-320, -383, -383, 554, 563, 556, -303, 560, -301, -383,
	-318, -318, 556, 557, -318, -307, 554, 554, 560, 556,
	-401, -402, 138, -383, 481, 481, 481, 481, 555, 556,
	557, -515, 340, 555, 555, -383, 556, 556, 556, 556,
	37, 560, 560, 560, 556, 560, 560, 560, 556, 556,
	556, 560, 556, 531, 531, 556, 556, 556, 556, 560,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 556, 560, 556, 179, 556, 556,
	-355, 354, 556, 11, 12, 546, 547, 548, 549, 174,
	550, 551, 544, 545, 543, 536, 537, 538, 84, 275,
	412, 14, 15, 16, 234, 212, -384, -384, -384, 556,
	-388, -389, 179, 176, 37, -350, -350, -350, 556, 179,
	-318, 556, 556, 555, -508, 277, 314, 556, -377, -376,
	523, -423, -311, 2, -413, -249, -462, -377, -377, -318,
	-383, 240, 240, -343, 509, 329, -345, -413, -407, -458,
	-382, -381, 177, 38, 129, 311, 208, -407, -247, -298,
	-407, -407, -462, -408, -408, -406, 556, -523, -458, 556,
	-312, -416, -502, -303, 557, -462, -184, -503, -163, 5,
	319, -163, -163, -163, -307, 481, 481, 24, 355, -432,
	553, 554, 8, -462, 555, -456, -456, -456, -307, 179,
	179, 179, -336, 525, -459, -370, 497, 81, 379, 477,
	-459, -209, 393, -241, -241, -254, -263, 314, -374, 205,
	-215, 314, -432, -248, -225, 555, 555, 245, 245, 509,
	-241, -248, 245, 205, -241, 205, -248, -248, -534, 379,
	324, -383, -467, 267, 377, 315, -210, 393, 432, -115,
	-115, -115, 555, -547, 509, 132, -254, -274, -254, -263,
	-258, 432, 393, 312, -268, -457, -457, -337, 432, 393,
	-263, -256, -467, 419, -238, -211, -115, -115, -115, 555,
	-239, -212, 393, 5, 205, -241, 5, -225, -241, -263,
	-467, -551, 23, -241, 205, -241, -263, -467, -230, -469,
	319, 505, -532, 419, 481, -418, -111, -178, 525, -111,
	-172, 216, 548, -529, -225, 518, -225, -279, -282, -280,
	-241, -190, -191, 527, 525, 148, -272, -254, 553, -175,
	-469, -254, -263, -264, 148, -298, 314, -469, 37, 148,
	555, 2, 2, 329, 314, -240, 205, -217, 139, -567,
	538, -238, -377, -311, -334, -368, 401, 329, -299, 514,
	-247, -334, -313, 560, 179, 538, 557, -299, -422, 548,
	2, -213, -316, -213, -213, -274, -275, -213, -213, -213,
	-90, -90, -175, 560, 555, 538, 538, 555, -469, -469,
	556, 560, -254, -240, 220, 220, -246, -226, 556, 560,
	557, 555, -183, 333, -182, 140, 247, 232, 440, 441,
	442, 443, 131, -181, -112, 179, -52, 525, 466, -175,
	559, -341, -341, -341, 429, 429, -225, -250, -238, -254,
	-251, -274, 176, 176, 503, -364, 330, 271, -410, -208,
	321, -254, 559, -383, -383, 144, 144, -383, -384, -384,
	-383, 144, 179, 555, -383, -394, 32, 32, 556, 560,
	-379, -383, 556, 517, -303, -303, 556, 548, -462, 559,
	556, -392, 141, -383, 475, 283, 203, 281, -354, 281,
	-354, -354, -456, 5, -462, 548, -516, -244, 555, -225,
	523, -302, 335, 556, -434, -432, -383, -383, -383, -383,
	-383, -456, -437, -437, -452, -452, -383, -388, -383, -434,
	-432, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	133, 314, 323, -384, -389, -388, -383, -383, -432, 556,
	556, 556, -318, -90, 555, 277, -330, 196, -383, -426,
	560, -330, -330, 556, -413, -413, 555, -383, 240, 554,
	560, 562, 538, -298, 557, -406, -407, 554, 556, 560,
	556, 560, -367, 37, 556, -462, -186, -185, 130, 51,
	-307, -307, 332, 5, 8, 553, 554, 557, -456, 556,
	556, 556, -307, -307, -307, 115, 302, -383, 481, 481,
	148, 314, 511, -487, -482, 146, -383, -305, -411, -383,
	555, 555, 2, -206, 137, 432, -549, 2, 509, 148,
	-213, 148, -213, 529, 555, 555, 481, 419, 525, -318,
	-383, -176, 122, -461, -536, 559, -536, 559, 419, 481,
	419, 481, 525, 525, -318, 481, -436, 46, 25, 314,
	-257, 481, 481, -213, 148, 493, 432, -469, 319, -263,
	-258, 432, 393, -426, -180, 333, -179, 140, 403, 131,
	247, -426, -178, 179, 231, 2, -258, 2, 556, 556,
	560, -488, 37, 327, 327, 555, -254, -71, 525, -425,
	-458, 42, -256, 37, 148, -532, -115, -258, -430, -431,
	5, -254, 148, 329, 314, -218, 254, -567, -466, -503,
	-303, -334, -325, 315, 89, 556, -377, -327, -311, -383,
	2, 556, -213, -213, -173, -174, -469, -469, -469, -175,
	-187, -187, -375, -283, 555, -240, -226, 555, -187, -242,
	2, -470, 560, 555, 538, 538, 538, -426, -115, 333,
	-254, 548, -341, -290, -289, 348, 323, -290, 410, 410,
	330, 170, 250, -207, -239, -383, -383, 144, 32, 32,
	-383, -383, -394, 556, -383, -383, -318, 554, 5, -383,
	556, 556, 8, -383, 556, 557, -517, -225, -383, 556,
	58, 556, 556, 560, 560, 556, 556, 556, 556, 556,
	556, 556, -389, 179, 133, 323, 555, 556, 556, -90,
	-391, 199, 58, -413, -391, -391, -343, -307, -413, -381,
	-239, 553, -462, -458, -416, 555, 557, -185, 538, 554,
	2, 553, -462, 556, 115, -241, -241, -374, 148, -489,
	91, -491, 74, 162, 100, 314, 319, 499, 370, 70,
	122, 384, -559, 37, 535, 556, 556, 560, -207, -305,
	-307, 314, 458, 122, 314, 122, 115, 493, 77, -241,
	-248, -307, -307, -254, -263, 155, 556, 560, 538, 2,
	548, 548, -263, -258, -263, -256, 346, 155, 556, -239,
	5, 5, 148, -236, 74, 5, -241, -241, -257, 115,
	419, 481, -178, 560, 555, 538, 538, -178, -470, -111,
	-298, -286, 223, -241, -486, -483, -484, 370, -490, -492,
	162, 370, -115, 2, -189, -188, -225, 5, 555, -281,
	333, 554, -467, -338, -115, -258, -298, 556, 560, -359,
	509, -239, -254, 148, -219, 253, -567, -466, -216, -362,
	-360, 134, 555, 329, -115, -303, 538, 556, 556, 115,
	115, 214, 147, -305, 555, 555, -307, 115, 556, -182,
	-183, -469, -111, -469, -181, -53, -54, 220, 91, 353,
	-251, 466, 220, 555, 555, -207, -383, -383, -383, 556,
	-303, -462, 548, -511, 348, 556, -410, -383, -383, -384,
	179, 555, -394, 556, -512, 524, -383, -318, -512, -512,
	556, -458, 2, -469, 553, 2, -374, -248, -252, -245,
	-225, 162, 205, 319, 245, 555, -384, -254, 555, 2,
	29, -560, 126, 224, -373, -561, 99, 459, 213, -411,
	-208, 556, 556, 319, 319, -383, -432, 555, -213, -213,
	556, 556, -383, 481, -461, 98, -459, 2, -536, -238,
	-383, 481, 5, -213, -252, -213, -213, -236, 493, -263,
	-258, -179, -180, -469, -111, -178, 37, -287, -288, 212,
	-488, 245, -245, 245, -558, 525, 556, 560, 538, 538,
	-279, -190, -72, -73, 482, -425, -298, 37, 5, 555,
	-225, 329, 555, -239, -220, 90, -567, -466, -217, -334,
	315, -307, 91, -362, -390, -175, 555, 555, -284, 79,
	92, 123, 204, 182, 221, 451, 456, 27, -284, 556,
	-305, -305, 556, 555, -175, 556, 560, 27, 555, 27,
	555, -254, -274, -318, -318, 556, -303, 58, 560, 556,
	556, -384, -394, 556, -513, -514, -244, 554, 2, -491,
	-245, 314, 509, -383, -227, 555, -383, 37, 224, 127,
	210, -286, 555, -372, 509, 384, -236, -305, 555, 555,
	555, 538, 179, 555, -436, -213, -257, 556, -541, 382,
	-115, -190, 346, 555, -285, 329, 115, 302, -188, -459,
	-459, 556, 37, -73, 9, 37, -115, -305, -254, -305,
	329, 262, -466, -218, 556, -248, -334, -470, -470, -372,
	556, 556, -470, -54, -307, -307, 556, 556, -518, 377,
	411, 198, -318, -304, 556, 560, 37, 148, 200, 556,
	-493, 276, -225, 556, 127, 210, -287, -307, -286, 200,
	-254, -537, 509, 556, -292, -291, -289, -294, -293, -289,
	-318, -459, 98, 346, -318, -236, -544, 180, -543, 5,
	10, -285, -254, -306, -412, -241, 80, 115, -286, -115,
	-115, 556, -359, 556, -254, -567, -219, -377, 556, 556,
	-373, -372, -191, 525, 556, 556, 556, 556, -519, -520,
	48, 496, 106, -383, -519, -519, -514, -516, 162, 525,
	-494, -497, -496, 329, 438, 180, 347, 556, 458, 521,
	-560, 556, 525, -298, -383, -372, 556, 560, 514, 556,
	560, 514, 556, 179, 556, -213, -177, 525, 44, 555,
	556, 560, 369, 128, 137, -287, -558, -372, 555, -373,
	555, -452, -220, 134, -175, -175, -286, -373, -377, -175,
	-521, 146, -520, 366, 175, 410, 366, 175, -521, -521,
	-245, 53, -496, 329, -497, 329, 503, 128, -377, 53,
	-493, -286, -291, 212, -293, 179, 346, 417, -543, 29,
	-307, -412, 411, 411, 2, -190, -285, -373, -305, -286,
	-305, 315, 503, -287, -286, 106, 196, 476, 302, 32,
	538, -495, 302, 399, 62, 432, -495, 538, -494, 555,
	555, 333, 556, 2, -285, -286, 556, -287, 556, 432,
	-191, -287, 410, 337, -520, -383, 22, 319, 122, -383,
	-560, -318, -318, -174, 555, -214, 62, 399, -287, -372,
	-191, -373, -326, -377, -191, 556, 556, -174, -191, -373,
	-377, -286, -377, -377, -287, 481, 556, -377, -286, -287,
	555, -287, -191, -318, -191, -377, 556, -377, -287,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1199,
	1201, 1203, 1205, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 880, 882,
	0, 559, 561, 0, 885, 887, 0, 0, 581, 582,
	0, 1290, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1217, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1348, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1360, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1321, 1323,
	1325, 1327, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 2010, 2027,
	2028, 2029, 2032, 2033, 2034, 2035, 2036, 2037, 2452, 2533,
	2534, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 468, 469, 1042, 0, 533, 531,
	2002, 534, 2268, 536, 538, 406, 407, 408, 409, 410,
	411, 0, 552, 544, 551, 553, 555, 556, 557, 558,
	528, 526, 0, 552, 2062, 550, 1197, 1198, 1182, 1183,
	2306, 1224, 0, 193, 571, -2, -2, -2, 2417, -2,
	603, -2, 610, 2421, 2308, 615, 0, 617, -2, 620,
	1200, 1202, 1204, 708, 709, 2013, 0, 0, 0, 0,
	34, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 1092, 1093, 0, 201, 203, -2,
	-2, -2, -2, 0, 0, 2346, 2111, 1970, 2029, 1973,
	1968, 282, 284, 286, 287, 0, 0, 0, 0, 0,
	0, 312, 315, 317, -2, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 937, 929, 930, 1148, 0,
	0, 0, -2, 414, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 343, 471, 472, 0, 1349, 1349, 0,
	0, 0, 0, 256, 247, 881, 883, 884, 0, 0,
	0, 0, 560, 562, 0, 0, 229, 886, 888, 889,
	0, 0, 0, 0, 0, 258, 0, 0, 576, 578,
	580, 645, 647, 649, 651, 653, 655, 657, 659, 662,
	664, 666, 668, 670, 672, 674, 676, 679, 681, 683,
	685, 687, 689, 691, 693, 695, 697, 699, 701, 703,
	705, 715, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 799, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 718, 720, 721, 722, 0, 779, 797,
	798, 807, 707, 0, 1082, 1350, 1226, 1207, 1221, 1226,
	1209, 1210, 1211, 1212, 1213, 1218, 1220, 1214, 1215, 1216,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 365,
	367, 369, 371, 373, 376, 378, 380, -2, 1319, 1320,
	420, 422, 424, 426, 428, 430, 432, 563, 0, 565,
	0, 719, -2, 0, 1354, 1354, 1354, 0, 0, 1320,
	1318, 0, 568, 569, 624, 625, 1613, 0, 0, 0,
	0, 0, 0, 0, 1867, 1699, 0, 626, -2, 1730,
	1732, 2392, 2417, 1866, 1734, 1735, 1736, 1737, 1738, 0,
	1740, 1741, 1742, 1743, 1744, 1745, 0, 1747, 0, 1752,
	1753, 1754, 0, 2399, 1947, 2023, -2, 0, 0, 2405,
	2019, 0, 1833, 1770, -2, -2, 2046, 2025, 1545, 1546,
	1547, 1548, 1549, -2, -2, 2435, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 0, 2380, 2400,
	2401, 2406, 2408, 2402, 2389, 1795, 2123, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1572, 1581, -2, -2, -2, -2, -2, -2, -2, 2393,
	2394, 2411, 2414, 2420, 2425, 2426, 2398, 2407, 2434, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 1573, -2, -2, -2, -2,
	1337, 2279, 1340, 1042, 1338, 1322, 1324, 0, 1326, 0,
	0, 0, 1331, 1357, 1355, 0, 1398, 1335, 1336, 1416,
	1416, 1440, 0, 1421, 0, 1440, 1349, 1466, 0, 1427,
	2298, 1771, 1772, 0, 2029, 2024, -2, -2, 2432, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 535, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 1147,
	573, 574, 0, 598, 0, 602, 2388, -2, 0, 2317,
	-2, 606, 1227, 1231, 1232, 1233, 1234, 1235, 0, 0,
	0, 0, 1240, 0, 0, 612, 0, 0, 599, 600,
	618, 621, 0, 711, 712, 713, 714, 63, 0, 2400,
	1466, 65, 0, 1992, 2054, 2055, 2056, 2057, 2058, 2433,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2435, 68, 0, 2400, 72, 0, 2400, 0, -2, 79,
	0, 1998, 82, 0, 1995, 91, 0, 2400, 0, 1967,
	-2, 0, 178, 2006, 0, 908, 2008, -2, 2400, 1090,
	259, 260, 2042, 2043, 2050, 2051, 2052, 2053, 0, 0,
	0, 0, 871, 1964, 1969, 872, 1988, 873, 1974, 0,
	288, 289, 290, 291, 292, 0, 293, 2400, 295, 296,
	0, 298, 299, 2400, 301, 302, 0, 304, 0, 214,
	215, 320, 321, 0, 323, 0, 2400, 0, 0, 0,
	329, -2, 344, 0, 341, 332, 333, 335, 336, 337,
	338, 0, 384, 382, 2003, 0, 901, 2400, 0, 905,
	-2, 2009, 0, 0, 1127, -2, 2400, 1087, 0, 1133,
	1129, 0, -2, 0, 1347, 2400, 1244, 933, 934, 935,
	936, 1478, 403, 0, 1259, 0, 1261, 0, 1280, 1472,
	1416, 0, 0, 1477, 345, 346, 347, 348, 349, 2400,
	0, 0, 0, 354, 0, 356, 357, 358, 359, 360,
	361, 362, 167, 2400, 437, 464, 0, 167, 2400, 440,
	167, 2400, 443, 0, 446, 1146, 167, 2400, 449, 167,
	2400, 452, 454, 167, 2400, 458, 459, 461, 2400, 463,
	261, 1193, 1194, 1195, 1196, 0, -2, 522, 2012, -2,
	474, 0, 475, 0, -2, 0, 273, 0, 0, 890,
	891, 892, 893, 894, 897, 898, 899, 900, 1453, 232,
	230, 0, 0, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 0, 0, 583, 0, 0, 716, 717, 0,
	0, 727, 728, 729, 0, 273, 2309, 2276, 2143, 736,
	0, 739, 742, -2, 0, 0, 0, 0, 746, 0,
	751, 752, 753, 0, 755, 757, 879, 759, 0, 0,
	761, 0, 765, 0, 768, 0, 770, 0, 772, -2,
	-2, -2, -2, 783, -2, 0, 786, 788, 0, 790,
	-2, 0, 799, 795, 796, 0, 0, 0, 0, 815,
	816, 0, 825, 0, 828, 829, 830, 0, 832, 833,
	0, 835, 836, 837, 838, 0, 840, 841, -2, -2,
	845, 847, 0, 854, 0, 858, 0, 862, 0, 723,
	724, 167, 1470, 1206, -2, 1208, 0, -2, 0, 564,
	0, 567, 1377, 1305, 1302, 0, 1374, 1375, 1306, 0,
	0, 0, 1313, 0, 1352, 1353, 0, 0, 0, 1292,
	1293, 0, 0, 0, 0, 1872, 1873, 1874, 1875, 1876,
	1877, 1880, 1881, 1878, 1879, 1882, 1883, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 1886, 1887, 0, 0, 1889,
	0, 1891, 0, 0, 0, 0, 0, 0, 1678, 1680,
	1955, 0, 0, 1888, 1618, 1619, 1620, 1621, 1622, 1657,
	1658, 0, 0, 1731, 1952, 1951, 1733, 0, 1903, 0,
	1746, -2, 0, 1867, 1898, 0, 0, 1755, 1756, 1757,
	0, 0, 1903, 0, 0, 1946, 1767, 1768, 1610, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	1558, 0, 1560, 0, 1561, 1562, 1569, 1582, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 0,
	1927, -2, 0, 0, 0, 0, 1574, 0, 1339, 0,
	0, 1402, 1956, 1960, 1961, 1402, 1402, 0, 0, 1904,
	1463, 1463, 0, 0, 1459, 1459, 1459, 1457, 1440, 0,
	1440, 1450, 0, 1440, 1440, 0, -2, 1421, 0, 0,
	1450, 0, 1434, 510, 512, 514, 516, 517, 518, 520,
	1467, 1468, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 2356, 2308, 540,
	554, 1349, 0, 1906, 1493, 1497, 0, 1499, 1500, 1501,
	1502, 1503, 0, 0, 1494, -2, 1570, 1572, 1593, 2047,
	2048, 2049, 1553, 1554, 1555, 1556, 1557, 1565, 1552, 1552,
	1552, 1563, 1592, 1584, 1592, 1588, 1538, 1539, 1540, 1575,
	1576, 1577, 1578, 0, 2356, 2308, 546, 0, 0, 0,
	0, 0, -2, 608, 613, 614, 0, 1229, 0, 1236,
	635, 636, 637, 1238, 1239, 0, 1241, 611, 638, 639,
	640, 641, 642, 643, 0, 1976, 1977, 1978, 1979, 1982,
	1983, 0, 0, 609, 628, 616, 0, 622, 92, 1179,
	0, 131, 0, 1179, 1179, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 116, 127, 104, 105, 0,
	0, 0, 0, 0, 73, 1064, 0, 1067, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 0, 0,
	115, 0, 0, 110, 94, 0, 0, 0, 117, 129,
	0, 158, 160, 0, 0, 0, 0, 0, 0, 177,
	185, 0, 0, 0, 0, 1088, 0, 1346, 0, 0,
	2400, 0, 1453, 2187, -2, -2, 1453, 870, 0, 0,
	2030, 1972, 0, 0, 0, 0, 0, 0, 0, 322,
	324, 0, 326, 327, 328, 0, 1126, 0, 334, 374,
	1013, 2400, 0, 0, 401, 396, 0, 398, 0, 0,
	1063, 2400, 1061, 2007, 0, 1085, 0, 1042, 2400, 2005,
	0, 0, 1134, 2039, 1143, 1147, 1246, 0, 405, 0,
	1262, 1264, 0, 0, 1473, 0, 1475, 1416, 0, 351,
	352, 353, 0, 433, 0, 165, 166, 0, 167, 2400,
	438, 0, 441, 0, 167, 2400, 1962, 447, 0, 450,
	0, 0, 456, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 236,
	0, 1452, 0, 1453, 230, 273, 273, 1453, 585, 1453,
	587, 0, 0, 730, 731, 0, 273, 273, 273, 737,
	738, 740, 741, -2, -2, -2, 855, 743, 744, 822,
	0, 0, 0, 821, 758, 0, 864, 2294, 2308, 2356,
	877, 822, 2111, 822, 2111, 822, 2111, 769, 771, 774,
	810, 818, 782, 787, 0, 0, 792, 800, -2, 0,
	802, 0, 804, 0, 806, 822, 823, 826, 831, 834,
	839, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	1219, 1377, 1305, 566, 1296, 1376, 1297, 1304, 1307, 0,
	0, 1309, 0, 1311, 0, 1372, 1373, 1380, 1381, 0,
	1391, 1392, 1384, 0, -2, 0, 0, 1387, 1388, 1315,
	0, 1332, 1333, 1334, 1361, 1364, 1157, 0, 2533, 1614,
	1488, 1615, 1616, 1991, 0, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, -2, -2, -2, -2, -2,
	-2, -2, -2, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, -2, -2, -2, 1655, 1656, -2,
	1890, 1892, 0, 1955, 0, -2, 0, -2, -2, -2,
	-2, 1675, 0, 1677, 1682, 1684, 1686, 0, 0, 0,
	0, 1954, 1696, 1938, 1939, 0, 0, 1869, 1870, 1871,
	1681, 0, 1700, 1953, 1950, 0, 0, 1902, 1360, 1759,
	0, 0, 0, 0, 1766, 1751, 1900, 0, 1899, 0,
	0, 0, 1910, 0, 1945, 1941, 0, 1989, 1609, 1596,
	1597, 1598, 1599, 1600, 1601, 1611, 0, 1986, 2016, 2022,
	1843, 0, 0, 0, 1796, 1797, 1798, 1799, 1800, 0,
	1802, 1803, 0, 1805, 1806, 0, 1808, 1809, 0, 1811,
	1812, 1813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 1510, 0, 0, 0, 1514, 0, 0,
	0, 1518, 0, 0, 0, 1522, 0, 0, 0, 1526,
	0, 0, 0, 1530, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 1815, 0, 1913, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1817, 0, 1819, 1904, 1924,
	0, 0, 1701, 0, 0, 0, 1867, 0, 1822, 1904,
	1932, 0, 0, 0, 0, 0, 1904, 0, 1937, 0,
	1829, 0, 1831, 1341, 0, 0, 1483, 0, 0, 0,
	1959, 1483, 1483, 0, 1397, 0, 0, 1460, 1461, 1462,
	0, 0, 1463, 0, 1454, 1458, 1455, 1456, 1450, 1413,
	0, 0, 1993, 1450, 1419, 1449, 0, 1042, 1439, 1450,
	1450, 0, -2, 1423, 1440, 0, 0, 511, 513, 515,
	519, 521, 0, 0, 1360, -2, 0, -2, 1041, 0,
	0, 0, 0, 530, 532, 0, 0, 453, 0, 0,
	524, 0, 527, 0, 1484, 1487, 0, 0, 1498, 1504,
	1505, 0, -2, 0, 0, 1594, 0, 0, 0, 0,
	0, 196, 0, 601, 0, 1228, 1237, 0, 632, 0,
	634, 0, 1980, 1984, 1981, 1985, 0, 623, 0, 0,
	0, 0, 1178, 0, 135, 2400, 0, 169, 0, 0,
	1006, 1999, 0, 0, 0, 0, 2130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 1066, 1068, 1075, 1077, 0, 1071, 1987, 0, 0,
	1072, 0, 1074, 1076, 1078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 107, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 1120, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 0, 0, -2,
	0, 0, 0, 0, 206, 0, 264, 1965, 1975, 0,
	895, 896, 294, 297, 300, 303, 202, 0, 330, 0,
	0, 939, 914, 0, 0, 383, 273, 0, 0, 397,
	2039, 903, 182, 183, 184, 1059, 1062, 0, 1042, 2400,
	1099, 0, 0, 0, 0, 0, 0, 1132, 0, 2400,
	1994, 2038, 2039, 1248, 1256, 0, 1483, 0, 1278, 1265,
	0, 0, 0, 1278, 1282, 1283, 1285, 1286, 0, 0,
	1474, 1480, 0, 355, 465, 167, 435, 0, 167, 167,
	444, 0, 0, 167, 455, 167, 460, 167, 262, 462,
	473, 523, 1349, 1349, 273, 271, 2245, 269, 266, 268,
	0, 0, 0, 940, 942, 943, 944, 945, 0, 2039,
	0, 2176, 2039, 0, 1268, 1270, 0, 226, 0, 233,
	231, 236, 0, 0, 395, 584, 589, 725, 0, 273,
	733, 734, 735, 776, 812, 820, 745, 747, 748, 749,
	0, 878, 874, 875, 876, 760, 822, 763, 822, 766,
	822, 785, 789, 794, 801, 0, 0, 0, 814, 0,
	0, 0, 0, 0, 0, 0, 859, 860, 861, 863,
	1471, 1300, 1301, 1303, 0, 1312, 0, 0, 1386, -2,
	-2, 1385, 1389, 1390, -2, -2, -2, -2, 1308, 0,
	1317, 1314, 0, 1371, 1155, 1156, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1697, 0, -2, 1676, 1679,
	1683, 1685, 1687, 0, 0, 0, 0, 0, 0, 1893,
	0, 1895, 1698, 1948, 1951, 1865, 0, 0, 1359, 1360,
	1360, 0, 1765, 0, 1901, 0, 1908, 1909, 0, 1758,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 1801, 1804, 1807, 1810,
	0, 0, 0, 0, 1790, 0, 0, 0, 1794, 1564,
	1550, 0, 1592, 1590, 1591, 1585, 1592, 1589, 1542, 0,
	1507, 1508, 1509, 1511, 1512, 1513, 1515, 1516, 1517, 1519,
	1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1532,
	1533, 1535, 1536, 1537, 1541, 0, 1814, 0, 1816, 1818,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1821,
	1930, 1931, 0, 0, 0, 0, 0, 0, 1827, 0,
	1936, 1828, 1830, 1349, 0, 1342, 0, 1399, 1394, 1482,
	0, 1957, 1453, 1401, 1403, 1958, 1996, 1394, 1394, 0,
	1905, 0, 0, 1444, 0, 0, 0, 1446, 1417, 0,
	0, 1411, 0, 1407, 1408, 1409, 1410, 1418, 1042, 1448,
	1420, 1424, 2016, 0, 1450, 0, 1435, 0, 1437, 1469,
	0, 1429, 1432, 0, 0, 2031, 274, 0, 305, 309,
	310, 306, 307, 308, 539, 0, 0, 0, 0, 1907,
	0, 1489, 0, 1495, 0, 0, 0, 0, 545, 0,
	0, 0, 192, 0, 597, -2, 630, 631, 633, 0,
	629, 132, 1179, 0, 0, 1160, 1162, 0, 137, 2400,
	146, 0, 980, 0, 1997, 0, 0, 0, 0, 0,
	1181, 0, 0, 2400, 167, 2400, 167, 149, 152, 0,
	157, 154, 155, 0, 0, 971, 93, 1179, 0, 96,
	100, 108, 0, 0, 0, 114, 0, 0, 0, 1164,
	1170, 0, 0, 1069, 1070, 1073, 1079, 74, 0, 0,
	1168, 1174, 80, 0, 1159, 159, 98, 102, 109, 0,
	1176, 95, 0, 181, 0, 0, 0, 173, 0, 174,
	175, 186, 0, 167, 2400, 0, 906, 907, 1121, 1083,
	1084, 0, 1089, 0, 0, 0, 1453, 198, 0, 1453,
	206, 0, 1971, 0, 0, 0, 0, 0, 0, 938,
	1024, 0, 911, 0, 0, 0, 389, 385, 0, 394,
	400, 399, 902, 0, 0, 0, 0, -2, 0, 0,
	1136, 1130, 1131, 0, 0, 0, 2400, 1250, 1256, 0,
	1255, 1347, 1360, 404, 1257, 1278, 0, 0, 0, 1267,
	1263, 1260, 1483, 0, 0, 0, 0, 0, 1476, 1479,
	350, 434, 167, 439, 442, 1963, 167, 448, 451, 457,
	476, 477, 248, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 949, 0, 2039, 2039, 0, 2001, 0, 0,
	0, 0, 234, 0, 237, 0, 0, 0, 242, 243,
	244, 245, 246, 227, 1453, 0, 586, 0, 0, 732,
	0, 762, 764, 767, 803, 805, 822, 848, 849, 966,
	0, 966, 0, 0, 1310, 0, 1383, 1316, 1365, 1366,
	0, 1157, 0, 1617, 1660, 0, 0, -2, 0, 0,
	1664, 0, 0, 0, -2, 0, 0, 0, 1894, 1896,
	0, 1950, 1760, 0, 0, 0, 1764, 1748, 1749, 0,
	1868, 1911, 1940, 1944, 0, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 0, 1990, 2017, 2021, 1841, 1842, 1846, 2004,
	0, 0, 0, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 1587, 0, 0, 1912, 1923, 1925, 1702,
	1703, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, -2, -2, -2, 1720, 1721, 1722, -2, -2, -2,
	0, 0, 0, 1926, 1928, 1929, 1933, 1934, 0, 1824,
	1825, 1826, 1935, 0, 1349, 1343, 1396, 0, 1481, 1400,
	0, 1396, 1396, 1356, 1442, 0, 0, 1465, 0, 1414,
	0, 1415, 0, 1447, 0, 1422, 1425, 1426, 1436, 0,
	1428, 0, 1431, 0, 1760, -2, 275, 277, 0, 280,
	542, 543, 541, 525, 0, 0, 1491, 0, 0, 1567,
	1571, 1595, 548, 549, 547, 194, 0, 1451, 0, 0,
	0, 0, 168, 978, 1005, 0, 0, 0, 1150, 1157,
	0, 0, 1011, 139, 0, 0, 0, 147, 0, 0,
	144, 0, 151, 156, 0, 0, 0, 0, 0, 0,
	111, 112, 113, 0, 118, 0, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	1154, 0, 0, 188, 0, 0, 0, 1124, 1125, 1165,
	1171, 0, 0, 206, 204, 0, 207, 0, 210, 211,
	0, 206, 200, 0, 0, 325, 1042, 331, 960, 1012,
	0, 1014, 0, 912, 0, 0, 1013, 381, 0, 388,
	0, 0, 1063, 0, 0, 1086, 1097, 1042, 0, 1135,
	1137, 1145, 0, 0, 0, 1252, 1256, 0, 1245, 1246,
	1379, 1258, 1276, -2, 0, 0, 1360, 1284, 1281, 1287,
	1288, 0, 436, 445, 270, 0, 265, 267, 0, 251,
	0, 0, 941, 946, 0, 0, 0, 0, 0, 1269,
	1271, 0, 0, 0, 0, 0, 0, 236, 257, 0,
	726, 750, 813, 850, 965, 0, 0, 852, 0, 0,
	1382, 1369, 1370, 1367, 1157, 1662, 1666, 0, 0, 0,
	1668, -2, 0, 1690, -2, -2, 1897, 1949, 1739, 1360,
	1761, 1763, 1750, 1943, 1612, 0, 1848, 1845, 0, 1832,
	0, 1785, 1786, 0, 0, 1789, 1791, 1792, 1793, 1551,
	1544, 1543, 1922, 0, 0, 0, 0, 1823, 1344, 0,
	1837, 0, 0, 1404, 1837, 1837, 1443, 0, 1445, 1412,
	1405, 0, 2017, 1438, 1430, 0, 0, 278, 0, 1485,
	1490, 0, 1496, 1566, 195, 133, 134, 136, 0, 979,
	0, 982, 0, 0, 0, 0, 989, 990, 0, 0,
	0, 0, 0, 999, 0, 1028, 1038, 0, 1371, 0,
	0, 0, 141, 162, 0, 0, 1180, 0, 0, 167,
	167, 0, 0, 1161, 1163, 0, 0, 0, 0, 121,
	0, 0, 1166, 1172, 1169, 1175, 0, 0, 0, 1177,
	179, 180, 0, 167, 0, 172, 167, 167, 1154, 0,
	0, 0, 197, 0, 0, 0, 0, 199, 263, 206,
	0, 968, 0, 1024, 1016, 1017, 1018, 0, 1023, 1025,
	0, 0, 926, 913, 0, 922, 0, 0, 939, 914,
	0, 386, 904, 1060, 1094, 1042, 0, 1128, 0, 0,
	0, 0, 0, 0, 1254, 1256, 0, 1247, 1248, 1278,
	1378, 0, 0, 0, 1266, 1379, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 238,
	0, 239, 240, 241, 228, 588, 590, 0, 0, 596,
	964, 0, 0, 0, 0, 1368, 1670, -2, -2, 1691,
	0, 2018, 2020, 1360, 0, 1834, 1362, 0, 0, -2,
	0, 0, 0, 1345, 1328, 0, 1395, 1393, 1329, 1330,
	1464, 0, 1433, 279, 0, 1492, 138, 0, 983, 984,
	2000, 986, 0, 988, 991, 0, 994, 2041, 0, 998,
	0, 1007, 1029, 0, 960, 0, 1034, 1035, 1036, 1151,
	1152, 1040, 0, 140, 142, 161, 1154, 0, 143, 150,
	0, 0, 97, 0, 0, 2102, 124, 122, 120, 1158,
	99, 0, 181, 187, 1153, 176, 189, 167, 0, 1167,
	1173, 208, 0, 209, 212, 0, 0, 914, 967, 0,
	1015, 0, 1026, 1027, 916, 0, 915, 0, 0, 0,
	0, 0, 387, 390, 0, 393, 0, 0, 1138, 0,
	1144, 0, 0, 0, 1242, 0, 0, 1249, 1250, 402,
	1272, 0, 0, 1278, 1289, 250, 0, 0, 947, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 948, 1040,
	0, 0, 1004, 0, 255, 235, 0, 592, 0, 594,
	0, 851, 853, 0, 0, 1762, 1852, 0, 0, 1787,
	1788, -2, 0, 1728, 1836, 1838, 0, 1406, 1486, 981,
	985, 0, 0, 0, 1046, 0, 0, 1000, 0, 1032,
	1033, 968, 0, 960, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 171, 190, 1154, 205, 222, 0,
	1095, 916, 0, 0, 924, 0, 927, 0, 923, 920,
	921, 960, 0, 391, 392, 0, 1098, 0, 1145, 0,
	0, 1256, 1251, 1252, 1483, 1275, 1279, 0, 0, 1038,
	1040, 914, 0, 591, 0, 0, 856, 857, 0, 0,
	0, 0, 1847, 1363, 1729, 0, 0, 0, 0, 993,
	1051, 0, 0, 0, 1030, 1031, 1028, 0, 1009, 0,
	1042, 145, 0, 1040, 0, 972, 0, 0, 975, 0,
	0, 125, 2102, 123, 0, 167, 225, 0, 219, 217,
	218, 909, 0, 0, 1020, 1022, 0, 928, 968, 926,
	1096, 1040, 0, 1038, 0, 0, 1254, 0, 273, 273,
	960, 1038, 1483, 0, 273, 593, 595, 1844, 1864, 1853,
	-2, 2359, 2108, 0, 1864, 1864, 1839, 1840, 0, 0,
	995, 1047, 1048, 0, 1043, 1044, 1045, 2040, 996, 997,
	1483, 1037, 0, 1046, 163, 960, 969, 0, 0, 970,
	0, 0, 128, 0, 130, 191, 213, 0, 0, 0,
	1019, 0, 0, 0, 0, 914, 916, 1038, 0, 960,
	0, 1253, 1243, 0, 252, 253, 968, 960, 1003, 254,
	1849, 0, 0, 1855, 1856, 1857, 1858, 1859, 1850, 1851,
	987, 0, 1049, 0, 1050, 0, 0, 0, 1008, 0,
	1051, 148, 973, 0, 976, 0, 126, 0, 220, 221,
	0, 1021, 917, 0, 919, 916, 925, 960, 0, 968,
	0, 1273, 0, 914, 968, 0, 1861, 1862, 0, 0,
	0, 1052, 0, 1055, 1056, 0, 1053, 0, 1028, 0,
	0, 0, 963, 918, 910, 968, 1040, 914, 1038, 0,
	1483, 914, 1860, 1863, 1854, 992, 1054, 1057, 1058, 1039,
	1010, 0, 0, 223, 0, 959, 961, 962, 914, 1038,
	1483, 960, 1483, 1001, 1483, 968, 0, 0, 1483, 960,
	1141, 968, 1274, 1002, 974, 0, 224, 1139, 968, 914,
	0, 914, 1483, 0, 1483, 1142, 968, 1140, 977,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 544, 3, 550, 545, 3,
	555, 556, 548, 546, 560, 547, 557, 549, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 563, 3,
	536, 538, 537, 541, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 553, 3, 554, 551, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 561, 543, 562, 539,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 540, 57879, 542,
	57880, 552, 57881, 558, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1232
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1257
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1360
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1373
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1390
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1394
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1415
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1490
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1558
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1569
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1576
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1603
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1642
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1671
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1682
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1714
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1719
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2049
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2056
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2107
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2451
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2584
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2600
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2717
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2766
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2951
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3091
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3154
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3487
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3564
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3741
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4034
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4058
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4295
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4484
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4904
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4980
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5120
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "RESUME")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5404
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5419
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{

			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = nil
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5453
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5464
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5469
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5474
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 924:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5501
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5515
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5530
		{
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5604
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5628
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.str = ""
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 977:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5852
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5863
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5869
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5962
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5973
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6000
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6080
		{
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6081
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6241
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6250
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6274
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = true
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{

			sqlVAL.union.val = true
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = false
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6377
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6391
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6403
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6415
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6425
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6435
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = nil
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6546
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6564
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6566
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6568
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6572
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6610
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6628
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6647
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6664
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6681
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6685
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = false
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = false
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = true
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = false
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6739
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.str = ""
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6792
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6798
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6868
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6874
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6886
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6892
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6906
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6912
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6929
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6930
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6934
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7066
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7100
		{
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7121
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7164
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.str = ""
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7293
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7416
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7443
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7485
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7517
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7704
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7825
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7879
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = nil
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7893
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = false
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = true
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7922
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7923
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7985
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7990
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8019
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8108
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8112
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8204
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8295
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8305
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8351
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8381
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8414
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = nil
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = true
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = false
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.str = tree.AstFull
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.str = tree.AstRight
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.str = tree.AstInner
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8534
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.str = tree.AstHash
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.str = ""
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8596
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = true
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = false
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = true
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = false
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8703
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8711
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8740
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8753
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8760
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8828
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8832
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8846
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8852
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8854
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = types.Geography
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8871
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8879
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8905
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8913
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = nil
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = types.Int2
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = types.Int
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = types.Float4
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = types.Float
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = types.Bool
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = types.Float
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9005
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9011
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9033
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = types.String
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = true
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = false
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = types.Date
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9090
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9104
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9113
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9121
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9138
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = true
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = false
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = false
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = types.Interval
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = nil
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9291
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9669
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9890
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9925
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9940
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9970
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9981
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9982
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10072
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10229
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10268
		{
			return unimplemented(sqllex, "treat")
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.str = ""
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10443
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10540
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.Any
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.Some
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.All
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = tree.Div
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = tree.LT
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.GT
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.LE
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.GE
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = tree.NE
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = tree.Like
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10901
		{
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10902
		{
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11091
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11100
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11120
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11320
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.str = ""
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
