// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12007

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1360,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	232, 202,
	484, 202,
	-2, 0,
	-1, 80,
	221, 1155,
	234, 1155,
	250, 344,
	374, 344,
	383, 937,
	415, 344,
	427, 937,
	469, 937,
	495, 344,
	521, 937,
	-2, 0,
	-1, 86,
	250, 348,
	-2, 0,
	-1, 87,
	129, 1360,
	227, 1360,
	506, 1360,
	507, 1360,
	-2, 0,
	-1, 103,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1302,
	-1, 139,
	154, 814,
	249, 814,
	377, 783,
	432, 783,
	487, 814,
	489, 783,
	-2, 0,
	-1, 141,
	4, 1362,
	21, 1362,
	22, 1362,
	23, 1362,
	24, 1362,
	25, 1362,
	26, 1362,
	27, 1362,
	29, 1362,
	30, 1362,
	36, 1362,
	41, 1362,
	42, 1362,
	44, 1362,
	45, 1362,
	46, 1362,
	47, 1362,
	48, 1362,
	49, 1362,
	50, 1362,
	52, 1362,
	53, 1362,
	54, 1362,
	55, 1362,
	57, 1362,
	58, 1362,
	59, 1362,
	60, 1362,
	61, 1362,
	62, 1362,
	63, 1362,
	67, 1362,
	68, 1362,
	69, 1362,
	70, 1362,
	72, 1362,
	73, 1362,
	74, 1362,
	78, 1362,
	79, 1362,
	80, 1362,
	81, 1362,
	82, 1362,
	83, 1362,
	84, 1362,
	87, 1362,
	88, 1362,
	89, 1362,
	90, 1362,
	91, 1362,
	93, 1362,
	95, 1362,
	96, 1362,
	97, 1362,
	98, 1362,
	99, 1362,
	100, 1362,
	102, 1362,
	103, 1362,
	104, 1362,
	106, 1362,
	107, 1362,
	115, 1362,
	116, 1362,
	117, 1362,
	118, 1362,
	120, 1362,
	121, 1362,
	122, 1362,
	124, 1362,
	125, 1362,
	126, 1362,
	128, 1362,
	129, 1362,
	131, 1362,
	132, 1362,
	133, 1362,
	136, 1362,
	137, 1362,
	138, 1362,
	140, 1362,
	141, 1362,
	143, 1362,
	144, 1362,
	145, 1362,
	147, 1362,
	148, 1362,
	149, 1362,
	150, 1362,
	151, 1362,
	152, 1362,
	153, 1362,
	154, 1362,
	155, 1362,
	156, 1362,
	157, 1362,
	158, 1362,
	159, 1362,
	160, 1362,
	161, 1362,
	163, 1362,
	169, 1362,
	170, 1362,
	171, 1362,
	172, 1362,
	176, 1362,
	178, 1362,
	182, 1362,
	183, 1362,
	184, 1362,
	185, 1362,
	186, 1362,
	187, 1362,
	188, 1362,
	189, 1362,
	190, 1362,
	191, 1362,
	192, 1362,
	193, 1362,
	195, 1362,
	196, 1362,
	198, 1362,
	199, 1362,
	201, 1362,
	202, 1362,
	203, 1362,
	204, 1362,
	205, 1362,
	206, 1362,
	207, 1362,
	208, 1362,
	209, 1362,
	211, 1362,
	212, 1362,
	214, 1362,
	215, 1362,
	216, 1362,
	217, 1362,
	221, 1362,
	222, 1362,
	223, 1362,
	224, 1362,
	227, 1362,
	228, 1362,
	229, 1362,
	231, 1362,
	233, 1362,
	234, 1362,
	236, 1362,
	238, 1362,
	239, 1362,
	240, 1362,
	242, 1362,
	246, 1362,
	247, 1362,
	248, 1362,
	249, 1362,
	250, 1362,
	251, 1362,
	253, 1362,
	254, 1362,
	255, 1362,
	257, 1362,
	258, 1362,
	260, 1362,
	261, 1362,
	264, 1362,
	268, 1362,
	269, 1362,
	272, 1362,
	273, 1362,
	274, 1362,
	275, 1362,
	277, 1362,
	278, 1362,
	279, 1362,
	280, 1362,
	281, 1362,
	282, 1362,
	283, 1362,
	284, 1362,
	285, 1362,
	286, 1362,
	287, 1362,
	288, 1362,
	289, 1362,
	290, 1362,
	291, 1362,
	292, 1362,
	293, 1362,
	294, 1362,
	295, 1362,
	296, 1362,
	297, 1362,
	298, 1362,
	300, 1362,
	302, 1362,
	303, 1362,
	304, 1362,
	305, 1362,
	306, 1362,
	307, 1362,
	308, 1362,
	309, 1362,
	310, 1362,
	311, 1362,
	312, 1362,
	313, 1362,
	315, 1362,
	317, 1362,
	319, 1362,
	320, 1362,
	322, 1362,
	323, 1362,
	324, 1362,
	325, 1362,
	326, 1362,
	329, 1362,
	332, 1362,
	333, 1362,
	334, 1362,
	335, 1362,
	338, 1362,
	339, 1362,
	340, 1362,
	342, 1362,
	344, 1362,
	345, 1362,
	346, 1362,
	347, 1362,
	348, 1362,
	349, 1362,
	350, 1362,
	351, 1362,
	352, 1362,
	353, 1362,
	354, 1362,
	355, 1362,
	357, 1362,
	358, 1362,
	359, 1362,
	360, 1362,
	361, 1362,
	362, 1362,
	363, 1362,
	364, 1362,
	365, 1362,
	366, 1362,
	367, 1362,
	368, 1362,
	369, 1362,
	370, 1362,
	371, 1362,
	373, 1362,
	375, 1362,
	376, 1362,
	377, 1362,
	378, 1362,
	379, 1362,
	380, 1362,
	381, 1362,
	382, 1362,
	383, 1362,
	384, 1362,
	385, 1362,
	387, 1362,
	393, 1362,
	395, 1362,
	396, 1362,
	397, 1362,
	398, 1362,
	399, 1362,
	400, 1362,
	401, 1362,
	402, 1362,
	404, 1362,
	405, 1362,
	406, 1362,
	408, 1362,
	409, 1362,
	410, 1362,
	411, 1362,
	412, 1362,
	413, 1362,
	415, 1362,
	416, 1362,
	417, 1362,
	418, 1362,
	419, 1362,
	420, 1362,
	421, 1362,
	422, 1362,
	423, 1362,
	424, 1362,
	425, 1362,
	427, 1362,
	428, 1362,
	429, 1362,
	430, 1362,
	431, 1362,
	432, 1362,
	434, 1362,
	435, 1362,
	436, 1362,
	437, 1362,
	438, 1362,
	439, 1362,
	441, 1362,
	442, 1362,
	443, 1362,
	444, 1362,
	445, 1362,
	446, 1362,
	447, 1362,
	449, 1362,
	451, 1362,
	452, 1362,
	453, 1362,
	454, 1362,
	455, 1362,
	456, 1362,
	457, 1362,
	458, 1362,
	459, 1362,
	460, 1362,
	461, 1362,
	462, 1362,
	463, 1362,
	465, 1362,
	466, 1362,
	468, 1362,
	470, 1362,
	471, 1362,
	472, 1362,
	473, 1362,
	474, 1362,
	475, 1362,
	476, 1362,
	477, 1362,
	479, 1362,
	480, 1362,
	481, 1362,
	482, 1362,
	483, 1362,
	485, 1362,
	487, 1362,
	488, 1362,
	489, 1362,
	490, 1362,
	491, 1362,
	492, 1362,
	494, 1362,
	495, 1362,
	496, 1362,
	497, 1362,
	499, 1362,
	500, 1362,
	503, 1362,
	504, 1362,
	505, 1362,
	506, 1362,
	507, 1362,
	508, 1362,
	509, 1362,
	511, 1362,
	514, 1362,
	515, 1362,
	516, 1362,
	517, 1362,
	518, 1362,
	519, 1362,
	521, 1362,
	522, 1362,
	523, 1362,
	524, 1362,
	529, 1362,
	530, 1362,
	531, 1362,
	532, 1362,
	533, 1362,
	534, 1362,
	-2, 0,
	-1, 142,
	1, 1233,
	127, 1233,
	238, 1233,
	316, 1233,
	373, 1233,
	381, 1233,
	538, 1233,
	562, 1233,
	-2, 0,
	-1, 144,
	1, 1233,
	562, 1233,
	-2, 0,
	-1, 145,
	1, 1233,
	562, 1233,
	-2, 0,
	-1, 146,
	1, 1233,
	484, 1233,
	562, 1233,
	-2, 0,
	-1, 175,
	146, 1330,
	164, 1330,
	177, 1330,
	230, 1330,
	263, 1330,
	327, 1330,
	337, 1330,
	501, 1330,
	-2, 1305,
	-1, 213,
	4, 1369,
	5, 1369,
	6, 1369,
	7, 1369,
	8, 1369,
	9, 1369,
	10, 1369,
	21, 1369,
	22, 1369,
	23, 1369,
	24, 1369,
	25, 1369,
	26, 1369,
	27, 1369,
	29, 1369,
	30, 1369,
	36, 1369,
	37, 1369,
	41, 1369,
	42, 1369,
	43, 1369,
	44, 1369,
	45, 1369,
	46, 1369,
	47, 1369,
	48, 1369,
	49, 1369,
	50, 1369,
	52, 1369,
	53, 1369,
	54, 1369,
	55, 1369,
	57, 1369,
	58, 1369,
	59, 1369,
	60, 1369,
	61, 1369,
	62, 1369,
	63, 1369,
	64, 1369,
	65, 1369,
	66, 1369,
	67, 1369,
	68, 1369,
	69, 1369,
	70, 1369,
	72, 1369,
	73, 1369,
	74, 1369,
	76, 1369,
	78, 1369,
	79, 1369,
	80, 1369,
	81, 1369,
	82, 1369,
	83, 1369,
	84, 1369,
	87, 1369,
	88, 1369,
	89, 1369,
	90, 1369,
	91, 1369,
	93, 1369,
	95, 1369,
	96, 1369,
	97, 1369,
	98, 1369,
	99, 1369,
	100, 1369,
	102, 1369,
	103, 1369,
	104, 1369,
	105, 1369,
	106, 1369,
	107, 1369,
	108, 1369,
	109, 1369,
	110, 1369,
	111, 1369,
	112, 1369,
	113, 1369,
	114, 1369,
	115, 1369,
	116, 1369,
	117, 1369,
	118, 1369,
	119, 1369,
	120, 1369,
	121, 1369,
	122, 1369,
	123, 1369,
	124, 1369,
	125, 1369,
	126, 1369,
	128, 1369,
	129, 1369,
	131, 1369,
	132, 1369,
	133, 1369,
	136, 1369,
	137, 1369,
	138, 1369,
	140, 1369,
	141, 1369,
	143, 1369,
	144, 1369,
	145, 1369,
	147, 1369,
	148, 1369,
	149, 1369,
	150, 1369,
	151, 1369,
	152, 1369,
	153, 1369,
	154, 1369,
	155, 1369,
	156, 1369,
	157, 1369,
	158, 1369,
	159, 1369,
	160, 1369,
	161, 1369,
	162, 1369,
	163, 1369,
	169, 1369,
	170, 1369,
	171, 1369,
	172, 1369,
	176, 1369,
	178, 1369,
	181, 1369,
	182, 1369,
	183, 1369,
	184, 1369,
	185, 1369,
	186, 1369,
	187, 1369,
	188, 1369,
	189, 1369,
	190, 1369,
	191, 1369,
	192, 1369,
	193, 1369,
	195, 1369,
	196, 1369,
	198, 1369,
	199, 1369,
	201, 1369,
	202, 1369,
	203, 1369,
	204, 1369,
	205, 1369,
	206, 1369,
	207, 1369,
	208, 1369,
	209, 1369,
	210, 1369,
	211, 1369,
	212, 1369,
	214, 1369,
	215, 1369,
	216, 1369,
	217, 1369,
	221, 1369,
	222, 1369,
	223, 1369,
	224, 1369,
	226, 1369,
	227, 1369,
	228, 1369,
	229, 1369,
	231, 1369,
	233, 1369,
	234, 1369,
	235, 1369,
	236, 1369,
	237, 1369,
	238, 1369,
	239, 1369,
	240, 1369,
	241, 1369,
	242, 1369,
	246, 1369,
	247, 1369,
	248, 1369,
	249, 1369,
	250, 1369,
	251, 1369,
	253, 1369,
	254, 1369,
	255, 1369,
	257, 1369,
	258, 1369,
	259, 1369,
	260, 1369,
	261, 1369,
	262, 1369,
	264, 1369,
	268, 1369,
	269, 1369,
	270, 1369,
	271, 1369,
	272, 1369,
	273, 1369,
	274, 1369,
	275, 1369,
	277, 1369,
	278, 1369,
	279, 1369,
	280, 1369,
	281, 1369,
	282, 1369,
	283, 1369,
	284, 1369,
	285, 1369,
	286, 1369,
	287, 1369,
	288, 1369,
	289, 1369,
	290, 1369,
	291, 1369,
	292, 1369,
	293, 1369,
	294, 1369,
	295, 1369,
	296, 1369,
	297, 1369,
	298, 1369,
	300, 1369,
	301, 1369,
	302, 1369,
	303, 1369,
	304, 1369,
	305, 1369,
	306, 1369,
	307, 1369,
	308, 1369,
	309, 1369,
	310, 1369,
	311, 1369,
	312, 1369,
	313, 1369,
	314, 1369,
	315, 1369,
	316, 1369,
	317, 1369,
	318, 1369,
	319, 1369,
	320, 1369,
	321, 1369,
	322, 1369,
	323, 1369,
	324, 1369,
	325, 1369,
	326, 1369,
	329, 1369,
	333, 1369,
	334, 1369,
	335, 1369,
	338, 1369,
	339, 1369,
	340, 1369,
	341, 1369,
	342, 1369,
	343, 1369,
	344, 1369,
	345, 1369,
	346, 1369,
	347, 1369,
	348, 1369,
	349, 1369,
	350, 1369,
	351, 1369,
	352, 1369,
	353, 1369,
	354, 1369,
	355, 1369,
	357, 1369,
	358, 1369,
	359, 1369,
	360, 1369,
	361, 1369,
	362, 1369,
	363, 1369,
	364, 1369,
	365, 1369,
	366, 1369,
	367, 1369,
	368, 1369,
	369, 1369,
	370, 1369,
	371, 1369,
	373, 1369,
	375, 1369,
	376, 1369,
	377, 1369,
	378, 1369,
	379, 1369,
	380, 1369,
	381, 1369,
	382, 1369,
	383, 1369,
	384, 1369,
	385, 1369,
	387, 1369,
	393, 1369,
	395, 1369,
	396, 1369,
	397, 1369,
	398, 1369,
	399, 1369,
	400, 1369,
	401, 1369,
	402, 1369,
	404, 1369,
	405, 1369,
	406, 1369,
	407, 1369,
	408, 1369,
	409, 1369,
	410, 1369,
	411, 1369,
	412, 1369,
	413, 1369,
	415, 1369,
	416, 1369,
	417, 1369,
	418, 1369,
	419, 1369,
	420, 1369,
	421, 1369,
	422, 1369,
	423, 1369,
	424, 1369,
	425, 1369,
	427, 1369,
	428, 1369,
	429, 1369,
	430, 1369,
	431, 1369,
	432, 1369,
	433, 1369,
	434, 1369,
	435, 1369,
	436, 1369,
	437, 1369,
	438, 1369,
	439, 1369,
	440, 1369,
	441, 1369,
	442, 1369,
	443, 1369,
	444, 1369,
	445, 1369,
	446, 1369,
	447, 1369,
	449, 1369,
	451, 1369,
	452, 1369,
	453, 1369,
	454, 1369,
	455, 1369,
	456, 1369,
	457, 1369,
	458, 1369,
	459, 1369,
	460, 1369,
	461, 1369,
	462, 1369,
	463, 1369,
	465, 1369,
	466, 1369,
	467, 1369,
	468, 1369,
	470, 1369,
	471, 1369,
	472, 1369,
	473, 1369,
	474, 1369,
	475, 1369,
	476, 1369,
	477, 1369,
	479, 1369,
	480, 1369,
	481, 1369,
	482, 1369,
	483, 1369,
	485, 1369,
	487, 1369,
	488, 1369,
	489, 1369,
	490, 1369,
	491, 1369,
	492, 1369,
	493, 1369,
	494, 1369,
	495, 1369,
	496, 1369,
	497, 1369,
	499, 1369,
	500, 1369,
	502, 1369,
	503, 1369,
	504, 1369,
	505, 1369,
	506, 1369,
	507, 1369,
	508, 1369,
	509, 1369,
	510, 1369,
	511, 1369,
	514, 1369,
	515, 1369,
	516, 1369,
	517, 1369,
	518, 1369,
	519, 1369,
	521, 1369,
	522, 1369,
	523, 1369,
	524, 1369,
	529, 1369,
	530, 1369,
	531, 1369,
	532, 1369,
	533, 1369,
	534, 1369,
	535, 1369,
	543, 1369,
	550, 1369,
	551, 1369,
	552, 1369,
	559, 1369,
	563, 1369,
	-2, 0,
	-1, 669,
	180, 2115,
	484, 2115,
	542, 2115,
	561, 2115,
	-2, 0,
	-1, 670,
	180, 2213,
	484, 2213,
	542, 2213,
	561, 2213,
	-2, 0,
	-1, 671,
	180, 2102,
	484, 2102,
	542, 2102,
	561, 2102,
	-2, 0,
	-1, 673,
	180, 2336,
	484, 2336,
	542, 2336,
	561, 2336,
	-2, 0,
	-1, 675,
	180, 2371,
	484, 2371,
	542, 2371,
	561, 2371,
	-2, 0,
	-1, 682,
	180, 2239,
	484, 2239,
	542, 2239,
	561, 2239,
	-2, 624,
	-1, 714,
	561, 2052,
	564, 2052,
	-2, 872,
	-1, 715,
	561, 2054,
	564, 2054,
	-2, 873,
	-1, 716,
	561, 2053,
	564, 2053,
	-2, 874,
	-1, 717,
	564, 1986,
	-2, 875,
	-1, 740,
	177, 216,
	-2, 0,
	-1, 762,
	43, 2056,
	-2, 0,
	-1, 763,
	521, 1132,
	-2, 938,
	-1, 779,
	4, 1495,
	21, 1495,
	22, 1495,
	23, 1495,
	24, 1495,
	25, 1495,
	26, 1495,
	27, 1495,
	29, 1495,
	30, 1495,
	36, 1495,
	41, 1495,
	42, 1495,
	44, 1495,
	45, 1495,
	46, 1495,
	47, 1495,
	48, 1495,
	49, 1495,
	50, 1495,
	52, 1495,
	53, 1495,
	54, 1495,
	55, 1495,
	57, 1495,
	58, 1495,
	59, 1495,
	60, 1495,
	61, 1495,
	62, 1495,
	63, 1495,
	67, 1495,
	68, 1495,
	69, 1495,
	70, 1495,
	72, 1495,
	73, 1495,
	74, 1495,
	78, 1495,
	79, 1495,
	80, 1495,
	81, 1495,
	82, 1495,
	83, 1495,
	84, 1495,
	87, 1495,
	88, 1495,
	89, 1495,
	90, 1495,
	91, 1495,
	93, 1495,
	95, 1495,
	96, 1495,
	97, 1495,
	98, 1495,
	99, 1495,
	100, 1495,
	102, 1495,
	103, 1495,
	104, 1495,
	106, 1495,
	107, 1495,
	115, 1495,
	116, 1495,
	117, 1495,
	118, 1495,
	120, 1495,
	121, 1495,
	122, 1495,
	124, 1495,
	125, 1495,
	126, 1495,
	128, 1495,
	129, 1495,
	131, 1495,
	132, 1495,
	133, 1495,
	136, 1495,
	137, 1495,
	138, 1495,
	140, 1495,
	141, 1495,
	143, 1495,
	144, 1495,
	145, 1495,
	147, 1495,
	148, 1495,
	149, 1495,
	150, 1495,
	151, 1495,
	152, 1495,
	153, 1495,
	154, 1495,
	155, 1495,
	156, 1495,
	157, 1495,
	158, 1495,
	159, 1495,
	160, 1495,
	161, 1495,
	163, 1495,
	169, 1495,
	170, 1495,
	171, 1495,
	172, 1495,
	176, 1495,
	178, 1495,
	182, 1495,
	183, 1495,
	184, 1495,
	185, 1495,
	186, 1495,
	187, 1495,
	188, 1495,
	189, 1495,
	190, 1495,
	191, 1495,
	192, 1495,
	193, 1495,
	195, 1495,
	196, 1495,
	198, 1495,
	199, 1495,
	201, 1495,
	202, 1495,
	203, 1495,
	204, 1495,
	205, 1495,
	206, 1495,
	207, 1495,
	208, 1495,
	209, 1495,
	211, 1495,
	212, 1495,
	214, 1495,
	215, 1495,
	216, 1495,
	217, 1495,
	221, 1495,
	222, 1495,
	223, 1495,
	224, 1495,
	227, 1495,
	228, 1495,
	229, 1495,
	231, 1495,
	233, 1495,
	234, 1495,
	236, 1495,
	238, 1495,
	239, 1495,
	240, 1495,
	242, 1495,
	246, 1495,
	247, 1495,
	248, 1495,
	249, 1495,
	250, 1495,
	251, 1495,
	253, 1495,
	254, 1495,
	255, 1495,
	257, 1495,
	258, 1495,
	260, 1495,
	261, 1495,
	264, 1495,
	268, 1495,
	269, 1495,
	272, 1495,
	273, 1495,
	274, 1495,
	275, 1495,
	277, 1495,
	278, 1495,
	279, 1495,
	280, 1495,
	281, 1495,
	282, 1495,
	283, 1495,
	284, 1495,
	285, 1495,
	286, 1495,
	287, 1495,
	288, 1495,
	289, 1495,
	290, 1495,
	291, 1495,
	292, 1495,
	293, 1495,
	294, 1495,
	295, 1495,
	296, 1495,
	297, 1495,
	298, 1495,
	300, 1495,
	302, 1495,
	303, 1495,
	304, 1495,
	305, 1495,
	306, 1495,
	307, 1495,
	308, 1495,
	309, 1495,
	310, 1495,
	311, 1495,
	312, 1495,
	313, 1495,
	315, 1495,
	317, 1495,
	319, 1495,
	320, 1495,
	322, 1495,
	323, 1495,
	324, 1495,
	325, 1495,
	326, 1495,
	329, 1495,
	333, 1495,
	334, 1495,
	335, 1495,
	338, 1495,
	339, 1495,
	340, 1495,
	342, 1495,
	344, 1495,
	345, 1495,
	346, 1495,
	347, 1495,
	348, 1495,
	349, 1495,
	350, 1495,
	351, 1495,
	352, 1495,
	353, 1495,
	354, 1495,
	355, 1495,
	357, 1495,
	358, 1495,
	359, 1495,
	360, 1495,
	361, 1495,
	362, 1495,
	363, 1495,
	364, 1495,
	365, 1495,
	366, 1495,
	367, 1495,
	368, 1495,
	369, 1495,
	370, 1495,
	371, 1495,
	373, 1495,
	375, 1495,
	376, 1495,
	377, 1495,
	378, 1495,
	379, 1495,
	380, 1495,
	381, 1495,
	382, 1495,
	383, 1495,
	384, 1495,
	385, 1495,
	387, 1495,
	393, 1495,
	395, 1495,
	396, 1495,
	397, 1495,
	398, 1495,
	399, 1495,
	400, 1495,
	401, 1495,
	402, 1495,
	404, 1495,
	405, 1495,
	406, 1495,
	408, 1495,
	409, 1495,
	410, 1495,
	411, 1495,
	412, 1495,
	413, 1495,
	415, 1495,
	416, 1495,
	417, 1495,
	418, 1495,
	419, 1495,
	420, 1495,
	421, 1495,
	422, 1495,
	423, 1495,
	424, 1495,
	425, 1495,
	427, 1495,
	428, 1495,
	429, 1495,
	430, 1495,
	431, 1495,
	432, 1495,
	434, 1495,
	435, 1495,
	436, 1495,
	437, 1495,
	438, 1495,
	439, 1495,
	441, 1495,
	442, 1495,
	443, 1495,
	444, 1495,
	445, 1495,
	446, 1495,
	447, 1495,
	449, 1495,
	451, 1495,
	452, 1495,
	453, 1495,
	454, 1495,
	455, 1495,
	456, 1495,
	457, 1495,
	458, 1495,
	459, 1495,
	460, 1495,
	461, 1495,
	462, 1495,
	463, 1495,
	465, 1495,
	466, 1495,
	468, 1495,
	470, 1495,
	471, 1495,
	472, 1495,
	473, 1495,
	474, 1495,
	475, 1495,
	476, 1495,
	477, 1495,
	479, 1495,
	480, 1495,
	481, 1495,
	482, 1495,
	483, 1495,
	485, 1495,
	487, 1495,
	488, 1495,
	489, 1495,
	490, 1495,
	491, 1495,
	492, 1495,
	494, 1495,
	495, 1495,
	496, 1495,
	497, 1495,
	499, 1495,
	500, 1495,
	503, 1495,
	504, 1495,
	505, 1495,
	506, 1495,
	507, 1495,
	508, 1495,
	509, 1495,
	511, 1495,
	514, 1495,
	515, 1495,
	516, 1495,
	517, 1495,
	518, 1495,
	519, 1495,
	521, 1495,
	522, 1495,
	523, 1495,
	524, 1495,
	529, 1495,
	530, 1495,
	531, 1495,
	532, 1495,
	533, 1495,
	534, 1495,
	-2, 0,
	-1, 804,
	4, 1153,
	21, 1153,
	22, 1153,
	23, 1153,
	24, 1153,
	25, 1153,
	26, 1153,
	27, 1153,
	29, 1153,
	30, 1153,
	36, 1153,
	41, 1153,
	42, 1153,
	44, 1153,
	45, 1153,
	46, 1153,
	47, 1153,
	48, 1153,
	49, 1153,
	50, 1153,
	52, 1153,
	53, 1153,
	54, 1153,
	55, 1153,
	57, 1153,
	58, 1153,
	59, 1153,
	60, 1153,
	61, 1153,
	62, 1153,
	63, 1153,
	67, 1153,
	68, 1153,
	69, 1153,
	70, 1153,
	72, 1153,
	73, 1153,
	74, 1153,
	78, 1153,
	79, 1153,
	80, 1153,
	81, 1153,
	82, 1153,
	83, 1153,
	84, 1153,
	87, 1153,
	88, 1153,
	89, 1153,
	90, 1153,
	91, 1153,
	93, 1153,
	95, 1153,
	96, 1153,
	97, 1153,
	98, 1153,
	99, 1153,
	100, 1153,
	102, 1153,
	103, 1153,
	104, 1153,
	106, 1153,
	107, 1153,
	115, 1153,
	116, 1153,
	117, 1153,
	118, 1153,
	120, 1153,
	121, 1153,
	122, 1153,
	124, 1153,
	125, 1153,
	126, 1153,
	128, 1153,
	129, 1153,
	131, 1153,
	132, 1153,
	133, 1153,
	136, 1153,
	137, 1153,
	138, 1153,
	140, 1153,
	141, 1153,
	143, 1153,
	144, 1153,
	145, 1153,
	147, 1153,
	148, 1153,
	149, 1153,
	150, 1153,
	151, 1153,
	152, 1153,
	153, 1153,
	154, 1153,
	155, 1153,
	156, 1153,
	157, 1153,
	158, 1153,
	159, 1153,
	160, 1153,
	161, 1153,
	163, 1153,
	169, 1153,
	170, 1153,
	171, 1153,
	172, 1153,
	176, 1153,
	178, 1153,
	182, 1153,
	183, 1153,
	184, 1153,
	185, 1153,
	186, 1153,
	187, 1153,
	188, 1153,
	189, 1153,
	190, 1153,
	191, 1153,
	192, 1153,
	193, 1153,
	195, 1153,
	196, 1153,
	198, 1153,
	199, 1153,
	201, 1153,
	202, 1153,
	203, 1153,
	204, 1153,
	205, 1153,
	206, 1153,
	207, 1153,
	208, 1153,
	209, 1153,
	211, 1153,
	212, 1153,
	214, 1153,
	215, 1153,
	216, 1153,
	217, 1153,
	221, 1153,
	222, 1153,
	223, 1153,
	224, 1153,
	227, 1153,
	228, 1153,
	229, 1153,
	231, 1153,
	233, 1153,
	234, 1153,
	236, 1153,
	238, 1153,
	239, 1153,
	240, 1153,
	242, 1153,
	246, 1153,
	247, 1153,
	248, 1153,
	249, 1153,
	250, 1153,
	251, 1153,
	253, 1153,
	254, 1153,
	255, 1153,
	257, 1153,
	258, 1153,
	260, 1153,
	261, 1153,
	264, 1153,
	268, 1153,
	269, 1153,
	272, 1153,
	273, 1153,
	274, 1153,
	275, 1153,
	277, 1153,
	278, 1153,
	279, 1153,
	280, 1153,
	281, 1153,
	282, 1153,
	283, 1153,
	284, 1153,
	285, 1153,
	286, 1153,
	287, 1153,
	288, 1153,
	289, 1153,
	290, 1153,
	291, 1153,
	292, 1153,
	293, 1153,
	294, 1153,
	295, 1153,
	296, 1153,
	297, 1153,
	298, 1153,
	300, 1153,
	302, 1153,
	303, 1153,
	304, 1153,
	305, 1153,
	306, 1153,
	307, 1153,
	308, 1153,
	309, 1153,
	310, 1153,
	311, 1153,
	312, 1153,
	313, 1153,
	315, 1153,
	317, 1153,
	319, 1153,
	320, 1153,
	322, 1153,
	323, 1153,
	324, 1153,
	325, 1153,
	326, 1153,
	329, 1153,
	333, 1153,
	334, 1153,
	335, 1153,
	338, 1153,
	339, 1153,
	340, 1153,
	342, 1153,
	344, 1153,
	345, 1153,
	346, 1153,
	347, 1153,
	348, 1153,
	349, 1153,
	350, 1153,
	351, 1153,
	352, 1153,
	353, 1153,
	354, 1153,
	355, 1153,
	357, 1153,
	358, 1153,
	359, 1153,
	360, 1153,
	361, 1153,
	362, 1153,
	363, 1153,
	364, 1153,
	365, 1153,
	366, 1153,
	367, 1153,
	368, 1153,
	369, 1153,
	370, 1153,
	371, 1153,
	373, 1153,
	375, 1153,
	376, 1153,
	377, 1153,
	378, 1153,
	379, 1153,
	380, 1153,
	381, 1153,
	382, 1153,
	383, 1153,
	384, 1153,
	385, 1153,
	387, 1153,
	393, 1153,
	395, 1153,
	396, 1153,
	397, 1153,
	398, 1153,
	399, 1153,
	400, 1153,
	401, 1153,
	402, 1153,
	404, 1153,
	405, 1153,
	406, 1153,
	408, 1153,
	409, 1153,
	410, 1153,
	411, 1153,
	412, 1153,
	413, 1153,
	415, 1153,
	416, 1153,
	417, 1153,
	418, 1153,
	419, 1153,
	420, 1153,
	421, 1153,
	422, 1153,
	423, 1153,
	424, 1153,
	425, 1153,
	427, 1153,
	428, 1153,
	429, 1153,
	430, 1153,
	431, 1153,
	432, 1153,
	434, 1153,
	435, 1153,
	436, 1153,
	437, 1153,
	438, 1153,
	439, 1153,
	441, 1153,
	442, 1153,
	443, 1153,
	444, 1153,
	445, 1153,
	446, 1153,
	447, 1153,
	449, 1153,
	451, 1153,
	452, 1153,
	453, 1153,
	454, 1153,
	455, 1153,
	456, 1153,
	457, 1153,
	458, 1153,
	459, 1153,
	460, 1153,
	461, 1153,
	462, 1153,
	463, 1153,
	465, 1153,
	466, 1153,
	468, 1153,
	470, 1153,
	471, 1153,
	472, 1153,
	473, 1153,
	474, 1153,
	475, 1153,
	476, 1153,
	477, 1153,
	479, 1153,
	480, 1153,
	481, 1153,
	482, 1153,
	483, 1153,
	485, 1153,
	487, 1153,
	488, 1153,
	489, 1153,
	490, 1153,
	491, 1153,
	492, 1153,
	494, 1153,
	495, 1153,
	496, 1153,
	497, 1153,
	499, 1153,
	500, 1153,
	503, 1153,
	504, 1153,
	505, 1153,
	506, 1153,
	507, 1153,
	508, 1153,
	509, 1153,
	511, 1153,
	514, 1153,
	515, 1153,
	516, 1153,
	517, 1153,
	518, 1153,
	519, 1153,
	521, 1153,
	522, 1153,
	523, 1153,
	524, 1153,
	529, 1153,
	530, 1153,
	531, 1153,
	532, 1153,
	533, 1153,
	534, 1153,
	-2, 0,
	-1, 885,
	377, 784,
	432, 784,
	489, 784,
	-2, 0,
	-1, 886,
	377, 783,
	432, 783,
	489, 783,
	-2, 725,
	-1, 890,
	1, 828,
	558, 828,
	560, 828,
	562, 828,
	-2, 0,
	-1, 891,
	1, 760,
	558, 760,
	560, 760,
	562, 760,
	-2, 0,
	-1, 892,
	1, 762,
	558, 762,
	560, 762,
	562, 762,
	-2, 0,
	-1, 893,
	1, 871,
	177, 871,
	558, 871,
	560, 871,
	562, 871,
	-2, 0,
	-1, 901,
	1, 787,
	558, 787,
	560, 787,
	562, 787,
	-2, 0,
	-1, 907,
	1, 828,
	558, 828,
	560, 828,
	562, 828,
	-2, 0,
	-1, 908,
	1, 830,
	558, 830,
	560, 830,
	562, 830,
	-2, 0,
	-1, 909,
	1, 833,
	558, 833,
	560, 833,
	562, 833,
	-2, 0,
	-1, 915,
	1, 850,
	558, 850,
	560, 850,
	562, 850,
	-2, 0,
	-1, 916,
	1, 852,
	558, 852,
	560, 852,
	562, 852,
	-2, 0,
	-1, 965,
	164, 1371,
	177, 1371,
	263, 1371,
	327, 1371,
	-2, 1309,
	-1, 980,
	164, 1370,
	177, 1370,
	263, 1370,
	327, 1370,
	-2, 1306,
	-1, 1006,
	561, 2051,
	-2, 632,
	-1, 1034,
	5, 2043,
	559, 2041,
	-2, 2032,
	-1, 1042,
	5, 2064,
	559, 2061,
	-2, 2052,
	-1, 1043,
	5, 2065,
	559, 2062,
	-2, 2053,
	-1, 1051,
	561, 2049,
	-2, 2031,
	-1, 1052,
	559, 2453,
	-2, 2050,
	-1, 1075,
	559, 2452,
	-2, 2066,
	-1, 1076,
	5, 1570,
	-2, 2423,
	-1, 1077,
	5, 1571,
	-2, 2424,
	-1, 1078,
	5, 1572,
	-2, 2438,
	-1, 1079,
	5, 1573,
	-2, 2402,
	-1, 1080,
	5, 1574,
	-2, 2436,
	-1, 1081,
	5, 1582,
	-2, 2415,
	-1, 1082,
	5, 1569,
	-2, 2411,
	-1, 1083,
	5, 1569,
	-2, 2410,
	-1, 1084,
	5, 1569,
	-2, 2429,
	-1, 1085,
	5, 1580,
	-2, 2404,
	-1, 1086,
	5, 1585,
	-2, 2403,
	-1, 1087,
	5, 1587,
	-2, 2448,
	-1, 1090,
	5, 1609,
	-2, 2441,
	-1, 1091,
	5, 1601,
	-2, 2442,
	-1, 1092,
	5, 1609,
	-2, 2443,
	-1, 1093,
	5, 1605,
	-2, 2444,
	-1, 1094,
	5, 1555,
	-2, 2416,
	-1, 1095,
	5, 1556,
	-2, 2417,
	-1, 1096,
	5, 1557,
	-2, 2405,
	-1, 1124,
	5, 1592,
	-2, 2449,
	-1, 1125,
	5, 1593,
	-2, 2439,
	-1, 1126,
	5, 1594,
	522, 1594,
	-2, 2406,
	-1, 1127,
	5, 1595,
	522, 1595,
	-2, 2407,
	-1, 1164,
	559, 2061,
	-2, 2052,
	-1, 1165,
	559, 2062,
	-2, 2053,
	-1, 1195,
	180, 2371,
	484, 2371,
	542, 2371,
	561, 2371,
	-2, 0,
	-1, 1198,
	1, 610,
	562, 610,
	-2, 1241,
	-1, 1327,
	395, 2027,
	434, 2027,
	552, 2027,
	-2, 2024,
	-1, 1339,
	563, 2027,
	-2, 2028,
	-1, 1346,
	1, 1129,
	558, 1129,
	560, 1129,
	562, 1129,
	-2, 1358,
	-1, 1402,
	383, 937,
	521, 937,
	-2, 343,
	-1, 1421,
	43, 2055,
	-2, 2025,
	-1, 1426,
	1, 1129,
	558, 1129,
	560, 1129,
	562, 1129,
	-2, 1358,
	-1, 1433,
	4, 1153,
	21, 1153,
	22, 1153,
	23, 1153,
	24, 1153,
	25, 1153,
	26, 1153,
	27, 1153,
	29, 1153,
	30, 1153,
	36, 1153,
	41, 1153,
	42, 1153,
	44, 1153,
	45, 1153,
	46, 1153,
	47, 1153,
	48, 1153,
	49, 1153,
	50, 1153,
	52, 1153,
	53, 1153,
	54, 1153,
	55, 1153,
	57, 1153,
	58, 1153,
	59, 1153,
	60, 1153,
	61, 1153,
	62, 1153,
	63, 1153,
	67, 1153,
	68, 1153,
	69, 1153,
	70, 1153,
	72, 1153,
	73, 1153,
	74, 1153,
	78, 1153,
	79, 1153,
	80, 1153,
	81, 1153,
	82, 1153,
	83, 1153,
	84, 1153,
	87, 1153,
	88, 1153,
	89, 1153,
	90, 1153,
	91, 1153,
	93, 1153,
	95, 1153,
	96, 1153,
	97, 1153,
	98, 1153,
	99, 1153,
	100, 1153,
	102, 1153,
	103, 1153,
	104, 1153,
	106, 1153,
	107, 1153,
	115, 1153,
	116, 1153,
	117, 1153,
	118, 1153,
	120, 1153,
	121, 1153,
	122, 1153,
	124, 1153,
	125, 1153,
	126, 1153,
	128, 1153,
	129, 1153,
	131, 1153,
	132, 1153,
	133, 1153,
	136, 1153,
	137, 1153,
	138, 1153,
	140, 1153,
	141, 1153,
	143, 1153,
	144, 1153,
	145, 1153,
	147, 1153,
	148, 1153,
	149, 1153,
	150, 1153,
	151, 1153,
	152, 1153,
	153, 1153,
	154, 1153,
	155, 1153,
	156, 1153,
	157, 1153,
	158, 1153,
	159, 1153,
	160, 1153,
	161, 1153,
	169, 1153,
	170, 1153,
	171, 1153,
	172, 1153,
	176, 1153,
	178, 1153,
	182, 1153,
	183, 1153,
	184, 1153,
	185, 1153,
	186, 1153,
	187, 1153,
	188, 1153,
	189, 1153,
	190, 1153,
	191, 1153,
	192, 1153,
	193, 1153,
	195, 1153,
	196, 1153,
	198, 1153,
	199, 1153,
	201, 1153,
	202, 1153,
	203, 1153,
	204, 1153,
	205, 1153,
	206, 1153,
	207, 1153,
	208, 1153,
	209, 1153,
	211, 1153,
	212, 1153,
	214, 1153,
	215, 1153,
	216, 1153,
	217, 1153,
	222, 1153,
	223, 1153,
	224, 1153,
	227, 1153,
	228, 1153,
	229, 1153,
	231, 1153,
	233, 1153,
	234, 1153,
	236, 1153,
	238, 1153,
	239, 1153,
	240, 1153,
	242, 1153,
	246, 1153,
	247, 1153,
	248, 1153,
	249, 1153,
	250, 1153,
	251, 1153,
	253, 1153,
	254, 1153,
	255, 1153,
	257, 1153,
	258, 1153,
	260, 1153,
	261, 1153,
	264, 1153,
	268, 1153,
	269, 1153,
	272, 1153,
	273, 1153,
	274, 1153,
	275, 1153,
	277, 1153,
	278, 1153,
	279, 1153,
	280, 1153,
	281, 1153,
	282, 1153,
	283, 1153,
	284, 1153,
	285, 1153,
	286, 1153,
	287, 1153,
	288, 1153,
	289, 1153,
	290, 1153,
	291, 1153,
	292, 1153,
	293, 1153,
	294, 1153,
	295, 1153,
	296, 1153,
	297, 1153,
	298, 1153,
	300, 1153,
	302, 1153,
	303, 1153,
	304, 1153,
	305, 1153,
	306, 1153,
	307, 1153,
	308, 1153,
	309, 1153,
	310, 1153,
	311, 1153,
	312, 1153,
	313, 1153,
	315, 1153,
	319, 1153,
	320, 1153,
	322, 1153,
	323, 1153,
	324, 1153,
	325, 1153,
	326, 1153,
	329, 1153,
	331, 1153,
	333, 1153,
	334, 1153,
	335, 1153,
	338, 1153,
	339, 1153,
	340, 1153,
	342, 1153,
	344, 1153,
	345, 1153,
	346, 1153,
	347, 1153,
	348, 1153,
	349, 1153,
	350, 1153,
	351, 1153,
	352, 1153,
	353, 1153,
	354, 1153,
	355, 1153,
	357, 1153,
	358, 1153,
	359, 1153,
	360, 1153,
	361, 1153,
	362, 1153,
	363, 1153,
	364, 1153,
	365, 1153,
	366, 1153,
	367, 1153,
	368, 1153,
	369, 1153,
	370, 1153,
	371, 1153,
	373, 1153,
	375, 1153,
	376, 1153,
	377, 1153,
	378, 1153,
	379, 1153,
	380, 1153,
	381, 1153,
	382, 1153,
	383, 1153,
	384, 1153,
	385, 1153,
	387, 1153,
	393, 1153,
	395, 1153,
	396, 1153,
	397, 1153,
	398, 1153,
	399, 1153,
	400, 1153,
	401, 1153,
	402, 1153,
	404, 1153,
	405, 1153,
	406, 1153,
	408, 1153,
	409, 1153,
	410, 1153,
	411, 1153,
	412, 1153,
	413, 1153,
	415, 1153,
	416, 1153,
	417, 1153,
	418, 1153,
	419, 1153,
	420, 1153,
	421, 1153,
	422, 1153,
	423, 1153,
	424, 1153,
	425, 1153,
	427, 1153,
	428, 1153,
	429, 1153,
	430, 1153,
	431, 1153,
	432, 1153,
	434, 1153,
	435, 1153,
	436, 1153,
	437, 1153,
	438, 1153,
	439, 1153,
	441, 1153,
	442, 1153,
	443, 1153,
	444, 1153,
	445, 1153,
	446, 1153,
	447, 1153,
	449, 1153,
	451, 1153,
	452, 1153,
	453, 1153,
	454, 1153,
	455, 1153,
	456, 1153,
	457, 1153,
	458, 1153,
	459, 1153,
	460, 1153,
	461, 1153,
	462, 1153,
	463, 1153,
	465, 1153,
	466, 1153,
	468, 1153,
	470, 1153,
	471, 1153,
	472, 1153,
	473, 1153,
	474, 1153,
	475, 1153,
	476, 1153,
	477, 1153,
	479, 1153,
	480, 1153,
	481, 1153,
	482, 1153,
	483, 1153,
	485, 1153,
	487, 1153,
	488, 1153,
	489, 1153,
	490, 1153,
	491, 1153,
	492, 1153,
	494, 1153,
	495, 1153,
	496, 1153,
	497, 1153,
	499, 1153,
	500, 1153,
	503, 1153,
	504, 1153,
	505, 1153,
	506, 1153,
	507, 1153,
	508, 1153,
	509, 1153,
	511, 1153,
	514, 1153,
	515, 1153,
	516, 1153,
	517, 1153,
	518, 1153,
	519, 1153,
	521, 1153,
	522, 1153,
	523, 1153,
	524, 1153,
	529, 1153,
	530, 1153,
	531, 1153,
	532, 1153,
	533, 1153,
	534, 1153,
	-2, 0,
	-1, 1508,
	1, 483,
	558, 483,
	560, 483,
	562, 483,
	-2, 1329,
	-1, 1511,
	4, 2447,
	11, 2447,
	12, 2447,
	14, 2447,
	15, 2447,
	16, 2447,
	17, 2447,
	18, 2447,
	19, 2447,
	21, 2447,
	22, 2447,
	23, 2447,
	24, 2447,
	25, 2447,
	26, 2447,
	27, 2447,
	29, 2447,
	30, 2447,
	33, 2447,
	34, 2447,
	36, 2447,
	38, 2447,
	41, 2447,
	42, 2447,
	44, 2447,
	45, 2447,
	46, 2447,
	47, 2447,
	48, 2447,
	49, 2447,
	50, 2447,
	52, 2447,
	53, 2447,
	54, 2447,
	55, 2447,
	57, 2447,
	58, 2447,
	59, 2447,
	60, 2447,
	61, 2447,
	62, 2447,
	63, 2447,
	67, 2447,
	68, 2447,
	69, 2447,
	70, 2447,
	72, 2447,
	73, 2447,
	74, 2447,
	75, 2447,
	78, 2447,
	79, 2447,
	80, 2447,
	81, 2447,
	82, 2447,
	83, 2447,
	84, 2447,
	85, 2447,
	87, 2447,
	88, 2447,
	89, 2447,
	90, 2447,
	91, 2447,
	93, 2447,
	94, 2447,
	95, 2447,
	96, 2447,
	97, 2447,
	98, 2447,
	99, 2447,
	100, 2447,
	102, 2447,
	103, 2447,
	104, 2447,
	105, 2447,
	106, 2447,
	107, 2447,
	115, 2447,
	116, 2447,
	117, 2447,
	118, 2447,
	120, 2447,
	121, 2447,
	122, 2447,
	124, 2447,
	125, 2447,
	126, 2447,
	128, 2447,
	129, 2447,
	131, 2447,
	132, 2447,
	133, 2447,
	136, 2447,
	137, 2447,
	138, 2447,
	140, 2447,
	141, 2447,
	143, 2447,
	144, 2447,
	145, 2447,
	147, 2447,
	148, 2447,
	149, 2447,
	150, 2447,
	151, 2447,
	152, 2447,
	153, 2447,
	154, 2447,
	155, 2447,
	156, 2447,
	157, 2447,
	158, 2447,
	159, 2447,
	160, 2447,
	161, 2447,
	165, 2447,
	166, 2447,
	167, 2447,
	168, 2447,
	169, 2447,
	170, 2447,
	171, 2447,
	172, 2447,
	175, 2447,
	176, 2447,
	178, 2447,
	181, 2447,
	182, 2447,
	183, 2447,
	184, 2447,
	185, 2447,
	186, 2447,
	187, 2447,
	188, 2447,
	189, 2447,
	190, 2447,
	191, 2447,
	192, 2447,
	193, 2447,
	195, 2447,
	196, 2447,
	198, 2447,
	199, 2447,
	201, 2447,
	202, 2447,
	203, 2447,
	204, 2447,
	205, 2447,
	206, 2447,
	207, 2447,
	208, 2447,
	209, 2447,
	210, 2447,
	211, 2447,
	212, 2447,
	213, 2447,
	214, 2447,
	215, 2447,
	216, 2447,
	217, 2447,
	219, 2447,
	220, 2447,
	222, 2447,
	223, 2447,
	224, 2447,
	226, 2447,
	227, 2447,
	228, 2447,
	229, 2447,
	231, 2447,
	233, 2447,
	234, 2447,
	235, 2447,
	236, 2447,
	237, 2447,
	238, 2447,
	239, 2447,
	240, 2447,
	241, 2447,
	242, 2447,
	244, 2447,
	245, 2447,
	246, 2447,
	247, 2447,
	248, 2447,
	249, 2447,
	250, 2447,
	251, 2447,
	253, 2447,
	254, 2447,
	255, 2447,
	257, 2447,
	258, 2447,
	259, 2447,
	260, 2447,
	261, 2447,
	262, 2447,
	264, 2447,
	268, 2447,
	269, 2447,
	272, 2447,
	273, 2447,
	274, 2447,
	275, 2447,
	276, 2447,
	277, 2447,
	278, 2447,
	279, 2447,
	280, 2447,
	281, 2447,
	282, 2447,
	283, 2447,
	284, 2447,
	285, 2447,
	286, 2447,
	287, 2447,
	288, 2447,
	289, 2447,
	290, 2447,
	291, 2447,
	292, 2447,
	293, 2447,
	294, 2447,
	295, 2447,
	296, 2447,
	297, 2447,
	298, 2447,
	300, 2447,
	301, 2447,
	302, 2447,
	303, 2447,
	304, 2447,
	305, 2447,
	306, 2447,
	307, 2447,
	308, 2447,
	309, 2447,
	310, 2447,
	311, 2447,
	312, 2447,
	313, 2447,
	315, 2447,
	318, 2447,
	319, 2447,
	320, 2447,
	322, 2447,
	323, 2447,
	324, 2447,
	325, 2447,
	326, 2447,
	329, 2447,
	333, 2447,
	334, 2447,
	335, 2447,
	336, 2447,
	338, 2447,
	339, 2447,
	340, 2447,
	342, 2447,
	344, 2447,
	345, 2447,
	346, 2447,
	347, 2447,
	348, 2447,
	349, 2447,
	350, 2447,
	351, 2447,
	352, 2447,
	353, 2447,
	354, 2447,
	355, 2447,
	357, 2447,
	358, 2447,
	359, 2447,
	360, 2447,
	361, 2447,
	362, 2447,
	363, 2447,
	364, 2447,
	365, 2447,
	366, 2447,
	367, 2447,
	368, 2447,
	369, 2447,
	370, 2447,
	371, 2447,
	373, 2447,
	375, 2447,
	376, 2447,
	377, 2447,
	378, 2447,
	379, 2447,
	380, 2447,
	381, 2447,
	382, 2447,
	383, 2447,
	384, 2447,
	385, 2447,
	387, 2447,
	393, 2447,
	394, 2447,
	395, 2447,
	396, 2447,
	397, 2447,
	398, 2447,
	399, 2447,
	400, 2447,
	401, 2447,
	402, 2447,
	404, 2447,
	405, 2447,
	406, 2447,
	407, 2447,
	408, 2447,
	409, 2447,
	410, 2447,
	411, 2447,
	412, 2447,
	413, 2447,
	414, 2447,
	415, 2447,
	416, 2447,
	417, 2447,
	418, 2447,
	419, 2447,
	420, 2447,
	421, 2447,
	422, 2447,
	423, 2447,
	424, 2447,
	425, 2447,
	427, 2447,
	428, 2447,
	429, 2447,
	430, 2447,
	431, 2447,
	432, 2447,
	434, 2447,
	435, 2447,
	436, 2447,
	437, 2447,
	438, 2447,
	439, 2447,
	440, 2447,
	441, 2447,
	442, 2447,
	443, 2447,
	444, 2447,
	445, 2447,
	446, 2447,
	447, 2447,
	449, 2447,
	451, 2447,
	452, 2447,
	453, 2447,
	454, 2447,
	455, 2447,
	456, 2447,
	457, 2447,
	458, 2447,
	459, 2447,
	460, 2447,
	461, 2447,
	462, 2447,
	463, 2447,
	465, 2447,
	466, 2447,
	468, 2447,
	470, 2447,
	471, 2447,
	472, 2447,
	473, 2447,
	474, 2447,
	475, 2447,
	476, 2447,
	477, 2447,
	479, 2447,
	480, 2447,
	481, 2447,
	482, 2447,
	483, 2447,
	485, 2447,
	487, 2447,
	488, 2447,
	489, 2447,
	490, 2447,
	491, 2447,
	492, 2447,
	494, 2447,
	495, 2447,
	496, 2447,
	497, 2447,
	499, 2447,
	500, 2447,
	503, 2447,
	504, 2447,
	505, 2447,
	506, 2447,
	507, 2447,
	508, 2447,
	509, 2447,
	511, 2447,
	514, 2447,
	515, 2447,
	516, 2447,
	517, 2447,
	518, 2447,
	519, 2447,
	521, 2447,
	522, 2447,
	523, 2447,
	524, 2447,
	529, 2447,
	530, 2447,
	531, 2447,
	532, 2447,
	533, 2447,
	534, 2447,
	535, 2447,
	537, 2447,
	540, 2447,
	541, 2447,
	542, 2447,
	543, 2447,
	544, 2447,
	545, 2447,
	547, 2447,
	548, 2447,
	549, 2447,
	550, 2447,
	551, 2447,
	552, 2447,
	553, 2447,
	554, 2447,
	555, 2447,
	557, 2447,
	560, 2447,
	561, 2447,
	563, 2447,
	564, 2447,
	-2, 0,
	-1, 1516,
	180, 2336,
	484, 2336,
	542, 2336,
	561, 2336,
	-2, 0,
	-1, 1565,
	377, 784,
	432, 784,
	489, 784,
	-2, 0,
	-1, 1591,
	1, 779,
	558, 779,
	560, 779,
	562, 779,
	-2, 0,
	-1, 1592,
	1, 815,
	558, 815,
	560, 815,
	562, 815,
	-2, 0,
	-1, 1593,
	1, 823,
	558, 823,
	560, 823,
	562, 823,
	-2, 0,
	-1, 1594,
	1, 786,
	558, 786,
	560, 786,
	562, 786,
	-2, 0,
	-1, 1596,
	1, 790,
	558, 790,
	560, 790,
	562, 790,
	-2, 0,
	-1, 1602,
	1, 797,
	558, 797,
	560, 797,
	562, 797,
	-2, 0,
	-1, 1630,
	1, 2393,
	558, 2393,
	560, 2393,
	561, 2393,
	562, 2393,
	-2, 848,
	-1, 1631,
	1, 2333,
	558, 2333,
	560, 2333,
	561, 2333,
	562, 2333,
	-2, 849,
	-1, 1646,
	1, 1236,
	562, 1236,
	-2, 1241,
	-1, 1649,
	164, 1370,
	177, 1370,
	263, 1370,
	327, 1370,
	-2, 1310,
	-1, 1743,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1770,
	-1, 1803,
	560, 1920,
	-2, 0,
	-1, 1838,
	146, 1331,
	164, 1331,
	177, 1331,
	230, 1331,
	263, 1331,
	327, 1331,
	337, 1331,
	501, 1331,
	-2, 1457,
	-1, 1887,
	559, 1597,
	-2, 1585,
	-1, 1924,
	1, 612,
	562, 612,
	-2, 1241,
	-1, 2036,
	213, 217,
	-2, 2060,
	-1, 2037,
	213, 218,
	-2, 260,
	-1, 2166,
	1, 781,
	558, 781,
	560, 781,
	562, 781,
	-2, 0,
	-1, 2167,
	1, 817,
	558, 817,
	560, 817,
	562, 817,
	-2, 0,
	-1, 2168,
	1, 825,
	558, 825,
	560, 825,
	562, 825,
	-2, 0,
	-1, 2201,
	1, 799,
	558, 799,
	560, 799,
	562, 799,
	-2, 0,
	-1, 2247,
	412, 1397,
	413, 1397,
	-2, 1630,
	-1, 2278,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1650,
	-1, 2279,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1651,
	-1, 2280,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1652,
	-1, 2281,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1653,
	-1, 2282,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1654,
	-1, 2283,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1655,
	-1, 2284,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1656,
	-1, 2285,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1657,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1669,
	-1, 2298,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1670,
	-1, 2299,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1671,
	-1, 2302,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1676,
	-1, 2308,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1680,
	-1, 2310,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1688,
	-1, 2311,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1689,
	-1, 2312,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1690,
	-1, 2313,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1691,
	-1, 2449,
	5, 2064,
	180, 1931,
	559, 2061,
	-2, 2052,
	-1, 2450,
	180, 1932,
	-2, 2398,
	-1, 2451,
	180, 1933,
	-2, 2238,
	-1, 2452,
	180, 1934,
	-2, 2131,
	-1, 2453,
	180, 1935,
	-2, 2181,
	-1, 2454,
	180, 1936,
	-2, 2223,
	-1, 2455,
	180, 1937,
	-2, 2331,
	-1, 2456,
	180, 1938,
	-2, 1753,
	-1, 2525,
	1, 1458,
	2, 1458,
	105, 1458,
	146, 1458,
	164, 1458,
	177, 1458,
	181, 1458,
	197, 1458,
	200, 1458,
	226, 1458,
	230, 1458,
	241, 1458,
	259, 1458,
	263, 1458,
	301, 1458,
	327, 1458,
	331, 1458,
	337, 1458,
	403, 1458,
	407, 1458,
	501, 1458,
	512, 1458,
	526, 1458,
	527, 1458,
	528, 1458,
	538, 1458,
	558, 1458,
	560, 1458,
	562, 1458,
	564, 1458,
	-2, 1457,
	-1, 2538,
	559, 2033,
	-2, 2047,
	-1, 2540,
	52, 1358,
	131, 1358,
	-2, 276,
	-1, 2565,
	559, 1596,
	-2, 1586,
	-1, 2702,
	1, 1129,
	558, 1129,
	560, 1129,
	562, 1129,
	-2, 1358,
	-1, 2882,
	332, 1400,
	-2, 2437,
	-1, 2883,
	332, 1401,
	-2, 2317,
	-1, 2887,
	412, 1997,
	413, 1997,
	-2, 1751,
	-1, 2888,
	412, 2001,
	413, 2001,
	-2, 1752,
	-1, 2889,
	412, 1998,
	413, 1998,
	-2, 1751,
	-1, 2890,
	412, 2002,
	413, 2002,
	-2, 1752,
	-1, 2903,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1678,
	-1, 2904,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1682,
	-1, 2910,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1684,
	-1, 3138,
	1, 609,
	558, 609,
	560, 609,
	562, 609,
	-2, 1241,
	-1, 3270,
	1, 1129,
	558, 1129,
	560, 1129,
	562, 1129,
	-2, 1358,
	-1, 3380,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1686,
	-1, 3387,
	235, 0,
	237, 0,
	318, 0,
	-2, 1705,
	-1, 3454,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1734,
	-1, 3455,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1735,
	-1, 3456,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1736,
	-1, 3460,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1740,
	-1, 3461,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1741,
	-1, 3462,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1742,
	-1, 3508,
	559, 2034,
	-2, 2048,
	-1, 3545,
	561, 2049,
	-2, 1163,
	-1, 3648,
	561, 2554,
	-2, 1288,
	-1, 3706,
	235, 0,
	237, 0,
	318, 0,
	-2, 1706,
	-1, 3709,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1709,
	-1, 3710,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1711,
	-1, 3926,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1710,
	-1, 3927,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1712,
	-1, 3938,
	235, 0,
	-2, 1743,
	-1, 4096,
	235, 0,
	-2, 1744,
	-1, 4255,
	49, 0,
	210, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 2401,
}

const sqlPrivate = 57344

const sqlLast = 113949

var sqlAct = [...]int{

	247, 4022, 4265, 2767, 3255, 3975, 3850, 2798, 4124, 3061,
	4366, 4229, 4254, 4145, 3689, 3254, 2033, 2601, 4210, 3978,
	4195, 4213, 4266, 4049, 4267, 4100, 4029, 3419, 3963, 2640,
	3282, 3883, 3878, 4315, 2135, 3947, 990, 3156, 3915, 3793,
	3541, 3864, 4253, 2257, 1349, 3287, 1499, 3640, 4038, 2144,
	3582, 3372, 3776, 1494, 1157, 1874, 1168, 3888, 4063, 3832,
	2119, 2325, 3280, 3616, 2665, 1002, 981, 1658, 3250, 3240,
	716, 3602, 2265, 3600, 2481, 1531, 1329, 1977, 680, 2896,
	2258, 1231, 3337, 2807, 3335, 3542, 2738, 1844, 1366, 2734,
	3943, 2809, 2756, 3511, 3104, 716, 3067, 2820, 3084, 1498,
	3076, 2725, 3044, 1573, 3688, 2751, 2817, 1324, 2800, 2806,
	2768, 3745, 3065, 1813, 818, 2028, 989, 166, 2603, 3479,
	2753, 2517, 1987, 3043, 4101, 2027, 2338, 4, 1751, 1789,
	1332, 2117, 2367, 2518, 2880, 1530, 1419, 711, 2679, 2262,
	2022, 2739, 2006, 2013, 1474, 1960, 2079, 1148, 2520, 1038,
	1034, 102, 241, 2358, 1963, 1214, 1646, 2816, 4023, 1814,
	2499, 1875, 1950, 1833, 2322, 2229, 2142, 240, 1041, 2246,
	3111, 2227, 2550, 1040, 3252, 1509, 2639, 1485, 1830, 1043,
	37, 1495, 1424, 2810, 2067, 2761, 2592, 646, 717, 1200,
	1784, 2549, 2361, 2478, 2507, 1823, 632, 718, 1130, 1351,
	654, 1151, 2339, 2445, 166, 1736, 2489, 1659, 2411, 2228,
	1660, 1045, 2230, 662, 1602, 812, 1165, 674, 2066, 2091,
	1448, 1507, 722, 175, 791, 1361, 763, 1976, 2251, 176,
	713, 1019, 42, 41, 649, 39, 30, 725, 28, 1665,
	657, 2369, 26, 1128, 1153, 2931, 1372, 722, 879, 1645,
	899, 2927, 1673, 1674, 3063, 1706, 1707, 1708, 1716, 1717,
	1718, 3493, 725, 3494, 4431, 3297, 2108, 3316, 2498, 2108,
	2108, 2108, 4421, 2108, 1709, 1704, 3316, 1147, 1209, 4411,
	4410, 4383, 1676, 2498, 2498, 3792, 985, 4381, 3134, 4377,
	1722, 3792, 3296, 2041, 4295, 4289, 4287, 4284, 4296, 2498,
	2498, 4285, 4281, 4276, 2143, 4251, 4282, 2041, 1365, 2041,
	1209, 4250, 1145, 3016, 3017, 2041, 1675, 4249, 4244, 4243,
	4238, 2128, 2128, 2128, 3792, 833, 1695, 4236, 4208, 986,
	4185, 3792, 3792, 3133, 2556, 1692, 3483, 1673, 1674, 2491,
	1706, 1707, 1708, 1716, 1717, 1718, 4178, 4177, 4172, 4171,
	2498, 2498, 3792, 3792, 3016, 3017, 1131, 1131, 4165, 1709,
	1704, 4138, 2041, 985, 4098, 3842, 1163, 1676, 2556, 4080,
	4077, 2895, 4074, 3677, 2041, 1722, 3792, 4031, 3996, 3995,
	2940, 4032, 2041, 2041, 1160, 3119, 2941, 3031, 3987, 1159,
	966, 3986, 2041, 3954, 3928, 3792, 965, 2041, 2556, 3907,
	3896, 1675, 1179, 2128, 3316, 2498, 1698, 1699, 1700, 1701,
	3827, 1695, 2552, 3815, 2498, 3791, 1681, 2498, 1184, 3792,
	1692, 3708, 980, 975, 3656, 2556, 3650, 3614, 3332, 3503,
	3332, 3615, 3501, 3504, 3486, 3403, 3502, 3399, 2498, 2041,
	3331, 2498, 3323, 1017, 3332, 3060, 3324, 4186, 2041, 2498,
	4102, 1713, 1132, 4093, 1723, 3055, 4081, 87, 3054, 2498,
	1703, 1705, 2498, 3007, 2981, 2126, 2973, 3008, 2982, 2971,
	2974, 2942, 1134, 2498, 1135, 2498, 1719, 3022, 1720, 2823,
	2796, 213, 1180, 2128, 2131, 1690, 1691, 2128, 3483, 2490,
	3877, 1698, 1699, 1700, 1701, 2795, 2576, 3842, 2555, 2131,
	2498, 1681, 2556, 1711, 2547, 2541, 2497, 2130, 2498, 2041,
	2498, 2131, 3816, 2498, 2041, 3677, 3324, 1696, 3022, 2656,
	1981, 2591, 1929, 2107, 215, 2123, 2364, 2731, 2040, 2673,
	2589, 1809, 1360, 3573, 3375, 3353, 1713, 813, 1831, 1723,
	2016, 3298, 1575, 2534, 2533, 1703, 1705, 2532, 2531, 2530,
	1136, 213, 1133, 974, 1595, 973, 972, 971, 970, 1721,
	3299, 1719, 969, 1720, 68, 968, 816, 815, 964, 963,
	1690, 1691, 214, 962, 961, 2860, 3761, 1710, 3032, 960,
	69, 959, 958, 207, 957, 68, 956, 955, 1711, 954,
	2930, 953, 208, 952, 215, 1386, 73, 951, 950, 949,
	948, 69, 1696, 930, 2109, 877, 876, 2109, 2109, 2109,
	2365, 2109, 875, 874, 177, 873, 872, 73, 871, 3032,
	870, 869, 868, 867, 866, 865, 864, 863, 862, 861,
	860, 859, 1539, 858, 857, 1702, 80, 856, 855, 854,
	853, 852, 214, 851, 1721, 850, 849, 1525, 848, 3296,
	847, 1373, 846, 836, 835, 1697, 831, 80, 830, 1161,
	824, 823, 1710, 781, 780, 739, 738, 737, 736, 728,
	2394, 727, 1180, 86, 726, 695, 686, 685, 684, 1043,
	668, 1714, 235, 1043, 177, 234, 233, 101, 232, 2366,
	231, 2363, 87, 98, 86, 230, 229, 228, 227, 1234,
	226, 225, 224, 1234, 223, 222, 221, 1354, 101, 220,
	219, 218, 217, 87, 98, 1213, 3033, 2126, 216, 1218,
	1702, 3720, 3890, 2490, 3521, 1204, 213, 3497, 3333, 1374,
	3107, 1043, 2953, 1043, 2936, 1043, 2712, 3058, 2560, 139,
	1697, 1354, 2539, 2524, 1365, 1958, 1857, 88, 1762, 2747,
	1380, 3016, 3017, 1368, 3034, 3035, 3036, 3033, 1340, 1220,
	1753, 1167, 2380, 3619, 1335, 1354, 1714, 2784, 88, 215,
	2107, 2126, 2123, 3704, 2222, 3059, 1712, 1834, 4272, 4252,
	2378, 1687, 1688, 1694, 1715, 1693, 1689, 4152, 1686, 1684,
	1685, 1677, 1678, 1679, 1680, 1682, 1683, 4105, 4084, 1385,
	1672, 4198, 1180, 4090, 3973, 1343, 1792, 1374, 1364, 1354,
	1043, 1792, 4082, 1791, 3942, 1354, 3897, 214, 1791, 1354,
	1430, 1432, 1374, 3876, 3768, 3031, 1374, 1043, 207, 1043,
	3743, 2368, 1198, 1354, 3742, 1795, 1753, 208, 3736, 1043,
	1790, 1043, 1543, 3735, 2138, 1227, 1435, 1321, 1326, 3027,
	3025, 3026, 3018, 3019, 3020, 3021, 3023, 3024, 3734, 177,
	3327, 1712, 1417, 3727, 3726, 3724, 1687, 1688, 1694, 1715,
	1693, 1689, 722, 1686, 1684, 1685, 1677, 1678, 1679, 1680,
	1682, 1683, 1488, 1422, 3719, 1354, 3730, 725, 91, 2554,
	3729, 1193, 3026, 3018, 3019, 3020, 3021, 3023, 3024, 3716,
	3715, 2661, 3613, 1043, 3525, 1754, 1043, 1752, 1363, 91,
	3524, 2764, 1371, 1529, 1378, 3022, 1384, 1362, 3892, 3523,
	3507, 1755, 1760, 2137, 3474, 3473, 3472, 3395, 3391, 3102,
	3051, 3042, 166, 166, 174, 94, 3015, 97, 1506, 2362,
	3012, 1673, 1674, 1512, 1514, 3011, 3009, 1479, 1482, 2106,
	2980, 2979, 2978, 2975, 1379, 174, 94, 1544, 97, 1673,
	1674, 213, 2972, 2952, 1704, 2569, 986, 2935, 2928, 817,
	2797, 1676, 2525, 2351, 139, 3037, 1672, 1671, 213, 1491,
	1144, 4425, 213, 2334, 1204, 2749, 4375, 1204, 2048, 1676,
	817, 1505, 2046, 3620, 3571, 139, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 2082, 215, 1675, 4374, 3620, 1523, 4305,
	1528, 1611, 4303, 4294, 1510, 1169, 3032, 3421, 3056, 213,
	1537, 215, 1542, 1675, 4144, 215, 2625, 1043, 4134, 141,
	4131, 4130, 1650, 1043, 4129, 3016, 3017, 4121, 3034, 3035,
	3036, 4114, 4104, 4103, 178, 4078, 3016, 3017, 4062, 4061,
	141, 2328, 214, 4047, 4044, 3992, 213, 1451, 3969, 3940,
	3923, 3922, 215, 207, 3904, 178, 3903, 3867, 3843, 214,
	213, 213, 208, 214, 1524, 213, 3760, 1597, 3741, 1644,
	207, 3678, 1596, 988, 207, 3672, 1538, 3669, 3561, 208,
	3560, 3547, 1745, 208, 814, 3546, 1750, 3489, 3477, 215,
	3386, 1740, 3334, 3317, 3273, 1681, 3016, 3017, 3212, 3031,
	214, 177, 1742, 215, 215, 177, 3185, 3159, 215, 3158,
	3127, 207, 3125, 1681, 2957, 2956, 2951, 2919, 2724, 1549,
	208, 1798, 1797, 1796, 1793, 1785, 1783, 1566, 1043, 1043,
	1043, 2567, 2566, 2536, 1043, 2529, 3891, 214, 1598, 1703,
	1705, 1165, 177, 1165, 3033, 2496, 2376, 1856, 207, 1812,
	1807, 214, 214, 1806, 1805, 2748, 214, 208, 1234, 1804,
	1803, 1802, 207, 207, 213, 1801, 1043, 207, 986, 716,
	1800, 208, 208, 1892, 716, 1799, 208, 1647, 1811, 177,
	1780, 1655, 1779, 1043, 1654, 213, 1778, 1354, 3159, 3022,
	1673, 1674, 1777, 177, 177, 1776, 1696, 1775, 177, 1774,
	3022, 1649, 1773, 966, 213, 1043, 1772, 215, 1820, 965,
	1771, 1234, 1794, 1668, 1669, 1651, 1770, 4106, 2393, 1769,
	1676, 1768, 1767, 1766, 1865, 1755, 1741, 3038, 215, 1739,
	1734, 1927, 1947, 1192, 1182, 1204, 1175, 1861, 3870, 1841,
	1867, 1956, 1817, 1818, 1673, 1674, 3764, 215, 1860, 3037,
	3712, 3520, 3500, 1449, 1675, 214, 213, 1922, 1871, 1921,
	3022, 166, 3492, 1918, 1786, 1787, 207, 1704, 1131, 2939,
	3028, 3029, 3030, 2527, 1676, 208, 214, 3027, 3025, 3026,
	3018, 3019, 3020, 3021, 3023, 3024, 3099, 207, 1454, 3958,
	3032, 1163, 2139, 1163, 986, 214, 208, 177, 2558, 215,
	3016, 3017, 3766, 3519, 1754, 3123, 207, 1842, 1675, 1160,
	2379, 1160, 1863, 1864, 1159, 208, 1159, 1832, 177, 4085,
	1737, 722, 3302, 1852, 1217, 1848, 722, 213, 2377, 4372,
	3016, 3017, 4365, 4083, 1697, 3283, 725, 2763, 4132, 1210,
	4034, 725, 1924, 3818, 1839, 4033, 3895, 214, 3845, 1354,
	1354, 3972, 213, 3844, 1215, 1920, 1673, 1674, 207, 1234,
	1949, 3032, 3817, 1810, 3763, 1949, 3681, 208, 3188, 3680,
	215, 3373, 1209, 1949, 3679, 1834, 1969, 1851, 1850, 3495,
	1849, 1847, 1216, 1846, 1886, 1836, 1676, 1845, 1775, 177,
	239, 3319, 1775, 3318, 4039, 215, 3623, 2002, 1565, 1868,
	2005, 1642, 1792, 2010, 1915, 1872, 1209, 2977, 1681, 1791,
	2364, 2976, 2901, 2627, 1212, 1935, 2644, 3559, 214, 946,
	1675, 3257, 2158, 3256, 2034, 2038, 1612, 1764, 3033, 207,
	1574, 1952, 4248, 2136, 1942, 2945, 4030, 3944, 208, 4292,
	4277, 4264, 3241, 214, 2821, 1575, 2029, 1209, 3063, 3579,
	1206, 1981, 1703, 1705, 207, 3578, 1986, 3564, 3350, 4273,
	177, 3136, 947, 208, 3022, 3423, 1761, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 2359, 2670, 3536, 2565,
	1808, 1788, 3248, 2076, 2014, 177, 1478, 1429, 1677, 1678,
	1679, 1680, 1682, 1683, 2365, 2031, 1357, 213, 1187, 3033,
	4286, 4283, 3292, 722, 1354, 4125, 1354, 3879, 1354, 1696,
	3234, 4207, 4111, 1453, 2083, 3162, 3554, 2804, 725, 2667,
	1681, 2072, 4274, 2760, 1354, 1354, 4331, 1143, 1211, 994,
	3367, 4356, 3140, 4332, 3592, 1354, 1553, 4013, 3806, 1363,
	215, 2088, 2077, 1396, 1404, 776, 2577, 1354, 1362, 1354,
	1354, 1354, 2237, 2009, 3028, 3029, 3030, 944, 942, 1358,
	4420, 3027, 3025, 3026, 3018, 3019, 3020, 3021, 3023, 3024,
	2145, 716, 1088, 2366, 940, 2363, 2039, 3020, 3021, 3023,
	3024, 4006, 2157, 1454, 1161, 1207, 1161, 2207, 214, 2096,
	2205, 938, 935, 1208, 926, 3998, 3591, 3840, 3588, 207,
	3587, 2085, 3581, 3577, 1610, 3575, 3533, 3532, 208, 3237,
	2235, 3118, 2950, 2111, 2150, 1936, 2949, 2948, 2059, 2058,
	2098, 2947, 1941, 1940, 1405, 2141, 1949, 1951, 2905, 2677,
	177, 2162, 3027, 3025, 3026, 3018, 3019, 3020, 3021, 3023,
	3024, 2676, 2672, 777, 2595, 984, 2663, 1697, 2655, 2654,
	2653, 2652, 1043, 2090, 1043, 986, 2094, 986, 1217, 2593,
	2146, 1043, 3124, 1036, 1892, 1892, 1234, 2631, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1510, 1043, 1510, 1043, 1043, 1043, 1043,
	1451, 1551, 2093, 2618, 2093, 2368, 1216, 2239, 2595, 1217,
	4357, 2226, 1609, 722, 1193, 2132, 2548, 2133, 1043, 983,
	2309, 1043, 1043, 2593, 1683, 3142, 1925, 2136, 725, 1043,
	1648, 1944, 2407, 1043, 2236, 1043, 1043, 3187, 2406, 2237,
	1209, 2267, 2757, 1234, 2149, 1441, 4360, 1440, 2057, 1043,
	1043, 1043, 1043, 1464, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1439, 3351, 1438, 3921, 1400, 1216, 2220, 2166,
	1978, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 2333,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 2154,
	2219, 2183, 1412, 1043, 1745, 2340, 2341, 2235, 1453, 2201,
	1546, 1359, 2234, 1974, 1591, 1165, 2250, 1608, 2559, 2340,
	2356, 2359, 1234, 2362, 932, 2263, 2264, 2584, 2540, 2617,
	2174, 1165, 3980, 2211, 2167, 2893, 985, 1979, 1980, 3018,
	3019, 3020, 3021, 3023, 3024, 2402, 4361, 1043, 1234, 1946,
	2225, 1199, 2223, 2224, 2605, 2878, 2238, 2231, 2469, 1567,
	2324, 1210, 1653, 3550, 2448, 2448, 2462, 1975, 2340, 1592,
	4384, 2482, 2484, 2355, 3024, 1886, 1886, 2488, 2616, 966,
	2648, 986, 966, 966, 2233, 2254, 2512, 1945, 2255, 2256,
	986, 2168, 2171, 3819, 986, 1621, 2095, 1679, 1680, 1682,
	1683, 693, 2641, 2642, 2218, 1673, 1674, 2641, 2642, 1822,
	4331, 2504, 3016, 3017, 1852, 2641, 2642, 2324, 4270, 2669,
	1172, 2537, 779, 778, 2629, 1547, 1593, 1841, 1704, 2165,
	3539, 2336, 644, 1641, 2175, 1676, 3016, 3017, 3598, 2216,
	1625, 2236, 3358, 3357, 2857, 2368, 3982, 2353, 1131, 1234,
	3139, 2668, 1575, 4363, 2526, 1604, 1575, 2892, 639, 3412,
	1170, 3839, 2608, 1191, 3202, 1163, 1425, 3576, 1204, 1675,
	2863, 3574, 1206, 1563, 2503, 4348, 1210, 3597, 3563, 1892,
	166, 1163, 986, 1160, 2511, 1826, 2516, 3236, 1159, 2522,
	2523, 2553, 3195, 2666, 2457, 2332, 2473, 2444, 2486, 1160,
	982, 2704, 2330, 3201, 1159, 691, 3409, 1234, 3206, 2234,
	1423, 2505, 2509, 2510, 2494, 2495, 2671, 2404, 1981, 3802,
	2580, 1354, 2405, 3920, 2651, 2408, 1794, 2409, 2410, 844,
	1829, 3194, 1839, 2630, 2596, 2582, 1043, 1043, 2597, 1043,
	2703, 4342, 2551, 936, 936, 1824, 1552, 774, 3788, 773,
	1211, 3562, 4369, 2000, 1984, 1607, 4347, 2574, 2885, 2886,
	936, 2546, 1354, 1827, 1173, 4387, 2664, 2575, 2583, 1681,
	2045, 2044, 2206, 2568, 2866, 2204, 3022, 937, 936, 4320,
	921, 3784, 1786, 1787, 3694, 3410, 4271, 1206, 2581, 2572,
	3693, 1327, 1999, 1983, 1339, 1342, 2649, 2573, 2571, 2633,
	3022, 2368, 3289, 2771, 979, 1825, 2735, 1207, 2578, 3290,
	2561, 2620, 4401, 1703, 1705, 1208, 1463, 1402, 837, 1354,
	1354, 4126, 1354, 2632, 2108, 2594, 2745, 4140, 4362, 1399,
	4182, 1425, 3141, 3785, 1354, 3078, 2650, 3173, 2600, 1619,
	2634, 2595, 2610, 2613, 2728, 3605, 811, 2624, 2818, 1354,
	4319, 2026, 2217, 3859, 3603, 2607, 2611, 1342, 1342, 3551,
	2643, 2645, 2646, 2647, 1781, 1211, 2792, 2787, 1953, 1954,
	1696, 3121, 2628, 2826, 2827, 1972, 1622, 3032, 4269, 2320,
	2660, 3289, 2173, 722, 2833, 2834, 2835, 2215, 2786, 1043,
	1886, 2707, 3172, 922, 3981, 2709, 2515, 1342, 725, 1988,
	2025, 3032, 1972, 2865, 3690, 692, 3933, 2318, 2306, 2822,
	4341, 1828, 3800, 2741, 4218, 2713, 2789, 4143, 2716, 1363,
	2718, 1992, 1207, 3917, 3825, 1733, 2842, 2368, 2710, 2955,
	1208, 2722, 2862, 1043, 2350, 3605, 2773, 166, 3788, 1043,
	1043, 2841, 2803, 2732, 3603, 2778, 2508, 3215, 2793, 2781,
	694, 2782, 2849, 690, 2851, 2755, 2853, 2844, 1161, 2845,
	2846, 3606, 2762, 4388, 2521, 2762, 2839, 2868, 2774, 2870,
	2766, 3784, 1209, 985, 1161, 3777, 1989, 1548, 2848, 1972,
	2850, 3425, 2852, 4376, 2907, 2606, 2871, 2788, 640, 3176,
	3869, 933, 3775, 4367, 1043, 1043, 1652, 2794, 2469, 2790,
	1043, 3779, 2861, 2824, 2805, 2916, 3516, 2828, 1697, 2829,
	4180, 1623, 1171, 1043, 1043, 3033, 3077, 729, 3684, 1043,
	1043, 1510, 2864, 3785, 2012, 1043, 3780, 2170, 4298, 2464,
	1185, 3781, 3695, 2914, 1043, 1043, 1043, 4299, 3178, 3033,
	1043, 2323, 4318, 2314, 4181, 2847, 3369, 2011, 1620, 2876,
	1043, 3606, 3916, 4146, 4268, 838, 839, 3801, 641, 2908,
	2873, 2315, 3860, 3778, 2164, 1579, 2316, 1043, 2854, 2304,
	2321, 2884, 2307, 4330, 4328, 4161, 923, 1993, 2469, 2469,
	2007, 2875, 3783, 4046, 3638, 845, 2874, 1209, 2894, 1964,
	4368, 3276, 825, 1624, 1965, 2250, 3786, 1190, 2929, 2065,
	3177, 642, 2879, 643, 1979, 1980, 1819, 1562, 1564, 2933,
	2934, 1550, 1183, 921, 2937, 1178, 3345, 2331, 3604, 2113,
	631, 2303, 2115, 4370, 3618, 3338, 1663, 3691, 2120, 2938,
	2253, 2122, 1662, 3463, 2008, 2125, 2612, 979, 3601, 1982,
	1826, 1994, 1995, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
	4402, 3018, 3019, 3020, 3021, 3023, 3024, 1043, 1043, 1043,
	3739, 2906, 2109, 1937, 3989, 1990, 1043, 1043, 1043, 2911,
	986, 1043, 3988, 3025, 3026, 3018, 3019, 3020, 3021, 3023,
	3024, 1043, 1165, 1234, 3112, 1829, 3918, 1043, 3967, 1043,
	4055, 4393, 2912, 4110, 3070, 3071, 2917, 1165, 1934, 3639,
	2506, 2944, 3585, 1966, 3535, 3277, 1991, 3269, 3604, 924,
	3154, 3150, 3782, 2746, 2740, 1234, 3780, 3340, 1827, 2726,
	1968, 3781, 2469, 2469, 2469, 3345, 922, 1165, 1981, 2089,
	1234, 1661, 3339, 2078, 3338, 840, 841, 2003, 2317, 1733,
	2070, 2051, 3408, 3805, 2243, 3053, 4147, 1892, 2319, 3789,
	3804, 1234, 1455, 1393, 730, 731, 925, 2017, 2500, 3478,
	3529, 3072, 2024, 1662, 1339, 667, 1043, 3092, 4196, 3370,
	4297, 1932, 3783, 4162, 2212, 1930, 1657, 3641, 3884, 2635,
	1043, 3105, 2723, 2221, 1466, 1662, 3786, 3696, 1970, 4028,
	4026, 3082, 1892, 3080, 3106, 1663, 3968, 3165, 3161, 2305,
	3146, 3147, 3137, 2155, 3160, 2899, 2877, 3101, 1043, 1354,
	3491, 1933, 3075, 3074, 1996, 3464, 3143, 1204, 3163, 3336,
	1594, 3167, 2545, 3081, 3465, 1447, 3340, 3117, 3090, 826,
	827, 2502, 1163, 2544, 3093, 3094, 2501, 2543, 2542, 3164,
	3064, 3339, 3169, 3170, 1354, 1445, 3110, 1163, 843, 3131,
	1160, 3740, 3098, 2735, 1234, 1159, 3079, 3610, 3091, 3048,
	3049, 3050, 1661, 1354, 2913, 1160, 1828, 3697, 1354, 2730,
	1159, 2023, 983, 3151, 2915, 3218, 2244, 1163, 3221, 3096,
	3190, 3097, 3226, 3228, 1661, 1997, 3149, 4117, 2735, 4392,
	3851, 1354, 733, 732, 1580, 1160, 3328, 1354, 3175, 1354,
	1159, 1433, 3782, 1234, 3114, 3115, 3116, 2735, 3122, 923,
	716, 1971, 2735, 2087, 1434, 1972, 3244, 3901, 3213, 3976,
	3192, 1354, 3207, 4338, 3138, 4024, 1663, 3341, 3342, 3343,
	3344, 2825, 3253, 3205, 4148, 1354, 3144, 2708, 2706, 3789,
	1969, 3203, 1556, 3803, 2636, 2637, 734, 735, 3530, 3216,
	3204, 1165, 3223, 3155, 3262, 1889, 3179, 3230, 1886, 3285,
	3145, 3222, 4199, 3965, 3746, 4118, 3229, 4204, 3193, 1969,
	3480, 2818, 3239, 3186, 3242, 4193, 2375, 4222, 3197, 1864,
	2818, 3200, 4340, 4288, 3900, 2001, 1639, 4133, 3268, 3939,
	3208, 1637, 3182, 3183, 1354, 1354, 3184, 3214, 3128, 3129,
	3113, 3130, 3294, 1886, 3224, 2014, 3966, 3231, 1616, 828,
	829, 3198, 3738, 2014, 2075, 3199, 1354, 3977, 3235, 1614,
	1590, 1588, 3315, 3265, 3609, 3284, 3046, 3045, 3209, 3210,
	3385, 3348, 3211, 3132, 2004, 3308, 3341, 3342, 3343, 3344,
	3010, 666, 924, 3238, 1422, 4200, 1880, 3246, 4119, 2918,
	2727, 3278, 2633, 1234, 1586, 1446, 1234, 3352, 2662, 2626,
	3266, 3086, 722, 3286, 1964, 2570, 1859, 1584, 1855, 1965,
	1582, 1572, 1570, 1640, 1443, 1444, 1339, 725, 842, 2020,
	1967, 1534, 3366, 2203, 3365, 1657, 1043, 2859, 2858, 925,
	2831, 2232, 1043, 1043, 2214, 1232, 1043, 1043, 1043, 1333,
	1043, 1163, 166, 166, 3293, 986, 1603, 3309, 3326, 1043,
	1892, 3291, 3346, 3313, 3314, 3305, 2178, 3364, 1043, 1160,
	3300, 1043, 2050, 1919, 1159, 1161, 3330, 1234, 2018, 1765,
	3361, 1545, 1416, 2374, 4263, 3826, 1043, 3363, 3814, 4192,
	1161, 3882, 3831, 3354, 1234, 3355, 3773, 3356, 3637, 3629,
	3217, 3347, 3087, 3590, 1892, 1892, 1043, 1043, 3557, 1043,
	1043, 1043, 2469, 2469, 1638, 3388, 3371, 2019, 4316, 1636,
	1161, 3405, 3555, 3534, 3272, 3267, 3258, 2785, 1966, 2780,
	2758, 2744, 2733, 3360, 2720, 2705, 1615, 2129, 2127, 3397,
	3398, 2124, 2121, 2116, 2114, 1968, 2110, 1613, 1589, 1587,
	3085, 1043, 3437, 2101, 3368, 1043, 2049, 1892, 1892, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 3438, 1043,
	4308, 3089, 1585, 2047, 2030, 2015, 1043, 1043, 1892, 1998,
	1985, 1964, 1973, 1043, 3393, 1583, 1965, 3281, 1581, 1571,
	1569, 2779, 1442, 1666, 1043, 934, 3225, 2783, 2202, 1051,
	3404, 2024, 1866, 1970, 3513, 1165, 1165, 4332, 1938, 1043,
	3420, 3411, 3413, 3414, 2469, 2469, 2469, 2469, 2469, 2469,
	2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469,
	2469, 2469, 2469, 3427, 2469, 3435, 1140, 2897, 1234, 3436,
	4232, 3906, 3899, 243, 243, 243, 3898, 634, 635, 3509,
	650, 634, 650, 660, 665, 2263, 3428, 3475, 683, 3838,
	3769, 1886, 1141, 689, 2819, 1957, 1398, 3440, 4057, 243,
	2595, 2615, 4050, 1043, 3649, 3088, 3467, 2595, 3496, 1981,
	2169, 1634, 1635, 3512, 4231, 2593, 3442, 2086, 822, 1043,
	1165, 1487, 2614, 2198, 243, 1966, 706, 1486, 3468, 1667,
	1822, 3487, 3488, 166, 2197, 1886, 1886, 2176, 2263, 3443,
	2023, 3807, 1968, 3833, 3476, 1568, 1043, 1043, 1673, 1674,
	3484, 3485, 4092, 3415, 1673, 1674, 1971, 3747, 2898, 3725,
	1972, 2638, 2619, 2247, 1161, 1670, 4334, 3514, 3515, 3471,
	939, 941, 943, 1043, 3543, 4326, 3434, 4293, 1676, 3499,
	645, 3526, 3527, 3528, 2719, 1163, 1163, 2200, 1886, 1886,
	3498, 236, 3482, 3626, 3584, 1354, 2071, 1196, 1142, 2667,
	2675, 1487, 2674, 1160, 1160, 3180, 1826, 764, 1159, 1159,
	1970, 1487, 1675, 808, 1892, 3583, 1889, 1889, 1675, 1886,
	3565, 2659, 2657, 2621, 4187, 4156, 3569, 3570, 3572, 2623,
	1342, 4364, 3586, 656, 2658, 3538, 628, 634, 634, 3974,
	4153, 4116, 2622, 1354, 3181, 243, 4042, 3580, 4021, 3628,
	1043, 1829, 3617, 3506, 3271, 2765, 2487, 1923, 1165, 1043,
	1873, 3120, 4391, 3016, 3017, 3651, 1824, 1673, 1674, 3624,
	1163, 4224, 3642, 3608, 2771, 1532, 4225, 1342, 4072, 1354,
	1354, 1354, 4155, 2633, 1827, 3660, 4224, 3643, 1160, 4378,
	1365, 4225, 3717, 1159, 3646, 1354, 3595, 2587, 2588, 2585,
	2586, 2370, 2465, 3518, 2587, 2585, 2403, 1880, 1880, 3625,
	2818, 4344, 3645, 1555, 1234, 1618, 3664, 4043, 1617, 1554,
	4007, 3834, 3830, 3829, 3713, 1967, 1825, 3635, 3517, 3522,
	4064, 3416, 3219, 1971, 1858, 3627, 1234, 1972, 1759, 1043,
	1043, 3676, 1758, 4065, 3596, 1043, 1043, 1892, 4349, 4191,
	1043, 1043, 4190, 1043, 4189, 3611, 3630, 1043, 4107, 1327,
	3644, 4002, 3959, 3647, 3956, 3862, 3599, 3652, 1043, 3607,
	3653, 3765, 3675, 3655, 4066, 3155, 1339, 3612, 3553, 3632,
	3548, 3303, 1961, 3275, 1043, 3659, 3274, 1959, 3006, 3005,
	3004, 3003, 3002, 3670, 3667, 3001, 3000, 3665, 3666, 3674,
	3699, 2999, 3707, 2998, 2997, 2996, 3673, 2995, 1163, 3671,
	2994, 2993, 3631, 2992, 3698, 2991, 2990, 2989, 2988, 2987,
	2986, 1962, 2985, 3687, 2984, 1886, 1160, 3711, 2983, 3692,
	2856, 1159, 1828, 4068, 2838, 2837, 2836, 2776, 2750, 2721,
	2563, 2562, 2335, 2199, 1165, 2196, 2195, 2194, 2193, 2192,
	2104, 1123, 1165, 2103, 2102, 4067, 1234, 2100, 1234, 2084,
	1673, 1674, 2060, 2056, 2055, 1165, 2054, 2053, 2052, 1633,
	1632, 1577, 4069, 1576, 3682, 1473, 1472, 1471, 1161, 1161,
	1470, 1469, 1234, 1704, 1342, 1342, 1468, 1467, 1465, 3683,
	1676, 1460, 1459, 1458, 1457, 1456, 1411, 1410, 1409, 1408,
	1407, 1406, 1967, 3737, 1401, 1043, 1397, 1165, 1395, 1394,
	3770, 3771, 1225, 1224, 1223, 1222, 1221, 1189, 1188, 3105,
	3755, 1928, 945, 931, 1675, 3979, 3787, 1627, 85, 1403,
	752, 1889, 79, 3808, 1234, 2042, 1339, 2021, 3752, 3552,
	3748, 904, 1234, 1342, 4221, 3797, 1387, 3798, 3753, 3751,
	3758, 4139, 3754, 759, 166, 3809, 3749, 3750, 1886, 3759,
	4206, 3543, 3171, 1161, 3762, 3744, 3835, 2678, 3836, 2177,
	1354, 1354, 1578, 2179, 3100, 2528, 4179, 1339, 3772, 1339,
	3721, 2954, 4099, 3932, 2373, 1763, 3057, 1354, 81, 1027,
	1073, 3858, 3857, 3852, 1163, 3774, 3799, 3537, 1234, 2808,
	3855, 3854, 1163, 1354, 1877, 3837, 3828, 1879, 993, 3810,
	3811, 1237, 1160, 1939, 1033, 1163, 3847, 1159, 1955, 1948,
	1160, 2564, 1880, 3813, 1681, 1159, 2447, 1050, 3849, 3841,
	1165, 2735, 3885, 1160, 3821, 1047, 3823, 3846, 1159, 1881,
	1354, 1354, 1354, 1883, 1049, 3824, 3848, 3886, 1048, 3875,
	1882, 1234, 1782, 1046, 1876, 3634, 3633, 1163, 2729, 2769,
	3301, 1452, 3880, 1043, 1043, 1043, 1176, 3853, 1703, 1705,
	3902, 1450, 906, 3889, 3872, 1160, 3871, 1943, 3894, 2329,
	1159, 1234, 3822, 3868, 3543, 2357, 1043, 2943, 3304, 1043,
	1043, 3306, 3307, 1756, 1186, 1008, 3310, 3887, 3311, 1043,
	3312, 1161, 1892, 683, 4070, 1029, 2354, 1043, 1043, 4071,
	1181, 1018, 1007, 3083, 3062, 3288, 3911, 3505, 2242, 768,
	3908, 3905, 1234, 3909, 1354, 1696, 3013, 243, 2360, 243,
	243, 1330, 3919, 243, 243, 1345, 3874, 1174, 1234, 3924,
	3913, 3929, 2881, 2470, 2463, 2459, 1043, 3135, 2759, 243,
	1643, 1367, 3946, 1165, 1735, 2770, 1219, 3941, 3861, 1011,
	2327, 1747, 2923, 2252, 2469, 1043, 3935, 1892, 3295, 3873,
	3103, 2557, 1391, 3961, 4228, 1043, 3424, 2064, 1043, 1139,
	1163, 1138, 1137, 4212, 4209, 3668, 3251, 1043, 1931, 2579,
	1415, 3893, 1421, 1725, 1234, 3259, 243, 243, 1160, 1330,
	3952, 3953, 1023, 1159, 3955, 1354, 1354, 3543, 1338, 3068,
	3962, 2469, 3329, 1413, 4001, 688, 3794, 3960, 1462, 1035,
	1724, 2699, 2465, 2465, 2698, 4113, 1205, 1203, 1202, 1201,
	243, 3153, 243, 243, 3984, 1330, 243, 1345, 3983, 4400,
	3549, 212, 2266, 1234, 4036, 3253, 1354, 683, 4027, 243,
	243, 2891, 1664, 1656, 209, 3999, 211, 4012, 4003, 210,
	3863, 3510, 4004, 1697, 1165, 1165, 4009, 3109, 4291, 3567,
	3243, 21, 822, 20, 4016, 4051, 4025, 4017, 4020, 4040,
	19, 4019, 106, 1043, 1043, 40, 18, 1161, 121, 138,
	4052, 4041, 4060, 137, 4054, 1161, 4035, 114, 136, 4014,
	1043, 1892, 4079, 1163, 4075, 4076, 135, 4048, 1161, 134,
	4053, 133, 4058, 1886, 140, 132, 131, 4059, 3543, 3543,
	4073, 1160, 3889, 126, 130, 129, 1159, 128, 3991, 2371,
	1043, 127, 125, 1043, 124, 123, 122, 120, 119, 118,
	4056, 117, 4087, 116, 243, 4120, 115, 4015, 113, 112,
	1161, 111, 110, 1165, 4109, 109, 4097, 4088, 4089, 4091,
	108, 243, 107, 679, 676, 2469, 2465, 2465, 2465, 57,
	56, 977, 105, 921, 4108, 104, 17, 38, 1886, 14,
	61, 62, 1346, 16, 13, 4123, 33, 84, 96, 95,
	1339, 34, 93, 4128, 1043, 1043, 4122, 979, 4142, 1677,
	1678, 1679, 1680, 1682, 1683, 1165, 92, 3543, 1165, 32,
	15, 4127, 1354, 2075, 1163, 1163, 1389, 90, 4135, 89,
	31, 29, 1354, 1354, 2538, 11, 9, 4137, 8, 35,
	4150, 4151, 1160, 1160, 4149, 1843, 12, 1159, 1159, 1354,
	1426, 5, 978, 4170, 171, 4158, 4154, 4040, 4160, 170,
	173, 169, 172, 1043, 1043, 4166, 4163, 83, 168, 3543,
	167, 4164, 3543, 1043, 4167, 82, 27, 10, 4168, 4169,
	163, 4037, 3622, 1161, 76, 165, 164, 3556, 162, 3558,
	4174, 161, 4201, 160, 1502, 4173, 922, 77, 74, 159,
	78, 4203, 1043, 1043, 1518, 1043, 158, 4184, 4188, 1889,
	75, 157, 25, 1163, 4211, 4214, 6, 60, 7, 3914,
	3349, 99, 1886, 100, 36, 72, 4226, 4223, 71, 4233,
	70, 1160, 4230, 24, 59, 2590, 1159, 4183, 23, 4216,
	200, 199, 4175, 198, 4176, 4242, 3589, 4247, 197, 196,
	4246, 1043, 1043, 1043, 1889, 1339, 1339, 195, 190, 189,
	4245, 194, 4237, 4240, 192, 1163, 4241, 4220, 1163, 634,
	1557, 191, 4141, 193, 188, 203, 4215, 4275, 1043, 4219,
	4202, 202, 4261, 1160, 204, 4262, 1160, 4280, 1159, 201,
	243, 1159, 243, 4157, 4259, 4260, 243, 206, 187, 185,
	1880, 181, 180, 184, 186, 4300, 1161, 183, 182, 1367,
	1330, 243, 179, 243, 205, 4302, 155, 156, 243, 1367,
	650, 67, 4311, 243, 1367, 3657, 1043, 4313, 4304, 3658,
	683, 4301, 4278, 154, 153, 4307, 4312, 1339, 4317, 152,
	4306, 151, 150, 149, 148, 1880, 66, 22, 4309, 4310,
	2, 245, 1, 0, 4314, 4333, 0, 4336, 0, 0,
	4329, 4327, 4325, 4323, 4324, 0, 0, 4211, 0, 4335,
	4214, 4337, 0, 0, 1165, 0, 1165, 4339, 4346, 923,
	4343, 4354, 0, 4358, 4230, 4351, 4350, 0, 0, 4359,
	0, 0, 4352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4234, 0, 0, 4235, 4373, 0,
	0, 0, 0, 4371, 4353, 0, 4355, 1161, 1161, 0,
	0, 0, 0, 0, 0, 0, 4382, 0, 3543, 4380,
	3543, 4386, 0, 4385, 4379, 1043, 1043, 0, 0, 0,
	0, 0, 0, 1043, 0, 1043, 1043, 4389, 0, 4395,
	0, 0, 4403, 4345, 4398, 0, 0, 4405, 4407, 0,
	4404, 4409, 0, 0, 0, 4408, 0, 0, 0, 0,
	0, 0, 2771, 4406, 0, 0, 0, 4412, 4413, 0,
	0, 0, 4419, 4416, 0, 4415, 0, 4417, 4424, 4418,
	0, 4423, 0, 4422, 4414, 4426, 1043, 243, 0, 4427,
	243, 4429, 0, 4433, 0, 0, 1161, 4430, 0, 4432,
	976, 0, 924, 0, 0, 0, 2465, 2465, 0, 4396,
	4397, 0, 0, 0, 1163, 0, 1163, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 1160, 0, 0, 1159, 0, 1159,
	3016, 3017, 243, 3034, 3035, 3036, 243, 0, 1161, 925,
	0, 1161, 0, 243, 0, 0, 0, 0, 0, 243,
	4428, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 243, 0, 0, 0,
	634, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 1889, 243, 0,
	0, 0, 0, 0, 3031, 243, 0, 0, 2465, 2465,
	2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465,
	2465, 2465, 2465, 2465, 2465, 2465, 2465, 0, 2465, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	822, 0, 0, 1880, 0, 0, 0, 0, 0, 1889,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 1330, 243, 1342,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	1889, 0, 683, 0, 0, 0, 0, 1880, 1880, 243,
	0, 0, 68, 0, 3022, 0, 0, 0, 0, 0,
	243, 243, 0, 243, 0, 243, 0, 243, 69, 243,
	0, 0, 2920, 2921, 0, 0, 0, 0, 2075, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	2208, 0, 0, 2209, 0, 2210, 0, 0, 0, 0,
	1880, 1880, 0, 0, 0, 0, 0, 243, 0, 3069,
	0, 0, 0, 0, 3037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 665, 0,
	0, 1880, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 3095, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 3032, 3108, 1161, 0, 1161,
	0, 86, 0, 0, 0, 0, 0, 0, 3993, 3994,
	0, 0, 0, 0, 0, 101, 0, 3126, 0, 0,
	87, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4008, 0, 0, 4010, 4011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	1674, 0, 0, 0, 0, 0, 3039, 3040, 3041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 1704, 0, 0, 88, 0, 0, 0, 1676,
	0, 0, 0, 2134, 0, 0, 1889, 0, 0, 0,
	0, 0, 703, 0, 0, 0, 0, 0, 0, 1502,
	2147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2148, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 2156, 1695, 2159, 2160, 2161, 0, 0, 634,
	0, 0, 1692, 3033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 707,
	0, 0, 0, 634, 0, 0, 0, 0, 0, 0,
	243, 0, 634, 0, 0, 0, 0, 0, 0, 3108,
	0, 0, 0, 0, 243, 0, 0, 1880, 0, 0,
	0, 0, 0, 3702, 0, 0, 0, 0, 0, 243,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 1699, 1700, 1701, 0, 0, 0,
	1006, 0, 4136, 1681, 1006, 0, 91, 0, 0, 1889,
	0, 698, 0, 0, 0, 0, 0, 0, 2075, 0,
	1318, 0, 0, 0, 1318, 0, 243, 1345, 0, 650,
	243, 0, 1342, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 0, 0, 1703, 1705, 3028,
	3029, 3030, 174, 94, 0, 97, 3027, 3025, 3026, 3018,
	3019, 3020, 3021, 3023, 3024, 68, 0, 0, 0, 708,
	0, 0, 1690, 1691, 2604, 0, 0, 0, 0, 213,
	0, 69, 705, 243, 0, 0, 0, 817, 700, 0,
	0, 0, 139, 0, 0, 243, 0, 73, 0, 0,
	1880, 0, 0, 0, 1696, 0, 0, 0, 243, 1333,
	0, 0, 1232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 243, 0, 0, 0, 68,
	697, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 141, 0, 0,
	243, 2711, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 73, 178, 0, 0, 0, 0, 0, 0, 0,
	214, 710, 0, 0, 86, 1367, 0, 0, 243, 0,
	0, 207, 699, 3401, 0, 0, 243, 0, 101, 0,
	208, 0, 0, 87, 98, 2754, 0, 0, 0, 0,
	3417, 80, 0, 0, 0, 2604, 0, 634, 0, 0,
	4290, 2775, 177, 0, 0, 0, 0, 243, 0, 0,
	243, 0, 1702, 0, 243, 0, 243, 0, 0, 0,
	0, 1330, 0, 243, 243, 0, 1345, 1345, 86, 0,
	0, 0, 1697, 0, 0, 0, 2801, 822, 88, 2604,
	2604, 0, 101, 0, 0, 0, 0, 87, 98, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0,
	0, 0, 0, 243, 1330, 243, 3381, 3382, 1367, 0,
	1367, 1367, 243, 1704, 0, 1330, 0, 1330, 0, 1330,
	1676, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 2465, 3016,
	3017, 0, 3034, 3035, 3036, 243, 243, 243, 243, 1330,
	243, 0, 243, 0, 1675, 0, 0, 0, 0, 0,
	0, 3703, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 3508, 0, 0, 0, 0, 0,
	0, 0, 1339, 243, 1889, 2465, 0, 0, 0, 0,
	0, 243, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 2702, 0, 0, 91,
	0, 0, 0, 3031, 0, 0, 0, 0, 3444, 3445,
	3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455,
	3456, 3457, 3458, 3459, 3460, 3461, 3462, 0, 3466, 0,
	0, 0, 0, 0, 1698, 1699, 1700, 1701, 0, 1889,
	0, 0, 0, 0, 1681, 174, 94, 0, 97, 0,
	0, 0, 0, 1673, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 1342, 1880, 0, 0, 0, 0,
	1367, 0, 213, 0, 0, 0, 1704, 0, 0, 1713,
	817, 0, 1723, 1676, 0, 139, 0, 0, 1703, 1705,
	0, 0, 0, 3022, 2791, 1502, 0, 0, 0, 1318,
	0, 0, 0, 0, 1719, 0, 1720, 0, 0, 174,
	94, 0, 97, 1690, 1691, 215, 0, 1675, 0, 0,
	0, 0, 0, 0, 2832, 0, 0, 1695, 0, 2465,
	1880, 1711, 0, 0, 0, 0, 213, 0, 0, 0,
	141, 0, 0, 0, 817, 1696, 1006, 0, 0, 139,
	0, 0, 1318, 3037, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1889, 207, 0, 0, 0, 0, 215,
	0, 0, 0, 208, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 3032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1515, 0, 1698, 1699, 1700,
	1701, 243, 0, 0, 0, 0, 0, 1681, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 214, 0, 1821,
	0, 634, 0, 0, 0, 0, 634, 0, 207, 634,
	0, 0, 634, 634, 0, 0, 0, 208, 634, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 1703, 1705, 1702, 1880, 2694, 0, 0, 1367, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 2686, 2684,
	1318, 0, 0, 0, 0, 2688, 2690, 2680, 0, 1714,
	0, 0, 2604, 2604, 243, 0, 1345, 0, 1696, 2604,
	0, 0, 3157, 0, 0, 0, 0, 0, 0, 0,
	2604, 3157, 3033, 2604, 3157, 3157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 243,
	1345, 243, 0, 0, 3757, 0, 0, 3016, 3017, 0,
	3034, 3035, 3036, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 243, 0, 0, 1330, 0, 0, 3767, 3390,
	3016, 3017, 0, 3034, 3035, 3036, 0, 2604, 0, 3220,
	2604, 1345, 0, 0, 2604, 2604, 1345, 0, 0, 0,
	0, 0, 3389, 0, 1712, 0, 0, 0, 992, 1687,
	1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677,
	1678, 1679, 1680, 1682, 1683, 243, 0, 0, 0, 0,
	0, 3031, 0, 0, 0, 0, 1702, 0, 0, 243,
	3247, 0, 0, 3249, 2604, 0, 0, 243, 0, 0,
	0, 243, 0, 1421, 3031, 0, 1697, 0, 3028, 3029,
	3030, 0, 0, 0, 0, 3027, 3025, 3026, 3018, 3019,
	3020, 3021, 3023, 3024, 0, 2754, 2682, 0, 1330, 0,
	243, 0, 0, 2604, 0, 634, 0, 2696, 0, 0,
	0, 0, 2604, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 243, 243, 0, 0, 2695, 2687,
	2685, 2689, 2691, 2681, 2683, 2697, 0, 0, 0, 0,
	0, 3022, 2693, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 2754, 0, 0, 2754, 3016, 3017, 0, 3034,
	3035, 3036, 0, 0, 3022, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 2700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3930, 1673, 1674,
	3359, 3037, 0, 1330, 243, 0, 243, 0, 0, 1686,
	1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0,
	0, 1704, 0, 0, 3037, 0, 0, 1318, 1676, 0,
	3031, 0, 0, 0, 0, 0, 0, 0, 3930, 243,
	0, 0, 3032, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 2266, 0, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 3032, 1709, 1704, 0, 0,
	0, 0, 1695, 0, 1676, 0, 0, 0, 0, 0,
	0, 1692, 1722, 0, 0, 0, 3232, 0, 0, 0,
	0, 0, 0, 0, 0, 3422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 0,
	2266, 0, 0, 0, 1318, 0, 3263, 0, 1695, 0,
	3022, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	3270, 0, 3384, 0, 0, 0, 0, 2701, 0, 0,
	0, 0, 0, 0, 0, 0, 2692, 0, 3938, 0,
	0, 0, 1698, 1699, 1700, 1701, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3033, 0, 0, 1318, 0, 0, 0, 0, 0, 3321,
	3322, 0, 0, 0, 0, 3970, 0, 0, 1698, 1699,
	1700, 1701, 0, 3033, 0, 0, 1703, 1705, 1681, 1318,
	0, 0, 0, 0, 243, 243, 0, 0, 0, 0,
	0, 3032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 1691, 0, 0, 0, 634, 634, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 1367, 1367,
	0, 0, 0, 1696, 0, 0, 0, 0, 1719, 0,
	1720, 0, 1367, 1367, 1367, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 3545,
	0, 0, 0, 0, 0, 0, 3028, 3029, 3030, 1696,
	1318, 0, 0, 3027, 3025, 3026, 3018, 3019, 3020, 3021,
	3023, 3024, 0, 0, 0, 0, 0, 683, 992, 3028,
	3029, 3030, 992, 0, 0, 0, 3027, 3025, 3026, 3018,
	3019, 3020, 3021, 3023, 3024, 0, 0, 0, 0, 4096,
	0, 1721, 0, 0, 0, 0, 1673, 1674, 243, 3033,
	0, 0, 0, 0, 0, 0, 0, 0, 1318, 1710,
	0, 0, 0, 0, 0, 0, 1345, 243, 0, 1704,
	1369, 1702, 1375, 0, 1381, 0, 1676, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 1697, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 243, 0, 0, 0, 243, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	1695, 0, 0, 0, 0, 0, 2604, 243, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 2801, 2801, 0, 1503,
	0, 0, 822, 822, 2604, 0, 0, 2754, 2754, 0,
	0, 822, 2604, 1714, 0, 0, 1521, 0, 1526, 0,
	0, 0, 0, 0, 0, 3028, 3029, 3030, 1535, 0,
	1540, 243, 3027, 3025, 3026, 3018, 3019, 3020, 3021, 3023,
	3024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 1699, 1700, 1701, 0, 0, 0, 0, 0, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678, 1679,
	1680, 1682, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 1605, 0, 0, 0, 0,
	0, 3722, 0, 0, 1703, 1705, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 1690,
	1691, 0, 0, 2967, 0, 0, 0, 2968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3593, 1696, 0, 243, 0, 0, 0, 0, 0, 1367,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	1674, 0, 2604, 2604, 2604, 0, 1744, 0, 0, 0,
	0, 0, 1757, 3795, 0, 3795, 3545, 1367, 0, 0,
	0, 0, 1704, 0, 0, 2604, 0, 3157, 0, 1676,
	1367, 1367, 243, 1345, 3661, 3662, 3663, 0, 0, 0,
	0, 0, 0, 0, 1345, 243, 1345, 243, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 2604, 0,
	2604, 243, 0, 1675, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 1673, 1674, 2604, 0, 0, 0, 1697,
	3865, 0, 1039, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 1704, 0, 243, 0,
	0, 0, 0, 1676, 0, 0, 0, 1815, 1815, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3379, 0, 0, 242, 242, 242, 3545,
	0, 0, 1367, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 0, 1698, 1699, 1700, 1701, 1695, 0, 0,
	0, 0, 723, 1681, 0, 0, 1692, 1673, 1674, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	1704, 0, 0, 0, 992, 0, 0, 1676, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 3378, 0, 1693,
	1689, 1318, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 1675, 1690, 1691, 0, 0, 0, 1698, 1699, 1700,
	1701, 1695, 1318, 2604, 0, 3157, 0, 1681, 3964, 0,
	1692, 0, 0, 0, 0, 0, 243, 1006, 0, 0,
	0, 0, 3545, 0, 1696, 0, 0, 0, 0, 0,
	0, 1006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 1703, 1705, 0, 0, 1330, 0, 0, 0, 0,
	0, 2909, 0, 0, 0, 0, 0, 0, 1162, 1345,
	243, 0, 0, 0, 0, 0, 1690, 1691, 0, 0,
	0, 1698, 1699, 1700, 1701, 1502, 0, 0, 0, 3964,
	0, 1681, 0, 0, 0, 0, 0, 2604, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 1696, 4045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3545, 3545, 1703, 1705, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	243, 243, 0, 0, 1318, 3910, 0, 3912, 0, 0,
	1690, 1691, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 3964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3795, 0, 0, 0, 0,
	0, 0, 3545, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3957,
	0, 0, 0, 243, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3545, 0, 243, 3545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3157, 0, 0,
	0, 0, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 1318, 0, 0, 1318, 0, 0,
	1702, 0, 0, 1367, 0, 1367, 0, 0, 0, 0,
	4018, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4197, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 2604, 0, 1693, 1689, 1318, 1686,
	1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0,
	0, 243, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 2241, 0, 2245, 0, 0, 0, 0, 0, 0,
	2259, 0, 0, 0, 0, 0, 3422, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 0, 2308, 0, 2310, 2311, 2312, 2313, 0,
	1693, 1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680,
	1682, 1683, 0, 0, 0, 0, 0, 2337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 2352, 3964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2382, 2385,
	2388, 2391, 0, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	0, 0, 0, 0, 1367, 0, 2604, 0, 0, 0,
	0, 0, 0, 3545, 0, 3545, 0, 1502, 1502, 0,
	0, 2461, 0, 2472, 2474, 2479, 0, 0, 0, 1318,
	242, 0, 242, 242, 1502, 0, 242, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1674, 2801, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 2604, 0, 0, 0, 0, 242,
	242, 0, 0, 0, 0, 0, 1709, 1704, 0, 2801,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 242, 0, 242, 242, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1709, 1704, 1675, 0,
	0, 0, 242, 242, 1676, 0, 0, 0, 1695, 0,
	0, 0, 1722, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 0, 0, 0, 242, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 2714, 2715, 0, 2717, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 1698, 1699,
	1700, 1701, 0, 1713, 0, 0, 1723, 0, 1681, 0,
	0, 0, 1703, 1705, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 0, 1713, 1673, 1674, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 1719, 1696,
	1720, 0, 0, 0, 1676, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 1696,
	0, 1721, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 1166, 0, 0, 0, 1692, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 1318, 2855, 1318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 2902, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 1726, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 1837, 0, 1162, 0, 1697, 1681, 242,
	0, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 1318, 242, 1837, 242, 1702, 0, 0,
	0, 723, 0, 1714, 0, 0, 723, 0, 0, 0,
	0, 0, 0, 2903, 2904, 0, 0, 1697, 0, 2910,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2924, 2925,
	0, 0, 0, 1714, 2352, 0, 0, 1690, 1691, 1318,
	0, 0, 0, 2932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 2958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 1318, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 2348, 0, 0, 0, 2349, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 3728, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 723, 0, 2479, 2479, 2479, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 3073, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 1318, 242, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 242,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 992, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 992,
	0, 242, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 242, 0, 0, 0, 0, 1166, 0, 0, 0,
	1166, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 242, 0, 242, 0, 242, 0,
	242, 0, 242, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 1006, 1006, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 68, 1166, 44, 43, 0,
	0, 0, 1166, 0, 0, 0, 1166, 0, 0, 0,
	0, 69, 0, 0, 142, 0, 0, 0, 0, 0,
	1166, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 0, 46, 0, 144, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 80, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 64, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 86, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 2259, 47, 0, 101, 0,
	0, 3376, 3377, 87, 98, 3380, 0, 0, 0, 3383,
	0, 0, 0, 0, 0, 0, 0, 0, 3387, 0,
	0, 0, 0, 0, 0, 0, 0, 3394, 0, 0,
	3073, 0, 0, 0, 0, 799, 0, 1162, 0, 0,
	50, 0, 0, 0, 0, 3406, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 782, 0, 0, 88, 0,
	783, 0, 0, 0, 0, 3429, 3430, 242, 3431, 3432,
	3433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	3439, 0, 0, 0, 3441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	786, 0, 0, 242, 0, 0, 1673, 1674, 0, 1706,
	1707, 1708, 1716, 1717, 1718, 3469, 3470, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 0, 1709, 1704,
	0, 0, 0, 3481, 0, 0, 1676, 0, 0, 787,
	0, 0, 0, 0, 1722, 0, 0, 0, 3490, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 242, 91,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 242, 789, 0, 0, 790, 51, 0, 1166, 1692,
	1166, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	709, 0, 0, 55, 0, 1166, 0, 0, 0, 65,
	0, 0, 3531, 0, 54, 174, 94, 0, 97, 0,
	1893, 0, 52, 723, 804, 0, 146, 0, 3540, 0,
	0, 0, 0, 53, 1166, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	58, 242, 0, 0, 0, 139, 3566, 0, 1166, 242,
	1698, 1699, 1700, 1701, 0, 0, 0, 0, 0, 143,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 215, 0, 0, 0, 0,
	242, 0, 0, 242, 0, 0, 0, 242, 0, 242,
	0, 0, 0, 0, 0, 1713, 242, 242, 1723, 0,
	141, 0, 0, 0, 1703, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	1719, 0, 1720, 214, 0, 0, 0, 242, 0, 1690,
	1691, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	792, 0, 0, 208, 0, 0, 242, 1711, 242, 1815,
	0, 0, 0, 0, 0, 242, 0, 0, 3654, 0,
	0, 1696, 0, 0, 0, 177, 0, 811, 3, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 1166, 242, 242,
	242, 242, 0, 242, 0, 242, 1166, 0, 0, 0,
	0, 708, 0, 1721, 0, 0, 0, 0, 794, 0,
	0, 0, 809, 810, 807, 0, 0, 0, 0, 0,
	802, 1710, 0, 795, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 3700, 3701,
	0, 0, 0, 0, 3705, 3706, 0, 0, 0, 3709,
	3710, 0, 0, 0, 0, 0, 3714, 0, 0, 0,
	0, 796, 803, 0, 0, 0, 0, 3718, 0, 0,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 3723, 798, 0, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 1166, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 1166, 0, 2440, 2441, 2442, 2443, 2436, 2437,
	2438, 2439, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 1166, 1166, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715, 1693,
	1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 0, 0, 2416, 2417, 2418, 2419, 0, 0, 3392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 2428, 2429, 2430, 2431, 2424,
	2425, 2426, 2427, 2432, 2433, 2434, 2435, 0, 0, 1162,
	0, 0, 0, 0, 0, 1673, 1674, 0, 1706, 1707,
	1708, 1716, 1717, 1718, 0, 0, 0, 0, 0, 0,
	0, 1893, 1893, 1166, 0, 0, 0, 1709, 1704, 1837,
	0, 0, 0, 0, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2412, 2413,
	2414, 2415, 2420, 2421, 2422, 2423, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 3925, 3926, 3927, 0, 0, 242, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2259, 0, 0, 3936, 3937,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 242, 0, 242, 0, 3945, 3948, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1699, 1700, 1701, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 3990, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 3997, 0, 0, 992, 242, 0,
	0, 0, 0, 0, 1713, 1166, 4005, 1723, 0, 0,
	0, 0, 723, 1703, 1705, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 242, 0, 0, 0, 0, 1719,
	0, 1720, 0, 0, 0, 0, 0, 0, 1690, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 242, 0, 0, 0, 242, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 1166, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 1893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4112,
	0, 0, 4115, 0, 0, 0, 0, 242, 0, 242,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 0, 0, 992, 992, 0, 0, 0, 0, 1166,
	0, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 0, 1714, 0, 741, 0, 0, 0,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 743, 0, 0, 1722,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2259, 0, 0, 1166, 1166, 0, 1166,
	0, 0, 3948, 0, 0, 1675, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 1695, 0, 0, 0, 745,
	0, 761, 0, 0, 1692, 0, 1166, 0, 0, 0,
	0, 0, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 1712,
	0, 747, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689,
	0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
	0, 769, 0, 0, 0, 0, 0, 748, 2970, 0,
	4258, 4258, 4258, 0, 0, 0, 0, 1162, 1162, 0,
	767, 0, 0, 0, 0, 1698, 1699, 1700, 1701, 0,
	0, 0, 0, 0, 0, 1681, 0, 4279, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 750, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 771, 0, 1703,
	1705, 709, 0, 0, 0, 4258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 1837, 1052, 1690, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 244, 244,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 242, 765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 1721, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 4258, 4390, 1710, 0, 244, 0,
	0, 242, 4394, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 242, 0, 0, 0, 242,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	754, 0, 1155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	1166, 0, 708, 0, 242, 0, 0, 0, 0, 0,
	1714, 0, 0, 740, 1166, 762, 238, 238, 630, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 1166, 760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 1893, 774, 0, 773, 1166, 0,
	0, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 775, 0, 772, 0,
	0, 0, 0, 0, 710, 1712, 0, 0, 0, 1893,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 1166, 0, 0, 0,
	0, 0, 0, 0, 2969, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 1673, 1674, 0, 0, 1166, 0, 1716, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 1704, 0, 0, 0, 1166, 0,
	0, 1676, 0, 0, 1166, 242, 1166, 0, 0, 1722,
	1166, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 242, 1675, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 0, 1698, 1699, 1700, 1701, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 0, 0, 1703,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 1166, 1837, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 1893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 1238, 244, 244, 0, 1238, 244, 244, 0,
	1238, 0, 0, 0, 1893, 1893, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 1893, 1837, 1837, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 242, 0, 0, 0, 1238, 0,
	244, 244, 1166, 1166, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 244, 1166, 244, 244, 0, 0,
	244, 0, 1238, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 1238, 244, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 1166, 0, 0,
	1229, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1238, 242,
	1837, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	0, 1028, 103, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 0, 1477, 1477, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 1519, 1520, 0, 0, 242, 0, 0, 103,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 1166, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 967, 0,
	0, 0, 0, 1166, 0, 0, 0, 1626, 0, 987,
	0, 0, 0, 0, 1893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 244, 244, 244, 0, 0,
	0, 1166, 244, 0, 0, 0, 0, 244, 0, 1166,
	0, 0, 0, 1166, 0, 1166, 0, 0, 0, 0,
	1238, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 1166, 1337, 0, 0, 0,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 1238, 1238, 244, 0, 0, 1166, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 1166, 1166, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 1166, 0,
	244, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 1893,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	244, 0, 0, 0, 0, 0, 244, 0, 0, 1166,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 244,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 1238,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 1238, 1238, 0,
	0, 0, 1166, 1166, 0, 0, 0, 0, 1238, 244,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 1238, 1238, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 2062, 0, 0, 0, 2069,
	1166, 0, 0, 1166, 244, 244, 0, 244, 0, 244,
	0, 244, 2081, 244, 0, 0, 0, 0, 0, 0,
	0, 1166, 1166, 0, 0, 0, 0, 2092, 0, 2092,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 103, 0, 103, 0, 103, 1893, 0,
	0, 1477, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 2152, 103, 0, 715, 0, 987, 103, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 103, 2172, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 1166, 103, 2184, 1166, 2186, 0, 2188, 1166,
	2190, 0, 2191, 0, 0, 0, 0, 0, 0, 1166,
	1166, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 244, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 244, 0, 0, 0, 1743, 0,
	0, 0, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 244, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 244, 1166, 0, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 2535, 0, 244,
	1238, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 1838, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 1238, 0, 0, 0, 0,
	244, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1699, 1700, 1701, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 244, 0, 0, 244, 0, 0, 0, 244, 0,
	244, 0, 0, 0, 0, 0, 0, 244, 244, 0,
	0, 0, 1238, 1238, 0, 1238, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 1238, 0, 1703,
	1705, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 1238, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 244, 1337, 244,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	244, 244, 244, 0, 244, 0, 244, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 244, 1710, 0, 0, 0,
	2777, 0, 0, 1477, 0, 0, 0, 1477, 0, 1477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2830, 1235, 0,
	0, 0, 1235, 0, 1702, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2840, 0, 2843, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 2867, 1337,
	2869, 1337, 0, 2872, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 987, 1477, 987, 0, 0,
	0, 0, 0, 0, 2900, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 2966, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 1236,
	0, 0, 0, 1356, 1238, 0, 0, 967, 0, 0,
	967, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 1238, 0, 0, 2326, 0, 0, 0, 0,
	0, 0, 244, 244, 0, 244, 0, 0, 0, 0,
	0, 987, 244, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 1743, 0, 244, 1238, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 1238, 0, 0,
	0, 1356, 0, 0, 0, 1356, 1238, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 244,
	1238, 0, 1238, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 1149, 0, 0, 0,
	0, 244, 0, 0, 1238, 244, 0, 0, 0, 0,
	0, 1356, 1838, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 3148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 1235, 244, 244,
	0, 3189, 3191, 0, 2081, 0, 0, 0, 715, 0,
	0, 0, 0, 715, 0, 0, 0, 1238, 1238, 0,
	0, 0, 0, 0, 0, 244, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 244, 1238,
	244, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3260, 0, 0, 0, 3264, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 1477, 0, 0, 103, 1337, 1337, 103,
	0, 103, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3325, 0, 0, 0, 1355, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 103, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 0, 3362, 0, 1337,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 3374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 1355, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 1355, 1355,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 2326,
	0, 0, 0, 0, 0, 1356, 1356, 0, 0, 0,
	0, 0, 244, 0, 0, 1236, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 244, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 1238, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 1356, 0, 1356, 0, 0, 0, 0, 1238,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	1356, 1356, 0, 1149, 0, 0, 0, 0, 0, 0,
	2081, 1356, 0, 0, 0, 0, 0, 0, 1149, 0,
	0, 2081, 0, 1356, 0, 1356, 1356, 1356, 0, 0,
	0, 3621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 3636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3685, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 103, 1238, 0, 103, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	103, 0, 0, 103, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 1235, 244,
	0, 244, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 1238, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 244, 0, 0, 1235, 0, 0, 0,
	0, 1238, 244, 0, 0, 0, 1238, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1149, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 1238, 1238, 0, 0, 1236, 0,
	0, 1355, 0, 0, 1238, 0, 0, 103, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 3812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 1355,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 1238, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 3881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 1238, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 1674, 1236, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 0, 0, 0, 1238, 1356, 0, 1238,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 244, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 3971,
	0, 0, 0, 0, 1692, 0, 0, 0, 103, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 1149, 1149, 0, 0,
	0, 1709, 1704, 0, 0, 1356, 1356, 0, 1356, 1676,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	1356, 0, 0, 2081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 244, 0, 0,
	0, 0, 0, 1675, 0, 1698, 1699, 1700, 1701, 0,
	0, 0, 0, 1695, 0, 1681, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 1238, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 0, 0, 1703,
	1705, 0, 1238, 4086, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 0, 0,
	0, 0, 1235, 1698, 1699, 1700, 1701, 0, 0, 0,
	0, 0, 1711, 1681, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1235,
	0, 1723, 0, 0, 0, 244, 0, 1703, 1705, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 1721, 0,
	1235, 0, 0, 1719, 0, 1720, 0, 0, 0, 0,
	0, 0, 1690, 1691, 0, 0, 1710, 0, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4159,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 1355, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 1710, 0, 0, 0, 0, 4205,
	0, 0, 1355, 0, 0, 0, 0, 1355, 0, 0,
	1714, 0, 0, 0, 0, 0, 4227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 4239, 0, 1355, 0, 1355, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 1236,
	1355, 0, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717,
	1718, 0, 1697, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 1704, 0, 0, 0, 103,
	0, 1236, 1676, 0, 0, 1149, 0, 0, 1714, 0,
	1722, 0, 0, 1149, 0, 1712, 1236, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 1675, 1236, 0, 0,
	4194, 0, 0, 1355, 1355, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 1235, 1712, 0, 1235, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 1698, 1699, 1700, 1701,
	1356, 0, 2965, 0, 0, 0, 1681, 0, 0, 103,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	103, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 103, 0, 1723, 0, 1235, 1356, 0, 0,
	1703, 1705, 0, 1356, 0, 1356, 0, 0, 0, 1236,
	0, 0, 0, 1235, 0, 0, 1719, 0, 1720, 0,
	0, 0, 0, 0, 0, 1690, 1691, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1356, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 1236, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 1674, 1697, 1706, 1707, 1708, 1716,
	1717, 1718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1704, 0, 0, 0,
	0, 1714, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 1236, 0, 0, 0, 2326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1236, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684,
	1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0,
	0, 0, 1355, 0, 0, 2964, 0, 1698, 1699, 1700,
	1701, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 1355,
	1355, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 1355, 1723, 0, 0, 0, 0,
	0, 1703, 1705, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 1719, 0, 1720,
	0, 0, 0, 0, 0, 0, 1690, 1691, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 103, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 1235, 0, 0,
	0, 0, 0, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 1702, 0, 0, 1356,
	0, 1235, 0, 0, 0, 0, 1709, 1704, 0, 0,
	0, 0, 0, 0, 1676, 0, 1697, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 1356, 1356, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 1675, 0,
	0, 1356, 0, 1235, 0, 0, 0, 0, 1695, 0,
	0, 1235, 0, 0, 0, 0, 0, 1692, 0, 0,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	1355, 0, 1236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 1698, 1699,
	1700, 1701, 1687, 1688, 1694, 1715, 1693, 1689, 1681, 1686,
	1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 1355,
	1355, 1355, 0, 0, 0, 0, 2349, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	1235, 0, 878, 0, 921, 0, 0, 0, 1719, 0,
	1720, 0, 1236, 0, 1236, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 1236, 0,
	0, 1235, 0, 1355, 900, 884, 883, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 885, 0, 0, 0, 0, 888, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	1236, 1721, 897, 898, 0, 0, 0, 0, 1236, 0,
	0, 914, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 1235, 0, 0, 0, 922, 890, 0,
	0, 0, 0, 0, 1355, 1355, 1356, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 1236, 0, 0, 0, 0, 1356,
	0, 0, 1235, 0, 0, 1355, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 893, 1356, 1356, 1356, 0,
	0, 0, 0, 882, 0, 0, 0, 1236, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 894, 895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1236, 0, 902,
	901, 0, 0, 0, 0, 0, 0, 896, 0, 0,
	0, 911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 0, 0, 0, 0,
	923, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 1355, 0, 4095, 0, 0, 0, 0, 0, 0,
	0, 1355, 1355, 0, 0, 0, 0, 0, 0, 0,
	1236, 889, 0, 0, 928, 0, 0, 0, 1355, 0,
	0, 1356, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 918,
	919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 916,
	0, 0, 0, 0, 0, 0, 927, 912, 0, 905,
	903, 0, 908, 0, 0, 0, 0, 0, 909, 0,
	0, 880, 0, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 910, 0, 0, 0, 0,
	907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	925, 0, 0, 0, 0, 0, 0, 0, 913, 0,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1356,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 1239,
	259, 260, 1240, 1241, 1242, 1356, 1243, 576, 1244, 1245,
	1246, 1247, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 1248, 581, 270,
	271, 272, 273, 274, 275, 1249, 1250, 0, 276, 582,
	583, 584, 1251, 277, 278, 585, 1252, 1319, 1253, 279,
	280, 281, 282, 283, 284, 285, 0, 1254, 287, 288,
	289, 286, 290, 1255, 291, 0, 292, 293, 294, 295,
	296, 297, 1256, 298, 299, 300, 1107, 301, 302, 1257,
	1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305, 306,
	0, 307, 586, 587, 1264, 311, 308, 309, 1265, 312,
	310, 1266, 313, 314, 315, 1267, 1268, 316, 317, 318,
	1269, 319, 320, 1270, 321, 322, 323, 1271, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 1272, 249, 1273, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 1274, 341,
	1275, 1276, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 1277, 352, 594, 1278, 595,
	353, 1279, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 1280, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 1281, 1109, 367, 599,
	600, 1282, 601, 1283, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 1284, 381, 383, 382, 1285, 384, 603,
	1114, 385, 386, 1115, 1286, 387, 0, 0, 0, 388,
	389, 1287, 1288, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1289, 251, 1118,
	430, 431, 1290, 604, 432, 605, 434, 435, 1291, 0,
	436, 0, 1292, 1293, 438, 439, 440, 1294, 1295, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 1296, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 1297, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 1298, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 1299, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 1300, 509, 510,
	508, 511, 512, 513, 1301, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 1302, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 1303, 536, 537, 0, 535,
	1304, 538, 539, 540, 541, 542, 543, 331, 544, 1305,
	545, 617, 618, 619, 620, 1306, 554, 1307, 546, 547,
	548, 621, 549, 622, 1308, 550, 551, 552, 553, 0,
	555, 556, 1309, 1310, 557, 558, 559, 561, 562, 560,
	563, 1311, 564, 1312, 0, 565, 566, 567, 623, 624,
	625, 1313, 569, 568, 570, 626, 1314, 1315, 1316, 1317,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	0, 0, 0, 0, 0, 0, 2514, 252, 254, 253,
	255, 256, 257, 258, 1239, 259, 260, 1240, 1241, 1242,
	0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 1248, 581, 270, 271, 272, 273, 274, 275,
	1249, 1250, 0, 276, 582, 583, 584, 1251, 277, 278,
	585, 1252, 1319, 1253, 279, 280, 281, 282, 283, 284,
	285, 0, 1254, 287, 288, 289, 286, 290, 1255, 291,
	0, 292, 293, 294, 295, 296, 297, 1256, 298, 299,
	300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262,
	1263, 303, 304, 305, 306, 0, 307, 586, 587, 1264,
	311, 308, 309, 1265, 312, 310, 1266, 313, 314, 315,
	1267, 1268, 316, 317, 318, 1269, 319, 320, 1270, 321,
	322, 323, 1271, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 1272, 249,
	1273, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 1274, 341, 1275, 1276, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	1277, 352, 594, 1278, 595, 353, 1279, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 1110, 359, 360, 1280,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 1281, 1109, 367, 599, 600, 1282, 601, 1283, 369,
	370, 1111, 602, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1284, 381,
	383, 382, 1285, 384, 603, 1114, 385, 386, 1115, 1286,
	387, 0, 0, 0, 388, 389, 1287, 1288, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1289, 251, 1118, 430, 431, 1290, 604, 432,
	605, 434, 435, 1291, 0, 436, 0, 1292, 1293, 438,
	439, 440, 1294, 1295, 441, 442, 606, 1119, 443, 1120,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 1296, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 1297, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 1298, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 1299,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 1300, 509, 510, 508, 511, 512, 513, 1301,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 1302, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	1303, 536, 537, 0, 535, 1304, 538, 539, 540, 541,
	542, 543, 331, 544, 1305, 545, 617, 618, 619, 620,
	1306, 554, 1307, 546, 547, 548, 621, 549, 622, 1308,
	550, 551, 552, 553, 0, 555, 556, 1309, 1310, 557,
	558, 559, 561, 562, 560, 563, 1311, 564, 1312, 0,
	565, 566, 567, 623, 624, 625, 1313, 569, 568, 570,
	626, 1314, 1315, 1316, 1317, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 3400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3402,
	252, 254, 253, 255, 256, 257, 258, 1239, 259, 260,
	1240, 1241, 1242, 0, 1243, 576, 1244, 1245, 1246, 1247,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 1248, 581, 270, 271, 272,
	273, 274, 275, 1249, 1250, 0, 276, 582, 583, 584,
	1251, 277, 278, 585, 1252, 1319, 1253, 279, 280, 281,
	282, 283, 284, 285, 0, 1254, 287, 288, 289, 286,
	290, 1255, 291, 0, 292, 293, 294, 295, 296, 297,
	1256, 298, 299, 300, 1107, 301, 302, 1257, 1258, 1260,
	1259, 1261, 1262, 1263, 303, 304, 305, 306, 0, 307,
	586, 587, 1264, 311, 308, 309, 1265, 312, 310, 1266,
	313, 314, 315, 1267, 1268, 316, 317, 318, 1269, 319,
	320, 1270, 321, 322, 323, 1271, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 1272, 249, 1273, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 1274, 341, 1275, 1276,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 1277, 352, 594, 1278, 595, 353, 1279,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 1280, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 1281, 1109, 367, 599, 600, 1282,
	601, 1283, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 1284, 381, 383, 382, 1285, 384, 603, 1114, 385,
	386, 1115, 1286, 387, 0, 0, 0, 388, 389, 1287,
	1288, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1289, 251, 1118, 430, 431,
	1290, 604, 432, 605, 434, 435, 1291, 0, 436, 0,
	1292, 1293, 438, 439, 440, 1294, 1295, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1296, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1297, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 1298, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 1299, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 1300, 509, 510, 508, 511,
	512, 513, 1301, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1302,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 1303, 536, 537, 0, 535, 1304, 538,
	539, 540, 541, 542, 543, 331, 544, 1305, 545, 617,
	618, 619, 620, 1306, 554, 1307, 546, 547, 548, 621,
	549, 622, 1308, 550, 551, 552, 553, 0, 555, 556,
	1309, 1310, 557, 558, 559, 561, 562, 560, 563, 1311,
	564, 1312, 0, 565, 566, 567, 623, 624, 625, 1313,
	569, 568, 570, 626, 1314, 1315, 1316, 1317, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3756, 252, 254, 253,
	255, 256, 257, 258, 1239, 259, 260, 1240, 1241, 1242,
	0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 1248, 581, 270, 271, 272, 273, 274, 275,
	1249, 1250, 0, 276, 582, 583, 584, 1251, 277, 278,
	585, 1252, 1319, 1253, 279, 280, 281, 282, 283, 284,
	285, 0, 1254, 287, 288, 289, 286, 290, 1255, 291,
	0, 292, 293, 294, 295, 296, 297, 1256, 298, 299,
	300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262,
	1263, 303, 304, 305, 306, 0, 307, 586, 587, 1264,
	311, 308, 309, 1265, 312, 310, 1266, 313, 314, 315,
	1267, 1268, 316, 317, 318, 1269, 319, 320, 1270, 321,
	322, 323, 1271, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 1272, 249,
	1273, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 1274, 341, 1275, 1276, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	1277, 352, 594, 1278, 595, 353, 1279, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 1110, 359, 360, 1280,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 1281, 1109, 367, 599, 600, 1282, 601, 1283, 369,
	370, 1111, 602, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1284, 381,
	383, 382, 1285, 384, 603, 1114, 385, 386, 1115, 1286,
	387, 0, 0, 0, 388, 389, 1287, 1288, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1289, 251, 1118, 430, 431, 1290, 604, 432,
	605, 434, 435, 1291, 0, 436, 0, 1292, 1293, 438,
	439, 440, 1294, 1295, 441, 442, 606, 1119, 443, 1120,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 1296, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 1297, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 1298, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 1299,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 1300, 509, 510, 508, 511, 512, 513, 1301,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 1302, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	1303, 536, 537, 0, 535, 1304, 538, 539, 540, 541,
	542, 543, 331, 544, 1305, 545, 617, 618, 619, 620,
	1306, 554, 1307, 546, 547, 548, 621, 549, 622, 1308,
	550, 551, 552, 553, 0, 555, 556, 1309, 1310, 557,
	558, 559, 561, 562, 560, 563, 1311, 564, 1312, 0,
	565, 566, 567, 623, 624, 625, 1313, 569, 568, 570,
	626, 1314, 1315, 1316, 1317, 571, 572, 627, 573, 574,
	575, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3931, 252,
	254, 253, 255, 256, 257, 258, 1239, 259, 260, 1240,
	1241, 1242, 0, 1243, 576, 1244, 1245, 1246, 1247, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 1248, 581, 270, 271, 272, 273,
	274, 275, 1249, 1250, 0, 276, 582, 583, 584, 1251,
	277, 278, 585, 1252, 1319, 1253, 279, 280, 281, 282,
	283, 284, 285, 0, 1254, 287, 288, 289, 286, 290,
	1255, 291, 0, 292, 293, 294, 295, 296, 297, 1256,
	298, 299, 300, 1107, 301, 302, 1257, 1258, 1260, 1259,
	1261, 1262, 1263, 303, 304, 305, 306, 0, 307, 586,
	587, 1264, 311, 308, 309, 1265, 312, 310, 1266, 313,
	314, 315, 1267, 1268, 316, 317, 318, 1269, 319, 320,
	1270, 321, 322, 323, 1271, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	1272, 249, 1273, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 1274, 341, 1275, 1276, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 1277, 352, 594, 1278, 595, 353, 1279, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 1110, 359,
	360, 1280, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 1281, 1109, 367, 599, 600, 1282, 601,
	1283, 369, 370, 1111, 602, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	1284, 381, 383, 382, 1285, 384, 603, 1114, 385, 386,
	1115, 1286, 387, 0, 0, 0, 388, 389, 1287, 1288,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1289, 251, 1118, 430, 431, 1290,
	604, 432, 605, 434, 435, 1291, 0, 436, 0, 1292,
	1293, 438, 439, 440, 1294, 1295, 441, 442, 606, 1119,
	443, 1120, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 1296, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	1297, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 1298, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 1299, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 1300, 509, 510, 508, 511, 512,
	513, 1301, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 1302, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 1303, 536, 537, 0, 535, 1304, 538, 539,
	540, 541, 542, 543, 331, 544, 1305, 545, 617, 618,
	619, 620, 1306, 554, 1307, 546, 547, 548, 621, 549,
	622, 1308, 550, 551, 552, 553, 0, 555, 556, 1309,
	1310, 557, 558, 559, 561, 562, 560, 563, 1311, 564,
	1312, 0, 565, 566, 567, 623, 624, 625, 1313, 569,
	568, 570, 626, 1314, 1315, 1316, 1317, 571, 572, 627,
	573, 574, 575, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3820, 252, 254, 253, 255, 256, 257, 258, 1239, 259,
	260, 1240, 1241, 1242, 0, 1243, 576, 1244, 1245, 1246,
	1247, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 1248, 581, 270, 271,
	272, 273, 274, 275, 1249, 1250, 0, 276, 582, 583,
	584, 1251, 277, 278, 585, 1252, 1319, 1253, 279, 280,
	281, 282, 283, 284, 285, 0, 1254, 287, 288, 289,
	286, 290, 1255, 291, 0, 292, 293, 294, 295, 296,
	297, 1256, 298, 299, 300, 1107, 301, 302, 1257, 1258,
	1260, 1259, 1261, 1262, 1263, 303, 304, 305, 306, 0,
	307, 586, 587, 1264, 311, 308, 309, 1265, 312, 310,
	1266, 313, 314, 315, 1267, 1268, 316, 317, 318, 1269,
	319, 320, 1270, 321, 322, 323, 1271, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 1272, 249, 1273, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 1274, 341, 1275,
	1276, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 1277, 352, 594, 1278, 595, 353,
	1279, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 1280, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 1281, 1109, 367, 599, 600,
	1282, 601, 1283, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 1284, 381, 383, 382, 1285, 384, 603, 1114,
	385, 386, 1115, 1286, 387, 0, 0, 0, 388, 389,
	1287, 1288, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1289, 251, 1118, 430,
	431, 1290, 604, 432, 605, 434, 435, 1291, 0, 436,
	0, 1292, 1293, 438, 439, 440, 1294, 1295, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 1296, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 1297, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 1298, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 1299, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 1300, 509, 510, 508,
	511, 512, 513, 1301, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	1302, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 1303, 536, 537, 0, 535, 1304,
	538, 539, 540, 541, 542, 543, 331, 544, 1305, 545,
	617, 618, 619, 620, 1306, 554, 1307, 546, 547, 548,
	621, 549, 622, 1308, 550, 551, 552, 553, 0, 555,
	556, 1309, 1310, 557, 558, 559, 561, 562, 560, 563,
	1311, 564, 1312, 0, 565, 566, 567, 623, 624, 625,
	1313, 569, 568, 570, 626, 1314, 1315, 1316, 1317, 571,
	572, 627, 573, 574, 575, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3686, 252, 254, 253, 255, 256, 257, 258,
	1239, 259, 260, 1240, 1241, 1242, 0, 1243, 576, 1244,
	1245, 1246, 1247, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 1248, 581,
	270, 271, 272, 273, 274, 275, 1249, 1250, 0, 276,
	582, 583, 584, 1251, 277, 278, 585, 1252, 1319, 1253,
	279, 280, 281, 282, 283, 284, 285, 0, 1254, 287,
	288, 289, 286, 290, 1255, 291, 0, 292, 293, 294,
	295, 296, 297, 1256, 298, 299, 300, 1107, 301, 302,
	1257, 1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305,
	306, 0, 307, 586, 587, 1264, 311, 308, 309, 1265,
	312, 310, 1266, 313, 314, 315, 1267, 1268, 316, 317,
	318, 1269, 319, 320, 1270, 321, 322, 323, 1271, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 1272, 249, 1273, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 1274,
	341, 1275, 1276, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 1277, 352, 594, 1278,
	595, 353, 1279, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 1280, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 1281, 1109, 367,
	599, 600, 1282, 601, 1283, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 1284, 381, 383, 382, 1285, 384,
	603, 1114, 385, 386, 1115, 1286, 387, 0, 0, 0,
	388, 389, 1287, 1288, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1289, 251,
	1118, 430, 431, 1290, 604, 432, 605, 434, 435, 1291,
	0, 436, 0, 1292, 1293, 438, 439, 440, 1294, 1295,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 1296, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 1297, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 1298, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 1299, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 1300, 509,
	510, 508, 511, 512, 513, 1301, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 1302, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 1303, 536, 537, 0,
	535, 1304, 538, 539, 540, 541, 542, 543, 331, 544,
	1305, 545, 617, 618, 619, 620, 1306, 554, 1307, 546,
	547, 548, 621, 549, 622, 1308, 550, 551, 552, 553,
	0, 555, 556, 1309, 1310, 557, 558, 559, 561, 562,
	560, 563, 1311, 564, 1312, 0, 565, 566, 567, 623,
	624, 625, 1313, 569, 568, 570, 626, 1314, 1315, 1316,
	1317, 571, 572, 627, 573, 574, 575, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3418, 252, 254, 253, 255, 256,
	257, 258, 1239, 259, 260, 1240, 1241, 1242, 0, 1243,
	576, 1244, 1245, 1246, 1247, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	1248, 581, 270, 271, 272, 273, 274, 275, 1249, 1250,
	0, 276, 582, 583, 584, 1251, 277, 278, 585, 1252,
	1319, 1253, 279, 280, 281, 282, 283, 284, 285, 0,
	1254, 287, 288, 289, 286, 290, 1255, 291, 0, 292,
	293, 294, 295, 296, 297, 1256, 298, 299, 300, 1107,
	301, 302, 1257, 1258, 1260, 1259, 1261, 1262, 1263, 303,
	304, 305, 306, 0, 307, 586, 587, 1264, 311, 308,
	309, 1265, 312, 310, 1266, 313, 314, 315, 1267, 1268,
	316, 317, 318, 1269, 319, 320, 1270, 321, 322, 323,
	1271, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 1272, 249, 1273, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 1274, 341, 1275, 1276, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 1277, 352,
	594, 1278, 595, 353, 1279, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 1110, 359, 360, 1280, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 1281,
	1109, 367, 599, 600, 1282, 601, 1283, 369, 370, 1111,
	602, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 1284, 381, 383, 382,
	1285, 384, 603, 1114, 385, 386, 1115, 1286, 387, 0,
	0, 0, 388, 389, 1287, 1288, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1289, 251, 1118, 430, 431, 1290, 604, 432, 605, 434,
	435, 1291, 0, 436, 0, 1292, 1293, 438, 439, 440,
	1294, 1295, 441, 442, 606, 1119, 443, 1120, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	1296, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 1297, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	1298, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 1299, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	1300, 509, 510, 508, 511, 512, 513, 1301, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 1302, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 1303, 536,
	537, 0, 535, 1304, 538, 539, 540, 541, 542, 543,
	331, 544, 1305, 545, 617, 618, 619, 620, 1306, 554,
	1307, 546, 547, 548, 621, 549, 622, 1308, 550, 551,
	552, 553, 0, 555, 556, 1309, 1310, 557, 558, 559,
	561, 562, 560, 563, 1311, 564, 1312, 0, 565, 566,
	567, 623, 624, 625, 1313, 569, 568, 570, 626, 1314,
	1315, 1316, 1317, 571, 572, 627, 573, 574, 575, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3245, 252, 254, 253,
	255, 256, 257, 258, 1239, 259, 260, 1240, 1241, 1242,
	0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 1248, 581, 270, 271, 272, 273, 274, 275,
	1249, 1250, 0, 276, 582, 583, 584, 1251, 277, 278,
	585, 1252, 1319, 1253, 279, 280, 281, 282, 283, 284,
	285, 0, 1254, 287, 288, 289, 286, 290, 1255, 291,
	0, 292, 293, 294, 295, 296, 297, 1256, 298, 299,
	300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262,
	1263, 303, 304, 305, 306, 0, 307, 586, 587, 1264,
	311, 308, 309, 1265, 312, 310, 1266, 313, 314, 315,
	1267, 1268, 316, 317, 318, 1269, 319, 320, 1270, 321,
	322, 323, 1271, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 1272, 249,
	1273, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 1274, 341, 1275, 1276, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	1277, 352, 594, 1278, 595, 353, 1279, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 1110, 359, 360, 1280,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 1281, 1109, 367, 599, 600, 1282, 601, 1283, 369,
	370, 1111, 602, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1284, 381,
	383, 382, 1285, 384, 603, 1114, 385, 386, 1115, 1286,
	387, 0, 0, 0, 388, 389, 1287, 1288, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1289, 251, 1118, 430, 431, 1290, 604, 432,
	605, 434, 435, 1291, 0, 436, 0, 1292, 1293, 438,
	439, 440, 1294, 1295, 441, 442, 606, 1119, 443, 1120,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 1296, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 1297, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 1298, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 1299,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 1300, 509, 510, 508, 511, 512, 513, 1301,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 1302, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	1303, 536, 537, 0, 535, 1304, 538, 539, 540, 541,
	542, 543, 331, 544, 1305, 545, 617, 618, 619, 620,
	1306, 554, 1307, 546, 547, 548, 621, 549, 622, 1308,
	550, 551, 552, 553, 0, 555, 556, 1309, 1310, 557,
	558, 559, 561, 562, 560, 563, 1311, 564, 1312, 0,
	565, 566, 567, 623, 624, 625, 1313, 569, 568, 570,
	626, 1314, 1315, 1316, 1317, 571, 572, 627, 573, 574,
	575, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2372, 252,
	254, 253, 255, 256, 257, 258, 1239, 259, 260, 1240,
	1241, 1242, 0, 1243, 576, 1244, 1245, 1246, 1247, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 1248, 581, 270, 271, 272, 273,
	274, 275, 1249, 1250, 0, 276, 582, 583, 584, 1251,
	277, 278, 585, 1252, 1319, 1253, 279, 280, 281, 282,
	283, 284, 285, 0, 1254, 287, 288, 289, 286, 290,
	1255, 291, 0, 292, 293, 294, 295, 296, 297, 1256,
	298, 299, 300, 1107, 301, 302, 1257, 1258, 1260, 1259,
	1261, 1262, 1263, 303, 304, 305, 306, 0, 307, 586,
	587, 1264, 311, 308, 309, 1265, 312, 310, 1266, 313,
	314, 315, 1267, 1268, 316, 317, 318, 1269, 319, 320,
	1270, 321, 322, 323, 1271, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	1272, 249, 1273, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 1274, 341, 1275, 1276, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 1277, 352, 594, 1278, 595, 353, 1279, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 1110, 359,
	360, 1280, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 1281, 1109, 367, 599, 600, 1282, 601,
	1283, 369, 370, 1111, 602, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	1284, 381, 383, 382, 1285, 384, 603, 1114, 385, 386,
	1115, 1286, 387, 0, 0, 0, 388, 389, 1287, 1288,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1289, 251, 1118, 430, 431, 1290,
	604, 432, 605, 434, 435, 1291, 0, 436, 0, 1292,
	1293, 438, 439, 440, 1294, 1295, 441, 442, 606, 1119,
	443, 1120, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 1296, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	1297, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 1298, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 1299, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 1300, 509, 510, 508, 511, 512,
	513, 1301, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 1302, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 1303, 536, 537, 0, 535, 1304, 538, 539,
	540, 541, 542, 543, 331, 544, 1305, 545, 617, 618,
	619, 620, 1306, 554, 1307, 546, 547, 548, 621, 549,
	622, 1308, 550, 551, 552, 553, 0, 555, 556, 1309,
	1310, 557, 558, 559, 561, 562, 560, 563, 1311, 564,
	1312, 0, 565, 566, 567, 623, 624, 625, 1313, 569,
	568, 570, 626, 1314, 1315, 1316, 1317, 571, 572, 627,
	573, 574, 575, 1331, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 252, 254, 253, 255, 256, 257, 258, 1239,
	259, 260, 1240, 1241, 1242, 0, 1243, 576, 1244, 1245,
	1246, 1247, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 1248, 581, 270,
	271, 272, 273, 274, 275, 1249, 1250, 0, 276, 582,
	583, 584, 1251, 277, 278, 585, 1252, 1319, 1253, 279,
	280, 281, 282, 283, 284, 285, 0, 1254, 287, 288,
	289, 286, 290, 1255, 291, 0, 292, 293, 294, 295,
	296, 297, 1256, 298, 299, 300, 1107, 301, 302, 1257,
	1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305, 306,
	0, 307, 586, 587, 1264, 311, 308, 309, 1265, 312,
	310, 1266, 313, 314, 315, 1267, 1268, 316, 317, 318,
	1269, 319, 320, 1270, 321, 322, 323, 1271, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 1272, 249, 1273, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 1274, 341,
	1275, 1276, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 1277, 352, 594, 1278, 595,
	353, 1279, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 1280, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 1281, 1109, 367, 599,
	600, 1282, 601, 1283, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 1284, 381, 383, 382, 1285, 384, 603,
	1114, 385, 386, 1115, 1286, 387, 0, 0, 0, 388,
	389, 1287, 1288, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1289, 251, 1118,
	430, 431, 1290, 604, 432, 605, 434, 435, 1291, 0,
	436, 0, 1292, 1293, 438, 439, 440, 1294, 1295, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 1296, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 1297, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 1298, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 1299, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 1300, 509, 510,
	508, 511, 512, 513, 1301, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 1302, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 1303, 536, 537, 0, 535,
	1304, 538, 539, 540, 541, 542, 543, 331, 544, 1305,
	545, 617, 618, 619, 620, 1306, 554, 1307, 546, 547,
	548, 621, 549, 622, 1308, 550, 551, 552, 553, 0,
	555, 556, 1309, 1310, 557, 558, 559, 561, 562, 560,
	563, 1311, 564, 1312, 0, 565, 566, 567, 623, 624,
	625, 1313, 569, 568, 570, 626, 1314, 1315, 1316, 1317,
	571, 572, 627, 573, 574, 575, 1230, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 1239, 259, 260, 1240, 1241, 1242, 0, 1243,
	576, 1244, 1245, 1246, 1247, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	1248, 581, 270, 271, 272, 273, 274, 275, 1249, 1250,
	0, 276, 582, 583, 584, 1251, 277, 278, 585, 1252,
	1319, 1253, 279, 280, 281, 282, 283, 284, 285, 0,
	1254, 287, 288, 289, 286, 290, 1255, 291, 0, 292,
	293, 294, 295, 296, 297, 1256, 298, 299, 300, 1107,
	301, 302, 1257, 1258, 1260, 1259, 1261, 1262, 1263, 303,
	304, 305, 306, 0, 307, 586, 587, 1264, 311, 308,
	309, 1265, 312, 310, 1266, 313, 314, 315, 1267, 1268,
	316, 317, 318, 1269, 319, 320, 1270, 321, 322, 323,
	1271, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 1272, 249, 1273, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 1274, 341, 1275, 1276, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 1277, 352,
	594, 1278, 595, 353, 1279, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 1110, 359, 360, 1280, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 1281,
	1109, 367, 599, 600, 1282, 601, 1283, 369, 370, 1111,
	602, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 1284, 381, 383, 382,
	1285, 384, 603, 1114, 385, 386, 1115, 1286, 387, 0,
	0, 0, 388, 389, 1287, 1288, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1289, 251, 1118, 430, 431, 1290, 604, 432, 605, 434,
	435, 1291, 0, 436, 0, 1292, 1293, 438, 439, 440,
	1294, 1295, 441, 442, 606, 1119, 443, 1120, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	1296, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 1297, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	1298, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 1299, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	1300, 509, 510, 508, 511, 512, 513, 1301, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 1302, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 1303, 536,
	537, 0, 535, 1304, 538, 539, 540, 541, 542, 543,
	331, 544, 1305, 545, 617, 618, 619, 620, 1306, 554,
	1307, 546, 547, 548, 621, 549, 622, 1308, 550, 551,
	552, 553, 0, 555, 556, 1309, 1310, 557, 558, 559,
	561, 562, 560, 563, 1311, 564, 1312, 0, 565, 566,
	567, 623, 624, 625, 1313, 569, 568, 570, 626, 1314,
	1315, 1316, 1317, 571, 572, 627, 573, 574, 575, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 1239, 259, 260, 1240, 1241, 1242, 0,
	1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 1248, 581, 270, 271, 272, 273, 274, 275, 1249,
	1250, 0, 276, 582, 583, 584, 1251, 277, 278, 585,
	1252, 1319, 1253, 279, 280, 281, 282, 283, 284, 285,
	0, 1254, 287, 288, 289, 286, 290, 1255, 291, 0,
	292, 293, 294, 295, 296, 297, 1256, 298, 299, 300,
	1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262, 1263,
	303, 304, 305, 306, 0, 307, 586, 587, 1264, 311,
	308, 309, 1265, 312, 310, 1266, 313, 314, 315, 1267,
	1268, 316, 317, 318, 1269, 319, 320, 1270, 321, 322,
	323, 1271, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 1272, 249, 1273,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 1274, 341, 1275, 1276, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 1277,
	352, 594, 1278, 595, 353, 1279, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 1110, 359, 360, 1280, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	1281, 1109, 367, 599, 600, 1282, 601, 1283, 369, 370,
	1111, 602, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 1284, 381, 383,
	382, 1285, 384, 603, 1114, 385, 386, 1115, 1286, 387,
	0, 0, 0, 388, 389, 1287, 1288, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1289, 251, 1118, 430, 431, 1290, 604, 432, 605,
	434, 435, 1291, 0, 436, 0, 1292, 1293, 438, 439,
	440, 1294, 1295, 441, 442, 606, 1119, 443, 1120, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 1296, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 1297, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 1298, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 1299, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 1300, 509, 510, 508, 511, 512, 513, 1301, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 1302, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 1303,
	536, 537, 0, 535, 1304, 538, 539, 540, 541, 542,
	543, 331, 544, 1305, 545, 617, 618, 619, 620, 1306,
	554, 1307, 546, 547, 548, 621, 549, 622, 1308, 550,
	551, 552, 553, 0, 555, 556, 1309, 1310, 557, 558,
	559, 561, 562, 560, 563, 1311, 564, 1312, 0, 565,
	566, 567, 623, 624, 625, 1313, 569, 568, 570, 626,
	1314, 1315, 1316, 1317, 571, 572, 627, 573, 574, 575,
	2347, 0, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 2344, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 2345, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 2343, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	2346, 0, 0, 0, 0, 0, 0, 1026, 2342, 0,
	988, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 213, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 215, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 1511, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 207, 571, 572, 627,
	573, 574, 575, 1001, 0, 208, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 1748, 1746, 0,
	0, 1024, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 213, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 215, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 1511, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 207, 571, 572, 627, 573, 574,
	575, 1001, 0, 208, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 1042, 1014,
	1015, 1016, 1012, 1013, 1025, 1748, 2922, 0, 0, 1024,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1066, 1030, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 1079, 0, 268, 1086, 269, 1085,
	0, 1096, 270, 271, 272, 273, 274, 275, 1032, 1065,
	999, 276, 1126, 1127, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 1089, 307, 1083, 1082, 1003, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1074, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1009, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 1021, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1081, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 1094, 1095,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 1031, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 1076, 1077, 0, 1037, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1080, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 1010, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	213, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 1078, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 1125, 530, 531, 532, 533, 1101, 0, 536,
	537, 998, 535, 215, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 1090, 1091, 1092, 1093, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 1020, 550, 551,
	552, 553, 0, 555, 556, 0, 1004, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 1511, 1087, 1124, 0, 569, 568, 570, 626, 0,
	0, 0, 207, 571, 572, 627, 573, 574, 575, 1001,
	0, 208, 0, 0, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 995, 996, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 1748, 1746, 0, 0, 1024, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 2475, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 2480, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 2476, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 2477, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 2392, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 2390, 0, 2389, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 2387, 0, 2386, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 2384, 0, 2383, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 2381, 0, 1601, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 1600, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 991, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 1005, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013,
	1025, 1026, 0, 0, 0, 1024, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1066, 1030, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	1079, 0, 268, 1086, 269, 1085, 0, 1096, 270, 271,
	272, 273, 274, 275, 1032, 1065, 999, 276, 1126, 1127,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 4217,
	297, 0, 298, 299, 300, 1107, 301, 302, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089,
	307, 1083, 1082, 1003, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1074, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1009,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 1021, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1081, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 1094, 1095, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 1031, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 1076, 1077,
	0, 1037, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1000, 251, 1118, 430,
	431, 1022, 1070, 432, 1084, 434, 435, 0, 0, 436,
	0, 1005, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1080, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 1010, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 1078, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 1125, 530,
	531, 532, 533, 1101, 0, 536, 537, 998, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	1090, 1091, 1092, 1093, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 1020, 550, 551, 552, 553, 0, 555,
	556, 0, 1004, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 1087, 1124,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1001, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026,
	0, 0, 0, 1024, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 2261,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	2260, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 1005, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 1042, 1014,
	1015, 1016, 1012, 1013, 1025, 1026, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1066, 1030, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 1079, 0, 268, 1086, 269, 1085,
	0, 1096, 270, 271, 272, 273, 274, 275, 1032, 1065,
	999, 276, 1126, 1127, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 4000, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 1089, 307, 1083, 1082, 1003, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1074, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1009, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 1021, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1081, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 1094, 1095,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 1031, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 1076, 1077, 0, 1037, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084, 434,
	435, 0, 0, 436, 0, 1005, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1080, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 1010, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 1078, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 1125, 530, 531, 532, 533, 1101, 0, 536,
	537, 998, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 1090, 1091, 1092, 1093, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 1020, 550, 551,
	552, 553, 0, 555, 556, 0, 1004, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 623, 1087, 1124, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1001,
	0, 0, 0, 0, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 995, 996, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 3648,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 1816, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 1024, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 3396, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013,
	1025, 1026, 0, 0, 0, 1024, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1066, 1030, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	1079, 0, 268, 1086, 269, 1085, 0, 1096, 270, 271,
	272, 273, 274, 275, 1032, 1065, 999, 276, 1126, 1127,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089,
	307, 1083, 1082, 1003, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1074, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1009,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 1021, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1081, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 1094, 1095, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 1031, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 1076, 1077,
	0, 1037, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1000, 251, 1118, 430,
	431, 1022, 1070, 432, 1084, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1080, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 1010, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 1078, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 1125, 530,
	531, 532, 533, 1101, 0, 536, 537, 998, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	1090, 1091, 1092, 1093, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 1020, 550, 551, 552, 553, 0, 555,
	556, 0, 1004, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 1087, 1124,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1001, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	995, 996, 1816, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 1024, 1042, 1014, 1015, 1016, 1012, 1013,
	1025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1066, 1030, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	1079, 0, 268, 1086, 269, 1085, 0, 1096, 270, 271,
	272, 273, 274, 275, 1032, 1065, 999, 276, 1126, 1127,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089,
	307, 1083, 1082, 1003, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1074, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1009,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 1021, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1081, 0, 0, 0, 340, 0, 341, 0,
	2480, 1108, 342, 343, 1094, 1095, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 1031, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 1076, 1077,
	0, 1037, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1000, 251, 1118, 430,
	431, 1022, 1070, 432, 1084, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1080, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 1010, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 1078, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 1125, 530,
	531, 532, 533, 1101, 0, 536, 537, 998, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	1090, 1091, 1092, 1093, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 1020, 550, 551, 552, 553, 0, 555,
	556, 0, 1004, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 1087, 1124,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1001, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026,
	0, 0, 0, 1024, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 1746, 0,
	2485, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	2483, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	2471, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	2460, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	2458, 1024, 2449, 2456, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 2452, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 2453, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 2454, 401, 2451, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 2455, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 2450, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	2446, 1024, 2449, 2456, 1015, 1016, 1012, 1013, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 2452, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 1031, 353, 0, 354,
	355, 356, 2453, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 2454, 401, 2451, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 2455, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 2450, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 1754, 0, 1026, 0, 0, 0, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 2240, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1606, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1541, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1536, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1527, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1522, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1504, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1383, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1382, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1377, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1376, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 1370, 1024,
	1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 1042, 1014,
	1015, 1016, 1012, 1013, 1025, 1026, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1066, 1030, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 1079, 0, 268, 1086, 269, 1085,
	0, 1096, 270, 271, 272, 273, 274, 275, 1032, 1065,
	999, 276, 1126, 1127, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 1089, 307, 1083, 1082, 1003, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1074, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1009, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 1021, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1081, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 1094, 1095,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 1031, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 1076, 1077, 0, 1037, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1080, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 1010, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 1078, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 1125, 530, 531, 532, 533, 1101, 0, 536,
	537, 998, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 1090, 1091, 1092, 1093, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 1020, 550, 551,
	552, 553, 0, 555, 556, 0, 1004, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 623, 1087, 1124, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1001,
	0, 0, 0, 0, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 995, 996, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 4257,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 4256, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013,
	1025, 1026, 0, 0, 0, 1024, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1066, 1030, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 4255,
	1079, 0, 268, 1086, 269, 1085, 0, 1096, 270, 271,
	272, 273, 274, 275, 1032, 1065, 999, 276, 1126, 1127,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 4257, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089,
	307, 1083, 1082, 1003, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1074, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1009,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 1021, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1081, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 1094, 1095, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 1031, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 1076, 1077,
	0, 1037, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1000, 251, 1118, 430,
	431, 1022, 1070, 432, 1084, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1080, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 1010, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 1078, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 1125, 530,
	531, 532, 533, 1101, 0, 536, 537, 998, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	1090, 1091, 1092, 1093, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 1020, 550, 551, 552, 553, 0, 4256,
	556, 0, 1004, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 1087, 1124,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1001, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026,
	0, 0, 0, 1024, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1066, 1030, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 1079, 0,
	268, 1086, 269, 1085, 0, 1096, 270, 271, 272, 273,
	274, 275, 1032, 1065, 999, 276, 1126, 1127, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 3950, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 1089, 307, 1083,
	1082, 1003, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1074, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1009, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	1021, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1081, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 1094, 1095, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 3951, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 1076, 1077, 0, 1037,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 1000, 251, 1118, 430, 431, 1022,
	1070, 432, 1084, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1080, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 3949,
	1010, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 1078, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 1125, 530, 531, 532,
	533, 1101, 0, 536, 537, 998, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 1090, 1091,
	1092, 1093, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 1020, 550, 551, 552, 553, 0, 555, 556, 0,
	1004, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 623, 1087, 1124, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1001, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 0, 0, 0, 0, 0, 995, 996,
	1042, 1014, 1015, 1016, 2889, 2890, 1025, 1026, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 1030, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 1079, 0, 268, 1086,
	269, 1085, 0, 1096, 270, 271, 272, 273, 274, 275,
	1032, 1065, 999, 276, 1126, 1127, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 1089, 307, 1083, 1082, 1003,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1074, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1009, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 1021, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1081, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	1094, 1095, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 1031, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 1076, 1077, 0, 1037, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070, 432,
	1084, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1080, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 1010, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 1078, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 1125, 530, 531, 532, 533, 1101,
	0, 536, 537, 998, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 1090, 1091, 1092, 1093,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 1020,
	550, 551, 552, 553, 0, 555, 556, 0, 1004, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 1087, 1124, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1001, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 995, 996, 1042, 1014,
	1015, 1016, 2887, 2888, 1025, 1026, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1066, 1030, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 1079, 0, 268, 1086, 269, 1085,
	0, 1096, 270, 271, 272, 273, 274, 275, 1032, 1065,
	999, 276, 1126, 1127, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 1089, 307, 1083, 1082, 1003, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1074, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1009, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 1021, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1081, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 1094, 1095,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 1031, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 1076, 1077, 0, 1037, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1080, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 1010, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 1078, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 1125, 530, 531, 532, 533, 1101, 0, 536,
	537, 998, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 1090, 1091, 1092, 1093, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 1020, 550, 551,
	552, 553, 0, 555, 556, 0, 1004, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 623, 1087, 1124, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1001,
	0, 0, 0, 0, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 995, 996, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1001, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 2248, 2249, 1042, 1014, 1015, 1016, 1012, 1013,
	1025, 1026, 0, 0, 0, 1024, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1066, 1030, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	1079, 0, 268, 1086, 269, 1085, 0, 1096, 270, 271,
	272, 273, 274, 275, 1032, 1065, 0, 276, 1126, 1127,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089,
	307, 1083, 1082, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1074, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1009,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 1021, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1081, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 1094, 1095, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 1031, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 1076, 1077,
	0, 1037, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 251, 1118, 430,
	431, 1022, 1070, 432, 1084, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1080, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 1010, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 1078, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 1125, 530,
	531, 532, 533, 1101, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	1090, 1091, 1092, 1093, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 1020, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 1087, 1124,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 0, 2468, 0, 0, 0, 0, 0, 0,
	2466, 2467, 252, 254, 253, 255, 256, 257, 258, 1026,
	259, 260, 0, 1024, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 0, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 2882, 2883, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 252, 254, 253, 255, 256, 257, 258,
	1026, 259, 260, 0, 1024, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 0, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 999, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 4257,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 1003, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 0, 1069, 0,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1000, 251,
	0, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 1010, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 998,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 4256, 556, 0, 1004, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 1164,
	0, 0, 995, 996, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 1024, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 0, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	1065, 0, 276, 582, 583, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 599, 600, 0, 601, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 1150, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 251, 1118, 430, 431, 0, 1070, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 1156, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 1158, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 213, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 1101, 0,
	536, 537, 0, 535, 215, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 1511, 624, 625, 0, 569, 568, 570, 626,
	0, 1164, 0, 207, 571, 572, 627, 573, 574, 575,
	0, 0, 208, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 1154, 1066, 1840, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 1065, 0, 276, 582, 583, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 599, 600, 0, 601, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 1150,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 0, 251, 1118, 430, 431, 0, 1070,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 1156,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 613,
	1158, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 213, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	1101, 0, 536, 537, 0, 535, 215, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 1511, 624, 625, 0, 569, 568,
	570, 626, 0, 0, 0, 207, 571, 572, 627, 573,
	574, 575, 0, 0, 208, 0, 0, 0, 3066, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1154, 0, 1840, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 0, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 1065, 0, 276, 582, 583, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 599, 600, 0, 601, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1150, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 0, 251, 1118, 430, 431, 0, 1070, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 1156, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 1158,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 1101,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 1146, 0, 1164, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 1154, 0, 1152, 1066, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 1065, 0, 276, 582, 583,
	584, 0, 277, 278, 1072, 0, 1053, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 1056, 1054,
	1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1097, 1098, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1104, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 1067, 1068, 1071, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 1069, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 1150, 381, 383, 382, 0, 384, 1105, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	1060, 1059, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 251, 1118, 430,
	431, 0, 1070, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 1156, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 1099, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1100, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 1158, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 1063, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 1101, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	1102, 549, 1103, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1064, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 1164, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 1154, 1066, 1152,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 1065, 0, 276,
	582, 583, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 1150, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 251,
	1118, 430, 431, 0, 1070, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 1156, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 1158, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 1101, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 1164, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 1154,
	1066, 1152, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 1065,
	0, 276, 582, 583, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 599, 600, 0, 601, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	0, 251, 1118, 430, 431, 0, 1070, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 1101, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1164,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 0, 3544, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	1065, 0, 276, 582, 583, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 599, 600, 0, 601, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 251, 1118, 430, 431, 0, 1070, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 1158, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 1101, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 988, 0, 1353, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 1739, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 213, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 215, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 1511, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 207, 571, 572,
	627, 573, 574, 575, 0, 0, 208, 0, 0, 0,
	1508, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 1319, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 1109, 367, 599, 600, 0, 601,
	0, 369, 370, 1111, 602, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 0, 0, 1118, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 213, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 215, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 1511, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 207, 571, 572, 627,
	573, 574, 575, 1353, 1352, 208, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 177, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1353, 1352, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 1533, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1353, 2036, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 3320,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 1319, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 2035, 383, 382, 0, 384, 603,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 0, 1118,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1353, 1352, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	1533, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 1319, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 0,
	1118, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1164, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	0, 1517, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 1065, 0,
	276, 582, 583, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	251, 1118, 430, 431, 0, 1070, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 1101, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 988, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 213, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 215, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 1511, 624, 625, 0, 569, 568, 570,
	626, 246, 0, 0, 207, 571, 572, 627, 573, 574,
	575, 0, 0, 208, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 177, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 246, 2802, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 1854, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 4399, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 0,
	246, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 3261, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 246, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 1453, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 2772, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 3421, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 834, 0, 714, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 2140,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 721, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 832, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 719, 538, 539, 540, 541, 720, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 0,
	712, 0, 714, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 724, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 721, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 719, 538, 539,
	540, 541, 720, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 1891, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 0, 1897, 0, 268, 1887, 269, 1903,
	0, 1910, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 1913, 1914, 0, 0, 277, 278, 0, 0,
	1319, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 1089, 307, 1901, 1900, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1074, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 0, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 1899, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 1908, 1909,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 0, 354, 355, 356, 357, 358,
	0, 0, 0, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	1109, 367, 1894, 1895, 0, 1890, 0, 369, 370, 1111,
	0, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 0, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	0, 0, 1118, 430, 431, 0, 0, 432, 1902, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 0, 1119, 443, 1120, 0, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 1884, 456, 457, 458, 1885, 459, 460,
	461, 0, 462, 0, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1898, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 0, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 1896, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 1912, 530, 531, 532, 533, 0, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 1904, 1905, 1906, 1907, 0, 554,
	0, 546, 547, 548, 0, 549, 0, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 0, 1888, 1911, 0, 569, 568, 570, 714, 0,
	0, 0, 0, 571, 572, 0, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 1878, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 721, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 719, 538, 539, 540, 541, 720, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 714,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 724, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 721, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 2180, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 2181, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 719, 538, 539, 540, 541, 720,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 2182, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	714, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 724, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 721, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 1917, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 719, 538, 539, 540, 541,
	720, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 1916, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 714, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 724, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 721, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 1870, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 719, 538, 539, 540,
	541, 720, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 1869, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1353, 1352, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 724,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 1319, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 0, 0, 0, 0,
	0, 0, 2736, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 1109, 367, 599, 600, 0, 601,
	0, 369, 370, 1111, 602, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 0, 0, 1118, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 2737, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1353, 1352, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	3594, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1353, 1352, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 3233, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1561, 0, 1353, 1352, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 1560, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 1559,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 1558, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1501, 0, 1353, 1352, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 1319, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1500, 597,
	598, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 0,
	1118, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1428, 0, 1353,
	1352, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 1319, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1427, 597, 598, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 1109, 367, 599, 600, 0, 601, 0, 369, 370,
	1111, 602, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 0, 1118, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1388, 0, 1353, 1352, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 1319, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 1109, 367, 599, 600, 0, 601,
	0, 369, 370, 1111, 602, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 0, 0, 1118, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1348, 0, 1353, 1352, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 1319, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 1347, 597, 598,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 0, 1118,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1353, 1352, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 1319, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 0,
	1118, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1353, 1352, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 1319,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 1926, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 602,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	0, 1118, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1353, 1352,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	1319, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	1109, 367, 599, 600, 0, 601, 0, 369, 370, 1111,
	602, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	0, 0, 1118, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 1353, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 2605, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 2602, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 2609, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 2815,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 2608, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 2812, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	2814, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 2811, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 2607, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 2813, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 2605, 277, 278, 585, 0, 0, 2599,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 2602, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 2609,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 2608, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 2598, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 2607, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 2606, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1628, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 1631, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 1629, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 1630, 568, 570, 626,
	1323, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1325, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	1156, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1320, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 1322, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 1156, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 1226, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	1228, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 1156, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 659,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 658, 257, 258, 648, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 651, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 652, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 653, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 647, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 648, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 651, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 652, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 653, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 1156, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 3196, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 2743, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 2742, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	2153, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 2068, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 2074,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 2073, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 2061, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 2063, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 251, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 2032, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 1156, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1493, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 1492, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1484, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1483, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1481, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1480, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1476, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1475, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1431, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 1341, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1334,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 1336, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 629, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 251, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 237, 0, 246, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	251, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 246, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 651, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 652,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 653, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 2189, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 2187, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	2185, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	251, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 246, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 2118, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 2112, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 2080, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 821, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 820, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 819, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 2815, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 3856, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 681, 0, 246, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 1196, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 1194, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 682, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 678, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 1197, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 677, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 681, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 1196,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 1194, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 682, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 678, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 1197, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 677, 618, 619, 620,
	0, 554, 0, 546, 1195, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 638, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 637, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 636,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 246, 2802, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 246, 3866, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	3568, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 2519, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 246, 2802,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 2799,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 2163, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 2151, 0, 246, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 681, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 671,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 682, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 678, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 1516, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 677, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1497, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 1496, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1490, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1489, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1437, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1436, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1420, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1418, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1414, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 1392, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	1390, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1344,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1328, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 1177, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	687, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 681, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 671, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 669, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 670, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 682, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 672, 493, 0,
	494, 495, 501, 502, 496, 497, 678, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 673, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 677, 618, 619, 620, 0,
	554, 0, 546, 675, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	663, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 664, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 661, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 655, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 633,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 246, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 3279, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 3227, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 3168, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 3166, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 3152,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 246, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 2752, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 664, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 2097,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 0, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 1461, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 1129, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 246, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 0, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 0,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 0, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 0, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1704, 0, 0,
	0, 0, 1673, 1674, 1676, 1706, 1707, 1708, 1716, 1717,
	1718, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 1704, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 1675, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 1675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 1699, 1700, 1701,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	1720, 1713, 0, 0, 1723, 0, 0, 1690, 1691, 0,
	1703, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1719, 0, 1720, 0,
	0, 0, 0, 0, 0, 1690, 1691, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 1697, 1673, 1674, 0, 1706,
	1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 1704,
	0, 1714, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 4094, 0, 0, 1712, 0, 0, 0,
	0, 1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684,
	1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0,
	0, 3985, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 1699, 1700, 1701, 0, 0, 0, 0, 0, 0,
	1681, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 1713, 0, 0, 1723, 1722,
	0, 0, 0, 0, 1703, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 1720, 0, 0, 1675, 0, 0, 0, 1690,
	1691, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 1711, 0, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1704, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 1698, 1699, 1700, 1701, 0,
	0, 1710, 0, 1695, 0, 1681, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 0, 0, 1703,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 0, 1697,
	0, 0, 0, 1698, 1699, 1700, 1701, 0, 0, 0,
	0, 0, 1711, 1681, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 1714, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1704, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 1713, 0,
	0, 1723, 1722, 0, 0, 0, 0, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 1719, 0, 1720, 0, 0, 1675, 0,
	0, 0, 1690, 1691, 0, 0, 1710, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715, 1693,
	1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 0, 0, 0, 1702, 3934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 1710, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 1673, 1674, 0,
	1706, 1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 1709,
	1704, 0, 1703, 1705, 0, 0, 0, 1676, 0, 0,
	0, 0, 1702, 0, 0, 1722, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 1714, 1696,
	1692, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0, 0,
	3790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 1699, 1700, 1701, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 1713, 1702, 3733, 1723,
	0, 0, 0, 0, 0, 1703, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 1719, 0, 1720, 0, 0, 0, 0, 0, 0,
	1690, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 1711, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1704, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 3732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 1698, 1699, 1700, 1701, 0, 0, 0,
	0, 0, 0, 1681, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1704, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 1713, 0,
	0, 1723, 1722, 0, 0, 0, 0, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 1720, 0, 0, 1675, 0,
	0, 0, 1690, 1691, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715,
	1693, 1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680,
	1682, 1683, 0, 0, 0, 0, 3731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 1710, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1674, 0,
	1706, 1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 1709,
	1704, 0, 1703, 1705, 0, 0, 0, 1676, 0, 0,
	0, 0, 1702, 0, 0, 1722, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 1714, 1696,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 1699, 1700, 1701, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 1713, 1702, 3426, 1723,
	0, 0, 0, 0, 0, 1703, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 1719, 0, 1720, 0, 0, 0, 0, 0, 0,
	1690, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 1711, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1704, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 2962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 1698, 1699, 1700, 1701, 0, 0, 0,
	0, 0, 0, 1681, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1704, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 1713, 0,
	0, 1723, 1722, 0, 0, 0, 0, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 1720, 0, 0, 1675, 0,
	0, 0, 1690, 1691, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715,
	1693, 1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680,
	1682, 1683, 0, 0, 0, 0, 2961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 1710, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1674, 0,
	1706, 1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 1723, 0, 0, 1709,
	1704, 0, 1703, 1705, 0, 0, 0, 1676, 0, 0,
	0, 0, 1702, 0, 0, 1722, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 1714, 1696,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 1699, 1700, 1701, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 1713, 1702, 2960, 1723,
	0, 0, 0, 0, 0, 1703, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 1719, 0, 1720, 0, 0, 0, 0, 0, 0,
	1690, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 1711, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1704, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 2959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 0, 1698, 1699, 1700, 1701, 0, 0, 0,
	0, 0, 0, 1681, 4322, 1673, 1674, 0, 1706, 1707,
	1708, 1716, 1717, 1718, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1704, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 1713, 0,
	0, 1723, 0, 1722, 0, 0, 0, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 1720, 0, 0, 0, 1675,
	0, 0, 1690, 1691, 0, 0, 0, 0, 0, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 0,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715,
	1693, 1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680,
	1682, 1683, 0, 0, 2926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1699, 1700, 1701, 0, 1710, 0, 0, 0, 0, 1681,
	0, 3046, 0, 0, 3045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4321, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 0, 1723, 0, 0,
	0, 0, 0, 1703, 1705, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 1719,
	0, 1720, 0, 0, 0, 0, 0, 0, 1690, 1691,
	0, 0, 1697, 1673, 1674, 0, 1706, 1707, 1708, 1716,
	1717, 1718, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1704, 0, 1714, 0,
	1696, 2897, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2898, 1712, 0, 0, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 1699, 1700,
	1701, 0, 2493, 0, 0, 0, 0, 1681, 1697, 1673,
	1674, 0, 1706, 1707, 1708, 1716, 1717, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1704, 0, 1714, 0, 2492, 0, 0, 1676,
	0, 0, 1713, 0, 0, 1723, 0, 1722, 0, 0,
	0, 1703, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 1720,
	0, 0, 0, 1675, 0, 0, 1690, 1691, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 1711, 1673, 1674, 0, 1706, 1707,
	1708, 1716, 1717, 1718, 0, 0, 0, 0, 1696, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1704, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 0, 1712,
	0, 0, 0, 1722, 1687, 1688, 1694, 1715, 1693, 1689,
	0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 1698, 1699, 1700, 1701, 0, 1710, 1695,
	0, 0, 0, 1681, 0, 0, 0, 0, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	0, 1723, 0, 0, 0, 0, 0, 1703, 1705, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 1719, 0, 1720, 0, 0, 0, 0,
	0, 0, 1690, 1691, 0, 0, 1697, 0, 0, 1698,
	1699, 1700, 1701, 0, 0, 0, 0, 0, 0, 1681,
	1711, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 1714, 0, 1696, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 1713, 0, 0, 1723, 0, 1722,
	0, 0, 0, 1703, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 1719,
	0, 1720, 0, 0, 0, 1675, 0, 0, 1690, 1691,
	0, 0, 0, 0, 1710, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0, 1686,
	1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 1698, 1699, 1700, 1701, 0,
	1710, 985, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	0, 0, 0, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 1709, 1704, 0, 1703,
	1705, 0, 0, 0, 1676, 0, 0, 0, 1702, 0,
	0, 0, 1722, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 1714, 0, 1696, 1692, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 1687, 1688,
	1694, 1715, 1693, 1689, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 3052, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689,
	0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
	0, 0, 0, 1713, 1702, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1711, 1673, 1674, 0, 1706,
	1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 1704,
	0, 0, 0, 3047, 0, 0, 1676, 0, 3407, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	1698, 1699, 1700, 1701, 0, 0, 0, 0, 0, 0,
	1681, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 1713, 0, 0, 1723, 1722,
	0, 0, 0, 0, 1703, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 1720, 0, 0, 1675, 0, 0, 0, 1690,
	1691, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 1711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1699, 1700, 1701, 0,
	0, 1710, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 1709, 1704, 0, 1703,
	1705, 2963, 0, 0, 1676, 0, 0, 0, 0, 1702,
	0, 0, 1722, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 1714, 1696, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 0, 0, 3014, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715, 1693,
	1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 0, 0, 1713, 1702, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 1719, 0,
	1720, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1711, 1673, 1674, 0, 1706,
	1707, 1708, 1716, 1717, 1718, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 1704,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	1698, 1699, 1700, 1701, 0, 0, 0, 0, 0, 0,
	1681, 1673, 1674, 0, 1706, 1707, 1708, 1716, 1717, 1718,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1704, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 1713, 0, 0, 1723, 1722,
	0, 0, 0, 0, 1703, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 1720, 0, 0, 1675, 0, 0, 0, 1690,
	1691, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 1711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1699, 1700, 1701, 0,
	0, 1710, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1674, 0, 1706, 1707, 1708,
	1716, 1717, 1718, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 1723, 0, 0, 0, 1704, 0, 1703,
	1705, 0, 0, 0, 1676, 0, 0, 0, 0, 1702,
	0, 0, 1722, 0, 0, 1719, 0, 1720, 0, 0,
	0, 0, 0, 0, 1690, 1691, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 1714, 1696, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	1700, 1701, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 1687, 1688, 1694, 1715, 1693,
	1689, 0, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 0, 0, 1713, 1702, 0, 1723, 0, 0, 0,
	0, 0, 1703, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 0, 0, 0, 0,
	1687, 1688, 1694, 1715, 1693, 1689, 0, 1686, 1684, 1685,
	1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 1687, 1688, 1694, 1715, 1693, 1689, 0,
	1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
}
var sqlPact = [...]int{

	8326, -1000, -1000, -1000, -1000, 156, -1000, -1000, 150, 149,
	148, 147, 144, 143, 142, 140, 139, -1000, -1000, -1000,
	-1000, -1000, -1000, 138, -1000, -1000, 136, -1000, 135, 134,
	133, -1000, -1000, 128, -1000, 126, -1000, -1000, -1000, -1000,
	124, 123, 120, 83263, 82740, 83779, 2099, 101987, 89999, 1940,
	74400, 101464, 73877, 100941, 100418, 2573, 118, -1000, 99895, 116,
	115, 114, -1000, 99372, -1000, 1794, -1000, 113, 4621, 60778,
	112, 109, 107, 2325, 106, -1000, 105, 104, 103, -1000,
	9634, 1426, -1000, 102, 101, -1000, 8513, 535, 87914, 99,
	98, 2400, 96, 94, 60254, 92, 91, 2126, 2656, -1000,
	-1000, 1972, -1000, -1000, 90, 88, 86, 84, 83, 81,
	79, 78, 77, 76, 75, -1000, 72, 71, 69, 68,
	67, 66, 65, 64, -1000, 63, 62, 61, 60, 59,
	58, 56, 54, 53, 51, 50, 44, 43, -1000, 15190,
	41, 1832, 1600, 1599, 1582, 1566, 1565, 941, 38, 37,
	36, 35, 31, 29, 27, 25, 24, -1000, 22, 20,
	19, 17, 12, 11, 7, 6, 125, 3, 0, -4,
	-5, -6, -7, -9, 4009, -1000, 1509, 1081, 28262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 107663, 102503, -10,
	-90, -12, -1000, 3104, 978, 50300, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 200, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	456, 1853, 687, -1000, -1000, -1000, 98856, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2094, -82, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 685, -1000, 2091, 238, 2006, -1000,
	-1000, -1000, -1000, -1000, 102503, -1000, 987, -1000, -1000, 3556,
	3555, 1971, 684, 89476, -1000, 1859, -1000, 890, 29906, -1000,
	1184, -1000, 29906, 198, -1000, -1000, -1000, -1000, -1000, -1000,
	3554, 3553, 3552, 3551, 3550, -1000, -1000, 73354, 21634, 72831,
	72308, 98340, 21101, 82217, 81694, 97817, 68141, 985, -1000, -1000,
	-1000, 1337, -1000, -1000, -1000, -1000, -1000, -1000, -32, 65476,
	3322, 102503, -1000, 192, -1000, -1000, -1000, -1000, -1000, -1000,
	42726, 649, 42166, 748, 41606, 593, -1000, -1000, -1000, -1000,
	67608, -1000, 97294, 2281, 3547, 3546, 1062, 3544, 3039, 1670,
	3542, 1730, 1139, 3539, 3538, 3537, 3536, 3535, 3534, 1343,
	96771, 2765, 96248, 1593, 67075, 976, 81171, 83779, 2490, 95725,
	1311, 1294, -1000, -1000, -1000, -1000, 2882, 2653, 2633, 1261,
	-1000, -1000, 2280, 3533, 3532, 3531, 3530, 3529, 107147, 1657,
	3526, 2344, 3525, 3524, 3519, 3518, 3515, 3514, 3513, -1000,
	80648, 975, 80125, 79602, 3165, 95202, 79079, 94679, 66542, 41046,
	936, -1000, -1000, -1000, 52928, 5060, 4996, 94156, 55052, 83779,
	83779, -1000, -1000, -1000, -1000, -1000, 40486, 645, 39926, 911,
	-1000, -1000, 53459, 2711, -1000, -1000, -1000, -1000, 39366, 630,
	38806, 840, 102503, -1000, 2764, 1818, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2419, 1544, 3351, 2539, 66009, 1981, 1335, 3112, 2880, 2879,
	1438, 3511, 3509, 2373, 2878, 2875, 2862, 2829, 2828, 1447,
	2390, 552, 27702, 2739, 1545, 38246, 1578, 1434, 2827, 2816,
	3353, 1771, 1903, 1948, 71785, 3508, 3507, 3064, 2799, 2794,
	2703, -1000, -1000, -1000, -1000, 1409, -1000, -1000, -1000, -1000,
	-1000, 74916, -1000, -1000, 1222, -1000, -1000, 1222, -1000, -1000,
	-1000, -1000, -1000, 1266, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1509, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2086, -1000, 1870, -1000,
	-1000, 2409, 3035, 3035, 3035, 3146, 417, 416, -1000, 125,
	-1000, -1000, 113045, -1000, -1000, 43274, 43274, 43274, 43274, 43274,
	43274, 43274, 1892, -1000, 681, -1000, -1000, 773, -1000, 680,
	542, -1000, -1000, -1000, -1000, -1000, -1000, 677, -1000, -1000,
	-1000, -1000, -1000, -1000, 3322, -1000, 24354, -1000, -1000, -1000,
	348, 676, 43274, -1000, -1000, 3377, 3373, 917, -1000, 187,
	908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2762, 674, 673, -1000, 672, 670, 667,
	661, 657, -1000, -1000, -1000, 653, 650, 648, 646, 643,
	637, 633, 631, -1000, 1805, -1000, -1000, -1000, -1000, -1000,
	-1000, 577, 576, 576, 576, -1000, 969, -1000, -1000, -1000,
	281, 575, 276, 574, 573, 572, -1000, 626, 621, 616,
	612, 611, 610, 605, 604, 601, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 968, -1000, -1000, -1000, -1000, -33, 102503,
	-1000, 456, -33, -1000, -1000, 600, -1000, 32110, 32110, 32110,
	-1000, -1000, 2085, 43274, -1000, 3065, -1000, -25, -25, 848,
	51865, -1000, 49237, 848, 300, 781, 56617, -1000, 2698, -1000,
	-1000, 598, 185, -1000, -1000, -1000, -1000, 22165, 2696, 102503,
	102503, 83779, 83779, 83779, 2939, 43274, -1000, -1000, 63377, 102503,
	84295, 3262, 61294, 62856, 102503, 2756, -1000, 3075, -1000, -1000,
	102503, -1000, 43274, -1000, 3259, 1744, 69193, 3194, -42, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2324, 2306, 1093, 2148,
	-1000, 2951, 1628, -1000, 29906, 3028, -1000, -1000, -1000, 184,
	22165, -1000, -1000, -1000, -1000, -1000, -1000, 3027, 2903, 1372,
	-1000, 2124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1669, 2901, -1000, 2171, 2900, 1668, -1000, -1000, 2449,
	-1000, -1000, 3060, -1000, -1000, 1939, 2896, -23, -1000, -1000,
	2543, -1000, -1000, 1815, -1000, -1000, 928, 2895, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 78556, 54521, 53459,
	65476, -36, -1000, -1000, -1000, -1000, -50, -1000, 20568, 113045,
	-1000, -1000, -1000, -1000, 1661, 113045, 843, -1000, -1000, 2894,
	-1000, 113045, 839, -1000, -1000, 2867, -1000, 2755, -1000, -1000,
	2235, -1000, -1000, 3506, -1000, -1000, 3505, -1000, 3504, 3502,
	3501, -1000, 1586, 1782, 3500, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 78040, 2078, -1000, -1000, 76994, -1000, 2234, 3193,
	-1000, -1000, -1000, 77517, 972, -1000, 928, 2227, -1000, 87391,
	965, -1000, 3497, 3155, 2502, 928, 2223, -1000, -1000, -1000,
	-1000, -1000, 966, -1000, 58176, -1000, 58176, -1000, 1472, -1000,
	106631, -25, 83779, 3322, -1000, 3495, -1000, -1000, -1000, -1000,
	-1000, 2864, 3492, 3491, 3488, -1000, 102503, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 206, 2857, -1000, -1000, 86875, 206,
	2855, -1000, 206, 2854, -1000, 86359, -1000, -1000, 2071, 2853,
	-1000, 208, 2852, -1000, -1000, 207, 2849, -1000, -1000, -77,
	2848, -1000, -1000, 113045, -1000, -1000, -1000, -53, -1000, -1000,
	-1000, 978, -1000, 52389, -1000, 52389, 88953, 68672, 915, 743,
	59730, 113045, -1000, -1000, -1000, -1000, 113045, -1000, -1000, -1000,
	-260, -1000, -1000, 68672, 53459, 113045, -1000, -1000, -1000, -1000,
	113045, -1000, -1000, -1000, 68672, 76994, -1000, 93633, 76478, -1000,
	-1000, 1340, 2371, -1000, -1000, -1000, 68672, 1219, 68672, 68672,
	68672, -1000, 93110, -1000, -1000, 1937, 1412, 3062, 1900, 83779,
	-1000, 1723, -1000, -1000, -1000, 3098, -1000, -1000, 2749, -1000,
	62335, 85843, -1000, 85327, -1000, 84811, -1000, 83779, -1000, 83779,
	-1000, 3487, 3486, 3485, 3484, -1000, 3483, 3090, -1000, 113045,
	3079, -1000, 3481, 3182, 2739, 113045, -1000, 2891, 1598, 1595,
	102503, -1000, -1000, 102503, -1000, 102503, -1000, -1000, -1000, 1389,
	-1000, -1000, 2323, -1000, -1000, -1000, -1000, 83779, -1000, -1000,
	-1000, -1000, -1000, -1000, 2727, -1000, 1728, -1000, 1693, -1000,
	1319, -1000, -1000, 210, -1000, -1000, -42, -1000, 106115, -1000,
	2409, -1000, 102503, -1000, 2278, 2718, 2724, 1513, 2109, 2431,
	-1000, 37686, 2383, 46562, 2115, 125, -1000, -1000, 125, 125,
	29358, -1000, -1000, 61294, 61294, 22165, 1281, 43274, 43274, 43274,
	43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274,
	43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274,
	43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274, 43274,
	43274, 43274, 2169, 43274, 1256, 43274, 43274, 43274, 43274, 2055,
	-1000, -1000, 1887, 492, 1977, -1000, 3296, 3296, 3296, 948,
	948, 5219, 5219, 424, 3480, 773, -1000, 43274, -1000, 55,
	43274, 22698, -1000, 416, 7433, 2206, -1000, 413, 23258, -1000,
	-1000, -1000, 24354, 542, 37126, 43274, 961, 113045, -1000, -1000,
	1300, 3333, 20036, 2773, 2589, 597, 778, 760, 27142, 26582,
	26022, 25462, 668, 43274, 43274, 43274, 43274, 43274, 43274, 43274,
	43274, -1000, -1000, 3338, -1000, 3333, -1000, -1000, -1000, -1000,
	3333, 1278, 1272, 3333, -1000, 3333, 3333, 8899, 8899, 36578,
	36018, 35458, 47110, 34898, 43274, 24902, 34338, 33778, -1000, 102503,
	-33, 3258, 43274, 159, -1000, 111758, -1000, 159, 159, 596,
	-54, 113045, 2367, 2367, 50822, 2269, 1915, 1915, 1915, -1000,
	848, 15751, 848, 92073, 1936, 848, 848, 182, 240, 412,
	48715, 3065, 92073, 725, 586, -13, -14, -15, -1000, -1000,
	-18, -19, -1000, -1000, 83779, 584, 22698, 22165, 181, 1382,
	-55, 2413, 2412, 2408, -1000, 2397, 1658, -56, 1252, 83779,
	102503, -116, -1000, 556, -62, -1000, 1271, 177, 3333, -1000,
	-1000, -1000, -1000, -1000, 3479, 3478, -1000, 967, 583, 582,
	406, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 577,
	576, 576, 576, -1000, 281, 575, 276, 574, 573, 572,
	-1000, -1000, -1000, -1000, -1000, 2695, 83779, 102503, -50, 84295,
	83779, 850, -64, 1068, -42, -1000, -1000, -1000, 1222, -1000,
	1649, -1000, -1000, -1000, -1000, -1000, -1000, 1371, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 917, -1000, -1000, -1000,
	-1000, -1000, -1000, 3331, 3329, -34, -1000, -1000, 22165, -1000,
	-43, 1651, 1623, -1000, 71262, 2074, 3070, 3049, 1454, -1000,
	1385, 1239, 3143, 74916, 3222, 3241, 769, -1000, 2689, -1000,
	-1000, 889, 1713, 1622, 1193, 74916, 2171, -1000, 61294, -1000,
	2474, 3142, 1375, 1367, 1375, 1375, 1362, -1000, 74916, 1613,
	1177, 1176, -1000, 1175, 1174, -1000, -45, 3221, 3233, 644,
	-1000, 2688, 1172, -1000, -1000, 83779, 22165, 1487, 1445, 1605,
	1168, -35, -1000, 3200, 3198, 1167, 1155, -1000, 5553, -1000,
	68672, 1616, 2846, 2535, 844, 2534, -1000, -1000, 844, -36,
	65476, 102503, 175, -1000, 55, 43274, 43274, 55, 43274, 55,
	3179, 2845, -1000, -1000, -1000, -1000, -1000, 3477, 1758, 2342,
	-1000, -1000, 569, 2213, 2680, 102503, 2447, -37, 83779, -1000,
	2843, 63898, 2171, 2208, -1000, -1000, 75955, -1000, 2842, 456,
	2207, -1000, 606, 3476, -1000, 105599, -1000, 3075, 1290, 2841,
	1021, 788, 3257, -1000, 788, 58698, -1000, 102503, -1000, -25,
	-1000, 102503, -1000, -1000, -1000, 3475, -1000, 83779, -1000, -1000,
	83779, 206, 2840, -1000, 83779, -1000, 83779, 203, 2838, -1000,
	-1000, 102503, -1000, 83779, 83779, -1000, 102503, 102503, 68672, 68672,
	4613, 70230, -65, -80, 410, -1000, 92594, 102503, 1015, 70746,
	102503, 3018, 926, 53459, -1000, -81, -260, 2528, 915, 915,
	844, -1000, 844, -1000, 83779, 2723, -1000, -1000, 68672, 915,
	915, 915, -1000, -1000, -1000, -1000, 3474, 3473, 3472, -1000,
	-1000, -1000, 927, 83779, 102503, 83779, -1000, -1000, 102503, -1000,
	102503, 102503, 83779, -1000, 927, 102503, 927, 102503, 927, 102503,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55, 43274, -1000,
	-1000, 3468, 1523, -1000, 2721, -1000, 2720, -1000, 14, -1000,
	-1000, -1000, -1000, -1000, 1863, 83779, 83779, 83779, 83779, 102503,
	83779, -1000, 74916, -1000, 2278, 2718, -1000, -1000, -1000, -1000,
	-1000, -1000, 1316, 2027, -1000, 2370, -1000, 1427, -1000, -1000,
	-1000, 113045, 47641, -1000, -1000, 113045, 1656, -1000, 46014, 45466,
	-1000, -1000, 1525, 83779, 2452, -1000, 2452, -193, -1000, 111592,
	2369, 83779, -1000, -1000, -1000, -1000, -1000, 888, 1355, 1355,
	1189, 1189, 1189, 1189, 3177, 1904, 3489, 1243, 10210, 10210,
	5392, 5392, 5392, 5392, 5392, 10210, 930, 948, 948, 930,
	930, 930, 930, 930, 948, 948, 948, 10210, 10210, 10210,
	5219, 113210, 7673, 43274, 43274, 1154, 1830, 492, 6756, 43274,
	6275, 6275, 6275, 6275, -1000, 2181, -1000, -1000, -1000, -1000,
	2679, 568, 47110, 47110, -1000, -1000, -1000, -1000, 23806, 43274,
	-1000, -1000, -1000, -1000, 33218, -1000, -1000, 110936, -316, 408,
	-159, 26, -1000, 43274, 43274, 43274, 407, -1000, 173, 43274,
	102503, -1000, 14592, 721, -178, -1000, -89, 1306, -1000, 43274,
	-1000, -1000, 1147, -1000, 1143, 1142, 1138, -1000, 567, 403,
	-1000, 171, -1000, 1897, 566, 565, 43274, -1000, -1000, -1000,
	-1000, -1000, 110753, -1000, -1000, 110588, -1000, -1000, 110336, -1000,
	-1000, 110153, -1000, -1000, -1000, 112793, 14191, 13798, 11780, 5963,
	9610, 9194, -91, 402, -94, 393, 887, 883, 392, 391,
	390, -96, -1000, 3466, 3462, 3460, -1000, 3458, 3457, 3456,
	-1000, 3455, 3454, 3453, -1000, 3451, 3449, 3448, -1000, 3445,
	3443, 3442, -1000, 3441, 3439, 3434, -1000, 3433, 3430, 3429,
	-1000, 3428, 3427, 3426, -97, 386, -1000, 2670, -159, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 385, -1000, 380,
	-1000, 112610, -159, 376, 1024, -1000, 47110, 47110, 47110, -1000,
	371, -1000, 111354, -1000, 112445, 32670, 32670, 32670, 370, 112193,
	43274, -159, -102, -1000, -105, -1000, -1000, 459, -115, 932,
	32110, 49776, 22165, -1000, 932, 932, 43274, -1000, 43274, 2382,
	-1000, -1000, -1000, 2381, 1814, 2367, 50822, -1000, -1000, -1000,
	-1000, 92073, -1000, 3322, 2832, -1000, 92073, -1000, -1000, 102503,
	456, -1000, 92073, 92073, 22165, 848, -1000, 848, 92073, 736,
	-1000, -1000, -1000, -1000, -1000, 369, 55573, 26, 169, 22165,
	928, -1000, 2489, 2489, 2489, 2489, -1000, -1000, 102503, 1137,
	-39, -99, 3276, -1000, 1824, -1000, 61294, -1000, 758, 1114,
	22165, -1000, -1000, -1000, 561, -1000, 3333, 3333, -1000, 3333,
	102503, 2663, 153, 108, 943, 29906, -1000, 1222, -1000, -1000,
	1460, -1000, 1761, -1000, 1265, -1000, -1000, -1000, -1000, 29906,
	-1000, 2375, 102503, 102503, 83779, -1000, 102503, -1000, 2205, 105083,
	2204, 61294, 102503, -1000, -1000, 560, 558, 2368, 2362, 1013,
	102503, 102503, 2361, 104567, 104051, 102503, 1821, 43274, 63898, 2031,
	2850, 55, 55, -1000, -1000, 55, 557, 1245, 83779, 83779,
	102503, 83779, 1607, -1000, -1000, -1000, -1000, -1000, 75432, -1000,
	-1000, 3337, 3336, -1000, 1375, -1000, -1000, -1000, 1375, 2171,
	1579, 102503, 83779, 63898, 1597, 102503, 1835, 55, 55, -1000,
	-1000, 55, 549, 22165, 1862, -1000, 2754, 102503, 3367, 102503,
	102503, 102503, 63898, 3042, 103535, 102503, 102503, 63898, 5553, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	64960, 1012, 928, 1576, 1135, 74916, 53459, 924, 53459, 2509,
	-1000, -1000, 19504, -1000, 113045, 113045, -1000, 113045, -1000, 61814,
	102503, -1000, 971, 102503, 70746, 903, 2837, 57654, -50, 915,
	68672, 83779, -37, 102503, -1000, -1000, -1000, -1000, -1000, 2171,
	2836, 456, 2201, -1000, 68672, 3256, 2835, 545, 3424, 3421,
	-1000, 2070, 2199, -1000, -1000, 103019, 2917, 803, 102503, 932,
	50822, 1788, -1000, 56096, 995, 102503, 1709, 85, -1000, -1000,
	-1000, -1, 102503, -1000, 780, 3419, -1000, -1000, 206, -1000,
	83779, 206, 206, -1000, 83779, 83779, 2071, -1000, 208, -1000,
	207, -1000, -77, -1000, -1000, 4613, 4613, 915, -297, 544,
	-1000, 861, 859, 53990, 68672, -118, -1000, -1000, -1000, -1000,
	-1000, 83779, 102503, 639, 2485, 102503, -120, -1000, 167, 543,
	-1000, 2294, -1000, -1000, 926, 53459, 2661, -1000, -1000, 940,
	-1000, 1314, 915, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -28, -50, -50, -50, -39, -1000, 927,
	-1000, 927, -1000, 927, -1000, 113045, -1000, -1000, 1522, 1521,
	102503, -1000, 22165, 102503, 83779, 22165, 83779, 2717, 2715, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1034, -1000, 1656,
	2024, -1000, 542, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2307, -1000, -41, 29358, 845, -1000, -1000, 83779,
	-29, 43274, 43274, 6672, 6588, 43274, 47110, 47110, -1000, 43274,
	5917, -1000, -1000, -1000, -1000, -1000, 2660, 541, 43274, 61294,
	5719, 5696, -1000, 368, 8605, 930, -1000, 43274, -1000, 367,
	31562, -1000, 111844, -51, -123, -1000, 16296, -159, -125, -1000,
	-1000, 757, -1000, 2839, -1000, 43274, 112010, 2267, 1812, 1686,
	1530, 3333, 3366, 18972, -1000, 59214, 949, 1954, 109988, -1000,
	-1000, -1000, -1000, 61294, 61294, 43274, 43274, -1000, 43274, 43274,
	43274, -1000, -1000, -1000, 3333, 882, -1000, -1000, -1000, 882,
	-1000, -1000, 1375, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1375, -1000,
	43274, -1000, -1000, 2657, 43274, -1000, 61294, 61294, 47110, 47110,
	47110, 47110, 47110, 47110, 47110, 47110, 47110, 47110, 47110, 47110,
	47110, 47110, 47110, 47110, 47110, 47110, 47110, 2309, 47110, 3292,
	3292, 3292, -1000, 2659, 2657, 43274, 43274, 61294, 366, 365,
	364, -1000, 43274, -159, -1000, -1000, 4613, 539, -1000, 2291,
	-1000, 2583, -1000, 43274, -1000, -228, -1000, 3065, -1000, -1000,
	2583, 2583, -126, 113045, 50822, 50822, -1000, 538, 43274, 2379,
	-1000, -1000, 714, -303, -1000, 847, -1000, -1000, -1000, -1000,
	-1000, 456, -1000, -1000, -1000, 166, 92073, 92073, 704, -1000,
	-128, -1000, -1000, -131, -1000, 3255, 360, 22165, -1000, 932,
	3022, -1000, -1000, -1000, -1000, -1000, -1000, -50, 102503, 102503,
	1982, 3363, -1000, 3335, 756, 703, 163, 3333, 359, 350,
	344, -50, 102503, 102503, 102503, -1000, 2454, -1000, -42, -1000,
	-1000, -1000, 43274, -1000, -1000, 3063, 1133, 1132, -1000, -1000,
	2834, -1000, 2198, -1000, 974, -1000, 1793, -1000, 43274, 51344,
	536, 532, 3418, 1735, 3416, 1014, 2833, 2071, 2819, 2071,
	-1000, -1000, 895, -1000, 113045, -1000, 531, 529, -1000, -43,
	1577, 1567, 939, -1000, -1000, 43274, 43274, 91557, -1000, 431,
	3060, -30, -1000, -1000, 1560, 1131, -1000, -1000, -1000, -1000,
	2171, 1556, 1129, -1000, -1000, -1000, 937, -1000, -1000, 931,
	-1000, -1000, 43274, -1000, -45, 1128, 3208, 2196, 83779, 1126,
	-1000, 1124, -1000, -1000, -1000, 3197, 2071, 2814, 1110, -1000,
	-1000, -1000, -1000, -1000, 64429, -1000, 102503, 83779, 1553, 844,
	-1000, 2113, 844, 924, 2654, -1000, 2435, -1000, 83779, 3415,
	342, -133, -48, 61294, 3254, -1000, 2105, 434, 83779, 878,
	-1000, 3322, -1000, -1000, -1000, -1000, 3190, 83779, 3251, 2810,
	928, 55, 83779, 3362, -1000, -1000, 83779, 2809, 2063, 2193,
	2332, 803, 69714, -1000, 928, 1946, -76, -1000, 1709, 31002,
	3054, -134, -1000, -1000, -1000, 932, 58698, 50822, 43274, 3411,
	-136, -1000, -1000, -1000, -1000, 206, -1000, -1000, -1000, 203,
	-1000, -1000, -1000, -1000, -1000, -1000, 90520, 90520, 68672, 68672,
	68672, 915, 102503, 102503, 70746, -1000, 528, 102503, 102503, 526,
	-1000, 102503, 102503, 3410, 68672, -49, 522, -1000, 842, 837,
	834, -1000, -1000, -1000, -1000, -1000, -1000, -260, 55, -1000,
	1993, 83779, -1000, 18440, -1000, -1000, -1000, -1000, -1000, 927,
	-1000, -1000, 1864, 2112, 1864, 1688, 1682, -1000, 2010, -1000,
	-1000, -1000, -1000, 2426, 3068, 22165, 3183, 6275, 43274, 43274,
	4788, 5268, 740, 6275, 43274, 43274, 61294, 113393, -139, 43274,
	43274, -1000, 43274, 702, 113045, 3359, 43274, 340, 339, -1000,
	-1000, -1000, 3324, -1000, -1000, -1000, 113045, 43274, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 324, -1000, 160, -1000, -1000,
	-1000, 108179, -1000, 43274, 305, 3140, -1000, 304, 303, 7473,
	326, 109736, 109553, 109388, 298, -1000, -1000, 283, 278, 113045,
	2659, 113045, -1000, -1000, 1035, 1035, 1329, 1329, 1329, 1329,
	3292, 343, 1911, 1935, 302, 302, 302, 1095, 1299, 1299,
	302, 302, 302, 2642, 2336, 519, 4469, -1000, -1000, 113045,
	113045, 274, -1000, -1000, -1000, -159, 270, 4613, -1000, 2574,
	3138, 113045, -1000, 50822, 2574, 2574, -1000, -1000, 1814, 102503,
	113045, 50822, -1000, 2832, -1000, 16839, -1000, 22165, -1000, -1000,
	-1000, -1000, 3322, -1000, 55573, -1000, 517, -1000, 15, -1000,
	3022, -1000, 832, -1000, -50, -50, -1000, -1000, 698, 3409,
	755, 22165, 264, -1000, -1000, -1000, -50, -50, -50, -1000,
	3014, 113045, 102503, 102503, 102503, 2807, -1000, 2210, -1000, 1013,
	109300, -145, -1000, 102503, 43274, 102503, 51344, 102503, -1000, -1000,
	1906, 2437, 1052, -1000, 3103, 102503, -1000, 102503, -1000, -1000,
	102503, 102503, 83779, 102503, 2792, -147, 113045, -52, -1000, 830,
	-1000, 1351, -1000, 17908, 102503, 83779, 102503, 83779, 1886, 2789,
	-150, 22165, -1000, 3358, 3357, 2803, 3108, 3356, 102503, -1000,
	102503, 83779, 3013, -1000, -1000, -1000, -1000, 1550, 1123, 924,
	-67, 509, -1000, 821, -1000, -1000, 816, 924, -1000, 68672,
	53459, 456, -1000, 2476, -1000, 88430, 2000, 55, -1000, 3403,
	91041, 508, -1000, 1965, -1000, 690, 63898, 2171, 55, 83779,
	-1000, -1000, 456, 263, -74, -1000, 1005, 22165, 83779, 2802,
	2334, 803, 69714, -1000, 1290, 2431, -1000, -75, -1000, 587,
	55, 1946, -1000, -76, 113045, -1000, 814, -1000, -1000, -1000,
	-160, -1000, -1000, 256, -1000, 3000, 2996, -1000, 2579, 51344,
	507, 505, 102503, 2995, -1000, -1000, -161, 2403, 2403, 68672,
	53459, 68672, 926, -1000, 2141, -1000, -1000, -1000, -1000, -1000,
	22165, 1564, -1000, 502, 501, -1000, -1000, -1000, -1000, 3068,
	6275, 6275, 43274, 43274, 43274, 6275, 113393, -166, -1000, 6275,
	6275, -159, -1000, -1000, 111844, -1000, -1000, -1000, 113045, -1000,
	17376, 1866, -1000, 109135, -1000, 29358, -1000, -1000, 43274, 43274,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47110, 2619,
	500, 61294, -1000, -1000, 254, 920, 43274, 44918, 3065, 920,
	920, -1000, -167, -1000, -1000, -1000, 3322, 15, -1000, -1000,
	3402, 22165, -1000, 68672, 742, -1000, 3400, -1000, -1000, -1000,
	-1000, -1000, -1000, 102503, -1000, 102503, -1000, 22165, 102503, 2610,
	2177, -1000, -1000, 2360, 499, 47110, 83779, 802, -1000, 3249,
	2602, 1742, 51344, -1000, 3068, -1000, 108731, -1000, -169, -172,
	2161, -1000, -1000, 2153, 43274, -1000, 61294, 496, 2071, 2071,
	-181, -182, -1000, -1000, 43274, 1121, 102503, 30454, -1000, 3399,
	3060, -1000, -1000, -1000, -1000, 102503, 43274, 1107, -1000, -1000,
	-1000, 3355, 2071, 22165, -1000, 2071, 2071, 3108, 1051, 102503,
	83779, -1000, 2023, 2023, 68672, 53459, -1000, -77, 924, 3250,
	1835, 2522, -1000, -1000, -1000, -1000, 2354, -1000, -1000, 102503,
	2353, 918, -1000, -183, -1000, 813, 808, 70746, 903, 919,
	-1000, -1000, -1000, -1000, 456, 3248, -1000, 3352, 495, 102503,
	2062, 494, 22165, 3051, 803, 69714, -1000, 2917, 1709, -1000,
	2183, 102503, 3046, -1000, 2431, 492, -1000, 915, 490, 489,
	3290, 3290, -188, 51344, 51344, -190, 486, 915, -1000, -191,
	-1000, -1000, -1000, -1000, -108, -1000, 784, 770, -1000, -1000,
	83779, 83779, 43274, 43274, -1000, 6275, 6275, 6275, -1000, 243,
	-1000, -1000, 1946, 3133, -1000, -111, 108703, 14963, 5875, 47110,
	61294, -196, -1000, -1000, 102503, 113045, -114, -1000, 113045, 484,
	483, 362, -1000, -1000, -1000, 669, -1000, -1000, 3396, -1000,
	-1000, 2020, -1000, -1000, -1000, 102503, 2187, -1000, 1010, 43274,
	4469, 482, 43274, -1000, 3243, -1000, 2472, 2647, 2476, 478,
	-1000, -1000, -1000, -1000, 845, 102503, 1003, 1745, -1000, -1000,
	113045, 3108, 51344, -1000, -1000, 475, 472, 113045, 471, 806,
	2617, -1000, -1000, -1000, -1000, 113045, 469, 3208, -1000, -1000,
	-1000, -1000, 2071, 83779, -1000, -1000, -1000, -199, -1000, -1000,
	1753, 55, 903, -1000, 1879, 2000, 465, -1000, -1000, 2032,
	2440, -1000, 91041, 29906, 29906, 227, 3242, 919, -1000, 3313,
	-1000, 3227, 55, -1000, 51344, -1000, 83779, 51344, 2054, -1000,
	2320, 69714, -1000, 2332, -1000, -1000, -202, 102503, 1709, -1000,
	-1000, 68672, 68672, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1003, -211, -212, -1000, 68672, -1000,
	-1000, 2141, -1000, 102503, -1000, 102503, -1000, -1000, -213, -214,
	-1000, 1941, 43274, 29358, -1000, -1000, 5875, -230, -1000, -117,
	-1000, 3226, 44918, 3392, 3390, 3387, -1000, -1000, -1000, -1000,
	2800, 2584, 13710, 2301, 102503, 241, -1000, 2644, -1000, -1000,
	1835, 102503, -1000, -1000, 2476, 2576, 83779, 1009, -232, 1864,
	1864, 43274, 28810, 1876, 43274, -1000, -1000, 3108, -1000, 2606,
	3306, -1000, 2032, 83779, 102503, -1000, 3073, -1000, 2994, -1000,
	-1000, -1000, 2476, 55, -1000, -1000, 55, -1000, -233, 1005,
	-240, 83779, 803, -1000, 2334, 932, -1000, -1000, -241, -242,
	1742, 1003, 914, -243, -1000, -249, -255, -1000, -1000, 219,
	44370, 44370, 44370, -159, -193, -1000, 102503, 458, -1000, -1000,
	-1000, -1000, 2781, 923, -1000, 2033, 1747, 218, 1008, -1000,
	-1000, 2602, -257, -1000, 922, 456, -1000, 43274, 1003, -258,
	-1000, 994, -263, -1000, 993, -264, -1000, 2613, -1000, -265,
	2071, 921, 3172, -1000, -1000, -1000, -1000, 454, -266, -1000,
	-1000, 2209, -1000, 1835, 918, -1000, 1003, 453, 1742, 450,
	1375, 3051, 2905, 915, 915, 2476, 1742, 932, 448, 915,
	-1000, -1000, -1000, 2831, -1000, 48172, 1984, 1677, 111188, 2831,
	2831, -1000, -1000, 102503, 3161, -1000, 2053, 2052, 1414, -1000,
	-1000, -1000, -1000, -1000, -1000, 932, -1000, 3152, 2301, 113045,
	2476, -1000, 1864, 2520, -1000, 1864, 2612, -1000, 1872, -1000,
	-1000, -1000, 1632, 3321, 102503, -1000, 102503, 1653, 1572, 3386,
	903, 2032, 1742, 51344, 2476, 51344, -1000, -1000, 1224, -1000,
	-1000, 1835, 2476, -1000, -1000, -1000, 1659, 3238, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 800, -1000, 2948, -1000,
	1030, 1999, 1999, -1000, 797, 2033, -1000, -1000, 447, -1000,
	427, -1000, 1958, -1000, -1000, -271, -1000, -1000, 3327, -1000,
	2032, -1000, 2476, -273, 1835, -279, -1000, 1446, 914, 1835,
	1663, -1000, -1000, 1934, 43822, 43274, -1000, 3279, -1000, -1000,
	2378, -1000, 43274, 2602, 43274, 43274, 57138, 2059, -1000, -1000,
	1835, 1003, 914, 1742, 58698, 932, 914, -1000, -1000, -1000,
	113045, -1000, -1000, -1000, 113045, -1000, -280, -281, -297, 90520,
	-1000, -1000, -1000, 914, 1742, 932, 2476, -272, -1000, 932,
	1835, 1086, -288, 932, 2476, -1000, 1835, -1000, -1000, -1000,
	422, -1000, -1000, 1835, 914, 43274, 914, 932, -296, 932,
	-1000, 1835, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4282, 4280, 4277, 4276, 4274, 4273, 4272, 4271, 4269,
	4264, 4263, 4251, 4247, 4246, 4244, 4242, 4238, 4237, 4234,
	4233, 4232, 4231, 4229, 4228, 4227, 4219, 4214, 4211, 4205,
	4204, 4203, 4201, 4194, 4191, 4189, 4188, 4187, 4179, 4178,
	4173, 4171, 4170, 4168, 4164, 4163, 4160, 4158, 4155, 4154,
	4153, 4151, 4150, 4149, 38, 4148, 4147, 4146, 4142, 4141,
	4140, 4136, 4130, 4129, 4128, 4127, 4123, 4121, 4118, 4116,
	4115, 4114, 4112, 4111, 48, 4110, 242, 4107, 4106, 4105,
	4100, 4098, 4097, 4092, 4091, 4090, 4089, 4084, 4081, 238,
	4076, 127, 4075, 4069, 4068, 4066, 4065, 236, 4061, 4060,
	4059, 4057, 246, 4050, 4049, 4046, 4032, 4031, 4029, 4028,
	4027, 4026, 75, 135, 4024, 4023, 180, 4021, 4020, 4019,
	4017, 4016, 4015, 4012, 4010, 4009, 4004, 217, 4003, 235,
	4002, 4000, 3995, 3992, 3991, 3989, 3988, 3986, 3983, 3981,
	3979, 3978, 3977, 3976, 3975, 3974, 3972, 3971, 3967, 3965,
	3964, 3963, 3956, 3955, 3954, 3951, 3949, 3946, 3938, 3937,
	3933, 3929, 3928, 248, 170, 3926, 3925, 233, 232, 3922,
	3920, 3913, 3911, 3910, 108, 7, 34, 3909, 3908, 69,
	71, 73, 97, 82, 84, 3907, 93, 3901, 114, 41,
	3900, 15, 4, 151, 229, 10751, 223, 3899, 3896, 3894,
	212, 165, 3893, 210, 3892, 3891, 3881, 3880, 79, 51,
	154, 145, 143, 142, 949, 3879, 3871, 92, 62, 47,
	31, 23, 3869, 3868, 3867, 3866, 3069, 120, 3865, 234,
	213, 138, 3864, 3861, 3860, 443, 3859, 3856, 59, 3855,
	76, 64, 105, 17, 106, 3853, 124, 28, 3852, 148,
	37, 3849, 130, 81, 72, 6692, 10012, 3848, 107, 53,
	146, 1400, 167, 152, 172, 99, 136, 181, 197, 188,
	149, 150, 3842, 219, 3835, 3231, 60, 131, 3833, 3829,
	3828, 68, 174, 101, 3826, 3825, 58, 13, 6, 1,
	158, 14, 104, 18, 3824, 21, 3823, 3822, 3821, 3819,
	56, 157, 3817, 245, 3816, 66, 43, 40, 3814, 88,
	187, 3811, 206, 112, 3810, 3808, 225, 184, 144, 3803,
	74, 202, 3802, 3801, 3800, 3799, 3796, 113, 3, 110,
	3795, 3794, 119, 3792, 35, 209, 171, 3790, 45, 3788,
	3787, 141, 86, 122, 239, 103, 194, 100, 195, 160,
	203, 3785, 3784, 3783, 193, 3777, 3768, 192, 132, 3766,
	3759, 177, 250, 32, 67, 207, 57, 169, 134, 3758,
	185, 3757, 3755, 249, 156, 189, 8, 19, 83, 109,
	3754, 9, 205, 126, 178, 98, 3753, 5579, 2339, 1539,
	3752, 3751, 123, 102, 61, 111, 128, 231, 55, 3750,
	3746, 65, 3745, 3735, 3733, 3727, 153, 3725, 3719, 3717,
	133, 121, 163, 3712, 80, 85, 39, 11, 96, 277,
	244, 94, 201, 147, 220, 3711, 3701, 3700, 159, 3699,
	49, 166, 3698, 175, 221, 3696, 3695, 161, 3694, 139,
	1673, 50, 129, 3693, 190, 3692, 3690, 3688, 3684, 3683,
	3679, 3675, 1582, 208, 3667, 3666, 3661, 29, 162, 3659,
	228, 241, 176, 87, 36, 3658, 78, 2206, 3654, 211,
	199, 44, 89, 3653, 3315, 46, 0, 11706, 7547, 9853,
	11469, 3651, 4281, 3648, 3647, 3644, 183, 118, 3641, 3640,
	3639, 91, 3637, 63, 3635, 3632, 52, 3631, 20, 2,
	10, 24, 22, 173, 168, 3630, 3629, 54, 115, 116,
	3628, 243, 198, 3626, 3625, 3624, 3623, 90, 3622, 25,
	3621, 27, 3620, 3616, 42, 12, 33, 3615, 3614, 230,
	3613, 191, 218, 3612, 137, 3609, 3220, 125, 3607, 3602,
	227, 77, 3600, 226, 3593, 3166, 3591, 3586, 16, 3584,
	3581, 214, 155, 186, 3579, 3577, 140, 3572, 3570, 3569,
	224, 3568, 3567, 26, 3566, 5, 3565, 3563, 182, 3065,
	3562, 3561, 30, 3491, 164,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 540, 540, 21, 35, 22, 36,
	15, 541, 541, 541, 541, 28, 23, 37, 25, 25,
	25, 25, 25, 177, 177, 177, 177, 20, 20, 31,
	31, 211, 211, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 539, 539, 213, 213,
	212, 207, 207, 542, 542, 214, 214, 214, 216, 216,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 441,
	441, 441, 472, 472, 472, 555, 555, 556, 556, 556,
	556, 556, 115, 115, 340, 340, 340, 43, 43, 43,
	43, 43, 534, 534, 179, 179, 179, 181, 181, 180,
	180, 180, 180, 65, 65, 547, 547, 548, 548, 546,
	549, 549, 549, 178, 178, 178, 111, 111, 111, 111,
	112, 112, 113, 113, 182, 182, 182, 184, 184, 183,
	183, 183, 183, 183, 183, 183, 183, 188, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 93, 93, 474,
	474, 475, 475, 173, 173, 174, 174, 174, 174, 175,
	175, 176, 176, 176, 57, 185, 185, 187, 187, 186,
	186, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 164,
	164, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 62, 62, 62, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 558, 558, 559, 559, 560, 560, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 71, 71, 302, 302,
	274, 274, 72, 72, 72, 73, 73, 74, 74, 59,
	59, 532, 532, 317, 317, 432, 432, 76, 76, 339,
	339, 77, 77, 77, 77, 77, 77, 78, 78, 78,
	78, 78, 78, 78, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 86, 86,
	86, 86, 86, 87, 87, 87, 84, 84, 84, 81,
	81, 81, 80, 80, 80, 85, 85, 85, 531, 264,
	264, 83, 83, 83, 267, 267, 82, 82, 82, 318,
	318, 88, 88, 88, 88, 275, 89, 89, 89, 89,
	89, 89, 89, 89, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 434, 434, 90,
	90, 90, 399, 399, 94, 94, 94, 355, 355, 95,
	95, 95, 95, 95, 96, 96, 96, 96, 96, 96,
	114, 114, 114, 114, 114, 114, 536, 536, 310, 310,
	229, 229, 229, 229, 104, 104, 104, 104, 105, 105,
	105, 106, 106, 169, 169, 121, 121, 121, 121, 121,
	120, 120, 120, 120, 120, 120, 49, 49, 49, 50,
	50, 51, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 123, 123, 552, 552, 125, 122, 122, 122,
	124, 124, 124, 124, 126, 127, 127, 127, 127, 127,
	127, 127, 127, 128, 128, 466, 466, 326, 326, 464,
	464, 483, 483, 465, 465, 279, 279, 279, 279, 279,
	280, 280, 280, 473, 473, 473, 473, 473, 473, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 170, 170, 171, 172, 172, 172, 172,
	172, 149, 149, 149, 163, 163, 163, 163, 163, 163,
	163, 152, 152, 152, 139, 139, 130, 130, 130, 130,
	130, 130, 130, 134, 134, 134, 134, 134, 134, 134,
	134, 131, 131, 141, 141, 141, 141, 141, 135, 135,
	136, 136, 159, 159, 138, 138, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 132, 132, 132, 132, 143,
	143, 143, 143, 362, 362, 362, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 162, 162, 162,
	162, 162, 162, 550, 550, 551, 551, 156, 156, 156,
	156, 156, 156, 413, 413, 150, 150, 150, 150, 155,
	155, 155, 155, 158, 158, 158, 158, 345, 345, 147,
	147, 147, 148, 148, 148, 153, 153, 154, 151, 151,
	157, 157, 157, 157, 133, 133, 133, 562, 562, 562,
	160, 160, 146, 146, 161, 161, 161, 161, 161, 161,
	161, 161, 145, 145, 145, 144, 144, 144, 144, 137,
	533, 533, 529, 529, 529, 529, 529, 529, 529, 529,
	530, 530, 530, 530, 535, 535, 99, 99, 99, 99,
	99, 107, 107, 107, 107, 107, 100, 100, 100, 100,
	100, 102, 102, 101, 101, 101, 101, 66, 66, 66,
	66, 66, 14, 14, 14, 67, 67, 191, 191, 191,
	192, 192, 287, 287, 287, 287, 189, 189, 190, 190,
	68, 68, 563, 563, 563, 543, 543, 543, 544, 544,
	544, 544, 544, 544, 281, 281, 282, 282, 379, 379,
	379, 379, 379, 285, 285, 285, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 288, 288, 215, 215, 215,
	291, 292, 292, 289, 289, 290, 290, 290, 294, 294,
	293, 296, 296, 295, 378, 492, 492, 494, 494, 494,
	494, 494, 494, 494, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 564, 564, 490, 490, 490,
	491, 486, 486, 487, 487, 487, 487, 487, 283, 283,
	284, 284, 284, 284, 488, 489, 308, 308, 417, 493,
	493, 495, 495, 497, 565, 565, 565, 565, 565, 565,
	566, 566, 566, 377, 377, 376, 376, 300, 300, 498,
	498, 498, 498, 499, 499, 499, 499, 499, 502, 501,
	500, 500, 500, 500, 500, 70, 70, 70, 342, 342,
	341, 341, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 166, 166, 232,
	232, 64, 64, 64, 12, 12, 12, 545, 545, 545,
	69, 69, 69, 69, 69, 69, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 538, 538, 537, 537,
	233, 233, 568, 568, 75, 75, 75, 75, 75, 75,
	75, 435, 435, 436, 436, 63, 63, 63, 63, 63,
	363, 363, 361, 361, 360, 360, 307, 307, 415, 415,
	415, 416, 237, 237, 238, 238, 208, 208, 208, 27,
	26, 19, 19, 24, 24, 39, 39, 39, 39, 42,
	42, 38, 38, 38, 38, 40, 40, 34, 34, 553,
	553, 554, 554, 103, 103, 108, 108, 108, 108, 108,
	109, 109, 109, 109, 110, 110, 110, 110, 119, 119,
	165, 165, 165, 165, 165, 165, 165, 44, 44, 44,
	44, 56, 56, 56, 56, 117, 570, 570, 570, 118,
	118, 118, 569, 569, 230, 230, 373, 373, 374, 374,
	571, 571, 375, 375, 375, 375, 375, 223, 222, 224,
	224, 225, 225, 61, 61, 61, 217, 217, 218, 218,
	219, 219, 220, 220, 221, 221, 572, 572, 97, 97,
	97, 168, 168, 273, 273, 273, 370, 370, 370, 301,
	301, 244, 244, 372, 372, 372, 372, 338, 338, 338,
	167, 167, 315, 315, 328, 328, 329, 329, 429, 429,
	330, 116, 116, 195, 195, 193, 193, 193, 193, 193,
	193, 193, 193, 200, 200, 201, 201, 202, 202, 203,
	204, 204, 204, 204, 319, 319, 205, 205, 205, 194,
	194, 194, 196, 196, 196, 196, 196, 196, 196, 199,
	199, 199, 199, 206, 206, 206, 198, 198, 509, 509,
	509, 511, 511, 513, 513, 512, 512, 508, 508, 510,
	510, 567, 567, 344, 344, 344, 298, 299, 297, 297,
	305, 305, 303, 304, 304, 306, 306, 414, 414, 414,
	209, 209, 209, 335, 335, 335, 335, 336, 336, 366,
	366, 364, 364, 364, 364, 365, 365, 367, 367, 367,
	368, 368, 369, 369, 332, 332, 333, 333, 334, 334,
	334, 334, 395, 395, 197, 197, 197, 312, 312, 312,
	313, 313, 385, 385, 385, 385, 385, 385, 386, 386,
	384, 384, 384, 384, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 419, 420, 420, 314, 314, 421, 371,
	371, 527, 527, 527, 528, 528, 412, 412, 422, 422,
	422, 422, 422, 422, 410, 410, 411, 411, 430, 431,
	431, 348, 348, 348, 348, 346, 346, 349, 349, 349,
	349, 347, 347, 423, 423, 423, 423, 337, 337, 424,
	424, 424, 424, 425, 426, 426, 427, 427, 380, 381,
	381, 437, 437, 437, 437, 439, 311, 311, 311, 311,
	311, 485, 484, 484, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 454, 454, 454, 454, 454,
	454, 454, 440, 440, 440, 440, 440, 444, 444, 444,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 445, 445, 450, 450, 451, 451, 451, 446, 447,
	452, 452, 452, 452, 573, 573, 456, 456, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 442, 442, 442,
	449, 449, 449, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 356, 356, 358, 358,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 389, 389, 389,
	389, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 503, 503, 503, 503,
	503, 503, 503, 503, 391, 391, 506, 506, 507, 507,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 514,
	514, 515, 515, 517, 517, 518, 518, 519, 520, 520,
	520, 521, 522, 522, 516, 516, 523, 523, 523, 523,
	524, 524, 525, 525, 525, 525, 525, 526, 526, 526,
	526, 526, 401, 401, 402, 402, 408, 408, 408, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 234, 234, 234, 234, 234,
	324, 324, 322, 322, 322, 325, 325, 323, 323, 321,
	321, 320, 320, 398, 398, 396, 396, 400, 400, 350,
	350, 455, 455, 455, 455, 455, 455, 455, 455, 351,
	351, 351, 359, 352, 352, 353, 353, 353, 353, 353,
	392, 393, 354, 354, 354, 394, 394, 403, 407, 407,
	406, 405, 405, 404, 404, 382, 382, 383, 383, 331,
	331, 574, 574, 327, 327, 428, 428, 428, 428, 277,
	277, 316, 316, 276, 276, 268, 268, 269, 269, 269,
	269, 309, 309, 409, 409, 457, 457, 458, 458, 459,
	459, 460, 460, 461, 462, 463, 397, 397, 254, 253,
	241, 242, 252, 251, 250, 240, 243, 247, 248, 249,
	245, 246, 260, 259, 258, 265, 266, 256, 257, 433,
	239, 270, 270, 271, 271, 271, 272, 272, 272, 272,
	235, 235, 236, 236, 261, 261, 262, 263, 263, 255,
	255, 255, 226, 226, 226, 227, 227, 228, 228, 471,
	471, 468, 468, 468, 469, 469, 469, 470, 470, 470,
	470, 467, 467, 467, 467, 467, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 477, 477, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 479, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 482, 482,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 1, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 2,
	6, 4, 7, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 10, 10, 3, 5, 5, 5, 3, 5,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 11, 14, 1, 2, 3,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 9, 12, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 562, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -114, -119, -103, -115, -121, -165, -170,
	-171, -172, -3, -43, -45, -58, -76, -78, -89, -98,
	-97, -99, -104, -111, -107, -93, -49, -116, -120, -129,
	-166, -167, -168, 32, 31, 99, 79, 150, 125, 133,
	194, 370, 406, 417, 398, 387, -124, -125, 434, -44,
	-56, -118, -117, 72, 126, 393, -4, -12, 29, 45,
	-46, -47, -48, 61, -64, -60, -71, -65, -62, -557,
	101, -510, -79, -82, -110, -561, 138, 157, 212, -100,
	-101, 353, -105, -106, 400, -108, -109, 402, 158, -51,
	-50, 152, -193, -195, -122, -123, -169, -130, -131, -132,
	-133, -134, -135, -136, -159, -137, -138, -139, -140, -141,
	-142, -162, -143, -144, -145, -146, -151, -147, -148, -149,
	-150, -152, -153, -155, -156, -157, -158, -160, -161, 439,
	-154, 494, 48, 453, 81, 142, 410, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -59, -61, -63,
	-66, -67, -68, -75, -69, -70, -509, -80, -81, -84,
	-86, -87, -83, -85, 399, -196, -194, 559, 509, -16,
	-21, -22, -17, -18, -20, -23, -19, -24, -30, -35,
	-36, -32, -33, -31, -34, -37, -38, -39, -40, -41,
	-42, -26, -28, -29, -27, -15, -25, 528, 537, -199,
	-197, -198, -206, 426, 517, 469, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, -275, 2, -256, -261,
	-262, -263, -255, -226, -479, -482, 4, -476, -480, 163,
	221, 317, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 52, 54,
	58, 59, 60, 61, 62, 63, 67, 72, 73, 78,
	79, 80, 81, 82, 83, 84, 90, 87, 88, 89,
	91, 93, 95, 96, 97, 98, 99, 100, 102, 103,
	104, 106, 107, 115, 116, 117, 118, 120, 125, 126,
	129, 124, 128, 131, 132, 133, 136, 137, 138, 140,
	141, 143, 144, 145, 147, 148, 150, 151, 152, 155,
	153, 476, 154, 156, 157, 158, 159, 169, 170, 171,
	176, 178, 182, 183, 186, 187, 188, 189, 190, 191,
	192, 193, 195, 199, 201, 202, 203, 204, 205, 211,
	212, 214, 215, 216, 217, 222, 223, 227, 224, 233,
	234, 238, 239, 240, 242, 246, 247, 248, 249, 250,
	251, 253, 255, 254, 257, 260, 261, 264, 268, 269,
	272, 273, 274, 275, 277, 278, 281, 279, 282, 283,
	280, 284, 286, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 285, 300, 298, 302, 303, 304,
	315, 313, 308, 309, 305, 310, 306, 307, 311, 312,
	319, 320, 323, 209, 325, 326, 329, 347, 333, 334,
	335, 338, 339, 342, 345, 346, 348, 349, 350, 351,
	352, 353, 354, 355, 357, 358, 360, 361, 362, 364,
	365, 366, 368, 370, 371, 373, 375, 376, 377, 378,
	379, 380, 381, 384, 383, 385, 387, 393, 398, 395,
	396, 397, 399, 400, 401, 402, 404, 405, 406, 408,
	409, 410, 411, 413, 415, 416, 419, 420, 436, 437,
	455, 417, 418, 421, 422, 423, 424, 425, 429, 427,
	428, 430, 431, 432, 434, 435, 438, 439, 441, 442,
	443, 444, 445, 446, 449, 451, 452, 453, 454, 456,
	459, 460, 461, 462, 457, 468, 465, 466, 470, 471,
	472, 473, 474, 475, 477, 479, 487, 488, 489, 491,
	494, 495, 496, 497, 485, 499, 500, 503, 504, 505,
	508, 506, 507, 509, 511, 514, 515, 516, 522, 521,
	523, 529, 530, 532, 533, 534, 36, 49, 50, 53,
	55, 57, 68, 69, 70, 74, 121, 122, 149, 160,
	161, 172, 184, 185, 196, 198, 206, 207, 208, 228,
	229, 231, 236, 258, 322, 324, 340, 344, 359, 363,
	367, 369, 382, 412, 447, 458, 463, 480, 481, 482,
	483, 490, 492, 517, 518, 519, 524, 531, -275, 2,
	-256, 331, -249, 2, -226, -226, 370, 28, 2, 28,
	358, 428, 471, 473, 2, -536, -310, 2, 28, -229,
	-226, 101, 194, 426, -249, 2, -536, -310, 25, 2,
	-226, 2, -230, 2, 417, -226, 278, 2, 562, 93,
	269, 73, 412, 431, -127, 488, -126, 480, 421, -128,
	-466, 2, 300, -226, 562, 562, 562, 28, -239, -226,
	469, 221, 421, 117, 466, 562, 2, 469, 350, 521,
	427, 117, 379, 221, 496, 421, -545, 278, 408, 197,
	510, -534, 2, -529, 4, -480, -476, -269, -268, 469,
	474, 117, -263, -255, 552, -262, 562, 562, 562, 2,
	239, 240, 378, 377, 431, 432, 562, 562, 562, 562,
	419, 2, 159, 22, 27, 65, 92, 97, 123, 179,
	182, 336, -558, 347, 376, 430, 468, 477, 491, -544,
	454, 67, 421, -543, -545, 278, 496, 136, -360, 117,
	269, 193, 504, 473, 471, 502, 129, 227, 507, 506,
	562, 562, 22, 27, 65, 76, 97, 136, 159, 179,
	182, -560, 347, 376, 415, 430, 468, 477, 491, 2,
	521, 278, 427, 469, 221, 117, 496, 421, -545, 419,
	420, 374, -91, 2, 559, 32, 31, 434, -188, 469,
	232, 2, -226, 562, 562, 2, 239, 240, 419, 420,
	562, 562, 180, -529, 2, 562, 562, 2, 239, 240,
	419, 420, 232, 2, 67, 423, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 2, -163,
	431, 454, 203, 46, 45, 73, 28, 375, 78, 351,
	118, 144, 497, 195, 221, 222, 247, 92, 93, -362,
	44, 240, 239, 420, -550, 419, -413, 470, 422, 428,
	465, 251, 417, 488, 101, 511, 409, 534, 379, 380,
	153, 4, 117, 300, 433, 480, 269, 416, 354, 83,
	562, -567, 2, 469, -569, 2, 488, 488, 2, -569,
	2, -569, 2, -569, 2, -570, 488, 531, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, -194, -196, -195, 562, 562,
	562, 562, 562, 562, 562, -163, 431, 2, 73, 28,
	-303, -305, 501, 230, 146, 337, -193, -195, 2, -509,
	-464, 2, -387, -483, -389, 550, 551, 543, 467, 66,
	316, 535, -401, 123, 502, 331, -482, -390, -403, 149,
	412, -325, 8, 9, 5, 6, 7, -235, -391, -397,
	493, 162, 321, -272, 563, 10, 559, -506, -195, -402,
	37, 198, 64, -468, -271, -236, -440, 231, -270, -255,
	-503, -504, 4, -476, -477, -469, -443, -451, -447, -448,
	-454, -226, -479, 76, 109, 110, 108, 113, 112, 271,
	270, 114, 111, 433, 510, 65, 36, 206, 207, 236,
	322, 208, 74, -505, 137, -478, 228, 229, 447, 50,
	382, 172, 122, 121, 324, 55, 53, 518, -452, 119,
	480, 481, 482, 483, 184, 185, 57, 160, 161, 344,
	367, 463, 490, 492, 196, 258, 43, 105, 181, 226,
	210, 235, 237, 241, 259, 262, 301, 314, 318, 341,
	343, 407, 440, -573, 519, 458, 68, 69, -511, 383,
	-512, -249, -511, 562, 562, 564, 562, -297, -298, -299,
	2, 28, 134, 559, 2, -418, 2, -419, -423, -195,
	252, -422, 559, -420, 557, -256, 332, -507, 413, -503,
	-504, -235, -255, -271, 4, -476, -478, 561, -300, 559,
	117, 469, 77, 221, -355, 559, -226, 28, 331, 484,
	564, -399, 559, 331, 180, 334, -226, 521, 2, 2,
	436, 2, 559, -127, 70, 488, 43, 431, -374, 2,
	-375, -222, -223, -224, -430, -225, 238, 373, 381, 538,
	127, 316, 534, -464, -552, 180, 542, 484, -464, -326,
	561, 2, 2, 2, 2, 2, 2, -423, 206, -256,
	2, -253, -467, 4, -476, -480, -477, -481, -479, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 56, 64,
	65, 71, 75, 77, 86, 92, 101, 108, 109, 111,
	110, 112, 113, 114, 123, 127, 130, 134, 135, 139,
	142, 146, 162, 164, 177, 179, 180, 194, 197, 200,
	213, 225, 230, 232, 252, 256, 263, 270, 271, 316,
	321, 327, 331, 332, 336, 337, 356, 372, 386, 403,
	426, 433, 450, 464, 469, 478, 484, 486, 493, 501,
	502, 510, 512, 520, 525, 526, 527, 528, -482, 76,
	2, -423, 206, 2, -258, 206, -423, -261, 2, -240,
	-226, 2, -252, -467, 2, -276, 206, -256, -257, -261,
	-259, 2, -261, -265, 2, -226, -474, 206, 2, -471,
	10, -470, 5, 4, -476, -480, -477, 521, 232, 484,
	564, -316, -268, -269, -463, 8, -309, -226, 561, -387,
	2, -116, -102, 2, 177, -387, 206, 2, -116, 206,
	2, -387, 206, 2, -116, 206, 2, -547, 2, -474,
	206, -226, 2, 282, 2, 2, 491, 2, 97, 469,
	116, 2, 397, -559, 415, 495, 2, 2, 2, 2,
	2, 2, 469, -245, 2, -226, 177, -265, 206, -266,
	2, -226, -227, 427, -568, 383, -474, 206, 2, 521,
	-259, 2, -259, 221, 234, -240, 206, 2, 473, 471,
	473, 471, 180, 2, 232, 2, 232, 2, -424, 2,
	-425, -419, -426, 557, 332, 282, 2, 2, 2, 2,
	2, 206, -226, 469, 116, 2, 250, 2, 2, 2,
	2, 2, 2, 2, -318, 206, 2, -256, 521, -318,
	206, 2, -318, 206, 2, -361, 2, 86, -240, 206,
	2, -264, 206, 2, -259, -267, 206, 2, -265, -475,
	206, 2, -474, -387, 2, -116, 2, -434, 2, -433,
	-470, 517, -91, 559, -91, 559, 431, 559, -474, -256,
	-256, -387, 2, -116, -102, 2, -387, 2, -116, 2,
	-113, -112, -474, 559, 180, -387, 2, -116, -102, 2,
	-387, 2, -116, 2, -188, 177, 2, 117, 469, -163,
	2, 177, 512, 2, 8, 2, 213, -474, 422, 380,
	169, 2, 436, 2, 437, 73, -362, 534, 73, 180,
	2, 180, 2, -345, 2, 528, 2, 2, -533, 2,
	331, 180, 2, 180, 2, 180, 2, 180, 2, 180,
	2, 377, 432, 489, 240, 2, -116, 525, -102, -387,
	525, 2, -551, 177, 420, -387, 2, 487, 249, 154,
	180, -345, 2, 180, 2, 180, 2, 5, 2, 378,
	455, 2, 238, 373, 455, 2, -256, -562, 2, 469,
	521, 427, 2, 2, 87, 88, 180, 2, 180, 2,
	180, 534, 2, -337, -423, -373, -374, -373, 484, -303,
	-305, -163, 436, 2, -200, -335, -202, 177, -364, -365,
	-203, 263, 164, 327, -204, -344, 28, 134, -344, -344,
	59, 560, 560, 11, 12, 75, 41, 550, 551, 552,
	553, 175, 554, 555, 548, 549, 547, 540, 541, 545,
	244, 245, 94, 544, 542, 85, 276, 414, 165, 166,
	167, 168, 394, 219, 34, 220, 14, 15, 16, 33,
	336, 262, 535, 210, 440, 543, 17, 18, 19, 235,
	237, 318, 49, 213, -234, -278, -387, -387, -387, -387,
	-387, -387, -387, 343, 559, -331, -382, 557, -195, 559,
	559, 559, -463, -195, -387, -401, 560, -323, 559, -195,
	-401, -396, 559, 412, 557, 559, -404, -387, 5, 5,
	5, 559, 561, -514, 529, 177, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 369, -445, 559, -444, 559, -444, -444, 522, -442,
	559, 537, 530, 559, -442, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 522, 564,
	-511, -300, 559, -327, -428, -387, 552, -327, -327, 331,
	-320, -387, 105, -348, 241, 301, 181, 259, 407, 226,
	-384, 563, -384, -412, 537, -195, -420, -255, -195, -422,
	559, -418, -412, -92, -463, -76, -89, -97, -116, -129,
	-167, -168, 552, -256, 559, 180, 559, 561, -467, 180,
	-309, -240, -256, -270, -271, -276, 133, -320, -529, 496,
	421, -309, -229, 38, -398, -437, -438, -485, 563, -484,
	-440, -450, -446, -449, 359, 363, -469, 53, 518, -452,
	231, 4, -476, -478, 228, 229, 447, 50, 382, 172,
	122, 121, 324, 55, 480, 481, 482, 483, 184, 185,
	57, 519, 458, 68, 69, -529, 496, 421, -309, 177,
	-361, -466, -320, 38, -374, 2, 123, -471, -571, 564,
	261, -280, 275, 315, 202, 332, 532, 325, 127, -473,
	5, 4, -397, -409, 123, 269, 231, -457, -459, 8,
	-458, 9, -460, 550, 551, -465, -464, 107, 561, -467,
	-211, 395, 434, -210, 24, 29, 138, 515, 155, -290,
	223, 346, 350, 149, 451, 505, -540, -541, 418, 475,
	476, 89, 325, 434, 395, 149, -341, -343, 38, 115,
	304, 345, 60, 216, 280, 281, 453, 524, 149, 434,
	395, 346, -541, 98, 395, -541, -213, 451, 505, -540,
	-541, 418, 395, -212, -290, 149, 563, 24, 395, 434,
	346, -555, -556, 138, 29, 395, 346, -537, -508, 528,
	149, -423, 206, -548, -112, 253, 5, 10, -112, -316,
	564, 564, -467, 552, 420, 419, 149, 149, 149, 149,
	177, 316, 2, 2, 2, 2, 2, 182, -543, -560,
	2, 2, -256, 206, -302, 331, -532, -317, 469, -256,
	316, 43, -258, 206, 2, -261, 521, -537, 316, -260,
	206, -256, 38, 559, 2, -361, 2, 221, -508, 316,
	-424, -273, -256, -419, -273, 434, -249, 38, -384, -256,
	2, 149, 2, 2, 2, -226, -214, 564, 63, 401,
	149, -318, 206, -214, 149, -214, 149, -277, 206, -276,
	-214, 149, -214, 564, 149, -214, 564, 149, 564, 149,
	560, 564, -434, -434, -474, -176, 528, 180, 101, 559,
	559, -188, -431, 564, -430, -475, -113, -474, -474, -532,
	-240, 2, -256, 2, 469, 242, -474, -176, 213, -474,
	-474, -474, -466, 28, 437, 2, 377, 432, 489, 88,
	437, 2, -256, 469, 117, 221, 79, -535, 177, -530,
	408, 421, 496, -529, -256, 117, -256, 117, -256, 117,
	-256, -256, 2, 2, 2, 2, 2, 84, 84, 2,
	45, -551, 177, 2, 487, 2, 487, 2, -226, -226,
	-226, 454, 261, -256, 177, 469, 221, 469, 221, 117,
	469, -214, 564, -230, -200, -335, -466, -336, -335, -201,
	-200, -203, 177, 381, 506, 304, 438, 246, -365, -364,
	28, -387, -369, 171, 303, -387, -367, -389, 550, 551,
	-458, -460, -319, 325, -194, -194, -194, -306, -414, -387,
	372, 221, -439, -437, -437, -254, -467, 480, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, 262, 210, 440, 49, 213, -387, 484,
	-387, -387, -387, -387, 298, 316, 321, 493, 162, 503,
	134, 325, -574, 464, 40, -394, -195, -324, 559, -408,
	35, 450, 28, -401, 559, 2, -382, -387, -383, -321,
	-320, -320, 560, 520, 28, 134, 552, 2, 560, 564,
	38, 560, -387, -321, -400, -396, -320, -407, -406, 525,
	-356, -357, 533, 285, 120, 204, 283, -358, 425, -461,
	8, -467, 552, -515, 170, 197, 559, 560, 2, 560,
	2, 560, -387, 2, 560, -387, 2, 560, -387, 2,
	560, -387, 2, 560, 2, -387, -387, -387, -387, -387,
	-387, -387, -320, 8, -461, -461, 480, 480, -461, -461,
	-461, -453, 359, 360, 361, 362, 264, 265, 266, 267,
	363, 364, 365, 366, 290, 291, 292, 293, 286, 287,
	288, 289, 294, 295, 296, 297, 189, 190, 191, 192,
	185, 186, 187, 188, -453, -350, 2, -455, -320, 4,
	533, 285, 120, 204, 283, 425, 5, -350, 2, -351,
	2, -387, -320, -352, -388, -389, 550, 551, 543, -401,
	-353, 2, -387, -321, -387, 56, 256, 486, -354, -387,
	180, -320, -320, 2, -320, 2, -512, 38, -320, -312,
	564, 180, 38, 4, -312, -312, 559, 560, 564, -349,
	201, 279, 274, -349, -418, -348, 241, -346, 341, -346,
	-346, -412, -241, 557, 565, -467, -412, -411, -410, 38,
	-249, 338, -412, -412, 561, 560, -411, 558, -527, 559,
	562, 562, 562, 562, 562, -256, 559, -320, -467, 561,
	456, 560, 235, 235, 235, 235, 413, 560, 484, -531,
	-264, -267, 528, -91, 333, 560, 564, -311, 37, 557,
	561, -461, 2, 2, -456, 522, 559, 559, -357, 559,
	180, -531, -267, -310, -260, -552, 560, 488, -375, -279,
	381, 449, 396, 429, 466, 8, 9, 8, 9, 564,
	-467, 564, -553, 92, 484, 77, 421, -378, 206, 77,
	-486, -243, 92, -487, -226, 71, 502, 372, 179, 147,
	-553, 92, 372, -553, 92, 92, 434, 454, 484, 59,
	-423, 41, 41, 28, -116, 257, 180, 534, 469, 221,
	421, 484, -423, -343, -437, 115, 280, 281, 59, -462,
	-457, 550, 551, -462, 59, -462, -462, -462, 528, -258,
	-423, 421, 484, 484, 484, 484, 564, 41, 41, 28,
	-116, 257, 180, 484, -276, -241, 516, 42, 516, 484,
	42, 421, 484, 564, 42, 42, 484, 484, -538, -231,
	104, 310, 273, 311, 96, 307, 95, 306, 102, 308,
	103, 309, 523, 319, 62, 305, 284, 312, -232, -233,
	352, 514, -474, 434, 395, 149, 213, -431, 213, -431,
	-268, -226, 561, -116, -387, -387, -116, -387, -116, 45,
	149, 2, -568, 250, 559, -283, 316, 180, -309, -432,
	232, 564, -317, 149, -472, -471, 114, 433, -342, -341,
	316, -260, 206, 2, 149, -300, 316, 143, 559, 379,
	2, -242, 206, -227, -226, -361, -217, 472, 149, -339,
	512, -370, -116, 559, 123, 38, -370, -328, -329, -429,
	-330, -243, 559, -249, -384, -226, 2, -256, -318, -214,
	149, -318, -318, -214, 564, 149, -240, -259, -264, -265,
	-267, -474, -475, -91, -433, 560, 560, 560, -175, 335,
	-174, -226, 5, -188, 512, -282, -379, -378, -490, -491,
	-486, 262, 221, 502, 234, 163, -301, -244, -243, 116,
	-182, 528, -112, 560, -431, 213, -176, -176, -431, -431,
	-256, 177, -474, -176, -176, -176, 2, 2, 2, -345,
	-256, -240, -276, -256, -309, -309, -309, -264, -345, -240,
	-345, -240, -345, -240, -116, -387, 2, 431, 177, 177,
	561, -345, 379, 117, 469, 350, 221, -256, -276, -256,
	-276, -240, -256, -423, -336, -201, 332, 246, 438, -367,
	-368, -389, 412, 413, -368, 412, 413, 8, 9, 8,
	9, -205, 442, 320, -318, 564, -208, 39, 130, 246,
	-256, 534, 145, -387, -387, 484, -574, 464, -394, 145,
	-387, 298, 321, 493, 162, 503, 134, 325, 180, 559,
	-388, -388, 560, -322, -387, -387, 558, 567, 560, -305,
	564, -303, -387, -320, -320, 560, 561, -320, -309, 558,
	558, 564, 560, -405, -406, 139, -387, 484, 484, 484,
	484, 559, 560, 561, -520, 342, 559, 559, -387, 560,
	560, 560, 560, 38, 564, 564, 564, 560, 564, 564,
	564, 560, 560, 560, 564, 560, 534, 534, 560, 560,
	560, 560, 564, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 560, 564, 560,
	180, 560, 560, -359, 356, 560, 11, 12, 550, 551,
	552, 553, 175, 554, 555, 548, 549, 547, 540, 541,
	542, 85, 276, 414, 14, 15, 16, 235, 213, -388,
	-388, -388, 560, -392, -393, 180, 177, 38, -354, -354,
	-354, 560, 180, -320, 560, 560, 559, -513, 278, 316,
	560, -381, -380, 526, -428, -313, 2, -418, -251, -467,
	-381, -381, -320, -387, 241, 241, -347, 512, 331, -349,
	-418, -411, -463, -386, -385, 178, 39, 130, 313, 209,
	-411, -249, -300, -411, -411, -467, -412, -412, -410, 560,
	-528, -463, 560, -314, -421, -507, -305, 561, -467, -185,
	-508, -164, 5, 321, -164, -164, -164, -309, 484, 484,
	25, 357, -437, 557, 558, 8, -467, 559, -461, -461,
	-461, -309, 180, 180, 180, -340, 528, -464, -374, 500,
	82, 381, 480, -464, -210, 395, -243, -243, -256, -265,
	316, -378, 206, -216, 316, -437, -250, -226, 559, 559,
	246, 246, 512, -243, -250, 246, 206, -243, 206, -250,
	-250, -539, 381, 326, -387, -472, 268, 379, 317, -211,
	395, 434, -116, -116, -116, 559, -552, 512, 133, -256,
	-276, -256, -265, -260, 434, 395, 314, -270, -462, -462,
	-341, 434, 395, -265, -258, -472, 421, -240, -212, -116,
	-116, -116, 559, -241, -213, 395, 5, 206, -243, 5,
	-226, -243, -265, -472, -556, 24, -243, 206, -243, -265,
	-472, -231, -474, 321, 508, -537, 421, 484, -423, -112,
	-179, 528, -112, -173, 217, 552, -534, -226, 521, -226,
	-281, -284, -282, -243, -191, -192, 530, 528, 149, -274,
	-256, 557, -176, -474, -256, -265, -266, 149, -300, 316,
	-474, 38, 149, 559, 2, 2, 331, 316, -242, 206,
	-218, 140, -572, 542, -240, -381, -313, -338, -372, 403,
	331, -301, 517, -249, -338, -315, 564, 180, 542, 561,
	-301, -427, 552, 2, -214, -318, -214, -214, -276, -277,
	-214, -214, -214, -91, -91, -176, 564, 559, 542, 542,
	559, -474, -474, 560, 564, -256, -242, 221, 221, -248,
	-227, 560, 564, 561, 559, -184, 335, -183, 141, 248,
	233, 443, 444, 445, 446, 132, -182, -113, 180, -52,
	528, 469, -176, 563, -345, -345, -345, 431, 431, -226,
	-252, -240, -256, -253, -276, 177, 177, 506, -368, 332,
	272, -414, -209, 536, -256, 563, -387, -387, 145, 145,
	-387, -388, -388, -387, 145, 180, 559, -387, -398, 33,
	33, 560, 564, -383, -387, 560, 520, -305, -305, 560,
	552, -467, 563, 560, -396, 142, -387, 478, 285, 204,
	283, -358, 283, -358, -358, -461, 5, -467, 552, -521,
	-246, 559, -226, 526, -304, 337, 560, -439, -437, -387,
	-387, -387, -387, -387, -461, -442, -442, -457, -457, -387,
	-392, -387, -439, -437, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, 134, 316, 325, -388, -393, -392, -387,
	-387, -437, 560, 560, 560, -320, -91, 559, 278, -332,
	197, -387, -431, 564, -332, -332, 560, -418, -418, 559,
	-387, 241, 558, 564, 566, 542, -300, 561, -410, -411,
	558, 560, 564, 560, 564, -371, 38, 560, -467, -381,
	-187, -186, 131, 52, -309, -309, 334, 5, 8, 557,
	558, 561, -461, 560, 560, 560, -309, -309, -309, 116,
	304, -387, 484, 484, 149, 316, 514, -492, -487, 147,
	-387, -307, -415, -507, 559, -226, 559, 559, 2, -207,
	138, 434, -554, 2, 512, 149, -214, 149, -214, 532,
	559, 559, 484, 421, 528, -320, -387, -177, 123, -466,
	-541, 563, -541, 563, 421, 484, 421, 484, 528, 528,
	-320, 484, -441, 47, 26, 316, -259, 484, 484, -214,
	149, 496, 434, -474, 321, -265, -260, 434, 395, -431,
	-181, 335, -180, 141, 405, 132, 248, -431, -179, 180,
	232, -260, 2, 560, 560, 564, -493, 38, 329, 329,
	559, -256, -72, 528, -430, -463, 43, -258, 38, 149,
	-537, -116, -260, -435, -436, 5, -256, 149, 331, 316,
	-219, 255, -572, -471, -508, -305, -338, -327, 317, 90,
	560, -381, -329, -313, -387, 2, 560, -214, -214, -174,
	-175, -474, -474, -474, -176, -188, -188, -379, -285, 559,
	-242, -227, 559, -188, -244, 2, -475, 564, 559, 542,
	542, 542, -431, -116, 335, -256, 552, -345, -292, -291,
	350, 325, -292, 412, 412, 332, 171, 251, -208, -241,
	-387, -387, 145, 33, 33, -387, -387, -398, 560, -387,
	-387, -320, 558, 5, -387, 560, 560, 8, -387, 560,
	561, -522, -226, -387, 560, 59, 560, 560, 564, 564,
	560, 560, 560, 560, 560, 560, 560, -393, 180, 134,
	325, 559, 560, 560, -91, -395, 200, 59, -418, -395,
	-395, -347, -309, -418, -385, -241, 557, -467, -463, -421,
	559, 561, -186, 542, 558, 2, 557, -467, 560, 116,
	-243, -243, -378, 149, -494, 92, -496, 75, 163, 101,
	316, 321, 502, 372, 71, 123, 386, -564, 38, 539,
	560, 560, 564, -416, -237, -226, -387, -416, -307, -309,
	316, 461, 123, 316, 123, 116, 496, 78, -243, -250,
	-309, -309, -256, -265, 156, 560, 564, 542, 2, 552,
	552, -265, -260, -265, -258, 348, 156, 560, -241, 5,
	5, 149, -238, 75, 5, -243, -243, -259, 116, 421,
	484, -179, 564, 559, 542, 542, -179, -475, -112, -300,
	-288, 224, -243, -491, -488, -489, 372, -495, -497, 163,
	372, -116, 2, -190, -189, -226, 5, 559, -283, 335,
	558, -472, -342, -116, -260, -300, 560, 564, -363, 512,
	-241, -256, 149, -220, 254, -572, -471, -217, -366, -364,
	135, 559, 331, -116, -305, 542, 560, 560, 116, 116,
	215, 148, -307, 559, 559, -309, 116, 560, -183, -184,
	-474, -112, -474, -182, -53, -54, 221, 92, 355, -253,
	469, 221, 559, 559, -208, -387, -387, -387, 560, -305,
	-467, 552, -516, 350, 560, -414, -387, -387, -388, 180,
	559, -398, 560, -517, 527, -387, -333, -334, -387, 411,
	106, 198, -517, -517, 560, -463, 2, -474, 557, 2,
	-378, -250, -254, -247, -226, 163, 206, 321, 246, 559,
	-388, -256, 559, 2, 30, -565, 127, 225, -377, -566,
	100, 462, 214, -415, -208, 560, 560, 560, 321, 321,
	-387, -437, 559, -214, -214, 560, 560, -387, 484, -466,
	99, -464, 2, -541, -240, -387, 484, 5, -214, -254,
	-214, -214, -238, 496, -265, -260, -180, -181, -474, -112,
	-179, 38, -289, -290, 213, -493, 246, -247, 246, -563,
	528, 560, 564, 542, 542, -281, -191, -73, -74, 485,
	-430, -300, 38, 5, 559, -226, 331, 559, -241, -221,
	91, -572, -471, -218, -338, 317, -309, 92, -366, -394,
	-176, 559, 559, -286, 80, 93, 124, 205, 183, 222,
	454, 459, 28, -286, 560, -307, -307, 560, 559, -176,
	560, 564, 28, 559, 28, 559, -256, -276, -320, -320,
	560, -305, 59, 564, 560, 560, -388, -398, 560, -518,
	-519, -246, 564, 559, 559, 435, 558, 2, -496, -247,
	316, 512, -387, -228, 559, -387, 38, 225, 128, 211,
	-288, 559, -209, -416, -376, 512, 386, -238, -307, 559,
	559, 559, 542, 180, 559, -441, -214, -259, 560, -546,
	384, -116, -191, 348, 559, -287, 331, 116, 304, -189,
	-464, -464, 560, 38, -74, 9, 38, -116, -307, -256,
	-307, 331, 263, -471, -219, 560, -250, -338, -475, -475,
	-376, 560, 560, -475, -54, -309, -309, 560, 560, -523,
	379, 413, 199, -320, -306, 560, 564, 38, -334, 2,
	2, 2, 149, 201, 560, -498, 277, -226, 560, 128,
	211, -289, -309, -288, 201, -256, -542, 512, 560, -294,
	-293, -291, -296, -295, -291, -320, -464, 99, 348, -320,
	-238, -549, 181, -548, 5, 10, -287, -256, -308, -417,
	-243, 81, 116, -288, -116, -116, 560, -363, 560, -256,
	-572, -220, -381, 560, 560, -377, -376, -192, 528, 560,
	560, 560, 560, -524, -525, 49, 499, 107, -387, -524,
	-524, -519, -521, 163, 528, -499, -502, -501, 331, 441,
	181, 349, 560, 461, 524, -565, 560, 528, -300, -387,
	-376, 560, 564, 517, 560, 564, 517, 560, 180, 560,
	-214, -178, 528, 45, 559, 560, 564, 371, 129, 138,
	-289, -563, -376, 559, -377, 559, -457, -221, 135, -176,
	-176, -288, -377, -381, -176, -526, 147, -525, 368, 176,
	412, 368, 176, -526, -526, -247, 54, -501, 331, -502,
	331, 506, 129, -381, 54, -498, -288, -293, 213, -295,
	180, 348, 419, -548, 30, -309, -417, 413, 413, 2,
	-191, -287, -377, -307, -288, -307, 317, 506, -289, -288,
	107, 197, 479, 304, 33, 542, -500, 304, 401, 63,
	434, -500, 542, -499, 559, 559, 335, 560, 2, -287,
	-288, 560, -289, 560, 434, -192, -289, 412, 339, -525,
	-387, 23, 321, 123, -387, -565, -320, -320, -175, 559,
	-215, 63, 401, -289, -376, -192, -377, -328, -381, -192,
	560, 560, -175, -192, -377, -381, -288, -381, -381, -289,
	484, 560, -381, -288, -289, 559, -289, -192, -320, -192,
	-381, 560, -381, -289,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 484, 485, 487, 488, 489, 491, 492, 494,
	496, 498, 499, 500, 502, 503, 505, 506, 507, 508,
	509, 511, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 577, 0, 1210,
	1212, 1214, 1216, 0, 715, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, 320,
	-2, 0, 417, 418, 420, 422, -2, -2, 0, 886,
	888, 0, 564, 566, 0, 891, 893, 0, 0, 586,
	587, 0, 1301, -2, 580, 582, 584, 649, 651, 653,
	655, 657, 659, 661, 663, 665, 666, 668, 670, 672,
	674, 676, 678, 680, 682, 683, 685, 687, 689, 691,
	693, 695, 697, 699, 701, 703, 705, 707, 709, -2,
	711, -2, -2, 0, -2, -2, -2, 1228, 36, 38,
	40, 42, 44, 46, 48, 50, 52, 368, 369, 371,
	373, 375, 377, 380, 382, 384, 1359, 424, 426, 428,
	430, 432, 434, 436, 0, -2, 1371, 0, 0, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 83, 84,
	85, 86, 87, 88, 89, 90, 66, 67, 69, 70,
	71, 75, 76, 77, 78, 81, 64, 0, 0, 1332,
	1334, 1336, 1338, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 486, 490, 493, 495,
	497, 501, 504, 510, 512, 514, 471, 472, 475, 2027,
	2044, 2045, 2046, 2049, 2050, 2051, 2052, 2053, 2054, 2472,
	2553, 2554, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 473, 474,
	1048, 0, 538, 536, 2019, 539, 2287, 541, 543, 411,
	412, 413, 414, 415, 416, 0, 557, 549, 556, 558,
	560, 561, 562, 563, 533, 531, 0, 557, 2080, 555,
	1208, 1209, 1193, 1194, 2325, 1235, 0, 193, 576, -2,
	-2, -2, 2437, -2, 608, -2, 615, 2441, 2327, 620,
	0, 622, -2, 625, 1211, 1213, 1215, 713, 714, 2030,
	0, 0, 0, 0, 0, 34, 35, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 1098,
	1099, 0, 201, 203, -2, -2, -2, -2, 0, 0,
	2366, 2129, 1987, 2046, 1990, 1985, 282, 284, 286, 287,
	0, 0, 0, 0, 0, 0, 312, 315, 317, 319,
	-2, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 935, 936, 1154, 0, 0, 0, -2,
	419, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 347, 476, 477, 0, 1360, 1360, 0, 0, 0,
	0, 256, 247, 887, 889, 890, 0, 0, 0, 0,
	565, 567, 0, 0, 229, 892, 894, 895, 0, 0,
	0, 0, 0, 258, 0, 0, 581, 583, 585, 650,
	652, 654, 656, 658, 660, 662, 664, 667, 669, 671,
	673, 675, 677, 679, 681, 684, 686, 688, 690, 692,
	694, 696, 698, 700, 702, 704, 706, 708, 710, 721,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 805, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 724, 726, 727, 728, 0, 785, 803, 804, 813,
	712, 0, 1088, 1361, 1237, 1218, 1232, 1237, 1220, 1221,
	1222, 1223, 1224, 1229, 1231, 1225, 1226, 1227, 37, 39,
	41, 43, 45, 47, 49, 51, 53, 370, 372, 374,
	376, 378, 381, 383, 385, -2, 1330, 1331, 425, 427,
	429, 431, 433, 435, 437, 568, 0, 570, 0, 725,
	-2, 0, 1365, 1365, 1365, 0, 0, 1331, 1329, 0,
	573, 574, 629, 630, 1630, 0, 0, 0, 0, 0,
	0, 0, 1884, 1716, 0, 631, -2, 1747, 1749, 2412,
	2437, 1883, 1751, 1752, 1753, 1754, 1755, 0, 1757, 1758,
	1759, 1760, 1761, 1762, 0, 1764, 0, 1769, 1770, 1771,
	0, 2419, 1964, 2040, -2, 0, 0, 2425, 2036, 0,
	1850, 1787, -2, -2, 2063, 2042, 1562, 1563, 1564, 1565,
	1566, -2, -2, 2455, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 0, 2400, 2420, 2421, 2426,
	2428, 2422, 2409, 1812, 2141, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1589, 1598,
	-2, -2, -2, -2, -2, -2, -2, 2413, 2414, 2431,
	2434, 2440, 2445, 2446, 2418, 2427, 2454, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 1590, -2, -2, -2, -2, 1348, 2298,
	1351, 1048, 1349, 1333, 1335, 0, 1337, 0, 0, 0,
	1342, 1368, 1366, 0, 1415, 1346, 1347, 1433, 1433, 1457,
	0, 1438, 0, 1457, 1360, 1483, 0, 1444, 2317, 1788,
	1789, 0, 2046, 2041, -2, -2, 2452, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 540, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 1153, 578, 579,
	0, 603, 0, 607, 2408, -2, 0, 2336, -2, 611,
	1238, 1242, 1243, 1244, 1245, 1246, 0, 0, 0, 0,
	1251, 0, 0, 617, 0, 0, 604, 605, 623, 626,
	0, 716, 717, 718, 719, 720, 63, 0, 2420, 1483,
	65, 0, 2009, 2071, 2072, 2073, 2074, 2075, 2453, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2455,
	68, 0, 2420, 72, 0, 2420, 0, -2, 79, 0,
	2015, 82, 0, 2012, 91, 0, 2420, 0, 1984, -2,
	0, 178, 2023, 0, 914, 2025, -2, 2420, 1096, 259,
	260, 2059, 2060, 2067, 2068, 2069, 2070, 0, 0, 0,
	0, 877, 1981, 1986, 878, 2005, 879, 1991, 0, 288,
	289, 290, 291, 292, 0, 293, 2420, 295, 296, 0,
	298, 299, 2420, 301, 302, 0, 304, 0, 214, 215,
	2420, 323, 324, 0, 326, 327, 0, 329, 0, 0,
	0, 333, -2, 348, 0, 345, 336, 337, 339, 340,
	341, 342, 0, 389, 387, 2020, 0, 907, 2420, 0,
	911, -2, 2026, 0, 0, 1133, -2, 2420, 1093, 0,
	1139, 1135, 0, -2, 0, 1358, 2420, 1255, 939, 940,
	941, 942, 1495, 408, 0, 1270, 0, 1272, 0, 1291,
	1489, 1433, 0, 0, 1494, 0, 350, 351, 352, 353,
	354, 2420, 0, 0, 0, 359, 0, 361, 362, 363,
	364, 365, 366, 367, 167, 2420, 442, 469, 0, 167,
	2420, 445, 167, 2420, 448, 0, 451, 1152, 167, 2420,
	454, 167, 2420, 457, 459, 167, 2420, 463, 464, 466,
	2420, 468, 261, 1204, 1205, 1206, 1207, 0, -2, 527,
	2029, -2, 479, 0, 480, 0, -2, 0, 273, 0,
	0, 896, 897, 898, 899, 900, 903, 904, 905, 906,
	1470, 232, 230, 0, 0, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 0, 0, 588, 0, 0, 722,
	723, 0, 0, 733, 734, 735, 0, 273, 2328, 2295,
	2161, 742, 0, 745, 748, -2, 0, 0, 0, 0,
	752, 0, 757, 758, 759, 0, 761, 763, 885, 765,
	0, 0, 767, 0, 771, 0, 774, 0, 776, 0,
	778, -2, -2, -2, -2, 789, -2, 0, 792, 794,
	0, 796, -2, 0, 805, 801, 802, 0, 0, 0,
	0, 821, 822, 0, 831, 0, 834, 835, 836, 0,
	838, 839, 0, 841, 842, 843, 844, 0, 846, 847,
	-2, -2, 851, 853, 0, 860, 0, 864, 0, 868,
	0, 729, 730, 167, 1487, 1217, -2, 1219, 0, -2,
	0, 569, 0, 572, 1388, 1316, 1313, 0, 1385, 1386,
	1317, 0, 0, 0, 1324, 0, 1363, 1364, 0, 0,
	0, 1303, 1304, 0, 0, 0, 0, 1889, 1890, 1891,
	1892, 1893, 1894, 1897, 1898, 1895, 1896, 1899, 1900, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1902, 1903, 1904, 0,
	0, 1906, 0, 1908, 0, 0, 0, 0, 0, 0,
	1695, 1697, 1972, 0, 0, 1905, 1635, 1636, 1637, 1638,
	1639, 1674, 1675, 0, 0, 1748, 1969, 1968, 1750, 0,
	1920, 0, 1763, -2, 0, 1884, 1915, 0, 0, 1772,
	1773, 1774, 0, 0, 1920, 0, 0, 1963, 1784, 1785,
	1627, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1576, 1575, 0, 1577, 0, 1578, 1579, 1586, 1599,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 1944, -2, 0, 0, 0, 0, 1591, 0,
	1350, 0, 0, 1419, 1973, 1977, 1978, 1419, 1419, 0,
	0, 1921, 1480, 1480, 0, 0, 1476, 1476, 1476, 1474,
	1457, 0, 1457, 1467, 0, 1457, 1457, 0, -2, 1438,
	0, 0, 1467, 0, 1451, 515, 517, 519, 521, 522,
	523, 525, 1484, 1485, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 2376,
	2327, 545, 559, 1360, 0, 1923, 1510, 1514, 0, 1516,
	1517, 1518, 1519, 1520, 0, 0, 1511, -2, 1587, 1589,
	1610, 2064, 2065, 2066, 1570, 1571, 1572, 1573, 1574, 1582,
	1569, 1569, 1569, 1580, 1609, 1601, 1609, 1605, 1555, 1556,
	1557, 1592, 1593, 1594, 1595, 0, 2376, 2327, 551, 0,
	0, 0, 0, 0, -2, 613, 618, 619, 0, 1240,
	0, 1247, 640, 641, 642, 1249, 1250, 0, 1252, 616,
	643, 644, 645, 646, 647, 648, 0, 1993, 1994, 1995,
	1996, 1999, 2000, 0, 0, 614, 633, 621, 0, 627,
	92, 1190, 0, 131, 0, 1190, 1190, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 116, 127, 104,
	105, 0, 0, 0, 0, 0, 73, 1070, 0, 1073,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 115, 0, 0, 110, 94, 0, 0, 0,
	117, 129, 0, 158, 160, 0, 0, 0, 0, 0,
	0, 177, 185, 0, 0, 0, 0, 1094, 0, 1357,
	0, 0, 2420, 0, 1470, 2205, -2, -2, 1470, 876,
	0, 0, 2047, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 328, 330, 331, 332, 0, 1132, 0,
	338, 379, 1019, 2420, 0, 0, 406, 401, 0, 403,
	0, 0, 1069, 2420, 1067, 2024, 0, 1091, 0, 1048,
	2420, 2022, 0, 0, 1140, 2056, 1149, 1153, 1257, 0,
	410, 0, 1273, 1275, 0, 0, 1490, 0, 1492, 1433,
	349, 0, 356, 357, 358, 0, 438, 0, 165, 166,
	0, 167, 2420, 443, 0, 446, 0, 167, 2420, 1979,
	452, 0, 455, 0, 0, 461, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 236, 0, 1469, 0, 1470, 230, 273, 273,
	1470, 590, 1470, 592, 0, 0, 736, 737, 0, 273,
	273, 273, 743, 744, 746, 747, -2, -2, -2, 861,
	749, 750, 828, 0, 0, 0, 827, 764, 0, 870,
	2313, 2327, 2376, 883, 828, 2129, 828, 2129, 828, 2129,
	775, 777, 780, 816, 824, 788, 793, 0, 0, 798,
	806, -2, 0, 808, 0, 810, 0, 812, 828, 829,
	832, 837, 840, 845, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 1230, 1388, 1316, 571, 1307, 1387, 1308,
	1315, 1318, 0, 0, 1320, 0, 1322, 0, 1383, 1384,
	1391, 1392, 0, 1402, 1403, 1395, 0, -2, 0, 0,
	1398, 1399, 1326, 0, 1343, 1344, 1345, 1372, 1375, 1168,
	0, 2553, 1631, 1505, 1632, 1633, 2008, 0, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, -2, -2,
	-2, -2, -2, -2, -2, -2, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, -2, -2, -2,
	1672, 1673, -2, 1907, 1909, 0, 1972, 0, -2, 0,
	-2, -2, -2, -2, 1692, 0, 1694, 1699, 1701, 1703,
	0, 0, 0, 0, 1971, 1713, 1955, 1956, 0, 0,
	1886, 1887, 1888, 1698, 0, 1717, 1970, 1967, 0, 0,
	1919, 1371, 1776, 0, 0, 0, 0, 1783, 1768, 1917,
	0, 1916, 0, 0, 0, 1927, 0, 1962, 1958, 0,
	2006, 1626, 1613, 1614, 1615, 1616, 1617, 1618, 1628, 0,
	2003, 2033, 2039, 1860, 0, 0, 0, 1813, 1814, 1815,
	1816, 1817, 0, 1819, 1820, 0, 1822, 1823, 0, 1825,
	1826, 0, 1828, 1829, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 1527, 0, 0, 0,
	1531, 0, 0, 0, 1535, 0, 0, 0, 1539, 0,
	0, 0, 1543, 0, 0, 0, 1547, 0, 0, 0,
	1551, 0, 0, 0, 0, 0, 1832, 0, 1930, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1834, 0,
	1836, 1921, 1941, 0, 0, 1718, 0, 0, 0, 1884,
	0, 1839, 1921, 1949, 0, 0, 0, 0, 0, 1921,
	0, 1954, 0, 1846, 0, 1848, 1352, 0, 0, 1500,
	0, 0, 0, 1976, 1500, 1500, 0, 1414, 0, 0,
	1477, 1478, 1479, 0, 0, 1480, 0, 1471, 1475, 1472,
	1473, 1467, 1430, 0, 0, 2010, 1467, 1436, 1466, 0,
	1048, 1456, 1467, 1467, 0, -2, 1440, 1457, 0, 0,
	516, 518, 520, 524, 526, 0, 0, 1371, -2, 0,
	-2, 1047, 0, 0, 0, 0, 535, 537, 0, 0,
	458, 0, 0, 529, 0, 532, 0, 1501, 1504, 0,
	0, 1515, 1521, 1522, 0, -2, 0, 0, 1611, 0,
	0, 0, 0, 0, 196, 0, 606, 0, 1239, 1248,
	0, 637, 0, 639, 0, 1997, 2001, 1998, 2002, 0,
	628, 0, 0, 0, 0, 1189, 0, 135, 2420, 0,
	169, 0, 0, 1012, 2016, 0, 0, 0, 0, 2148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 1072, 1074, 1081, 1083, 0, 1077,
	2004, 0, 0, 1078, 0, 1080, 1082, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	107, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 1126,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	0, 0, -2, 0, 0, 0, 0, 206, 0, 264,
	1982, 1992, 0, 901, 902, 294, 297, 300, 303, 202,
	0, 334, 0, 0, 945, 920, 0, 0, 388, 273,
	0, 0, 402, 2056, 909, 182, 183, 184, 1065, 1068,
	0, 1048, 2420, 1105, 0, 0, 0, 0, 0, 0,
	1138, 0, 2420, 2011, 2055, 2056, 1259, 1267, 0, 1500,
	0, 1289, 1276, 0, 0, 0, 1289, 1293, 1294, 1296,
	1297, 0, 0, 1491, 1497, 0, 360, 470, 167, 440,
	0, 167, 167, 449, 0, 0, 167, 460, 167, 465,
	167, 262, 467, 478, 528, 1360, 1360, 273, 271, 2264,
	269, 266, 268, 0, 0, 0, 946, 948, 949, 950,
	951, 0, 2056, 0, 2194, 2056, 0, 1279, 1281, 0,
	226, 0, 233, 231, 236, 0, 0, 400, 589, 594,
	731, 0, 273, 739, 740, 741, 782, 818, 826, 751,
	753, 754, 755, 0, 884, 880, 881, 882, 766, 828,
	769, 828, 772, 828, 791, 795, 800, 807, 0, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 0, 865,
	866, 867, 869, 1488, 1311, 1312, 1314, 0, 1323, 0,
	0, 1397, -2, -2, 1396, 1400, 1401, -2, -2, -2,
	-2, 1319, 0, 1328, 1325, 0, 1382, 1166, 1167, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1714, 0,
	-2, 1693, 1696, 1700, 1702, 1704, 0, 0, 0, 0,
	0, 0, 1910, 0, 1912, 1715, 1965, 1968, 1882, 0,
	0, 1370, 1371, 1371, 0, 1782, 0, 1918, 0, 1925,
	1926, 0, 1775, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 1818,
	1821, 1824, 1827, 0, 0, 0, 0, 1807, 0, 0,
	0, 1811, 1581, 1567, 0, 1609, 1607, 1608, 1602, 1609,
	1606, 1559, 0, 1524, 1525, 1526, 1528, 1529, 1530, 1532,
	1533, 1534, 1536, 1537, 1538, 1540, 1541, 1542, 1544, 1545,
	1546, 1548, 1549, 1550, 1552, 1553, 1554, 1558, 0, 1831,
	0, 1833, 1835, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1722, 1723, 1838, 1947, 1948, 0, 0, 0, 0, 0,
	0, 1844, 0, 1953, 1845, 1847, 1360, 0, 1353, 0,
	1416, 1405, 1499, 0, 1974, 1470, 1418, 1420, 1975, 2013,
	1405, 1405, 0, 1922, 0, 0, 1461, 0, 0, 0,
	1463, 1434, 0, 0, 1428, 0, 1424, 1425, 1426, 1427,
	1435, 1048, 1465, 1437, 1441, 2033, 0, 1467, 0, 1452,
	0, 1454, 1486, 0, 1446, 1449, 0, 0, 2048, 1500,
	0, 305, 309, 310, 306, 307, 308, 544, 0, 0,
	0, 0, 1924, 0, 1506, 0, 1512, 0, 0, 0,
	0, 550, 0, 0, 0, 192, 0, 602, -2, 635,
	636, 638, 0, 634, 132, 1190, 0, 0, 1171, 1173,
	0, 137, 2420, 146, 0, 986, 0, 2014, 0, 0,
	0, 0, 0, 1192, 0, 0, 2420, 167, 2420, 167,
	149, 152, 0, 157, 154, 155, 0, 0, 977, 93,
	1190, 0, 96, 100, 108, 0, 0, 0, 114, 0,
	0, 0, 1175, 1181, 0, 0, 1075, 1076, 1079, 1085,
	74, 0, 0, 1179, 1185, 80, 0, 1170, 159, 98,
	102, 109, 0, 1187, 95, 0, 181, 0, 0, 0,
	173, 0, 174, 175, 186, 0, 167, 2420, 0, 912,
	913, 1127, 1089, 1090, 0, 1095, 0, 0, 0, 1470,
	198, 0, 1470, 206, 0, 1988, 0, 322, 0, 0,
	0, 0, 944, 1030, 0, 917, 0, 0, 0, 394,
	390, 0, 399, 405, 404, 908, 0, 0, 0, 0,
	-2, 0, 0, 1142, 1136, 1137, 0, 0, 0, 2420,
	1261, 1267, 0, 1266, 1358, 1371, 409, 1268, 1289, 0,
	0, 0, 1278, 1274, 1271, 1500, 0, 0, 0, 0,
	0, 1493, 1496, 355, 439, 167, 444, 447, 1980, 167,
	453, 456, 462, 481, 482, 248, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 955, 0, 2056, 2056, 0,
	2018, 0, 0, 0, 0, 234, 0, 237, 0, 0,
	0, 242, 243, 244, 245, 246, 227, 1470, 0, 591,
	0, 0, 738, 0, 768, 770, 773, 809, 811, 828,
	854, 855, 972, 0, 972, 0, 0, 1321, 0, 1394,
	1327, 1376, 1377, 0, 1168, 0, 1634, 1677, 0, 0,
	-2, 0, 0, 1681, 0, 0, 0, -2, 0, 0,
	0, 1911, 1913, 0, 1967, 1777, 0, 0, 0, 1781,
	1765, 1766, 0, 1885, 1928, 1957, 1961, 0, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 0, 2007, 2034, 2038, 1858,
	1859, 1863, 2021, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 1600, 1604, 0, 0, 1929,
	1940, 1942, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, -2, -2, -2, 1737, 1738, 1739,
	-2, -2, -2, 0, 0, 0, 1943, 1945, 1946, 1950,
	1951, 0, 1841, 1842, 1843, 1952, 0, 1360, 1354, 1413,
	0, 1498, 1417, 0, 1413, 1413, 1367, 1459, 0, 0,
	1482, 0, 1431, 0, 1432, 0, 1464, 0, 1439, 1442,
	1443, 1453, 0, 1445, 0, 1448, 0, 1777, -2, 274,
	275, 277, 0, 280, 547, 548, 546, 530, 0, 0,
	1508, 0, 0, 1584, 1588, 1612, 553, 554, 552, 194,
	0, 1468, 0, 0, 0, 0, 168, 984, 1011, 0,
	0, 0, 1156, 1163, 0, -2, 0, 0, 1017, 139,
	0, 0, 0, 147, 0, 0, 144, 0, 151, 156,
	0, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	118, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 1165, 0, 0, 188,
	0, 0, 0, 1130, 1131, 1176, 1182, 0, 0, 206,
	204, 0, 207, 0, 210, 211, 0, 206, 200, 0,
	0, 1048, 335, 966, 1018, 0, 1020, 0, 918, 0,
	0, 1019, 386, 0, 393, 0, 0, 1069, 0, 0,
	1092, 1103, 1048, 0, 1141, 1143, 1151, 0, 0, 0,
	1263, 1267, 0, 1256, 1257, 1390, 1269, 1287, -2, 0,
	0, 1371, 1295, 1292, 1298, 1299, 0, 441, 450, 270,
	0, 265, 267, 0, 251, 0, 0, 947, 952, 0,
	0, 0, 0, 0, 1280, 1282, 0, 0, 0, 0,
	0, 0, 236, 257, 0, 732, 756, 819, 856, 971,
	0, 0, 858, 0, 0, 1393, 1380, 1381, 1378, 1168,
	1679, 1683, 0, 0, 0, 1685, -2, 0, 1707, -2,
	-2, 1914, 1966, 1756, 1371, 1778, 1780, 1767, 1960, 1629,
	0, 1865, 1862, 0, 1849, 0, 1802, 1803, 0, 0,
	1806, 1808, 1809, 1810, 1568, 1561, 1560, 1939, 0, 0,
	0, 0, 1840, 1355, 0, 1854, 0, 0, 1421, 1854,
	1854, 1460, 0, 1462, 1429, 1422, 0, 2034, 1455, 1447,
	0, 0, 278, 0, 1502, 1507, 0, 1513, 1583, 195,
	133, 134, 136, 0, 985, 0, 988, 0, 0, 0,
	0, 995, 996, 0, 0, 0, 0, 0, 1005, 0,
	1034, 1044, 0, 1158, 1168, 1162, 0, 1160, 0, 0,
	0, 141, 162, 0, 0, 1191, 0, 0, 167, 167,
	0, 0, 1172, 1174, 0, 0, 0, 0, 121, 0,
	0, 1177, 1183, 1180, 1186, 0, 0, 0, 1188, 179,
	180, 0, 167, 0, 172, 167, 167, 1165, 0, 0,
	0, 197, 0, 0, 0, 0, 199, 263, 206, 0,
	974, 0, 1030, 1022, 1023, 1024, 0, 1029, 1031, 0,
	0, 932, 919, 0, 928, 0, 0, 945, 920, 0,
	391, 910, 1066, 1100, 1048, 0, 1134, 0, 0, 0,
	0, 0, 0, 1265, 1267, 0, 1258, 1259, 1289, 1389,
	0, 0, 0, 1277, 1390, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 238, 0,
	239, 240, 241, 228, 593, 595, 0, 0, 601, 970,
	0, 0, 0, 0, 1379, 1687, -2, -2, 1708, 0,
	2035, 2037, 1371, 0, 1851, 1373, 0, 0, -2, 0,
	0, 0, 1356, 1339, 0, 1412, 1404, 1406, 1408, 2316,
	2125, 2419, 1340, 1341, 1481, 0, 1450, 279, 0, 1509,
	138, 0, 989, 990, 2017, 992, 0, 994, 997, 0,
	1000, 2058, 0, 1004, 0, 1013, 1035, 0, 966, 0,
	1040, 1041, 1042, 1157, 1382, 1163, 1046, 0, 140, 142,
	161, 1165, 0, 143, 150, 0, 0, 97, 0, 0,
	2120, 124, 122, 120, 1169, 99, 0, 181, 187, 1164,
	176, 189, 167, 0, 1178, 1184, 208, 0, 209, 212,
	0, 0, 920, 973, 0, 1021, 0, 1032, 1033, 922,
	0, 921, 0, 0, 0, 0, 0, 392, 395, 0,
	398, 0, 0, 1144, 0, 1150, 0, 0, 0, 1253,
	0, 0, 1260, 1261, 407, 1283, 0, 0, 1289, 1300,
	250, 0, 0, 953, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 954, 1046, 0, 0, 1010, 0, 255,
	235, 0, 597, 0, 599, 0, 857, 859, 0, 0,
	1779, 1869, 0, 0, 1804, 1805, -2, 0, 1745, 1853,
	1855, 0, 0, 0, 0, 0, 1423, 1503, 987, 991,
	0, 0, 0, 1052, 0, 0, 1006, 0, 1038, 1039,
	974, 0, 1161, 1159, 966, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 171, 190, 1165, 205, 222,
	0, 1101, 922, 0, 0, 930, 0, 933, 0, 929,
	926, 927, 966, 0, 396, 397, 0, 1104, 0, 1151,
	0, 0, 1267, 1262, 1263, 1500, 1286, 1290, 0, 0,
	1044, 1046, 920, 0, 596, 0, 0, 862, 863, 0,
	0, 0, 0, 1864, 1374, 1746, 0, 0, 1407, 1409,
	1410, 1411, 0, 0, 999, 1057, 0, 0, 0, 1036,
	1037, 1034, 0, 1015, 0, 1048, 145, 0, 1046, 0,
	978, 0, 0, 981, 0, 0, 125, 2120, 123, 0,
	167, 225, 0, 219, 217, 218, 915, 0, 0, 1026,
	1028, 0, 934, 974, 932, 1102, 1046, 0, 1044, 0,
	0, 1265, 0, 273, 273, 966, 1044, 1500, 0, 273,
	598, 600, 1861, 1881, 1870, -2, 2379, 2126, 0, 1881,
	1881, 1856, 1857, 0, 0, 1001, 1053, 1054, 0, 1049,
	1050, 1051, 2057, 1002, 1003, 1500, 1043, 0, 1052, 163,
	966, 975, 0, 0, 976, 0, 0, 128, 0, 130,
	191, 213, 0, 0, 0, 1025, 0, 0, 0, 0,
	920, 922, 1044, 0, 966, 0, 1264, 1254, 0, 252,
	253, 974, 966, 1009, 254, 1866, 0, 0, 1872, 1873,
	1874, 1875, 1876, 1867, 1868, 993, 0, 1055, 0, 1056,
	0, 0, 0, 1014, 0, 1057, 148, 979, 0, 982,
	0, 126, 0, 220, 221, 0, 1027, 923, 0, 925,
	922, 931, 966, 0, 974, 0, 1284, 0, 920, 974,
	0, 1878, 1879, 0, 0, 0, 1058, 0, 1061, 1062,
	0, 1059, 0, 1034, 0, 0, 0, 969, 924, 916,
	974, 1046, 920, 1044, 0, 1500, 920, 1877, 1880, 1871,
	998, 1060, 1063, 1064, 1045, 1016, 0, 0, 223, 0,
	965, 967, 968, 920, 1044, 1500, 966, 1500, 1007, 1500,
	974, 0, 0, 1500, 966, 1147, 974, 1285, 1008, 980,
	0, 224, 1145, 974, 920, 0, 920, 1500, 0, 1500,
	1148, 974, 1146, 983,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 548, 3, 554, 549, 3,
	559, 560, 552, 550, 564, 551, 561, 553, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 567, 3,
	540, 542, 541, 545, 563, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 557, 3, 558, 555, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 565, 547, 566, 543,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 544, 57883, 546, 57884, 556,
	57885, 562, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1235
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1260
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1363
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1397
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1401
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1418
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1422
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1551
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1572
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1579
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1606
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1615
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1626
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1645
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1655
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1665
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1691
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1842
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2052
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2110
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2193
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2454
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2587
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2613
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2720
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2884
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			return unimplemented(sqllex, "create access method")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return unimplemented(sqllex, "create cast")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "create operator")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "create publication")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "create rule")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "create server")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2963
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2967
		{
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2971
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "drop server")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3003
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3073
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3112
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3147
		{

			sqlVAL.union.val = nil
		}
	case 407:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			return helpWith(sqllex, "DELETE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DROP")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "DELETE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "INSERT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "DELETE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "INSERT")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3585
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3618
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "GRANT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3762
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "RESET")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "RESET")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "USE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "USE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4050
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "set from current")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4079
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.Low
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = tree.Normal
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4168
		{
			sqlVAL.union.val = tree.High
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4266
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.str = "client_encoding"
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.str = "timezone"
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4321
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4384
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4393
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = true
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = true
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = false
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4712
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = true
		}
	case 814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = false
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = true
		}
	case 828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = false
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4858
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4879
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4922
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4930
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4967
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4990
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5006
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "RESUME")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5430
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5445
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{

			sqlVAL.union.val = nil
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = nil
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5490
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5495
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5500
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 930:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5527
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5541
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5556
		{
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5654
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.str = ""
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5864
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5878
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5889
		{
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5890
		{
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5988
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6026
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6106
		{
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6110
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6267
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6276
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6325
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = true
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6388
		{

			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = false
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6403
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6417
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6441
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6451
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6461
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = nil
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6590
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6592
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6594
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6636
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6654
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6673
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6690
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6707
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = false
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = true
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6770
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.str = ""
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.str = ""
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6842
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6848
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6918
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6924
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6936
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6942
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6956
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6962
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6979
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6984
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6995
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7171
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7199
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7214
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7299
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.str = ""
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.str = ""
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7343
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7356
		{
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7357
		{
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7386
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7493
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7567
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7717
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7752
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7753
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7754
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = nil
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7942
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7943
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = true
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = false
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = false
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = true
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8035
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8040
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8069
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8158
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8162
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8197
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8230
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8245
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8267
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8319
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8368
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8414
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8444
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8477
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8479
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = nil
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = true
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = false
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.str = tree.AstFull
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.str = tree.AstRight
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.str = tree.AstInner
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8596
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8597
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.str = tree.AstHash
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.str = ""
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = true
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = false
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8766
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8774
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8793
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8803
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8823
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8884
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8895
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8898
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8901
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8902
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = types.Geography
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8934
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8942
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8976
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = nil
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = types.Int2
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = types.Int
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = types.Float4
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = types.Float
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = types.Bool
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = types.Float
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9068
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9074
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = types.String
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = types.Date
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9153
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9167
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9184
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9201
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = false
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = false
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = types.Interval
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9225
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = nil
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9354
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9732
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9754
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9953
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9979
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10003
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10033
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10044
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10045
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10069
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10135
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10331
		{
			return unimplemented(sqllex, "treat")
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.str = ""
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10506
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10603
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.Any
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = tree.Some
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = tree.All
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = tree.Div
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.LT
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = tree.GT
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.LE
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = tree.GE
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = tree.NE
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = tree.Like
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10964
		{
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10965
		{
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11118
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11183
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11383
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.str = ""
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
