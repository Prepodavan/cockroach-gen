// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:693
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11999

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1358,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	232, 202,
	484, 202,
	-2, 0,
	-1, 80,
	221, 1153,
	234, 1153,
	250, 344,
	374, 344,
	383, 935,
	415, 344,
	427, 935,
	469, 935,
	495, 344,
	521, 935,
	-2, 0,
	-1, 86,
	250, 348,
	-2, 0,
	-1, 87,
	129, 1358,
	227, 1358,
	506, 1358,
	507, 1358,
	-2, 0,
	-1, 103,
	146, 1329,
	164, 1329,
	177, 1329,
	230, 1329,
	263, 1329,
	327, 1329,
	337, 1329,
	501, 1329,
	-2, 1300,
	-1, 139,
	154, 812,
	249, 812,
	377, 781,
	432, 781,
	487, 812,
	489, 781,
	-2, 0,
	-1, 141,
	4, 1360,
	21, 1360,
	22, 1360,
	23, 1360,
	24, 1360,
	25, 1360,
	26, 1360,
	27, 1360,
	29, 1360,
	30, 1360,
	36, 1360,
	41, 1360,
	42, 1360,
	44, 1360,
	45, 1360,
	46, 1360,
	47, 1360,
	48, 1360,
	49, 1360,
	50, 1360,
	52, 1360,
	53, 1360,
	54, 1360,
	55, 1360,
	57, 1360,
	58, 1360,
	59, 1360,
	60, 1360,
	61, 1360,
	62, 1360,
	63, 1360,
	67, 1360,
	68, 1360,
	69, 1360,
	70, 1360,
	72, 1360,
	73, 1360,
	74, 1360,
	78, 1360,
	79, 1360,
	80, 1360,
	81, 1360,
	82, 1360,
	83, 1360,
	84, 1360,
	87, 1360,
	88, 1360,
	89, 1360,
	90, 1360,
	91, 1360,
	93, 1360,
	95, 1360,
	96, 1360,
	97, 1360,
	98, 1360,
	99, 1360,
	100, 1360,
	102, 1360,
	103, 1360,
	104, 1360,
	106, 1360,
	107, 1360,
	115, 1360,
	116, 1360,
	117, 1360,
	118, 1360,
	120, 1360,
	121, 1360,
	122, 1360,
	124, 1360,
	125, 1360,
	126, 1360,
	128, 1360,
	129, 1360,
	131, 1360,
	132, 1360,
	133, 1360,
	136, 1360,
	137, 1360,
	138, 1360,
	140, 1360,
	141, 1360,
	143, 1360,
	144, 1360,
	145, 1360,
	147, 1360,
	148, 1360,
	149, 1360,
	150, 1360,
	151, 1360,
	152, 1360,
	153, 1360,
	154, 1360,
	155, 1360,
	156, 1360,
	157, 1360,
	158, 1360,
	159, 1360,
	160, 1360,
	161, 1360,
	163, 1360,
	169, 1360,
	170, 1360,
	171, 1360,
	172, 1360,
	176, 1360,
	178, 1360,
	182, 1360,
	183, 1360,
	184, 1360,
	185, 1360,
	186, 1360,
	187, 1360,
	188, 1360,
	189, 1360,
	190, 1360,
	191, 1360,
	192, 1360,
	193, 1360,
	195, 1360,
	196, 1360,
	198, 1360,
	199, 1360,
	201, 1360,
	202, 1360,
	203, 1360,
	204, 1360,
	205, 1360,
	206, 1360,
	207, 1360,
	208, 1360,
	209, 1360,
	211, 1360,
	212, 1360,
	214, 1360,
	215, 1360,
	216, 1360,
	217, 1360,
	221, 1360,
	222, 1360,
	223, 1360,
	224, 1360,
	227, 1360,
	228, 1360,
	229, 1360,
	231, 1360,
	233, 1360,
	234, 1360,
	236, 1360,
	238, 1360,
	239, 1360,
	240, 1360,
	242, 1360,
	246, 1360,
	247, 1360,
	248, 1360,
	249, 1360,
	250, 1360,
	251, 1360,
	253, 1360,
	254, 1360,
	255, 1360,
	257, 1360,
	258, 1360,
	260, 1360,
	261, 1360,
	264, 1360,
	268, 1360,
	269, 1360,
	272, 1360,
	273, 1360,
	274, 1360,
	275, 1360,
	277, 1360,
	278, 1360,
	279, 1360,
	280, 1360,
	281, 1360,
	282, 1360,
	283, 1360,
	284, 1360,
	285, 1360,
	286, 1360,
	287, 1360,
	288, 1360,
	289, 1360,
	290, 1360,
	291, 1360,
	292, 1360,
	293, 1360,
	294, 1360,
	295, 1360,
	296, 1360,
	297, 1360,
	298, 1360,
	300, 1360,
	302, 1360,
	303, 1360,
	304, 1360,
	305, 1360,
	306, 1360,
	307, 1360,
	308, 1360,
	309, 1360,
	310, 1360,
	311, 1360,
	312, 1360,
	313, 1360,
	315, 1360,
	317, 1360,
	319, 1360,
	320, 1360,
	322, 1360,
	323, 1360,
	324, 1360,
	325, 1360,
	326, 1360,
	329, 1360,
	332, 1360,
	333, 1360,
	334, 1360,
	335, 1360,
	338, 1360,
	339, 1360,
	340, 1360,
	342, 1360,
	344, 1360,
	345, 1360,
	346, 1360,
	347, 1360,
	348, 1360,
	349, 1360,
	350, 1360,
	351, 1360,
	352, 1360,
	353, 1360,
	354, 1360,
	355, 1360,
	357, 1360,
	358, 1360,
	359, 1360,
	360, 1360,
	361, 1360,
	362, 1360,
	363, 1360,
	364, 1360,
	365, 1360,
	366, 1360,
	367, 1360,
	368, 1360,
	369, 1360,
	370, 1360,
	371, 1360,
	373, 1360,
	375, 1360,
	376, 1360,
	377, 1360,
	378, 1360,
	379, 1360,
	380, 1360,
	381, 1360,
	382, 1360,
	383, 1360,
	384, 1360,
	385, 1360,
	387, 1360,
	393, 1360,
	395, 1360,
	396, 1360,
	397, 1360,
	398, 1360,
	399, 1360,
	400, 1360,
	401, 1360,
	402, 1360,
	404, 1360,
	405, 1360,
	406, 1360,
	408, 1360,
	409, 1360,
	410, 1360,
	411, 1360,
	412, 1360,
	413, 1360,
	415, 1360,
	416, 1360,
	417, 1360,
	418, 1360,
	419, 1360,
	420, 1360,
	421, 1360,
	422, 1360,
	423, 1360,
	424, 1360,
	425, 1360,
	427, 1360,
	428, 1360,
	429, 1360,
	430, 1360,
	431, 1360,
	432, 1360,
	434, 1360,
	435, 1360,
	436, 1360,
	437, 1360,
	438, 1360,
	439, 1360,
	441, 1360,
	442, 1360,
	443, 1360,
	444, 1360,
	445, 1360,
	446, 1360,
	447, 1360,
	449, 1360,
	451, 1360,
	452, 1360,
	453, 1360,
	454, 1360,
	455, 1360,
	456, 1360,
	457, 1360,
	458, 1360,
	459, 1360,
	460, 1360,
	461, 1360,
	462, 1360,
	463, 1360,
	465, 1360,
	466, 1360,
	468, 1360,
	470, 1360,
	471, 1360,
	472, 1360,
	473, 1360,
	474, 1360,
	475, 1360,
	476, 1360,
	477, 1360,
	479, 1360,
	480, 1360,
	481, 1360,
	482, 1360,
	483, 1360,
	485, 1360,
	487, 1360,
	488, 1360,
	489, 1360,
	490, 1360,
	491, 1360,
	492, 1360,
	494, 1360,
	495, 1360,
	496, 1360,
	497, 1360,
	499, 1360,
	500, 1360,
	503, 1360,
	504, 1360,
	505, 1360,
	506, 1360,
	507, 1360,
	508, 1360,
	509, 1360,
	511, 1360,
	514, 1360,
	515, 1360,
	516, 1360,
	517, 1360,
	518, 1360,
	519, 1360,
	521, 1360,
	522, 1360,
	523, 1360,
	524, 1360,
	529, 1360,
	530, 1360,
	531, 1360,
	532, 1360,
	533, 1360,
	534, 1360,
	-2, 0,
	-1, 142,
	1, 1231,
	127, 1231,
	238, 1231,
	316, 1231,
	373, 1231,
	381, 1231,
	538, 1231,
	562, 1231,
	-2, 0,
	-1, 144,
	1, 1231,
	562, 1231,
	-2, 0,
	-1, 145,
	1, 1231,
	562, 1231,
	-2, 0,
	-1, 146,
	1, 1231,
	484, 1231,
	562, 1231,
	-2, 0,
	-1, 175,
	146, 1328,
	164, 1328,
	177, 1328,
	230, 1328,
	263, 1328,
	327, 1328,
	337, 1328,
	501, 1328,
	-2, 1303,
	-1, 213,
	4, 1367,
	5, 1367,
	6, 1367,
	7, 1367,
	8, 1367,
	9, 1367,
	10, 1367,
	21, 1367,
	22, 1367,
	23, 1367,
	24, 1367,
	25, 1367,
	26, 1367,
	27, 1367,
	29, 1367,
	30, 1367,
	36, 1367,
	37, 1367,
	41, 1367,
	42, 1367,
	43, 1367,
	44, 1367,
	45, 1367,
	46, 1367,
	47, 1367,
	48, 1367,
	49, 1367,
	50, 1367,
	52, 1367,
	53, 1367,
	54, 1367,
	55, 1367,
	57, 1367,
	58, 1367,
	59, 1367,
	60, 1367,
	61, 1367,
	62, 1367,
	63, 1367,
	64, 1367,
	65, 1367,
	66, 1367,
	67, 1367,
	68, 1367,
	69, 1367,
	70, 1367,
	72, 1367,
	73, 1367,
	74, 1367,
	76, 1367,
	78, 1367,
	79, 1367,
	80, 1367,
	81, 1367,
	82, 1367,
	83, 1367,
	84, 1367,
	87, 1367,
	88, 1367,
	89, 1367,
	90, 1367,
	91, 1367,
	93, 1367,
	95, 1367,
	96, 1367,
	97, 1367,
	98, 1367,
	99, 1367,
	100, 1367,
	102, 1367,
	103, 1367,
	104, 1367,
	105, 1367,
	106, 1367,
	107, 1367,
	108, 1367,
	109, 1367,
	110, 1367,
	111, 1367,
	112, 1367,
	113, 1367,
	114, 1367,
	115, 1367,
	116, 1367,
	117, 1367,
	118, 1367,
	119, 1367,
	120, 1367,
	121, 1367,
	122, 1367,
	123, 1367,
	124, 1367,
	125, 1367,
	126, 1367,
	128, 1367,
	129, 1367,
	131, 1367,
	132, 1367,
	133, 1367,
	136, 1367,
	137, 1367,
	138, 1367,
	140, 1367,
	141, 1367,
	143, 1367,
	144, 1367,
	145, 1367,
	147, 1367,
	148, 1367,
	149, 1367,
	150, 1367,
	151, 1367,
	152, 1367,
	153, 1367,
	154, 1367,
	155, 1367,
	156, 1367,
	157, 1367,
	158, 1367,
	159, 1367,
	160, 1367,
	161, 1367,
	162, 1367,
	163, 1367,
	169, 1367,
	170, 1367,
	171, 1367,
	172, 1367,
	176, 1367,
	178, 1367,
	181, 1367,
	182, 1367,
	183, 1367,
	184, 1367,
	185, 1367,
	186, 1367,
	187, 1367,
	188, 1367,
	189, 1367,
	190, 1367,
	191, 1367,
	192, 1367,
	193, 1367,
	195, 1367,
	196, 1367,
	198, 1367,
	199, 1367,
	201, 1367,
	202, 1367,
	203, 1367,
	204, 1367,
	205, 1367,
	206, 1367,
	207, 1367,
	208, 1367,
	209, 1367,
	210, 1367,
	211, 1367,
	212, 1367,
	214, 1367,
	215, 1367,
	216, 1367,
	217, 1367,
	221, 1367,
	222, 1367,
	223, 1367,
	224, 1367,
	226, 1367,
	227, 1367,
	228, 1367,
	229, 1367,
	231, 1367,
	233, 1367,
	234, 1367,
	235, 1367,
	236, 1367,
	237, 1367,
	238, 1367,
	239, 1367,
	240, 1367,
	241, 1367,
	242, 1367,
	246, 1367,
	247, 1367,
	248, 1367,
	249, 1367,
	250, 1367,
	251, 1367,
	253, 1367,
	254, 1367,
	255, 1367,
	257, 1367,
	258, 1367,
	259, 1367,
	260, 1367,
	261, 1367,
	262, 1367,
	264, 1367,
	268, 1367,
	269, 1367,
	270, 1367,
	271, 1367,
	272, 1367,
	273, 1367,
	274, 1367,
	275, 1367,
	277, 1367,
	278, 1367,
	279, 1367,
	280, 1367,
	281, 1367,
	282, 1367,
	283, 1367,
	284, 1367,
	285, 1367,
	286, 1367,
	287, 1367,
	288, 1367,
	289, 1367,
	290, 1367,
	291, 1367,
	292, 1367,
	293, 1367,
	294, 1367,
	295, 1367,
	296, 1367,
	297, 1367,
	298, 1367,
	300, 1367,
	301, 1367,
	302, 1367,
	303, 1367,
	304, 1367,
	305, 1367,
	306, 1367,
	307, 1367,
	308, 1367,
	309, 1367,
	310, 1367,
	311, 1367,
	312, 1367,
	313, 1367,
	314, 1367,
	315, 1367,
	316, 1367,
	317, 1367,
	318, 1367,
	319, 1367,
	320, 1367,
	321, 1367,
	322, 1367,
	323, 1367,
	324, 1367,
	325, 1367,
	326, 1367,
	329, 1367,
	333, 1367,
	334, 1367,
	335, 1367,
	338, 1367,
	339, 1367,
	340, 1367,
	341, 1367,
	342, 1367,
	343, 1367,
	344, 1367,
	345, 1367,
	346, 1367,
	347, 1367,
	348, 1367,
	349, 1367,
	350, 1367,
	351, 1367,
	352, 1367,
	353, 1367,
	354, 1367,
	355, 1367,
	357, 1367,
	358, 1367,
	359, 1367,
	360, 1367,
	361, 1367,
	362, 1367,
	363, 1367,
	364, 1367,
	365, 1367,
	366, 1367,
	367, 1367,
	368, 1367,
	369, 1367,
	370, 1367,
	371, 1367,
	373, 1367,
	375, 1367,
	376, 1367,
	377, 1367,
	378, 1367,
	379, 1367,
	380, 1367,
	381, 1367,
	382, 1367,
	383, 1367,
	384, 1367,
	385, 1367,
	387, 1367,
	393, 1367,
	395, 1367,
	396, 1367,
	397, 1367,
	398, 1367,
	399, 1367,
	400, 1367,
	401, 1367,
	402, 1367,
	404, 1367,
	405, 1367,
	406, 1367,
	407, 1367,
	408, 1367,
	409, 1367,
	410, 1367,
	411, 1367,
	412, 1367,
	413, 1367,
	415, 1367,
	416, 1367,
	417, 1367,
	418, 1367,
	419, 1367,
	420, 1367,
	421, 1367,
	422, 1367,
	423, 1367,
	424, 1367,
	425, 1367,
	427, 1367,
	428, 1367,
	429, 1367,
	430, 1367,
	431, 1367,
	432, 1367,
	433, 1367,
	434, 1367,
	435, 1367,
	436, 1367,
	437, 1367,
	438, 1367,
	439, 1367,
	440, 1367,
	441, 1367,
	442, 1367,
	443, 1367,
	444, 1367,
	445, 1367,
	446, 1367,
	447, 1367,
	449, 1367,
	451, 1367,
	452, 1367,
	453, 1367,
	454, 1367,
	455, 1367,
	456, 1367,
	457, 1367,
	458, 1367,
	459, 1367,
	460, 1367,
	461, 1367,
	462, 1367,
	463, 1367,
	465, 1367,
	466, 1367,
	467, 1367,
	468, 1367,
	470, 1367,
	471, 1367,
	472, 1367,
	473, 1367,
	474, 1367,
	475, 1367,
	476, 1367,
	477, 1367,
	479, 1367,
	480, 1367,
	481, 1367,
	482, 1367,
	483, 1367,
	485, 1367,
	487, 1367,
	488, 1367,
	489, 1367,
	490, 1367,
	491, 1367,
	492, 1367,
	493, 1367,
	494, 1367,
	495, 1367,
	496, 1367,
	497, 1367,
	499, 1367,
	500, 1367,
	502, 1367,
	503, 1367,
	504, 1367,
	505, 1367,
	506, 1367,
	507, 1367,
	508, 1367,
	509, 1367,
	510, 1367,
	511, 1367,
	514, 1367,
	515, 1367,
	516, 1367,
	517, 1367,
	518, 1367,
	519, 1367,
	521, 1367,
	522, 1367,
	523, 1367,
	524, 1367,
	529, 1367,
	530, 1367,
	531, 1367,
	532, 1367,
	533, 1367,
	534, 1367,
	535, 1367,
	543, 1367,
	550, 1367,
	551, 1367,
	552, 1367,
	559, 1367,
	563, 1367,
	-2, 0,
	-1, 669,
	180, 2113,
	484, 2113,
	542, 2113,
	561, 2113,
	-2, 0,
	-1, 670,
	180, 2211,
	484, 2211,
	542, 2211,
	561, 2211,
	-2, 0,
	-1, 671,
	180, 2100,
	484, 2100,
	542, 2100,
	561, 2100,
	-2, 0,
	-1, 673,
	180, 2334,
	484, 2334,
	542, 2334,
	561, 2334,
	-2, 0,
	-1, 675,
	180, 2369,
	484, 2369,
	542, 2369,
	561, 2369,
	-2, 0,
	-1, 682,
	180, 2237,
	484, 2237,
	542, 2237,
	561, 2237,
	-2, 622,
	-1, 714,
	561, 2050,
	564, 2050,
	-2, 870,
	-1, 715,
	561, 2052,
	564, 2052,
	-2, 871,
	-1, 716,
	561, 2051,
	564, 2051,
	-2, 872,
	-1, 717,
	564, 1984,
	-2, 873,
	-1, 740,
	177, 216,
	-2, 0,
	-1, 762,
	43, 2054,
	-2, 0,
	-1, 763,
	521, 1130,
	-2, 936,
	-1, 779,
	4, 1493,
	21, 1493,
	22, 1493,
	23, 1493,
	24, 1493,
	25, 1493,
	26, 1493,
	27, 1493,
	29, 1493,
	30, 1493,
	36, 1493,
	41, 1493,
	42, 1493,
	44, 1493,
	45, 1493,
	46, 1493,
	47, 1493,
	48, 1493,
	49, 1493,
	50, 1493,
	52, 1493,
	53, 1493,
	54, 1493,
	55, 1493,
	57, 1493,
	58, 1493,
	59, 1493,
	60, 1493,
	61, 1493,
	62, 1493,
	63, 1493,
	67, 1493,
	68, 1493,
	69, 1493,
	70, 1493,
	72, 1493,
	73, 1493,
	74, 1493,
	78, 1493,
	79, 1493,
	80, 1493,
	81, 1493,
	82, 1493,
	83, 1493,
	84, 1493,
	87, 1493,
	88, 1493,
	89, 1493,
	90, 1493,
	91, 1493,
	93, 1493,
	95, 1493,
	96, 1493,
	97, 1493,
	98, 1493,
	99, 1493,
	100, 1493,
	102, 1493,
	103, 1493,
	104, 1493,
	106, 1493,
	107, 1493,
	115, 1493,
	116, 1493,
	117, 1493,
	118, 1493,
	120, 1493,
	121, 1493,
	122, 1493,
	124, 1493,
	125, 1493,
	126, 1493,
	128, 1493,
	129, 1493,
	131, 1493,
	132, 1493,
	133, 1493,
	136, 1493,
	137, 1493,
	138, 1493,
	140, 1493,
	141, 1493,
	143, 1493,
	144, 1493,
	145, 1493,
	147, 1493,
	148, 1493,
	149, 1493,
	150, 1493,
	151, 1493,
	152, 1493,
	153, 1493,
	154, 1493,
	155, 1493,
	156, 1493,
	157, 1493,
	158, 1493,
	159, 1493,
	160, 1493,
	161, 1493,
	163, 1493,
	169, 1493,
	170, 1493,
	171, 1493,
	172, 1493,
	176, 1493,
	178, 1493,
	182, 1493,
	183, 1493,
	184, 1493,
	185, 1493,
	186, 1493,
	187, 1493,
	188, 1493,
	189, 1493,
	190, 1493,
	191, 1493,
	192, 1493,
	193, 1493,
	195, 1493,
	196, 1493,
	198, 1493,
	199, 1493,
	201, 1493,
	202, 1493,
	203, 1493,
	204, 1493,
	205, 1493,
	206, 1493,
	207, 1493,
	208, 1493,
	209, 1493,
	211, 1493,
	212, 1493,
	214, 1493,
	215, 1493,
	216, 1493,
	217, 1493,
	221, 1493,
	222, 1493,
	223, 1493,
	224, 1493,
	227, 1493,
	228, 1493,
	229, 1493,
	231, 1493,
	233, 1493,
	234, 1493,
	236, 1493,
	238, 1493,
	239, 1493,
	240, 1493,
	242, 1493,
	246, 1493,
	247, 1493,
	248, 1493,
	249, 1493,
	250, 1493,
	251, 1493,
	253, 1493,
	254, 1493,
	255, 1493,
	257, 1493,
	258, 1493,
	260, 1493,
	261, 1493,
	264, 1493,
	268, 1493,
	269, 1493,
	272, 1493,
	273, 1493,
	274, 1493,
	275, 1493,
	277, 1493,
	278, 1493,
	279, 1493,
	280, 1493,
	281, 1493,
	282, 1493,
	283, 1493,
	284, 1493,
	285, 1493,
	286, 1493,
	287, 1493,
	288, 1493,
	289, 1493,
	290, 1493,
	291, 1493,
	292, 1493,
	293, 1493,
	294, 1493,
	295, 1493,
	296, 1493,
	297, 1493,
	298, 1493,
	300, 1493,
	302, 1493,
	303, 1493,
	304, 1493,
	305, 1493,
	306, 1493,
	307, 1493,
	308, 1493,
	309, 1493,
	310, 1493,
	311, 1493,
	312, 1493,
	313, 1493,
	315, 1493,
	317, 1493,
	319, 1493,
	320, 1493,
	322, 1493,
	323, 1493,
	324, 1493,
	325, 1493,
	326, 1493,
	329, 1493,
	333, 1493,
	334, 1493,
	335, 1493,
	338, 1493,
	339, 1493,
	340, 1493,
	342, 1493,
	344, 1493,
	345, 1493,
	346, 1493,
	347, 1493,
	348, 1493,
	349, 1493,
	350, 1493,
	351, 1493,
	352, 1493,
	353, 1493,
	354, 1493,
	355, 1493,
	357, 1493,
	358, 1493,
	359, 1493,
	360, 1493,
	361, 1493,
	362, 1493,
	363, 1493,
	364, 1493,
	365, 1493,
	366, 1493,
	367, 1493,
	368, 1493,
	369, 1493,
	370, 1493,
	371, 1493,
	373, 1493,
	375, 1493,
	376, 1493,
	377, 1493,
	378, 1493,
	379, 1493,
	380, 1493,
	381, 1493,
	382, 1493,
	383, 1493,
	384, 1493,
	385, 1493,
	387, 1493,
	393, 1493,
	395, 1493,
	396, 1493,
	397, 1493,
	398, 1493,
	399, 1493,
	400, 1493,
	401, 1493,
	402, 1493,
	404, 1493,
	405, 1493,
	406, 1493,
	408, 1493,
	409, 1493,
	410, 1493,
	411, 1493,
	412, 1493,
	413, 1493,
	415, 1493,
	416, 1493,
	417, 1493,
	418, 1493,
	419, 1493,
	420, 1493,
	421, 1493,
	422, 1493,
	423, 1493,
	424, 1493,
	425, 1493,
	427, 1493,
	428, 1493,
	429, 1493,
	430, 1493,
	431, 1493,
	432, 1493,
	434, 1493,
	435, 1493,
	436, 1493,
	437, 1493,
	438, 1493,
	439, 1493,
	441, 1493,
	442, 1493,
	443, 1493,
	444, 1493,
	445, 1493,
	446, 1493,
	447, 1493,
	449, 1493,
	451, 1493,
	452, 1493,
	453, 1493,
	454, 1493,
	455, 1493,
	456, 1493,
	457, 1493,
	458, 1493,
	459, 1493,
	460, 1493,
	461, 1493,
	462, 1493,
	463, 1493,
	465, 1493,
	466, 1493,
	468, 1493,
	470, 1493,
	471, 1493,
	472, 1493,
	473, 1493,
	474, 1493,
	475, 1493,
	476, 1493,
	477, 1493,
	479, 1493,
	480, 1493,
	481, 1493,
	482, 1493,
	483, 1493,
	485, 1493,
	487, 1493,
	488, 1493,
	489, 1493,
	490, 1493,
	491, 1493,
	492, 1493,
	494, 1493,
	495, 1493,
	496, 1493,
	497, 1493,
	499, 1493,
	500, 1493,
	503, 1493,
	504, 1493,
	505, 1493,
	506, 1493,
	507, 1493,
	508, 1493,
	509, 1493,
	511, 1493,
	514, 1493,
	515, 1493,
	516, 1493,
	517, 1493,
	518, 1493,
	519, 1493,
	521, 1493,
	522, 1493,
	523, 1493,
	524, 1493,
	529, 1493,
	530, 1493,
	531, 1493,
	532, 1493,
	533, 1493,
	534, 1493,
	-2, 0,
	-1, 804,
	4, 1151,
	21, 1151,
	22, 1151,
	23, 1151,
	24, 1151,
	25, 1151,
	26, 1151,
	27, 1151,
	29, 1151,
	30, 1151,
	36, 1151,
	41, 1151,
	42, 1151,
	44, 1151,
	45, 1151,
	46, 1151,
	47, 1151,
	48, 1151,
	49, 1151,
	50, 1151,
	52, 1151,
	53, 1151,
	54, 1151,
	55, 1151,
	57, 1151,
	58, 1151,
	59, 1151,
	60, 1151,
	61, 1151,
	62, 1151,
	63, 1151,
	67, 1151,
	68, 1151,
	69, 1151,
	70, 1151,
	72, 1151,
	73, 1151,
	74, 1151,
	78, 1151,
	79, 1151,
	80, 1151,
	81, 1151,
	82, 1151,
	83, 1151,
	84, 1151,
	87, 1151,
	88, 1151,
	89, 1151,
	90, 1151,
	91, 1151,
	93, 1151,
	95, 1151,
	96, 1151,
	97, 1151,
	98, 1151,
	99, 1151,
	100, 1151,
	102, 1151,
	103, 1151,
	104, 1151,
	106, 1151,
	107, 1151,
	115, 1151,
	116, 1151,
	117, 1151,
	118, 1151,
	120, 1151,
	121, 1151,
	122, 1151,
	124, 1151,
	125, 1151,
	126, 1151,
	128, 1151,
	129, 1151,
	131, 1151,
	132, 1151,
	133, 1151,
	136, 1151,
	137, 1151,
	138, 1151,
	140, 1151,
	141, 1151,
	143, 1151,
	144, 1151,
	145, 1151,
	147, 1151,
	148, 1151,
	149, 1151,
	150, 1151,
	151, 1151,
	152, 1151,
	153, 1151,
	154, 1151,
	155, 1151,
	156, 1151,
	157, 1151,
	158, 1151,
	159, 1151,
	160, 1151,
	161, 1151,
	163, 1151,
	169, 1151,
	170, 1151,
	171, 1151,
	172, 1151,
	176, 1151,
	178, 1151,
	182, 1151,
	183, 1151,
	184, 1151,
	185, 1151,
	186, 1151,
	187, 1151,
	188, 1151,
	189, 1151,
	190, 1151,
	191, 1151,
	192, 1151,
	193, 1151,
	195, 1151,
	196, 1151,
	198, 1151,
	199, 1151,
	201, 1151,
	202, 1151,
	203, 1151,
	204, 1151,
	205, 1151,
	206, 1151,
	207, 1151,
	208, 1151,
	209, 1151,
	211, 1151,
	212, 1151,
	214, 1151,
	215, 1151,
	216, 1151,
	217, 1151,
	221, 1151,
	222, 1151,
	223, 1151,
	224, 1151,
	227, 1151,
	228, 1151,
	229, 1151,
	231, 1151,
	233, 1151,
	234, 1151,
	236, 1151,
	238, 1151,
	239, 1151,
	240, 1151,
	242, 1151,
	246, 1151,
	247, 1151,
	248, 1151,
	249, 1151,
	250, 1151,
	251, 1151,
	253, 1151,
	254, 1151,
	255, 1151,
	257, 1151,
	258, 1151,
	260, 1151,
	261, 1151,
	264, 1151,
	268, 1151,
	269, 1151,
	272, 1151,
	273, 1151,
	274, 1151,
	275, 1151,
	277, 1151,
	278, 1151,
	279, 1151,
	280, 1151,
	281, 1151,
	282, 1151,
	283, 1151,
	284, 1151,
	285, 1151,
	286, 1151,
	287, 1151,
	288, 1151,
	289, 1151,
	290, 1151,
	291, 1151,
	292, 1151,
	293, 1151,
	294, 1151,
	295, 1151,
	296, 1151,
	297, 1151,
	298, 1151,
	300, 1151,
	302, 1151,
	303, 1151,
	304, 1151,
	305, 1151,
	306, 1151,
	307, 1151,
	308, 1151,
	309, 1151,
	310, 1151,
	311, 1151,
	312, 1151,
	313, 1151,
	315, 1151,
	317, 1151,
	319, 1151,
	320, 1151,
	322, 1151,
	323, 1151,
	324, 1151,
	325, 1151,
	326, 1151,
	329, 1151,
	333, 1151,
	334, 1151,
	335, 1151,
	338, 1151,
	339, 1151,
	340, 1151,
	342, 1151,
	344, 1151,
	345, 1151,
	346, 1151,
	347, 1151,
	348, 1151,
	349, 1151,
	350, 1151,
	351, 1151,
	352, 1151,
	353, 1151,
	354, 1151,
	355, 1151,
	357, 1151,
	358, 1151,
	359, 1151,
	360, 1151,
	361, 1151,
	362, 1151,
	363, 1151,
	364, 1151,
	365, 1151,
	366, 1151,
	367, 1151,
	368, 1151,
	369, 1151,
	370, 1151,
	371, 1151,
	373, 1151,
	375, 1151,
	376, 1151,
	377, 1151,
	378, 1151,
	379, 1151,
	380, 1151,
	381, 1151,
	382, 1151,
	383, 1151,
	384, 1151,
	385, 1151,
	387, 1151,
	393, 1151,
	395, 1151,
	396, 1151,
	397, 1151,
	398, 1151,
	399, 1151,
	400, 1151,
	401, 1151,
	402, 1151,
	404, 1151,
	405, 1151,
	406, 1151,
	408, 1151,
	409, 1151,
	410, 1151,
	411, 1151,
	412, 1151,
	413, 1151,
	415, 1151,
	416, 1151,
	417, 1151,
	418, 1151,
	419, 1151,
	420, 1151,
	421, 1151,
	422, 1151,
	423, 1151,
	424, 1151,
	425, 1151,
	427, 1151,
	428, 1151,
	429, 1151,
	430, 1151,
	431, 1151,
	432, 1151,
	434, 1151,
	435, 1151,
	436, 1151,
	437, 1151,
	438, 1151,
	439, 1151,
	441, 1151,
	442, 1151,
	443, 1151,
	444, 1151,
	445, 1151,
	446, 1151,
	447, 1151,
	449, 1151,
	451, 1151,
	452, 1151,
	453, 1151,
	454, 1151,
	455, 1151,
	456, 1151,
	457, 1151,
	458, 1151,
	459, 1151,
	460, 1151,
	461, 1151,
	462, 1151,
	463, 1151,
	465, 1151,
	466, 1151,
	468, 1151,
	470, 1151,
	471, 1151,
	472, 1151,
	473, 1151,
	474, 1151,
	475, 1151,
	476, 1151,
	477, 1151,
	479, 1151,
	480, 1151,
	481, 1151,
	482, 1151,
	483, 1151,
	485, 1151,
	487, 1151,
	488, 1151,
	489, 1151,
	490, 1151,
	491, 1151,
	492, 1151,
	494, 1151,
	495, 1151,
	496, 1151,
	497, 1151,
	499, 1151,
	500, 1151,
	503, 1151,
	504, 1151,
	505, 1151,
	506, 1151,
	507, 1151,
	508, 1151,
	509, 1151,
	511, 1151,
	514, 1151,
	515, 1151,
	516, 1151,
	517, 1151,
	518, 1151,
	519, 1151,
	521, 1151,
	522, 1151,
	523, 1151,
	524, 1151,
	529, 1151,
	530, 1151,
	531, 1151,
	532, 1151,
	533, 1151,
	534, 1151,
	-2, 0,
	-1, 885,
	377, 782,
	432, 782,
	489, 782,
	-2, 0,
	-1, 886,
	377, 781,
	432, 781,
	489, 781,
	-2, 723,
	-1, 890,
	1, 826,
	558, 826,
	560, 826,
	562, 826,
	-2, 0,
	-1, 891,
	1, 758,
	558, 758,
	560, 758,
	562, 758,
	-2, 0,
	-1, 892,
	1, 760,
	558, 760,
	560, 760,
	562, 760,
	-2, 0,
	-1, 893,
	1, 869,
	177, 869,
	558, 869,
	560, 869,
	562, 869,
	-2, 0,
	-1, 901,
	1, 785,
	558, 785,
	560, 785,
	562, 785,
	-2, 0,
	-1, 907,
	1, 826,
	558, 826,
	560, 826,
	562, 826,
	-2, 0,
	-1, 908,
	1, 828,
	558, 828,
	560, 828,
	562, 828,
	-2, 0,
	-1, 909,
	1, 831,
	558, 831,
	560, 831,
	562, 831,
	-2, 0,
	-1, 915,
	1, 848,
	558, 848,
	560, 848,
	562, 848,
	-2, 0,
	-1, 916,
	1, 850,
	558, 850,
	560, 850,
	562, 850,
	-2, 0,
	-1, 965,
	164, 1369,
	177, 1369,
	263, 1369,
	327, 1369,
	-2, 1307,
	-1, 980,
	164, 1368,
	177, 1368,
	263, 1368,
	327, 1368,
	-2, 1304,
	-1, 1006,
	561, 2049,
	-2, 630,
	-1, 1034,
	5, 2041,
	559, 2039,
	-2, 2030,
	-1, 1042,
	5, 2062,
	559, 2059,
	-2, 2050,
	-1, 1043,
	5, 2063,
	559, 2060,
	-2, 2051,
	-1, 1051,
	561, 2047,
	-2, 2029,
	-1, 1052,
	559, 2451,
	-2, 2048,
	-1, 1075,
	559, 2450,
	-2, 2064,
	-1, 1076,
	5, 1568,
	-2, 2421,
	-1, 1077,
	5, 1569,
	-2, 2422,
	-1, 1078,
	5, 1570,
	-2, 2436,
	-1, 1079,
	5, 1571,
	-2, 2400,
	-1, 1080,
	5, 1572,
	-2, 2434,
	-1, 1081,
	5, 1580,
	-2, 2413,
	-1, 1082,
	5, 1567,
	-2, 2409,
	-1, 1083,
	5, 1567,
	-2, 2408,
	-1, 1084,
	5, 1567,
	-2, 2427,
	-1, 1085,
	5, 1578,
	-2, 2402,
	-1, 1086,
	5, 1583,
	-2, 2401,
	-1, 1087,
	5, 1585,
	-2, 2446,
	-1, 1090,
	5, 1607,
	-2, 2439,
	-1, 1091,
	5, 1599,
	-2, 2440,
	-1, 1092,
	5, 1607,
	-2, 2441,
	-1, 1093,
	5, 1603,
	-2, 2442,
	-1, 1094,
	5, 1553,
	-2, 2414,
	-1, 1095,
	5, 1554,
	-2, 2415,
	-1, 1096,
	5, 1555,
	-2, 2403,
	-1, 1124,
	5, 1590,
	-2, 2447,
	-1, 1125,
	5, 1591,
	-2, 2437,
	-1, 1126,
	5, 1592,
	522, 1592,
	-2, 2404,
	-1, 1127,
	5, 1593,
	522, 1593,
	-2, 2405,
	-1, 1164,
	559, 2059,
	-2, 2050,
	-1, 1165,
	559, 2060,
	-2, 2051,
	-1, 1195,
	180, 2369,
	484, 2369,
	542, 2369,
	561, 2369,
	-2, 0,
	-1, 1198,
	1, 608,
	562, 608,
	-2, 1239,
	-1, 1327,
	395, 2025,
	434, 2025,
	552, 2025,
	-2, 2022,
	-1, 1339,
	563, 2025,
	-2, 2026,
	-1, 1346,
	1, 1127,
	558, 1127,
	560, 1127,
	562, 1127,
	-2, 1356,
	-1, 1402,
	383, 935,
	521, 935,
	-2, 343,
	-1, 1421,
	43, 2053,
	-2, 2023,
	-1, 1426,
	1, 1127,
	558, 1127,
	560, 1127,
	562, 1127,
	-2, 1356,
	-1, 1433,
	4, 1151,
	21, 1151,
	22, 1151,
	23, 1151,
	24, 1151,
	25, 1151,
	26, 1151,
	27, 1151,
	29, 1151,
	30, 1151,
	36, 1151,
	41, 1151,
	42, 1151,
	44, 1151,
	45, 1151,
	46, 1151,
	47, 1151,
	48, 1151,
	49, 1151,
	50, 1151,
	52, 1151,
	53, 1151,
	54, 1151,
	55, 1151,
	57, 1151,
	58, 1151,
	59, 1151,
	60, 1151,
	61, 1151,
	62, 1151,
	63, 1151,
	67, 1151,
	68, 1151,
	69, 1151,
	70, 1151,
	72, 1151,
	73, 1151,
	74, 1151,
	78, 1151,
	79, 1151,
	80, 1151,
	81, 1151,
	82, 1151,
	83, 1151,
	84, 1151,
	87, 1151,
	88, 1151,
	89, 1151,
	90, 1151,
	91, 1151,
	93, 1151,
	95, 1151,
	96, 1151,
	97, 1151,
	98, 1151,
	99, 1151,
	100, 1151,
	102, 1151,
	103, 1151,
	104, 1151,
	106, 1151,
	107, 1151,
	115, 1151,
	116, 1151,
	117, 1151,
	118, 1151,
	120, 1151,
	121, 1151,
	122, 1151,
	124, 1151,
	125, 1151,
	126, 1151,
	128, 1151,
	129, 1151,
	131, 1151,
	132, 1151,
	133, 1151,
	136, 1151,
	137, 1151,
	138, 1151,
	140, 1151,
	141, 1151,
	143, 1151,
	144, 1151,
	145, 1151,
	147, 1151,
	148, 1151,
	149, 1151,
	150, 1151,
	151, 1151,
	152, 1151,
	153, 1151,
	154, 1151,
	155, 1151,
	156, 1151,
	157, 1151,
	158, 1151,
	159, 1151,
	160, 1151,
	161, 1151,
	169, 1151,
	170, 1151,
	171, 1151,
	172, 1151,
	176, 1151,
	178, 1151,
	182, 1151,
	183, 1151,
	184, 1151,
	185, 1151,
	186, 1151,
	187, 1151,
	188, 1151,
	189, 1151,
	190, 1151,
	191, 1151,
	192, 1151,
	193, 1151,
	195, 1151,
	196, 1151,
	198, 1151,
	199, 1151,
	201, 1151,
	202, 1151,
	203, 1151,
	204, 1151,
	205, 1151,
	206, 1151,
	207, 1151,
	208, 1151,
	209, 1151,
	211, 1151,
	212, 1151,
	214, 1151,
	215, 1151,
	216, 1151,
	217, 1151,
	222, 1151,
	223, 1151,
	224, 1151,
	227, 1151,
	228, 1151,
	229, 1151,
	231, 1151,
	233, 1151,
	234, 1151,
	236, 1151,
	238, 1151,
	239, 1151,
	240, 1151,
	242, 1151,
	246, 1151,
	247, 1151,
	248, 1151,
	249, 1151,
	250, 1151,
	251, 1151,
	253, 1151,
	254, 1151,
	255, 1151,
	257, 1151,
	258, 1151,
	260, 1151,
	261, 1151,
	264, 1151,
	268, 1151,
	269, 1151,
	272, 1151,
	273, 1151,
	274, 1151,
	275, 1151,
	277, 1151,
	278, 1151,
	279, 1151,
	280, 1151,
	281, 1151,
	282, 1151,
	283, 1151,
	284, 1151,
	285, 1151,
	286, 1151,
	287, 1151,
	288, 1151,
	289, 1151,
	290, 1151,
	291, 1151,
	292, 1151,
	293, 1151,
	294, 1151,
	295, 1151,
	296, 1151,
	297, 1151,
	298, 1151,
	300, 1151,
	302, 1151,
	303, 1151,
	304, 1151,
	305, 1151,
	306, 1151,
	307, 1151,
	308, 1151,
	309, 1151,
	310, 1151,
	311, 1151,
	312, 1151,
	313, 1151,
	315, 1151,
	319, 1151,
	320, 1151,
	322, 1151,
	323, 1151,
	324, 1151,
	325, 1151,
	326, 1151,
	329, 1151,
	331, 1151,
	333, 1151,
	334, 1151,
	335, 1151,
	338, 1151,
	339, 1151,
	340, 1151,
	342, 1151,
	344, 1151,
	345, 1151,
	346, 1151,
	347, 1151,
	348, 1151,
	349, 1151,
	350, 1151,
	351, 1151,
	352, 1151,
	353, 1151,
	354, 1151,
	355, 1151,
	357, 1151,
	358, 1151,
	359, 1151,
	360, 1151,
	361, 1151,
	362, 1151,
	363, 1151,
	364, 1151,
	365, 1151,
	366, 1151,
	367, 1151,
	368, 1151,
	369, 1151,
	370, 1151,
	371, 1151,
	373, 1151,
	375, 1151,
	376, 1151,
	377, 1151,
	378, 1151,
	379, 1151,
	380, 1151,
	381, 1151,
	382, 1151,
	383, 1151,
	384, 1151,
	385, 1151,
	387, 1151,
	393, 1151,
	395, 1151,
	396, 1151,
	397, 1151,
	398, 1151,
	399, 1151,
	400, 1151,
	401, 1151,
	402, 1151,
	404, 1151,
	405, 1151,
	406, 1151,
	408, 1151,
	409, 1151,
	410, 1151,
	411, 1151,
	412, 1151,
	413, 1151,
	415, 1151,
	416, 1151,
	417, 1151,
	418, 1151,
	419, 1151,
	420, 1151,
	421, 1151,
	422, 1151,
	423, 1151,
	424, 1151,
	425, 1151,
	427, 1151,
	428, 1151,
	429, 1151,
	430, 1151,
	431, 1151,
	432, 1151,
	434, 1151,
	435, 1151,
	436, 1151,
	437, 1151,
	438, 1151,
	439, 1151,
	441, 1151,
	442, 1151,
	443, 1151,
	444, 1151,
	445, 1151,
	446, 1151,
	447, 1151,
	449, 1151,
	451, 1151,
	452, 1151,
	453, 1151,
	454, 1151,
	455, 1151,
	456, 1151,
	457, 1151,
	458, 1151,
	459, 1151,
	460, 1151,
	461, 1151,
	462, 1151,
	463, 1151,
	465, 1151,
	466, 1151,
	468, 1151,
	470, 1151,
	471, 1151,
	472, 1151,
	473, 1151,
	474, 1151,
	475, 1151,
	476, 1151,
	477, 1151,
	479, 1151,
	480, 1151,
	481, 1151,
	482, 1151,
	483, 1151,
	485, 1151,
	487, 1151,
	488, 1151,
	489, 1151,
	490, 1151,
	491, 1151,
	492, 1151,
	494, 1151,
	495, 1151,
	496, 1151,
	497, 1151,
	499, 1151,
	500, 1151,
	503, 1151,
	504, 1151,
	505, 1151,
	506, 1151,
	507, 1151,
	508, 1151,
	509, 1151,
	511, 1151,
	514, 1151,
	515, 1151,
	516, 1151,
	517, 1151,
	518, 1151,
	519, 1151,
	521, 1151,
	522, 1151,
	523, 1151,
	524, 1151,
	529, 1151,
	530, 1151,
	531, 1151,
	532, 1151,
	533, 1151,
	534, 1151,
	-2, 0,
	-1, 1507,
	1, 481,
	558, 481,
	560, 481,
	562, 481,
	-2, 1327,
	-1, 1510,
	4, 2445,
	11, 2445,
	12, 2445,
	14, 2445,
	15, 2445,
	16, 2445,
	17, 2445,
	18, 2445,
	19, 2445,
	21, 2445,
	22, 2445,
	23, 2445,
	24, 2445,
	25, 2445,
	26, 2445,
	27, 2445,
	29, 2445,
	30, 2445,
	33, 2445,
	34, 2445,
	36, 2445,
	38, 2445,
	41, 2445,
	42, 2445,
	44, 2445,
	45, 2445,
	46, 2445,
	47, 2445,
	48, 2445,
	49, 2445,
	50, 2445,
	52, 2445,
	53, 2445,
	54, 2445,
	55, 2445,
	57, 2445,
	58, 2445,
	59, 2445,
	60, 2445,
	61, 2445,
	62, 2445,
	63, 2445,
	67, 2445,
	68, 2445,
	69, 2445,
	70, 2445,
	72, 2445,
	73, 2445,
	74, 2445,
	75, 2445,
	78, 2445,
	79, 2445,
	80, 2445,
	81, 2445,
	82, 2445,
	83, 2445,
	84, 2445,
	85, 2445,
	87, 2445,
	88, 2445,
	89, 2445,
	90, 2445,
	91, 2445,
	93, 2445,
	94, 2445,
	95, 2445,
	96, 2445,
	97, 2445,
	98, 2445,
	99, 2445,
	100, 2445,
	102, 2445,
	103, 2445,
	104, 2445,
	105, 2445,
	106, 2445,
	107, 2445,
	115, 2445,
	116, 2445,
	117, 2445,
	118, 2445,
	120, 2445,
	121, 2445,
	122, 2445,
	124, 2445,
	125, 2445,
	126, 2445,
	128, 2445,
	129, 2445,
	131, 2445,
	132, 2445,
	133, 2445,
	136, 2445,
	137, 2445,
	138, 2445,
	140, 2445,
	141, 2445,
	143, 2445,
	144, 2445,
	145, 2445,
	147, 2445,
	148, 2445,
	149, 2445,
	150, 2445,
	151, 2445,
	152, 2445,
	153, 2445,
	154, 2445,
	155, 2445,
	156, 2445,
	157, 2445,
	158, 2445,
	159, 2445,
	160, 2445,
	161, 2445,
	165, 2445,
	166, 2445,
	167, 2445,
	168, 2445,
	169, 2445,
	170, 2445,
	171, 2445,
	172, 2445,
	175, 2445,
	176, 2445,
	178, 2445,
	181, 2445,
	182, 2445,
	183, 2445,
	184, 2445,
	185, 2445,
	186, 2445,
	187, 2445,
	188, 2445,
	189, 2445,
	190, 2445,
	191, 2445,
	192, 2445,
	193, 2445,
	195, 2445,
	196, 2445,
	198, 2445,
	199, 2445,
	201, 2445,
	202, 2445,
	203, 2445,
	204, 2445,
	205, 2445,
	206, 2445,
	207, 2445,
	208, 2445,
	209, 2445,
	210, 2445,
	211, 2445,
	212, 2445,
	213, 2445,
	214, 2445,
	215, 2445,
	216, 2445,
	217, 2445,
	219, 2445,
	220, 2445,
	222, 2445,
	223, 2445,
	224, 2445,
	226, 2445,
	227, 2445,
	228, 2445,
	229, 2445,
	231, 2445,
	233, 2445,
	234, 2445,
	235, 2445,
	236, 2445,
	237, 2445,
	238, 2445,
	239, 2445,
	240, 2445,
	241, 2445,
	242, 2445,
	244, 2445,
	245, 2445,
	246, 2445,
	247, 2445,
	248, 2445,
	249, 2445,
	250, 2445,
	251, 2445,
	253, 2445,
	254, 2445,
	255, 2445,
	257, 2445,
	258, 2445,
	259, 2445,
	260, 2445,
	261, 2445,
	262, 2445,
	264, 2445,
	268, 2445,
	269, 2445,
	272, 2445,
	273, 2445,
	274, 2445,
	275, 2445,
	276, 2445,
	277, 2445,
	278, 2445,
	279, 2445,
	280, 2445,
	281, 2445,
	282, 2445,
	283, 2445,
	284, 2445,
	285, 2445,
	286, 2445,
	287, 2445,
	288, 2445,
	289, 2445,
	290, 2445,
	291, 2445,
	292, 2445,
	293, 2445,
	294, 2445,
	295, 2445,
	296, 2445,
	297, 2445,
	298, 2445,
	300, 2445,
	301, 2445,
	302, 2445,
	303, 2445,
	304, 2445,
	305, 2445,
	306, 2445,
	307, 2445,
	308, 2445,
	309, 2445,
	310, 2445,
	311, 2445,
	312, 2445,
	313, 2445,
	315, 2445,
	318, 2445,
	319, 2445,
	320, 2445,
	322, 2445,
	323, 2445,
	324, 2445,
	325, 2445,
	326, 2445,
	329, 2445,
	333, 2445,
	334, 2445,
	335, 2445,
	336, 2445,
	338, 2445,
	339, 2445,
	340, 2445,
	342, 2445,
	344, 2445,
	345, 2445,
	346, 2445,
	347, 2445,
	348, 2445,
	349, 2445,
	350, 2445,
	351, 2445,
	352, 2445,
	353, 2445,
	354, 2445,
	355, 2445,
	357, 2445,
	358, 2445,
	359, 2445,
	360, 2445,
	361, 2445,
	362, 2445,
	363, 2445,
	364, 2445,
	365, 2445,
	366, 2445,
	367, 2445,
	368, 2445,
	369, 2445,
	370, 2445,
	371, 2445,
	373, 2445,
	375, 2445,
	376, 2445,
	377, 2445,
	378, 2445,
	379, 2445,
	380, 2445,
	381, 2445,
	382, 2445,
	383, 2445,
	384, 2445,
	385, 2445,
	387, 2445,
	393, 2445,
	394, 2445,
	395, 2445,
	396, 2445,
	397, 2445,
	398, 2445,
	399, 2445,
	400, 2445,
	401, 2445,
	402, 2445,
	404, 2445,
	405, 2445,
	406, 2445,
	407, 2445,
	408, 2445,
	409, 2445,
	410, 2445,
	411, 2445,
	412, 2445,
	413, 2445,
	414, 2445,
	415, 2445,
	416, 2445,
	417, 2445,
	418, 2445,
	419, 2445,
	420, 2445,
	421, 2445,
	422, 2445,
	423, 2445,
	424, 2445,
	425, 2445,
	427, 2445,
	428, 2445,
	429, 2445,
	430, 2445,
	431, 2445,
	432, 2445,
	434, 2445,
	435, 2445,
	436, 2445,
	437, 2445,
	438, 2445,
	439, 2445,
	440, 2445,
	441, 2445,
	442, 2445,
	443, 2445,
	444, 2445,
	445, 2445,
	446, 2445,
	447, 2445,
	449, 2445,
	451, 2445,
	452, 2445,
	453, 2445,
	454, 2445,
	455, 2445,
	456, 2445,
	457, 2445,
	458, 2445,
	459, 2445,
	460, 2445,
	461, 2445,
	462, 2445,
	463, 2445,
	465, 2445,
	466, 2445,
	468, 2445,
	470, 2445,
	471, 2445,
	472, 2445,
	473, 2445,
	474, 2445,
	475, 2445,
	476, 2445,
	477, 2445,
	479, 2445,
	480, 2445,
	481, 2445,
	482, 2445,
	483, 2445,
	485, 2445,
	487, 2445,
	488, 2445,
	489, 2445,
	490, 2445,
	491, 2445,
	492, 2445,
	494, 2445,
	495, 2445,
	496, 2445,
	497, 2445,
	499, 2445,
	500, 2445,
	503, 2445,
	504, 2445,
	505, 2445,
	506, 2445,
	507, 2445,
	508, 2445,
	509, 2445,
	511, 2445,
	514, 2445,
	515, 2445,
	516, 2445,
	517, 2445,
	518, 2445,
	519, 2445,
	521, 2445,
	522, 2445,
	523, 2445,
	524, 2445,
	529, 2445,
	530, 2445,
	531, 2445,
	532, 2445,
	533, 2445,
	534, 2445,
	535, 2445,
	537, 2445,
	540, 2445,
	541, 2445,
	542, 2445,
	543, 2445,
	544, 2445,
	545, 2445,
	547, 2445,
	548, 2445,
	549, 2445,
	550, 2445,
	551, 2445,
	552, 2445,
	553, 2445,
	554, 2445,
	555, 2445,
	557, 2445,
	560, 2445,
	561, 2445,
	563, 2445,
	564, 2445,
	-2, 0,
	-1, 1515,
	180, 2334,
	484, 2334,
	542, 2334,
	561, 2334,
	-2, 0,
	-1, 1564,
	377, 782,
	432, 782,
	489, 782,
	-2, 0,
	-1, 1590,
	1, 777,
	558, 777,
	560, 777,
	562, 777,
	-2, 0,
	-1, 1591,
	1, 813,
	558, 813,
	560, 813,
	562, 813,
	-2, 0,
	-1, 1592,
	1, 821,
	558, 821,
	560, 821,
	562, 821,
	-2, 0,
	-1, 1593,
	1, 784,
	558, 784,
	560, 784,
	562, 784,
	-2, 0,
	-1, 1595,
	1, 788,
	558, 788,
	560, 788,
	562, 788,
	-2, 0,
	-1, 1601,
	1, 795,
	558, 795,
	560, 795,
	562, 795,
	-2, 0,
	-1, 1629,
	1, 2391,
	558, 2391,
	560, 2391,
	561, 2391,
	562, 2391,
	-2, 846,
	-1, 1630,
	1, 2331,
	558, 2331,
	560, 2331,
	561, 2331,
	562, 2331,
	-2, 847,
	-1, 1645,
	1, 1234,
	562, 1234,
	-2, 1239,
	-1, 1648,
	164, 1368,
	177, 1368,
	263, 1368,
	327, 1368,
	-2, 1308,
	-1, 1742,
	146, 1329,
	164, 1329,
	177, 1329,
	230, 1329,
	263, 1329,
	327, 1329,
	337, 1329,
	501, 1329,
	-2, 1768,
	-1, 1802,
	560, 1918,
	-2, 0,
	-1, 1837,
	146, 1329,
	164, 1329,
	177, 1329,
	230, 1329,
	263, 1329,
	327, 1329,
	337, 1329,
	501, 1329,
	-2, 1455,
	-1, 1886,
	559, 1595,
	-2, 1583,
	-1, 1923,
	1, 610,
	562, 610,
	-2, 1239,
	-1, 2035,
	213, 217,
	-2, 2058,
	-1, 2036,
	213, 218,
	-2, 260,
	-1, 2164,
	1, 779,
	558, 779,
	560, 779,
	562, 779,
	-2, 0,
	-1, 2165,
	1, 815,
	558, 815,
	560, 815,
	562, 815,
	-2, 0,
	-1, 2166,
	1, 823,
	558, 823,
	560, 823,
	562, 823,
	-2, 0,
	-1, 2199,
	1, 797,
	558, 797,
	560, 797,
	562, 797,
	-2, 0,
	-1, 2245,
	412, 1395,
	413, 1395,
	-2, 1628,
	-1, 2276,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1648,
	-1, 2277,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1649,
	-1, 2278,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1650,
	-1, 2279,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1651,
	-1, 2280,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1652,
	-1, 2281,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1653,
	-1, 2282,
	94, 0,
	244, 0,
	245, 0,
	544, 0,
	545, 0,
	-2, 1654,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1655,
	-1, 2295,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1667,
	-1, 2296,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1668,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1669,
	-1, 2300,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1674,
	-1, 2306,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1678,
	-1, 2308,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1686,
	-1, 2309,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1687,
	-1, 2310,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1688,
	-1, 2311,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1689,
	-1, 2447,
	5, 2062,
	180, 1929,
	559, 2059,
	-2, 2050,
	-1, 2448,
	180, 1930,
	-2, 2396,
	-1, 2449,
	180, 1931,
	-2, 2236,
	-1, 2450,
	180, 1932,
	-2, 2129,
	-1, 2451,
	180, 1933,
	-2, 2179,
	-1, 2452,
	180, 1934,
	-2, 2221,
	-1, 2453,
	180, 1935,
	-2, 2329,
	-1, 2454,
	180, 1936,
	-2, 1751,
	-1, 2523,
	1, 1456,
	2, 1456,
	105, 1456,
	146, 1456,
	164, 1456,
	177, 1456,
	181, 1456,
	197, 1456,
	200, 1456,
	226, 1456,
	230, 1456,
	241, 1456,
	259, 1456,
	263, 1456,
	301, 1456,
	327, 1456,
	331, 1456,
	337, 1456,
	403, 1456,
	407, 1456,
	501, 1456,
	512, 1456,
	526, 1456,
	527, 1456,
	528, 1456,
	538, 1456,
	558, 1456,
	560, 1456,
	562, 1456,
	564, 1456,
	-2, 1455,
	-1, 2536,
	559, 2031,
	-2, 2045,
	-1, 2538,
	52, 1356,
	131, 1356,
	-2, 276,
	-1, 2563,
	559, 1594,
	-2, 1584,
	-1, 2700,
	1, 1127,
	558, 1127,
	560, 1127,
	562, 1127,
	-2, 1356,
	-1, 2879,
	332, 1398,
	-2, 2435,
	-1, 2880,
	332, 1399,
	-2, 2315,
	-1, 2884,
	412, 1995,
	413, 1995,
	-2, 1749,
	-1, 2885,
	412, 1999,
	413, 1999,
	-2, 1750,
	-1, 2886,
	412, 1996,
	413, 1996,
	-2, 1749,
	-1, 2887,
	412, 2000,
	413, 2000,
	-2, 1750,
	-1, 2900,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1676,
	-1, 2901,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1680,
	-1, 2907,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1682,
	-1, 3135,
	1, 607,
	558, 607,
	560, 607,
	562, 607,
	-2, 1239,
	-1, 3267,
	1, 1127,
	558, 1127,
	560, 1127,
	562, 1127,
	-2, 1356,
	-1, 3377,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1684,
	-1, 3384,
	235, 0,
	237, 0,
	318, 0,
	-2, 1703,
	-1, 3451,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1732,
	-1, 3452,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1733,
	-1, 3453,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1734,
	-1, 3457,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1738,
	-1, 3458,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1739,
	-1, 3459,
	14, 0,
	15, 0,
	16, 0,
	540, 0,
	541, 0,
	542, 0,
	-2, 1740,
	-1, 3505,
	559, 2032,
	-2, 2046,
	-1, 3542,
	561, 2047,
	-2, 1161,
	-1, 3645,
	561, 2552,
	-2, 1286,
	-1, 3703,
	235, 0,
	237, 0,
	318, 0,
	-2, 1704,
	-1, 3706,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1707,
	-1, 3707,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1709,
	-1, 3923,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1708,
	-1, 3924,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 1710,
	-1, 3935,
	235, 0,
	-2, 1741,
	-1, 4093,
	235, 0,
	-2, 1742,
	-1, 4252,
	49, 0,
	210, 0,
	262, 0,
	440, 0,
	535, 0,
	543, 0,
	-2, 2399,
}

const sqlPrivate = 57344

const sqlLast = 113812

var sqlAct = [...]int{

	247, 4019, 4262, 2765, 3252, 3972, 3847, 2795, 4121, 3058,
	4363, 4226, 4251, 4142, 3686, 3251, 2032, 2599, 4207, 3975,
	4192, 4210, 4263, 4046, 4264, 4097, 4026, 3416, 3960, 2638,
	3279, 3880, 3875, 4312, 2133, 3944, 990, 3912, 1168, 1494,
	3538, 4250, 3637, 2255, 2142, 3790, 3153, 1157, 3284, 1498,
	3579, 4035, 3369, 3861, 3773, 1873, 4060, 2323, 3247, 3829,
	2118, 3277, 1657, 2663, 3885, 3613, 981, 3597, 3539, 2263,
	716, 3332, 2256, 1976, 2479, 3940, 1530, 3599, 680, 2893,
	2817, 1231, 2754, 2804, 2736, 3237, 2806, 1843, 3334, 1349,
	3101, 2723, 2078, 3064, 3508, 716, 1324, 2732, 3081, 3073,
	3041, 2797, 818, 2803, 3685, 2814, 2751, 2766, 1812, 2027,
	1986, 3742, 2749, 3062, 2601, 2516, 4098, 2140, 3476, 2260,
	989, 166, 1572, 2515, 2026, 1750, 1788, 2336, 2367, 1332,
	1529, 3040, 241, 2877, 2116, 2365, 1474, 1419, 711, 2677,
	2021, 2005, 4, 2012, 4020, 1038, 2737, 2518, 1148, 1214,
	1034, 1959, 1962, 2497, 1645, 240, 2476, 1813, 2813, 2356,
	2227, 2244, 1949, 2320, 2225, 2548, 3249, 1508, 1041, 2759,
	1485, 1829, 2066, 1040, 717, 1424, 1874, 3108, 2590, 1043,
	1200, 718, 646, 2807, 2547, 1151, 1783, 2359, 2337, 1822,
	2637, 2505, 2487, 1130, 2443, 632, 1735, 2409, 175, 654,
	176, 1658, 722, 2226, 1659, 2228, 1601, 1351, 166, 713,
	662, 2065, 674, 1329, 1045, 1147, 1165, 791, 1506, 2090,
	1361, 763, 1832, 649, 1448, 725, 1343, 722, 1975, 102,
	812, 2249, 1019, 1128, 42, 657, 41, 39, 1664, 30,
	28, 26, 1644, 879, 2928, 1372, 899, 1153, 1366, 3490,
	725, 3491, 2107, 2924, 2107, 3060, 2107, 2107, 1672, 1673,
	3294, 1705, 1706, 1707, 1715, 1716, 1717, 4428, 2107, 4418,
	4408, 2496, 4407, 3313, 2496, 4380, 2496, 985, 3131, 3789,
	1708, 1703, 3013, 3014, 3130, 4378, 4374, 4292, 1675, 3789,
	2040, 4293, 1209, 3293, 4286, 4284, 1721, 4281, 2496, 2496,
	1209, 4282, 4278, 4273, 833, 2489, 4279, 2040, 4248, 1145,
	4247, 4246, 2040, 4241, 2040, 2126, 4240, 2126, 2141, 3313,
	2126, 1184, 1674, 1672, 1673, 1365, 3480, 985, 2892, 1715,
	1716, 1717, 1694, 4235, 4233, 4205, 4182, 3789, 3789, 3789,
	2554, 1691, 2496, 4175, 4174, 4169, 1703, 2496, 2496, 3789,
	4168, 2937, 4183, 1675, 3789, 1131, 1131, 2938, 4162, 4135,
	4095, 1721, 2040, 3839, 2554, 966, 1163, 965, 4099, 1594,
	4077, 1672, 1673, 4074, 3674, 4071, 4028, 2040, 3993, 3789,
	4029, 3992, 2040, 3116, 1160, 2040, 3984, 1674, 3983, 1159,
	2040, 3951, 3789, 4090, 1703, 2040, 3925, 1694, 3904, 3893,
	2554, 1675, 2126, 3313, 3824, 3812, 1691, 986, 2496, 2496,
	4078, 2126, 1697, 1698, 1699, 1700, 3480, 1179, 975, 3788,
	1386, 980, 1680, 3789, 3705, 3653, 3647, 3611, 2554, 3329,
	3329, 3612, 3500, 3498, 3483, 1674, 3501, 3499, 2496, 2488,
	3400, 3396, 1132, 1017, 2040, 2496, 3019, 3328, 3320, 3057,
	3052, 3329, 3321, 2496, 2496, 1538, 3874, 1712, 3051, 3839,
	1722, 3004, 2496, 2040, 2978, 3005, 1702, 1704, 2979, 2970,
	2550, 2968, 37, 2971, 87, 2496, 3813, 1697, 1698, 1699,
	1700, 2939, 1718, 2040, 1719, 2496, 2820, 1680, 3674, 2793,
	2126, 1689, 1690, 2129, 1380, 2792, 2574, 1180, 2553, 2129,
	2496, 2659, 2554, 2545, 2496, 3321, 2040, 2496, 2539, 1710,
	2495, 2128, 2040, 2654, 2496, 2129, 1134, 213, 1135, 813,
	3013, 3014, 1712, 1695, 2589, 1722, 1928, 2106, 2122, 1980,
	2729, 1702, 1704, 2039, 2671, 1680, 2587, 2362, 1808, 1360,
	3570, 3372, 3350, 1830, 1374, 2015, 68, 3029, 816, 815,
	3295, 1574, 2392, 2532, 2927, 2531, 1689, 1690, 2530, 2529,
	215, 2528, 69, 3013, 3014, 1720, 3031, 3032, 3033, 3296,
	3887, 1136, 1133, 974, 1710, 1672, 1673, 973, 73, 1702,
	1704, 972, 971, 1709, 2857, 1365, 970, 969, 1695, 213,
	2108, 968, 2108, 964, 2108, 2108, 963, 962, 1703, 961,
	960, 959, 958, 957, 956, 1675, 2108, 955, 214, 954,
	953, 952, 951, 1672, 1673, 950, 949, 948, 80, 207,
	930, 2363, 877, 876, 1385, 875, 874, 873, 208, 872,
	1374, 871, 215, 870, 869, 868, 1695, 3028, 867, 1674,
	866, 1701, 3758, 1675, 3293, 865, 864, 863, 862, 861,
	177, 860, 859, 2378, 858, 86, 857, 856, 855, 1161,
	1524, 1696, 1180, 854, 853, 852, 2745, 851, 2040, 101,
	213, 850, 2762, 849, 87, 98, 848, 1674, 847, 1043,
	214, 846, 836, 1043, 3019, 3030, 835, 1713, 831, 2488,
	830, 824, 823, 781, 780, 739, 738, 737, 1379, 1234,
	2364, 736, 2361, 1234, 728, 1180, 1701, 1354, 727, 726,
	695, 686, 685, 215, 684, 1213, 668, 235, 234, 1218,
	1204, 233, 177, 232, 231, 3717, 1696, 3019, 230, 88,
	229, 1043, 228, 1043, 227, 1043, 226, 225, 224, 1680,
	2105, 1354, 223, 213, 1340, 222, 221, 220, 219, 218,
	217, 3518, 1713, 2782, 216, 2106, 139, 2040, 2122, 3494,
	3330, 214, 3104, 2950, 1335, 1354, 3889, 2933, 2710, 2220,
	2558, 2537, 207, 2522, 1696, 2376, 1957, 1680, 1373, 1856,
	1761, 208, 1711, 1702, 1704, 3029, 215, 1686, 1687, 1693,
	1714, 1692, 1688, 213, 1685, 1683, 1684, 1676, 1677, 1678,
	1679, 1681, 1682, 177, 3013, 3014, 1430, 1432, 1364, 1354,
	1043, 3725, 1368, 1220, 1833, 1354, 1167, 4269, 1752, 1354,
	3023, 3015, 3016, 3017, 3018, 3020, 3021, 1043, 3029, 1043,
	1198, 4081, 4249, 1354, 214, 1374, 215, 1671, 4149, 1043,
	1695, 1043, 2366, 4102, 213, 207, 1227, 1711, 1321, 1326,
	3055, 1791, 722, 4087, 208, 1714, 1692, 1688, 1790, 1685,
	1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 4079, 1422,
	91, 3013, 3014, 2136, 3970, 725, 177, 1752, 3028, 213,
	1794, 2081, 3013, 3014, 214, 1354, 1193, 215, 3056, 3939,
	3894, 1791, 1596, 3873, 1363, 207, 3765, 3740, 1790, 1088,
	3739, 1362, 2747, 1043, 208, 3733, 1043, 1685, 1683, 1684,
	1676, 1677, 1678, 1679, 1681, 1682, 174, 94, 213, 97,
	1789, 3324, 215, 3030, 3013, 3014, 177, 1759, 3732, 3731,
	3724, 3723, 3721, 3716, 3713, 214, 166, 166, 3712, 1479,
	1482, 3616, 3610, 213, 3522, 1543, 207, 3521, 3520, 3504,
	2360, 817, 2135, 1374, 3471, 208, 139, 3470, 1511, 1513,
	3469, 215, 1542, 1753, 3392, 1751, 3030, 1754, 3019, 3388,
	214, 3099, 1491, 3048, 3039, 213, 2567, 177, 1696, 1204,
	3012, 207, 1204, 1435, 1672, 1673, 215, 3009, 3008, 1417,
	208, 3006, 2977, 2976, 3888, 1451, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 3568, 2975, 2972, 1528, 2969, 2949, 214,
	2932, 141, 177, 1144, 1675, 2925, 2794, 2523, 215, 1488,
	207, 2349, 1509, 1671, 2332, 4422, 178, 1043, 1670, 208,
	1610, 2047, 1649, 1043, 214, 3019, 4372, 4371, 2045, 3617,
	4302, 4300, 4291, 1169, 986, 207, 3019, 3418, 1674, 68,
	4141, 177, 4131, 4128, 208, 4127, 1495, 3022, 3023, 3015,
	3016, 3017, 3018, 3020, 3021, 69, 214, 4126, 3122, 3029,
	4118, 1505, 4111, 1523, 4101, 4100, 814, 207, 4075, 4059,
	1643, 73, 2746, 4058, 213, 1537, 208, 2326, 3019, 4044,
	3013, 3014, 3025, 3026, 3027, 4041, 3989, 3966, 3937, 3024,
	3022, 3023, 3015, 3016, 3017, 3018, 3020, 3021, 2761, 4103,
	2391, 3867, 1741, 1684, 1676, 1677, 1678, 1679, 1681, 1682,
	3920, 80, 3919, 3761, 1548, 3901, 3900, 215, 3864, 3840,
	3757, 3053, 3738, 1565, 3675, 3669, 3029, 3096, 1043, 1043,
	1043, 3666, 3558, 3557, 1043, 3544, 3543, 1597, 1680, 3486,
	3474, 1165, 3383, 1165, 1678, 1679, 1681, 1682, 86, 1739,
	3331, 3299, 3314, 3270, 3209, 3182, 3156, 2623, 1234, 3155,
	1810, 3617, 101, 3124, 2954, 214, 1043, 87, 98, 716,
	1646, 2953, 2948, 1891, 716, 1654, 207, 1653, 966, 3029,
	965, 2916, 2722, 1043, 1797, 208, 1796, 1354, 1795, 1672,
	1673, 1792, 213, 1784, 1371, 1782, 1378, 3030, 1384, 2565,
	1648, 2377, 2564, 2534, 2527, 1043, 2494, 177, 1819, 1793,
	1650, 1234, 1667, 1668, 2374, 1855, 1811, 1806, 1805, 1675,
	1804, 1803, 88, 1802, 1864, 1801, 1800, 1799, 1798, 1779,
	1204, 1778, 1946, 1672, 1673, 215, 1840, 1816, 1817, 1777,
	1866, 1955, 1776, 1775, 3019, 1774, 986, 1773, 1772, 3156,
	1771, 1770, 1769, 1674, 1768, 1767, 1703, 1921, 1766, 1920,
	1785, 1786, 1765, 1675, 3030, 166, 1531, 1131, 1754, 1740,
	1738, 1733, 1192, 1504, 1449, 1182, 1926, 1175, 3709, 3517,
	3497, 3489, 2936, 214, 2525, 3955, 2556, 1454, 3763, 3516,
	1522, 1163, 1527, 1163, 207, 1753, 3120, 1674, 3013, 3014,
	1736, 722, 1536, 208, 1541, 1851, 722, 1217, 1862, 1160,
	1831, 1160, 3815, 1863, 1159, 4369, 1159, 3030, 4362, 3280,
	4129, 2137, 4031, 2375, 725, 177, 213, 4030, 1838, 725,
	3024, 3022, 3023, 3015, 3016, 3017, 3018, 3020, 3021, 1948,
	1923, 1940, 1939, 2552, 3892, 1948, 1950, 3842, 1919, 1354,
	1354, 1948, 4082, 1809, 1948, 1215, 3841, 3814, 3760, 1234,
	988, 3678, 1968, 91, 1595, 1216, 1841, 3677, 3676, 215,
	3492, 3316, 986, 3315, 1860, 1209, 213, 3185, 1867, 1850,
	4036, 1849, 1848, 1914, 1846, 1845, 1844, 1885, 1835, 4080,
	2642, 1833, 2082, 2001, 1871, 3370, 2004, 1680, 1641, 2009,
	3015, 3016, 3017, 3018, 3020, 3021, 3556, 1564, 1859, 174,
	94, 2974, 97, 3017, 3018, 3020, 3021, 214, 1870, 215,
	213, 3969, 3620, 1917, 2973, 2033, 2037, 2898, 207, 1934,
	2625, 1774, 1209, 1209, 1951, 1941, 213, 208, 1774, 1791,
	1212, 1702, 1704, 1763, 817, 946, 1790, 2156, 1611, 139,
	3024, 3022, 3023, 3015, 3016, 3017, 3018, 3020, 3021, 177,
	1943, 1985, 3254, 215, 3253, 1573, 4245, 214, 2134, 4027,
	2013, 1760, 4289, 4274, 4261, 3238, 2818, 1574, 207, 215,
	2028, 3576, 3575, 722, 3561, 213, 3347, 208, 947, 3133,
	2357, 3941, 3060, 3420, 2942, 4270, 2030, 2563, 1695, 1807,
	1787, 3245, 2075, 1354, 141, 1354, 725, 1354, 1478, 177,
	2071, 214, 1453, 1676, 1677, 1678, 1679, 1681, 1682, 178,
	1429, 1924, 207, 1354, 1354, 1363, 1357, 214, 215, 1187,
	4283, 208, 1362, 4280, 1354, 2087, 3289, 2668, 207, 2665,
	3533, 2076, 4122, 3876, 1552, 4204, 1354, 208, 1354, 1354,
	1354, 4108, 3159, 177, 2008, 3551, 1980, 2801, 4271, 2758,
	1143, 3231, 4353, 4329, 4328, 3589, 3364, 4010, 1945, 177,
	716, 2038, 2143, 3803, 1396, 1404, 214, 2575, 4417, 4003,
	944, 2155, 1358, 3137, 1161, 942, 1161, 207, 2095, 2205,
	1199, 2235, 2164, 940, 2084, 3995, 208, 2203, 3837, 3585,
	3584, 938, 935, 926, 1454, 2110, 1944, 3578, 3121, 3574,
	2593, 2058, 2139, 2097, 2057, 3139, 776, 1847, 177, 3015,
	3016, 3017, 3018, 3020, 3021, 2591, 1609, 3588, 3572, 1935,
	2160, 3530, 3529, 2603, 3234, 3115, 1696, 2947, 2946, 2945,
	984, 2944, 1608, 2593, 2405, 2362, 1210, 2165, 1451, 2233,
	2092, 1043, 2092, 1043, 2144, 1405, 2093, 2089, 2591, 1217,
	1043, 1036, 2755, 1891, 1891, 1234, 2902, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 722, 1043, 2166, 1043, 1043, 1043, 1043, 3536,
	1509, 2237, 1509, 2675, 777, 1210, 1590, 1216, 1193, 1550,
	2224, 2130, 2674, 2131, 983, 725, 2231, 1043, 1217, 2363,
	1043, 1043, 986, 1682, 986, 2670, 2661, 1607, 1043, 2653,
	2652, 2606, 1043, 2651, 1043, 1043, 2147, 2650, 2629, 2616,
	2148, 4354, 1234, 2546, 2307, 1647, 3184, 1206, 1043, 1043,
	1043, 1043, 2134, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1591, 1676, 1677, 1678, 1679, 1681, 1682, 2404, 2181,
	2265, 3918, 2627, 2234, 213, 1172, 1216, 1210, 932, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 3348, 1441,
	2199, 1440, 1043, 2214, 2338, 2339, 2557, 1439, 2364, 1438,
	2361, 2218, 2217, 2152, 1165, 2248, 1464, 1400, 2338, 2354,
	1412, 1234, 2582, 1545, 2322, 1170, 1206, 215, 1592, 1453,
	1165, 985, 2538, 2056, 1359, 1211, 1620, 4357, 2322, 2261,
	2262, 2172, 3021, 2223, 2400, 2222, 1043, 1234, 2221, 2236,
	2229, 2232, 2615, 966, 2235, 2252, 966, 966, 2253, 2254,
	1672, 1673, 3816, 2446, 2446, 2460, 3785, 2338, 1566, 2353,
	2480, 2482, 2209, 2875, 2646, 214, 2486, 1885, 1885, 1562,
	2357, 2639, 2640, 1703, 2510, 1977, 207, 1952, 1953, 644,
	1675, 2304, 1207, 2639, 2640, 208, 2639, 2640, 1206, 3781,
	1208, 2890, 2169, 2402, 1211, 1652, 2163, 2502, 2403, 1191,
	4381, 2406, 2233, 2407, 2408, 639, 2216, 177, 1973, 2318,
	2535, 2334, 3355, 1840, 1674, 3547, 3595, 4358, 2860, 1173,
	1640, 4267, 2351, 2614, 2605, 3354, 3799, 1987, 1546, 2094,
	4328, 2854, 1978, 1979, 3836, 2173, 1131, 2316, 1234, 1963,
	2366, 3782, 3409, 1425, 1964, 2524, 3573, 2366, 986, 1991,
	1624, 1207, 1204, 2330, 1163, 3594, 2501, 986, 3571, 1208,
	2328, 986, 1974, 1346, 1574, 1606, 1211, 3560, 1891, 2667,
	1163, 2471, 1160, 166, 2455, 2442, 844, 1159, 3199, 3977,
	3233, 1574, 2484, 779, 778, 982, 2559, 1423, 1160, 2492,
	2493, 3136, 2572, 1159, 2503, 2551, 1234, 1389, 2507, 2508,
	3192, 2666, 1603, 2664, 1988, 1838, 4345, 3559, 3203, 1851,
	1354, 4339, 1793, 2889, 1680, 2913, 2669, 3198, 2649, 3917,
	2626, 1426, 2863, 1207, 4360, 1043, 1043, 2595, 1043, 2628,
	2594, 1208, 2509, 1980, 2514, 4344, 2234, 2520, 2521, 3191,
	2592, 2213, 2302, 2911, 1551, 2305, 2702, 1209, 2360, 986,
	2573, 1354, 2544, 1965, 2604, 2662, 936, 2566, 1702, 1704,
	1999, 936, 1888, 1983, 2204, 1501, 4384, 1785, 1786, 936,
	1967, 1821, 2202, 2312, 2647, 1517, 2631, 937, 936, 3406,
	2569, 2571, 921, 4317, 2366, 2701, 2044, 2043, 2576, 4268,
	3691, 2313, 2769, 3979, 2301, 3690, 2314, 2743, 2549, 1998,
	2319, 2618, 1982, 4366, 2232, 1992, 979, 1354, 1354, 3286,
	1354, 4179, 774, 2630, 773, 1695, 1209, 2882, 2883, 3797,
	4398, 1402, 1354, 2608, 2611, 3287, 2648, 2598, 2578, 2107,
	4123, 2705, 4137, 837, 3777, 2707, 2815, 1354, 1969, 3778,
	2733, 1556, 2785, 2580, 2632, 2570, 1971, 1825, 2739, 1425,
	3138, 2862, 722, 3170, 2215, 811, 693, 2789, 3407, 1463,
	1399, 2823, 2824, 2641, 2643, 2644, 2645, 1171, 1618, 1993,
	1994, 3856, 2830, 2831, 2832, 725, 2581, 1043, 1780, 2908,
	2859, 4266, 1885, 2171, 2016, 3118, 1621, 2025, 1209, 2023,
	3780, 3212, 1828, 1989, 1363, 922, 2579, 3286, 2819, 4359,
	2112, 2708, 2909, 2114, 3783, 1963, 2914, 1823, 3169, 2119,
	1964, 3548, 2121, 2720, 2839, 977, 2124, 921, 2800, 1971,
	2730, 1043, 1980, 4316, 2771, 1826, 2776, 1043, 1043, 166,
	2779, 2002, 2780, 3687, 1990, 640, 2024, 2753, 2904, 4338,
	4215, 979, 2821, 2764, 4140, 933, 2825, 1161, 2826, 3602,
	2772, 2790, 2321, 1696, 2462, 2865, 245, 2867, 3600, 3822,
	691, 1970, 2348, 1161, 3798, 1971, 2593, 1824, 2315, 2786,
	2861, 3930, 2303, 2836, 1732, 2952, 2506, 2791, 2317, 1619,
	1547, 2609, 1043, 1043, 2802, 2845, 978, 2847, 1043, 2849,
	3602, 4177, 4385, 2726, 1971, 2519, 1821, 3075, 2022, 3600,
	2366, 1043, 1043, 1561, 1563, 641, 985, 1043, 1043, 2858,
	3142, 3914, 3173, 1043, 2784, 3422, 4373, 1509, 3866, 1965,
	3779, 1622, 1043, 1043, 1043, 4178, 2844, 2168, 1043, 1651,
	922, 2162, 845, 1190, 3681, 3513, 1967, 1185, 1043, 2011,
	1825, 3978, 1995, 2905, 4364, 3692, 1002, 825, 642, 2870,
	643, 4295, 3366, 2873, 2787, 1043, 4143, 3786, 2881, 4265,
	4296, 3175, 2010, 2219, 2872, 3603, 2838, 2871, 2891, 4327,
	838, 839, 1825, 1827, 2910, 2329, 4325, 2846, 923, 2848,
	3857, 2850, 2876, 2248, 2912, 1828, 2926, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 2006, 729, 2930, 2931, 4158,
	2504, 1578, 2934, 1623, 1969, 2841, 3603, 2842, 2843, 3615,
	1549, 2868, 921, 1996, 4043, 4315, 3635, 1828, 1826, 1978,
	1979, 3273, 3342, 3174, 2064, 1818, 1183, 1178, 2622, 631,
	1966, 3335, 1823, 1662, 3688, 1006, 979, 2251, 3736, 3460,
	3913, 4365, 1661, 1981, 1936, 1043, 1043, 1043, 2903, 2007,
	1826, 3986, 3598, 3109, 1043, 1043, 1043, 4390, 4399, 1043,
	692, 2658, 3985, 3964, 4052, 4107, 3636, 2108, 3582, 1043,
	1165, 1234, 3532, 3274, 4367, 1043, 1455, 1043, 3074, 2000,
	3266, 3802, 3067, 3068, 994, 1165, 1933, 1661, 3801, 3151,
	3147, 2744, 1824, 2738, 2724, 2941, 2711, 3405, 2088, 2714,
	1656, 2716, 2077, 1234, 2069, 694, 2019, 1393, 690, 2050,
	667, 924, 2633, 923, 2498, 1165, 4144, 3475, 1234, 3526,
	2241, 4193, 3601, 3337, 3367, 922, 4159, 1970, 2003, 2210,
	1929, 1971, 1661, 3050, 3638, 1891, 986, 3089, 3336, 1234,
	3881, 1660, 2721, 2760, 1466, 4025, 2760, 3693, 3342, 3069,
	840, 841, 1888, 1888, 1043, 2017, 4023, 3335, 925, 1931,
	3965, 2610, 3102, 3601, 3162, 3158, 1827, 1732, 1043, 2153,
	3157, 2896, 2874, 3488, 3915, 1593, 3177, 2935, 3077, 3079,
	1891, 3072, 3103, 3071, 826, 827, 1660, 2500, 3143, 3144,
	3134, 2543, 2499, 4294, 2018, 3098, 1043, 1354, 1827, 1932,
	1204, 2542, 2541, 1433, 3140, 1662, 3160, 2540, 1447, 3164,
	3045, 3046, 3047, 3078, 983, 3178, 1434, 3607, 3087, 2728,
	1163, 3461, 3095, 4114, 3090, 3091, 3061, 3694, 3107, 3737,
	3462, 1660, 1354, 730, 731, 1163, 3161, 3076, 1160, 3166,
	3167, 1445, 1234, 1159, 976, 3088, 924, 843, 2851, 3337,
	1662, 1354, 2242, 1160, 3973, 4389, 1354, 3848, 1159, 3325,
	2086, 3148, 3241, 3215, 3336, 1163, 3218, 4335, 3187, 4021,
	3223, 3225, 2822, 3125, 3126, 2706, 3127, 2634, 2635, 1354,
	2704, 3800, 1555, 1160, 4201, 1354, 2733, 1354, 1159, 3962,
	3898, 1234, 4190, 925, 3172, 239, 1966, 4196, 716, 3111,
	3112, 3113, 3190, 3743, 4145, 3210, 3477, 3527, 923, 1354,
	3135, 3119, 2373, 4219, 1968, 4115, 3213, 4337, 4285, 4130,
	3250, 2733, 3141, 1354, 3936, 1638, 3093, 3201, 3094, 3202,
	1579, 3735, 3963, 3338, 3339, 3340, 3341, 3606, 3042, 1165,
	2733, 1636, 3259, 1968, 1615, 2733, 3382, 3282, 3220, 1885,
	3176, 3333, 3974, 3227, 1613, 3183, 3152, 3897, 3265, 2815,
	3345, 3236, 3194, 3239, 828, 829, 3129, 1863, 2815, 3110,
	3007, 733, 732, 2132, 3197, 3114, 1589, 2915, 3205, 2013,
	4197, 1354, 1354, 1587, 3211, 1585, 666, 2013, 1583, 1501,
	2145, 2725, 3221, 3291, 1885, 3083, 3228, 3128, 4116, 2660,
	2146, 3146, 1581, 1354, 1571, 3232, 1569, 1443, 2624, 3312,
	2568, 1858, 2154, 3195, 2157, 2158, 2159, 3196, 1422, 2372,
	1854, 1639, 1533, 3305, 3043, 734, 735, 3363, 2631, 3362,
	722, 2777, 3235, 1656, 1879, 3189, 3243, 2781, 1446, 2856,
	1234, 924, 2201, 1234, 3349, 2855, 3275, 3204, 2828, 3263,
	2230, 2212, 3283, 725, 1602, 2176, 3200, 2049, 1918, 3338,
	3339, 3340, 3341, 1764, 1544, 1416, 4260, 1888, 3823, 3811,
	4189, 1444, 3402, 1043, 3879, 3828, 3219, 842, 3770, 1043,
	1043, 3226, 3343, 1043, 1043, 1043, 3084, 1043, 925, 1163,
	3634, 3290, 3626, 166, 166, 3302, 1043, 1891, 3306, 3327,
	3288, 4313, 3323, 1637, 3361, 1043, 3587, 1160, 1043, 3297,
	3554, 3552, 1159, 1161, 1234, 3310, 3311, 3214, 3531, 1635,
	3269, 3264, 1614, 1043, 3360, 3255, 2783, 2778, 1161, 2756,
	3278, 1234, 1612, 3344, 3082, 1006, 2742, 2731, 3262, 1006,
	2718, 1891, 1891, 1043, 1043, 3368, 1043, 1043, 1043, 3351,
	3281, 3352, 3385, 3353, 1588, 1318, 2703, 2127, 1161, 1318,
	2125, 1586, 2123, 1584, 2120, 3086, 1582, 2115, 2113, 3357,
	2109, 986, 2100, 2048, 2046, 2029, 3394, 3395, 2014, 1997,
	1580, 1984, 1570, 1972, 1568, 1442, 934, 4305, 1043, 3434,
	3365, 1865, 1043, 1140, 1891, 1891, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1043, 1043, 1043, 3435, 1043, 2200, 1665, 1141,
	4329, 1937, 4229, 1043, 1043, 1891, 3222, 3510, 2894, 3903,
	1043, 2023, 3390, 3896, 3895, 3835, 3766, 2816, 1956, 1398,
	2593, 1043, 4054, 1963, 3401, 2613, 1051, 4047, 1964, 3417,
	2593, 3646, 1165, 1165, 3358, 2591, 1043, 3412, 1980, 2167,
	3424, 3408, 3410, 3411, 2085, 2612, 1633, 1634, 1487, 3085,
	2196, 706, 3179, 3180, 2174, 1486, 3181, 2195, 4228, 3432,
	3431, 3804, 3830, 3433, 1567, 1234, 1672, 1673, 4089, 3744,
	243, 243, 243, 3722, 634, 635, 3506, 650, 634, 650,
	660, 665, 2636, 2617, 3472, 683, 3509, 3493, 3206, 3207,
	689, 1885, 3208, 3439, 1672, 1673, 243, 2261, 3425, 2895,
	1043, 3464, 3437, 1669, 1666, 1142, 4331, 645, 4323, 4290,
	3581, 939, 941, 943, 2717, 822, 1043, 1165, 2198, 3623,
	2022, 243, 236, 2070, 1675, 3484, 3485, 2665, 1487, 1196,
	1674, 3580, 764, 3465, 166, 1885, 1885, 1965, 808, 1487,
	3479, 2673, 2672, 1043, 1043, 2655, 3481, 3482, 2657, 2619,
	2261, 3440, 2621, 4184, 1967, 4153, 3473, 4150, 1674, 4113,
	656, 2656, 1161, 4039, 3540, 2620, 4018, 628, 3625, 3495,
	1043, 3614, 3503, 3268, 2763, 2485, 1922, 1872, 3496, 4361,
	3971, 3468, 1163, 1163, 3117, 4221, 4388, 4152, 1885, 1885,
	4222, 1365, 1354, 3013, 3014, 1672, 1673, 4221, 2585, 2586,
	1160, 1160, 4222, 2583, 2584, 1159, 1159, 3714, 1554, 2368,
	4341, 1891, 3515, 3519, 1553, 3583, 2585, 3562, 2583, 1885,
	3567, 3569, 1969, 3566, 2401, 4040, 1617, 4004, 3535, 1616,
	3831, 3827, 3826, 3710, 634, 634, 3632, 3514, 3413, 3216,
	1354, 1758, 243, 1757, 3577, 4375, 4346, 1043, 4188, 4187,
	4186, 4104, 3999, 3956, 3953, 1165, 1043, 3859, 3762, 3672,
	3652, 3621, 3648, 3609, 3550, 3545, 2700, 1163, 2631, 3639,
	3300, 2769, 3272, 3271, 3003, 3002, 1354, 1354, 1354, 3001,
	3000, 2999, 3657, 2998, 2997, 1160, 3605, 3593, 2996, 2995,
	1159, 2994, 1354, 2993, 3643, 2992, 2991, 2990, 3608, 2989,
	2988, 2987, 2986, 2985, 1879, 1879, 3622, 2815, 2984, 3642,
	2983, 1234, 2982, 3661, 3596, 2981, 2980, 3604, 2853, 2835,
	2834, 3624, 3629, 2833, 3511, 3512, 2774, 2748, 2719, 3640,
	2561, 2560, 2333, 1234, 2197, 2194, 1043, 1043, 3523, 3524,
	3525, 3673, 1043, 1043, 1891, 1970, 2193, 1043, 1043, 1971,
	1043, 3641, 3627, 1744, 1043, 3644, 2192, 1749, 2191, 2190,
	2103, 3649, 2102, 2788, 1501, 1043, 2101, 2099, 3650, 2083,
	2059, 2055, 2054, 2053, 2052, 3656, 1327, 2051, 1632, 1339,
	1342, 1043, 3662, 3663, 1631, 3664, 1576, 3152, 1575, 1473,
	1472, 3670, 3668, 2829, 1960, 3671, 3696, 3667, 1471, 3704,
	1470, 1469, 1468, 1467, 1318, 1163, 1465, 1460, 1459, 1458,
	1457, 3695, 1456, 1411, 1888, 1410, 1409, 1408, 1407, 1406,
	3592, 1401, 3679, 1160, 3708, 1885, 3689, 1397, 1159, 1395,
	1394, 1225, 1224, 1961, 1223, 1222, 1221, 1189, 1188, 3684,
	1123, 1165, 1342, 1342, 1927, 945, 931, 3976, 3784, 1165,
	1626, 1006, 85, 1234, 1403, 1234, 752, 1318, 79, 1888,
	2020, 3549, 1165, 904, 4218, 1387, 4136, 759, 4203, 3168,
	2676, 2175, 1577, 2177, 3097, 1161, 1161, 3301, 2526, 1234,
	3303, 3304, 1342, 4176, 3718, 3307, 2951, 3308, 3309, 4096,
	3929, 4069, 2371, 1762, 3054, 81, 1027, 1073, 3734, 3855,
	3854, 3771, 1043, 3534, 1165, 2805, 3852, 3767, 3768, 3102,
	3851, 1876, 1878, 993, 1966, 1237, 3752, 1938, 1033, 1954,
	1947, 2562, 2445, 1050, 1047, 1880, 1882, 1049, 1048, 1881,
	3805, 1234, 1781, 1046, 3745, 1875, 3631, 3630, 2727, 1234,
	2767, 3298, 3750, 4061, 3795, 3748, 1452, 3755, 3794, 3751,
	1450, 3540, 3756, 3746, 3747, 166, 4062, 906, 1885, 1942,
	1161, 3806, 3759, 3832, 2327, 3833, 2355, 1354, 1354, 2940,
	1755, 1008, 1029, 2352, 1181, 3769, 1018, 3741, 1007, 3080,
	3059, 3285, 3502, 2240, 1354, 768, 3010, 4063, 3834, 2358,
	3849, 1163, 1174, 2468, 2461, 1234, 2457, 3132, 2757, 1163,
	1354, 1642, 3825, 3943, 1734, 1318, 2768, 3846, 1219, 1160,
	1011, 2325, 1163, 1746, 1159, 2920, 3844, 1160, 2250, 1879,
	3292, 3100, 1159, 2555, 4225, 3819, 3421, 1165, 3872, 3882,
	1160, 3821, 2063, 1139, 1138, 1159, 1137, 1354, 1354, 1354,
	4209, 4206, 3838, 3665, 3845, 3248, 4065, 1930, 1234, 2577,
	3843, 1724, 3256, 1023, 1163, 1338, 3065, 3326, 3877, 3850,
	1043, 1043, 1043, 1176, 1413, 3886, 688, 3899, 4064, 3869,
	3865, 3791, 1160, 2733, 3540, 3891, 1035, 1159, 1234, 3871,
	1723, 3868, 2697, 1043, 3884, 4066, 1043, 1043, 2696, 3883,
	4110, 1186, 1205, 1203, 1202, 3749, 1043, 1201, 1161, 1891,
	683, 3628, 3150, 4397, 1043, 1043, 3546, 3906, 212, 2888,
	1663, 1655, 209, 211, 3908, 210, 3860, 2513, 3507, 1234,
	3910, 1354, 3106, 3905, 243, 4288, 243, 243, 1330, 3916,
	243, 243, 1345, 3564, 3240, 1234, 3921, 21, 3926, 20,
	19, 106, 40, 1043, 18, 121, 243, 3810, 1367, 138,
	1165, 137, 114, 3796, 3938, 3932, 136, 135, 3818, 134,
	3820, 133, 1043, 140, 1891, 132, 3807, 3808, 131, 1391,
	126, 130, 1043, 129, 128, 1043, 1888, 1163, 3680, 3958,
	127, 125, 3949, 3950, 1043, 124, 123, 1415, 122, 1421,
	120, 1234, 119, 243, 243, 1160, 1330, 3540, 118, 117,
	1159, 3952, 1354, 1354, 3959, 116, 115, 113, 112, 111,
	110, 3998, 109, 108, 3957, 1462, 107, 679, 3980, 676,
	1888, 1888, 57, 56, 105, 104, 17, 243, 38, 243,
	243, 3981, 1330, 243, 1367, 14, 61, 62, 16, 13,
	1234, 4033, 3250, 1354, 683, 4024, 243, 243, 33, 1339,
	84, 4000, 3996, 96, 4009, 95, 34, 93, 92, 32,
	4006, 1165, 1165, 15, 90, 3553, 89, 3555, 4014, 822,
	4038, 4037, 4048, 1888, 1888, 4022, 31, 4013, 3902, 4016,
	1043, 1043, 29, 4032, 1161, 11, 9, 8, 35, 4057,
	4012, 4017, 1161, 1842, 4051, 12, 5, 1043, 1891, 4076,
	1163, 4072, 4073, 4045, 1888, 1161, 4050, 171, 3540, 3540,
	4056, 1318, 170, 1885, 3886, 4070, 4055, 4067, 1160, 173,
	169, 172, 4068, 1159, 3586, 83, 168, 1043, 167, 82,
	1043, 27, 4049, 10, 163, 3229, 4034, 3619, 76, 4084,
	3988, 243, 4117, 165, 164, 162, 161, 1161, 160, 77,
	1165, 4106, 74, 4094, 4085, 4086, 4088, 159, 243, 78,
	158, 75, 157, 25, 6, 3260, 60, 7, 3911, 3346,
	99, 100, 36, 4105, 72, 71, 70, 24, 1885, 3267,
	59, 23, 200, 199, 198, 197, 196, 195, 4120, 190,
	4125, 1043, 1043, 189, 4119, 4139, 4001, 3540, 1318, 194,
	192, 191, 1165, 3654, 193, 1165, 188, 3655, 4124, 1354,
	4134, 1163, 1163, 203, 202, 4132, 204, 201, 206, 1354,
	1354, 187, 185, 4011, 181, 180, 184, 4147, 4148, 1160,
	1160, 186, 183, 182, 1159, 1159, 1354, 3318, 3319, 4037,
	4167, 179, 4155, 4146, 205, 4157, 4151, 3858, 155, 3540,
	1043, 1043, 3540, 4161, 156, 67, 154, 153, 3870, 2331,
	1043, 4163, 152, 151, 4164, 150, 149, 1318, 4165, 4166,
	1161, 148, 66, 22, 1744, 2, 4171, 1, 0, 4198,
	3890, 0, 0, 0, 0, 4170, 0, 0, 4200, 1043,
	1043, 0, 1043, 1318, 4181, 4185, 0, 4053, 4160, 2074,
	1163, 4208, 4211, 0, 0, 0, 0, 0, 0, 0,
	1888, 0, 1885, 4223, 4220, 0, 4230, 0, 1160, 4227,
	0, 0, 0, 1159, 4180, 0, 4213, 2245, 2467, 0,
	0, 0, 4239, 0, 4244, 0, 0, 4243, 1043, 1043,
	1043, 0, 0, 0, 0, 0, 0, 4242, 0, 4234,
	4237, 0, 1163, 4238, 4217, 1163, 634, 0, 0, 0,
	0, 1339, 0, 4212, 4272, 1043, 4216, 0, 0, 4258,
	1160, 0, 4259, 1160, 4277, 1159, 0, 243, 1159, 243,
	4256, 4257, 0, 243, 0, 0, 1879, 0, 0, 0,
	0, 0, 4297, 1161, 1318, 0, 1367, 1330, 243, 0,
	243, 4275, 4299, 0, 0, 243, 1367, 650, 0, 4308,
	243, 1367, 0, 1043, 4310, 4301, 0, 683, 4298, 0,
	0, 0, 4304, 4309, 0, 4314, 0, 4303, 0, 0,
	0, 1879, 0, 0, 0, 4306, 4307, 0, 0, 0,
	0, 4311, 4330, 1888, 4333, 0, 0, 4326, 4324, 4322,
	4320, 4321, 1318, 0, 4208, 0, 4332, 4211, 4334, 0,
	0, 1165, 0, 1165, 4336, 4343, 2463, 4340, 4351, 0,
	4355, 4227, 4348, 4347, 0, 0, 4356, 0, 0, 4349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 4173, 0, 0, 0, 4370, 0, 0, 0, 0,
	4368, 4350, 0, 4352, 1161, 1161, 0, 0, 3540, 0,
	3540, 0, 0, 4379, 0, 0, 4377, 0, 4383, 0,
	4382, 4376, 1043, 1043, 0, 0, 0, 4199, 0, 0,
	1043, 0, 1043, 1043, 4386, 0, 4392, 0, 0, 4400,
	0, 4395, 0, 0, 4402, 4404, 696, 4401, 4406, 0,
	0, 0, 4405, 0, 0, 0, 0, 0, 0, 2769,
	4403, 0, 0, 0, 4409, 4410, 0, 0, 0, 4416,
	4413, 0, 4412, 0, 4414, 4421, 4415, 0, 4420, 0,
	4419, 4411, 4423, 1043, 243, 0, 4424, 243, 4426, 0,
	4430, 0, 0, 1161, 4427, 0, 4429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4393, 4394, 0, 0,
	0, 1163, 0, 1163, 0, 0, 1232, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 1160, 0, 0, 1159, 0, 1159, 0, 0, 243,
	0, 0, 0, 243, 0, 1161, 0, 0, 1161, 0,
	243, 4138, 0, 0, 0, 3785, 243, 4425, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 3590, 0,
	0, 243, 4154, 243, 0, 0, 0, 634, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 3781, 0,
	0, 0, 3774, 2104, 0, 0, 0, 0, 0, 0,
	4342, 0, 0, 0, 0, 243, 3990, 3991, 0, 3772,
	0, 0, 243, 0, 0, 0, 0, 0, 3776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	4005, 0, 0, 4007, 4008, 0, 0, 0, 0, 0,
	3782, 709, 683, 0, 1342, 69, 822, 0, 1879, 0,
	0, 0, 3658, 3659, 3660, 2917, 2918, 0, 0, 0,
	0, 73, 0, 0, 0, 703, 0, 2467, 1501, 0,
	0, 243, 0, 1330, 243, 0, 0, 0, 0, 0,
	3775, 0, 0, 4231, 0, 0, 4232, 0, 683, 0,
	0, 1342, 1879, 1879, 0, 243, 0, 0, 1888, 0,
	0, 80, 0, 0, 0, 0, 243, 243, 0, 243,
	0, 243, 0, 243, 0, 243, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 86, 2207,
	0, 2208, 0, 0, 0, 1879, 1879, 2467, 2467, 0,
	0, 0, 101, 243, 0, 0, 0, 87, 98, 0,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 665, 0, 1879, 0, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 698, 0, 0, 0, 0, 3036,
	3037, 3038, 0, 68, 1161, 2878, 1161, 0, 0, 0,
	4133, 0, 88, 0, 2692, 0, 0, 0, 0, 69,
	0, 0, 0, 702, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 3777, 0, 73, 0, 0, 3778, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 2682, 0,
	0, 0, 708, 0, 2686, 2688, 2678, 0, 0, 1318,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 700, 0, 0, 1318, 80, 0, 3013, 3014, 0,
	3031, 3032, 3033, 0, 0, 2463, 2463, 0, 0, 3780,
	0, 2467, 2467, 2467, 0, 1318, 0, 1888, 1342, 1342,
	0, 0, 0, 3783, 0, 0, 0, 0, 0, 0,
	1006, 0, 86, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 101, 0, 0, 0,
	0, 87, 98, 0, 0, 634, 0, 0, 0, 0,
	704, 0, 0, 1501, 0, 0, 0, 0, 0, 1339,
	243, 3028, 0, 91, 710, 0, 1342, 0, 0, 634,
	0, 0, 0, 0, 0, 699, 243, 0, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 1879, 0, 0, 1857, 88, 0, 0, 0,
	1339, 0, 1339, 0, 0, 243, 1367, 0, 1318, 174,
	94, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3907, 0, 3909, 0, 0, 4287, 3779,
	0, 0, 0, 0, 0, 2680, 213, 0, 0, 2463,
	2463, 2463, 0, 0, 817, 0, 2694, 0, 1958, 139,
	0, 3019, 243, 1367, 0, 650, 243, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 3786, 2693, 2685, 2683,
	2687, 2689, 2679, 2681, 2695, 0, 0, 0, 0, 215,
	0, 2691, 0, 0, 0, 0, 0, 0, 0, 3035,
	0, 0, 0, 0, 3013, 3014, 0, 3031, 3032, 3033,
	2602, 0, 0, 0, 141, 0, 0, 3954, 0, 243,
	0, 3034, 0, 0, 2698, 0, 3701, 0, 0, 178,
	0, 243, 0, 0, 0, 1879, 0, 214, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 91, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 243, 3029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 3028, 177,
	0, 0, 0, 0, 0, 0, 243, 2709, 0, 0,
	0, 0, 0, 174, 94, 0, 97, 0, 4015, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 1367, 0, 0, 243, 0, 1318, 0, 0, 1318,
	213, 0, 243, 0, 0, 0, 0, 0, 817, 0,
	0, 2752, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 2602, 0, 634, 0, 0, 0, 2773, 0, 0,
	0, 0, 0, 243, 0, 0, 243, 0, 3378, 3379,
	243, 0, 243, 215, 0, 0, 0, 1330, 3019, 243,
	243, 0, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 2798, 822, 0, 2602, 2602, 2699, 0, 141, 0,
	1318, 0, 0, 0, 0, 2690, 0, 0, 0, 243,
	3030, 0, 0, 178, 0, 0, 0, 1318, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 243, 1330,
	243, 0, 207, 1367, 0, 1367, 1367, 243, 3034, 0,
	1330, 208, 1330, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2467, 2467, 0, 1514, 0, 992, 0, 0, 0, 0,
	243, 243, 243, 243, 1330, 243, 0, 243, 0, 3029,
	3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450,
	3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 0,
	3463, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 1501, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 3025, 3026, 3027, 0,
	1672, 1673, 1501, 3024, 3022, 3023, 3015, 3016, 3017, 3018,
	3020, 3021, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 0, 0,
	1675, 1318, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467,
	2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467,
	2467, 0, 2467, 0, 0, 0, 0, 0, 2463, 2463,
	1879, 0, 0, 0, 1674, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 3030, 0, 0,
	0, 0, 2264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 1339,
	0, 0, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 2369,
	2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
	2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 0,
	2463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3025, 3026, 3027, 243, 0, 1702, 1704,
	3024, 3022, 3023, 3015, 3016, 3017, 3018, 3020, 3021, 0,
	0, 243, 0, 0, 0, 0, 634, 0, 0, 1339,
	0, 634, 0, 0, 634, 0, 0, 634, 634, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 1367, 2536, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 1318, 0, 0,
	0, 0, 0, 0, 68, 1367, 44, 43, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	69, 0, 0, 142, 0, 0, 0, 2602, 2602, 243,
	0, 1345, 0, 0, 2602, 0, 73, 3154, 0, 0,
	0, 0, 0, 0, 0, 2602, 3154, 63, 2602, 3154,
	3154, 0, 0, 0, 46, 0, 144, 0, 0, 0,
	0, 0, 0, 243, 243, 1345, 243, 0, 0, 0,
	0, 0, 0, 0, 45, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 1345, 243, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 64, 2602, 1701, 3217, 2602, 1345, 0, 49, 2602,
	2602, 1345, 0, 86, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 1696, 0, 47, 0, 101, 0, 0,
	0, 0, 87, 98, 0, 0, 0, 0, 0, 1318,
	243, 1318, 0, 0, 0, 992, 0, 0, 0, 992,
	0, 0, 0, 0, 243, 3244, 0, 0, 3246, 2602,
	0, 0, 243, 0, 0, 1318, 243, 0, 1421, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	2752, 0, 0, 1330, 0, 243, 0, 1369, 2602, 1375,
	634, 1381, 0, 0, 0, 0, 0, 2602, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 1318, 0, 243,
	243, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 2752, 0, 0, 2752,
	0, 0, 0, 0, 0, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 3356, 1525, 0, 1330, 243, 0,
	243, 1342, 0, 0, 0, 1534, 0, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 91, 0,
	0, 0, 0, 243, 1318, 0, 3013, 3014, 0, 3031,
	3032, 3033, 0, 69, 0, 51, 0, 0, 0, 0,
	2074, 0, 3013, 3014, 0, 3031, 3032, 3033, 3700, 73,
	0, 0, 55, 0, 1318, 0, 0, 0, 65, 1598,
	0, 0, 1604, 54, 174, 94, 0, 97, 0, 0,
	3935, 52, 0, 0, 0, 146, 0, 0, 0, 3419,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 80,
	0, 213, 0, 0, 0, 1318, 0, 1672, 1673, 58,
	3028, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 1318, 0, 0, 0, 0, 3028, 3967, 143, 0,
	1703, 0, 0, 0, 0, 0, 86, 1675, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 87, 98, 0, 0, 0,
	0, 1006, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 141,
	0, 1674, 2467, 0, 0, 0, 0, 1318, 0, 0,
	0, 1694, 0, 0, 178, 0, 0, 0, 0, 0,
	1691, 0, 214, 1743, 0, 0, 0, 0, 0, 1756,
	3019, 0, 0, 207, 0, 0, 0, 0, 243, 243,
	88, 0, 208, 0, 0, 0, 3019, 0, 0, 2467,
	0, 0, 0, 0, 0, 0, 1318, 0, 0, 0,
	634, 634, 0, 0, 177, 0, 0, 3, 0, 0,
	0, 3699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 1367, 0, 0, 0, 0, 0, 0,
	3034, 1697, 1698, 1699, 1700, 0, 1367, 1367, 1367, 0,
	0, 1680, 0, 0, 0, 0, 3034, 0, 0, 1672,
	1673, 4093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3542, 0, 0, 0, 0, 0, 0,
	0, 3029, 1703, 0, 1814, 1814, 1814, 0, 0, 1675,
	2463, 0, 0, 0, 0, 1702, 1704, 3029, 3066, 0,
	0, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 1674, 0, 0, 0, 0, 0, 0,
	3092, 91, 243, 1694, 0, 0, 0, 2463, 0, 0,
	2074, 0, 1691, 0, 0, 3105, 0, 0, 0, 0,
	1345, 243, 1695, 2467, 1342, 0, 0, 1006, 1006, 0,
	0, 992, 243, 1039, 0, 0, 3123, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 174, 94, 0,
	97, 243, 0, 0, 0, 0, 243, 0, 0, 0,
	243, 0, 0, 3381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 242, 242, 242,
	2602, 243, 817, 1697, 1698, 1699, 1700, 139, 0, 3030,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	2798, 2798, 0, 723, 0, 3030, 822, 822, 2602, 0,
	0, 2752, 2752, 0, 0, 822, 2602, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 723, 0,
	0, 0, 0, 0, 0, 243, 0, 1702, 1704, 0,
	1701, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1696, 2463, 1689, 1690, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 3105, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3719, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 3025, 3026, 3027, 0, 0,
	0, 0, 3024, 3022, 3023, 3015, 3016, 3017, 3018, 3020,
	3021, 3025, 3026, 3027, 0, 0, 0, 0, 3024, 3022,
	3023, 3015, 3016, 3017, 3018, 3020, 3021, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 1367, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 2602, 2602, 2602, 0,
	0, 0, 0, 0, 0, 0, 0, 3792, 0, 3792,
	3542, 1367, 1696, 0, 0, 0, 0, 1333, 0, 2602,
	1232, 3154, 0, 0, 1367, 1367, 243, 1345, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 1345, 243,
	1345, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2602, 0, 2602, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2602,
	0, 0, 0, 0, 3862, 0, 0, 0, 0, 0,
	0, 3398, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 3414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 3542, 0, 0, 1367, 0, 0, 0,
	0, 0, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677,
	1678, 1679, 1681, 1682, 0, 0, 0, 2239, 0, 2243,
	0, 0, 0, 0, 0, 0, 2257, 0, 0, 0,
	0, 0, 0, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 0, 2306,
	0, 2308, 2309, 2310, 2311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2335, 0, 0, 0, 2602, 0, 3154,
	0, 0, 3961, 0, 1743, 0, 0, 0, 2350, 0,
	243, 0, 0, 0, 0, 0, 3542, 0, 0, 0,
	0, 0, 3505, 0, 2380, 2383, 2386, 2389, 0, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 0, 0, 0, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 2470,
	2472, 2477, 0, 1345, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3961, 0, 0, 0, 0, 0, 0,
	0, 2602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3542, 3542, 0,
	0, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717,
	0, 0, 0, 0, 243, 243, 0, 0, 0, 0,
	0, 0, 0, 1708, 1703, 0, 0, 0, 0, 0,
	0, 1675, 0, 1075, 0, 0, 0, 0, 3419, 1721,
	0, 242, 0, 242, 242, 0, 0, 242, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3961,
	0, 0, 0, 723, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 3792,
	0, 0, 0, 0, 1691, 0, 3542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	242, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3542, 0,
	243, 3542, 0, 0, 242, 0, 242, 242, 0, 0,
	242, 3154, 0, 0, 0, 1697, 1698, 1699, 1700, 0,
	0, 0, 0, 242, 242, 1680, 0, 0, 0, 0,
	0, 2712, 2713, 0, 2715, 0, 0, 1367, 0, 1367,
	0, 0, 3013, 3014, 0, 3031, 3032, 3033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 1722, 3387, 0, 0, 0, 4194, 1702,
	1704, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 1718, 0, 1719, 0, 0,
	0, 0, 0, 0, 1689, 1690, 0, 243, 2602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 1710, 0, 0, 243, 3028, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	3419, 0, 3754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3764, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2852, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3961, 0, 0,
	0, 0, 0, 0, 0, 3013, 3014, 0, 3031, 3032,
	3033, 0, 0, 1725, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 3386, 1367, 0,
	2602, 0, 0, 0, 0, 0, 0, 3542, 0, 3542,
	0, 0, 0, 0, 1696, 0, 3034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2900, 2901,
	1713, 0, 0, 0, 2907, 0, 0, 0, 0, 3028,
	0, 0, 0, 0, 0, 0, 0, 3029, 0, 0,
	0, 0, 0, 2921, 2922, 0, 0, 0, 0, 2350,
	0, 0, 0, 0, 0, 0, 0, 1155, 2929, 0,
	2798, 0, 0, 0, 0, 1232, 0, 0, 2602, 0,
	0, 0, 0, 0, 2943, 0, 0, 0, 0, 0,
	0, 0, 0, 2798, 1836, 0, 1162, 0, 0, 0,
	242, 2955, 0, 0, 0, 3927, 0, 0, 0, 0,
	0, 238, 238, 630, 0, 242, 1836, 242, 0, 0,
	0, 0, 723, 0, 0, 1711, 0, 723, 0, 3019,
	1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684,
	1676, 1677, 1678, 1679, 1681, 1682, 3927, 0, 0, 0,
	3727, 0, 0, 0, 3726, 0, 0, 0, 0, 0,
	0, 0, 2264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1672, 1673, 0, 1705, 1706, 1707, 1715,
	1716, 1717, 0, 0, 0, 3030, 0, 0, 0, 3034,
	0, 0, 0, 0, 0, 1708, 1703, 0, 0, 0,
	2477, 2477, 2477, 1675, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 1814, 0, 0, 2264, 0,
	0, 0, 0, 3070, 0, 0, 0, 0, 0, 0,
	3029, 0, 0, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 242, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 3025, 3026, 3027, 992, 0, 0, 0, 3024, 3022,
	3023, 3015, 3016, 3017, 3018, 3020, 3021, 1697, 1698, 1699,
	1700, 0, 1166, 0, 0, 0, 1166, 1680, 0, 0,
	1166, 0, 3171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 242, 3030, 0,
	0, 0, 1712, 242, 1166, 1722, 0, 0, 0, 0,
	0, 1702, 1704, 0, 0, 0, 0, 0, 242, 0,
	242, 0, 0, 0, 0, 0, 242, 1718, 1166, 1719,
	0, 0, 0, 0, 0, 0, 1689, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 1710, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 242, 0, 0, 3025, 3026, 3027, 0, 1709, 0,
	0, 3024, 3022, 3023, 3015, 3016, 3017, 3018, 3020, 3021,
	0, 0, 242, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 723, 242, 0, 242, 0, 242, 0,
	242, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1672, 1673, 0, 1705, 1706, 1707,
	1715, 1716, 1717, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 0,
	242, 0, 0, 0, 1675, 0, 1696, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 2257,
	0, 0, 0, 0, 0, 3373, 3374, 1691, 0, 3377,
	0, 0, 0, 3380, 0, 0, 0, 0, 0, 0,
	0, 0, 3384, 0, 0, 0, 0, 0, 0, 0,
	0, 3391, 0, 0, 3070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3426,
	3427, 0, 3428, 3429, 3430, 0, 0, 1711, 1697, 1698,
	1699, 1700, 1686, 1687, 1693, 1714, 1692, 1688, 1680, 1685,
	1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0,
	0, 0, 2964, 0, 0, 0, 2965, 0, 0, 0,
	0, 0, 0, 0, 3436, 0, 0, 0, 3438, 0,
	0, 0, 0, 1712, 0, 0, 1722, 0, 0, 0,
	0, 0, 1702, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1162, 0, 3466,
	3467, 1337, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 0, 0, 1162, 1166, 0, 1166, 3478, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 242, 1672, 1673,
	0, 1166, 3487, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 242, 0, 0, 0, 1892, 0, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 1675, 0,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 242,
	0, 0, 1674, 242, 0, 0, 3528, 0, 1477, 0,
	1477, 1477, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 1691, 3537, 0, 0, 0, 0, 1518, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3563, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 242, 0,
	0, 0, 3376, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 0, 1697, 1698, 1699, 1700, 0, 0, 242, 0,
	0, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 1702, 1704, 0, 0,
	0, 242, 0, 1814, 0, 0, 0, 0, 0, 242,
	0, 0, 3651, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 242, 0, 0, 0, 242, 0, 242,
	0, 0, 0, 1695, 0, 0, 242, 242, 1711, 0,
	0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0,
	1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 1672,
	1673, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 3697, 3698, 0, 0, 0, 0, 3702, 3703,
	0, 0, 1703, 3706, 3707, 242, 0, 242, 0, 1675,
	3711, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 3715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 3720, 1166, 0,
	1166, 0, 0, 1674, 0, 0, 0, 242, 242, 242,
	242, 0, 242, 1694, 242, 0, 1166, 1166, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 1166, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 1166, 1166, 1166, 0, 242, 1672, 1673, 0, 0,
	0, 1696, 0, 242, 0, 0, 0, 0, 2438, 2439,
	2440, 2441, 2434, 2435, 2436, 2437, 0, 0, 0, 1703,
	0, 0, 0, 3375, 1852, 0, 1675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 1337, 0, 1697, 1698, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 3793, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 2414, 2415, 2416,
	2417, 0, 0, 0, 0, 0, 0, 1702, 1704, 0,
	0, 0, 0, 0, 0, 0, 1892, 1892, 1166, 2426,
	2427, 2428, 2429, 2422, 2423, 2424, 2425, 2430, 2431, 2432,
	2433, 0, 1689, 1690, 0, 0, 0, 0, 0, 0,
	2906, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678,
	1679, 1681, 1682, 0, 0, 0, 0, 0, 0, 0,
	1697, 1698, 1699, 1700, 1695, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2410, 2411, 2412, 2413, 2418, 2419, 2420, 2421,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 1704, 0, 0, 0, 0,
	0, 1672, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3922, 3923, 3924, 1689,
	1690, 0, 0, 1162, 1703, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 0, 0, 0, 1162, 2257,
	0, 0, 3933, 3934, 0, 0, 0, 1166, 0, 0,
	0, 1695, 0, 0, 1166, 0, 0, 0, 0, 0,
	3942, 3945, 1701, 1166, 0, 1674, 0, 0, 1836, 0,
	2061, 0, 0, 0, 2068, 1694, 0, 0, 0, 0,
	1166, 0, 1696, 0, 1691, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 2091, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 0, 0, 3987, 0,
	0, 0, 0, 1672, 1673, 0, 242, 0, 3994, 0,
	0, 992, 0, 0, 0, 2899, 1477, 0, 0, 0,
	4002, 0, 0, 1337, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 1675, 0, 1697, 1698, 1699, 1700, 0,
	242, 242, 0, 242, 0, 1680, 0, 0, 0, 1701,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 242, 0, 0, 1674, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 2068, 0, 0, 2150, 1691, 0, 0, 1702,
	1704, 1892, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677,
	1678, 1679, 1681, 1682, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 0, 1689, 1690, 0, 242, 2182, 1166,
	2184, 0, 2186, 0, 2188, 0, 2189, 0, 0, 0,
	0, 723, 0, 1166, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 1698, 1699,
	1700, 0, 0, 4109, 2211, 0, 4112, 1680, 0, 0,
	0, 0, 1162, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 242, 242, 0, 1692,
	1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681,
	1682, 1702, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 992, 992, 0,
	1166, 1166, 0, 1166, 0, 0, 1689, 1690, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 0, 0, 1701, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 242, 0, 242, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 2257, 0, 0,
	0, 0, 0, 0, 0, 0, 3945, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1703, 0, 0, 0, 0, 0, 992, 1675, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 4255, 4255, 4255, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 2533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4276, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 1692, 1688, 0, 1685, 1683, 1684,
	1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4255,
	0, 1697, 1698, 1699, 1700, 0, 0, 2080, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 1692, 1688, 0, 1685,
	1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 1710, 0,
	0, 0, 1337, 0, 0, 0, 0, 0, 4255, 4387,
	0, 0, 1695, 0, 0, 0, 4391, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 2068, 0, 0, 1166, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1166, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 1166, 0, 0, 2775, 0, 0, 1477, 242, 0,
	0, 1477, 0, 1477, 0, 0, 0, 0, 1892, 242,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 242,
	0, 1052, 0, 0, 0, 0, 0, 0, 242, 0,
	1701, 0, 0, 242, 0, 0, 0, 242, 0, 0,
	2827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 1892, 0, 0, 0, 0, 1162, 2837,
	0, 2840, 0, 0, 0, 244, 244, 244, 0, 0,
	1166, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 1337, 2866, 1337, 1166, 2869, 0, 0, 0,
	0, 0, 242, 0, 0, 1166, 244, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 0, 0, 0, 2897, 0, 0,
	1028, 103, 1166, 0, 0, 0, 0, 0, 1166, 0,
	1166, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 1166, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 1166, 0, 0, 0,
	3389, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 1166, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 745, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 1166, 0, 0, 1166, 967, 769, 0,
	0, 0, 0, 242, 748, 0, 0, 0, 987, 0,
	0, 0, 0, 0, 0, 0, 242, 767, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	742, 0, 0, 0, 0, 0, 1149, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	749, 0, 0, 750, 0, 0, 0, 1166, 0, 0,
	242, 0, 0, 0, 771, 0, 0, 0, 709, 242,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1892, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 1892, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	3145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3186, 3188, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 1166, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 753, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 708,
	1166, 0, 0, 3257, 0, 0, 0, 3261, 0, 0,
	740, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1836, 1477, 0, 0, 756,
	1337, 1337, 774, 0, 773, 0, 0, 0, 757, 0,
	0, 242, 242, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 3322, 766, 0, 0,
	0, 0, 0, 775, 1892, 772, 0, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 244,
	1238, 244, 244, 0, 1238, 244, 244, 0, 1238, 0,
	0, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 1166, 3359,
	0, 1337, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 1166,
	1166, 1166, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3371, 1166, 1238, 0, 244, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 1836, 0, 242, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 244, 0, 244, 244, 1166, 0, 244, 0,
	1238, 0, 0, 0, 0, 0, 1238, 1892, 0, 0,
	1238, 244, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 103, 0, 103, 242, 0, 0,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 244, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 1166, 0, 1166, 0,
	0, 0, 0, 244, 0, 1166, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 987, 103, 103, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 103, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 103, 0, 0, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	1044, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	1166, 1166, 0, 0, 1836, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	1166, 1166, 1166, 2080, 0, 0, 0, 0, 0, 0,
	967, 1166, 0, 3618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	1737, 3633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 1742, 244, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 1892, 244, 244, 244, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 1166, 0, 1166, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 3682, 0, 0, 0,
	0, 0, 1238, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 1166, 0, 886, 0,
	0, 1834, 0, 1837, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 900, 884, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 885, 0, 0, 0, 0, 888, 0,
	0, 0, 0, 929, 1166, 1166, 0, 0, 0, 0,
	0, 0, 897, 898, 0, 0, 0, 0, 0, 0,
	0, 914, 0, 0, 0, 0, 0, 0, 0, 244,
	1238, 1238, 244, 0, 0, 0, 0, 922, 890, 0,
	1238, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 244, 0,
	0, 0, 0, 1166, 0, 244, 0, 3809, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 893, 244, 0, 244, 0,
	0, 0, 0, 882, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 894, 895, 0, 0, 1166, 0, 0, 1166, 0,
	244, 0, 1166, 0, 0, 0, 0, 244, 0, 902,
	901, 0, 1166, 1166, 2080, 0, 0, 896, 0, 0,
	1235, 911, 0, 3878, 1235, 0, 0, 0, 1355, 1166,
	0, 0, 0, 0, 1238, 0, 1238, 0, 1238, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 1238, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 1238, 244, 0, 0, 244,
	923, 0, 0, 0, 0, 0, 0, 1238, 0, 1238,
	1238, 1238, 0, 0, 0, 0, 1355, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 244, 0, 244, 0, 244, 0, 244, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 928, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	1355, 0, 0, 0, 0, 887, 0, 0, 244, 918,
	919, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 987, 0, 987, 0, 0, 0, 0,
	0, 3968, 0, 0, 0, 0, 0, 1672, 1673, 916,
	1705, 1706, 1707, 1715, 1716, 1717, 927, 912, 0, 905,
	903, 0, 908, 0, 0, 0, 1238, 0, 909, 1708,
	1703, 880, 0, 924, 0, 0, 1355, 1675, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 2080, 0, 0, 0, 1236,
	0, 0, 0, 1236, 0, 910, 0, 1356, 0, 0,
	907, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	925, 1694, 0, 0, 1166, 0, 1166, 0, 913, 0,
	1691, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 915, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 4083, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 967, 0, 0, 967, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 0, 0, 1356,
	0, 1680, 0, 0, 0, 1356, 0, 0, 0, 1356,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2324, 0, 244, 1712, 0, 1238, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 987,
	244, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 1718, 1742, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 4156, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 244, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1149, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 1235,
	1837, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	715, 0, 1709, 0, 0, 715, 244, 0, 0, 0,
	0, 4202, 0, 0, 0, 0, 0, 0, 1355, 244,
	0, 0, 0, 103, 0, 0, 0, 0, 4224, 0,
	0, 0, 0, 0, 0, 0, 244, 1238, 0, 0,
	0, 0, 1235, 0, 0, 0, 4236, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 1238, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 244, 0,
	0, 244, 0, 0, 0, 244, 0, 244, 0, 0,
	0, 0, 0, 0, 244, 244, 0, 0, 1238, 1238,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 1238, 0,
	1355, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 244, 103, 244, 0, 103, 1236, 103,
	0, 1711, 244, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 2346, 1356, 0, 0,
	2347, 0, 0, 0, 0, 244, 244, 244, 244, 0,
	244, 103, 244, 0, 103, 0, 0, 0, 0, 0,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 103,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 1355, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 1355, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 1355,
	1355, 1355, 0, 0, 0, 0, 0, 0, 0, 1356,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 1356, 1238, 1356, 0, 1356, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 1238,
	0, 0, 1675, 1356, 1356, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	1238, 0, 0, 1235, 0, 0, 1356, 0, 1356, 1356,
	1356, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 0, 0, 244, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 244, 244,
	0, 244, 1235, 0, 0, 1149, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 1238, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 1238, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 1238, 0, 0, 0, 1680, 1238, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 244, 1238, 0, 1238, 0,
	0, 1712, 1238, 0, 1722, 0, 0, 0, 0, 244,
	1702, 1704, 0, 0, 0, 0, 0, 244, 0, 0,
	1238, 244, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 0, 0, 0, 1238, 1689, 1690, 0, 0, 0,
	103, 103, 0, 0, 103, 0, 0, 0, 0, 1235,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 1695, 0, 0,
	244, 0, 0, 0, 244, 244, 103, 103, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 1238, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 1235, 0, 1720,
	0, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 244, 1238, 244, 0, 1236, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 987, 0, 0, 1701, 0, 0, 244, 0,
	0, 782, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 103, 103, 0, 0, 0, 1355, 1355,
	0, 1355, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 1713, 0, 1355, 784, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 785, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 788, 0,
	1356, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 789, 0,
	0, 790, 0, 0, 0, 2967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 0, 0, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1356, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1149, 1149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 811, 0, 793, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 244, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 1235, 0, 794, 0, 0, 0, 809, 810,
	807, 0, 0, 0, 0, 0, 802, 0, 0, 795,
	0, 0, 0, 0, 0, 0, 0, 1238, 1238, 1238,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 796, 803, 0,
	244, 0, 1238, 0, 0, 0, 797, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 0, 0, 0, 1238, 806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1672, 1673, 0, 1705, 1706, 1707, 1715,
	1716, 1717, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 1708, 1703, 0, 0, 0,
	0, 0, 1355, 1675, 0, 0, 103, 1355, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 0, 1238, 0, 0, 0,
	1355, 1236, 0, 0, 0, 0, 1355, 1674, 1355, 0,
	0, 0, 1235, 0, 0, 0, 0, 1694, 0, 715,
	1238, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	1355, 0, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 1238, 0, 244, 0, 244, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 1697, 1698, 1699,
	1700, 0, 1355, 1355, 0, 103, 0, 1680, 1238, 1238,
	0, 1149, 0, 0, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 0, 1355, 1238, 0, 1356, 244, 0,
	0, 0, 0, 0, 0, 0, 1238, 244, 0, 0,
	0, 1238, 1712, 0, 0, 1722, 0, 0, 0, 0,
	0, 1702, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 1356, 0, 1235, 0, 0, 1718, 0, 1719,
	0, 0, 1236, 0, 0, 0, 1689, 1690, 1238, 1238,
	1238, 1356, 0, 0, 0, 0, 1356, 0, 0, 1238,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 1356,
	0, 0, 0, 0, 0, 1356, 0, 1356, 0, 1238,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	1720, 0, 1235, 1356, 0, 0, 103, 0, 0, 0,
	1238, 0, 1238, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 103, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 1238, 1356, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 1238, 1238, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1236, 0, 1713, 1236, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0,
	0, 0, 0, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 1708, 1703, 0, 0, 0, 0, 0, 0,
	1675, 1236, 0, 0, 0, 0, 0, 1711, 1721, 0,
	0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685,
	1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0,
	0, 0, 0, 0, 1674, 0, 2966, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 244, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 1355, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 1355, 1355, 1355,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 1712,
	0, 0, 1722, 1355, 0, 0, 0, 0, 1702, 1704,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 1235, 0, 1718, 0, 1719, 0, 0, 0,
	244, 0, 0, 1689, 1690, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 103, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 1235, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 1356, 1356, 1356, 0,
	0, 0, 0, 1696, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1686,
	1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 0, 1355, 1355,
	1355, 0, 0, 2963, 0, 0, 0, 0, 0, 1235,
	0, 0, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 1236, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 1235,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 1236,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	1235, 0, 1355, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 1235, 0, 0, 0,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1355, 1236, 1697, 1698, 1699, 1700,
	1356, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 1355, 0, 0, 1356, 1356, 1356,
	0, 1712, 0, 0, 1722, 0, 0, 0, 1236, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 0, 0, 0, 0, 1689, 1690, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1236, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 1356, 1356, 0, 0, 0, 0, 0, 0,
	1355, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1236, 0, 0, 1356, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 2962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	1356, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	1239, 259, 260, 1240, 1241, 1242, 1356, 1243, 576, 1244,
	1245, 1246, 1247, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 1248, 581,
	270, 271, 272, 273, 274, 275, 1249, 1250, 0, 276,
	582, 583, 584, 1251, 277, 278, 585, 1252, 1319, 1253,
	279, 280, 281, 282, 283, 284, 285, 0, 1254, 287,
	288, 289, 286, 290, 1255, 291, 0, 292, 293, 294,
	295, 296, 297, 1256, 298, 299, 300, 1107, 301, 302,
	1257, 1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305,
	306, 0, 307, 586, 587, 1264, 311, 308, 309, 1265,
	312, 310, 1266, 313, 314, 315, 1267, 1268, 316, 317,
	318, 1269, 319, 320, 1270, 321, 322, 323, 1271, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 1272, 249, 1273, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 1274,
	341, 1275, 1276, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 1277, 352, 594, 1278,
	595, 353, 1279, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 1280, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 1281, 1109, 367,
	599, 600, 1282, 601, 1283, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 1284, 381, 383, 382, 1285, 384,
	603, 1114, 385, 386, 1115, 1286, 387, 0, 0, 0,
	388, 389, 1287, 1288, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1289, 251,
	1118, 430, 431, 1290, 604, 432, 605, 434, 435, 1291,
	0, 436, 0, 1292, 1293, 438, 439, 440, 1294, 1295,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 1296, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 1297, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 1298, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 1299, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 1300, 509,
	510, 508, 511, 512, 513, 1301, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 1302, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 1303, 536, 537, 0,
	535, 1304, 538, 539, 540, 541, 542, 543, 331, 544,
	1305, 545, 617, 618, 619, 620, 1306, 554, 1307, 546,
	547, 548, 621, 549, 622, 1308, 550, 551, 552, 553,
	0, 555, 556, 1309, 1310, 557, 558, 559, 561, 562,
	560, 563, 1311, 564, 1312, 0, 565, 566, 567, 623,
	624, 625, 1313, 569, 568, 570, 626, 1314, 1315, 1316,
	1317, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 2511,
	0, 0, 0, 0, 0, 0, 0, 2512, 252, 254,
	253, 255, 256, 257, 258, 1239, 259, 260, 1240, 1241,
	1242, 0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 1248, 581, 270, 271, 272, 273, 274,
	275, 1249, 1250, 0, 276, 582, 583, 584, 1251, 277,
	278, 585, 1252, 1319, 1253, 279, 280, 281, 282, 283,
	284, 285, 0, 1254, 287, 288, 289, 286, 290, 1255,
	291, 0, 292, 293, 294, 295, 296, 297, 1256, 298,
	299, 300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261,
	1262, 1263, 303, 304, 305, 306, 0, 307, 586, 587,
	1264, 311, 308, 309, 1265, 312, 310, 1266, 313, 314,
	315, 1267, 1268, 316, 317, 318, 1269, 319, 320, 1270,
	321, 322, 323, 1271, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 1272,
	249, 1273, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 1274, 341, 1275, 1276, 1108, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 1277, 352, 594, 1278, 595, 353, 1279, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 1110, 359, 360,
	1280, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 1281, 1109, 367, 599, 600, 1282, 601, 1283,
	369, 370, 1111, 602, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 1284,
	381, 383, 382, 1285, 384, 603, 1114, 385, 386, 1115,
	1286, 387, 0, 0, 0, 388, 389, 1287, 1288, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1289, 251, 1118, 430, 431, 1290, 604,
	432, 605, 434, 435, 1291, 0, 436, 0, 1292, 1293,
	438, 439, 440, 1294, 1295, 441, 442, 606, 1119, 443,
	1120, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 1296, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 1297,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 1298, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	1299, 486, 487, 488, 1121, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 1300, 509, 510, 508, 511, 512, 513,
	1301, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 1302, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 1303, 536, 537, 0, 535, 1304, 538, 539, 540,
	541, 542, 543, 331, 544, 1305, 545, 617, 618, 619,
	620, 1306, 554, 1307, 546, 547, 548, 621, 549, 622,
	1308, 550, 551, 552, 553, 0, 555, 556, 1309, 1310,
	557, 558, 559, 561, 562, 560, 563, 1311, 564, 1312,
	0, 565, 566, 567, 623, 624, 625, 1313, 569, 568,
	570, 626, 1314, 1315, 1316, 1317, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 3397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3399, 252, 254, 253, 255, 256, 257, 258, 1239, 259,
	260, 1240, 1241, 1242, 0, 1243, 576, 1244, 1245, 1246,
	1247, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 1248, 581, 270, 271,
	272, 273, 274, 275, 1249, 1250, 0, 276, 582, 583,
	584, 1251, 277, 278, 585, 1252, 1319, 1253, 279, 280,
	281, 282, 283, 284, 285, 0, 1254, 287, 288, 289,
	286, 290, 1255, 291, 0, 292, 293, 294, 295, 296,
	297, 1256, 298, 299, 300, 1107, 301, 302, 1257, 1258,
	1260, 1259, 1261, 1262, 1263, 303, 304, 305, 306, 0,
	307, 586, 587, 1264, 311, 308, 309, 1265, 312, 310,
	1266, 313, 314, 315, 1267, 1268, 316, 317, 318, 1269,
	319, 320, 1270, 321, 322, 323, 1271, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 1272, 249, 1273, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 1274, 341, 1275,
	1276, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 1277, 352, 594, 1278, 595, 353,
	1279, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 1280, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 1281, 1109, 367, 599, 600,
	1282, 601, 1283, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 1284, 381, 383, 382, 1285, 384, 603, 1114,
	385, 386, 1115, 1286, 387, 0, 0, 0, 388, 389,
	1287, 1288, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 1289, 251, 1118, 430,
	431, 1290, 604, 432, 605, 434, 435, 1291, 0, 436,
	0, 1292, 1293, 438, 439, 440, 1294, 1295, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 1296, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 1297, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 1298, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 1299, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 1300, 509, 510, 508,
	511, 512, 513, 1301, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	1302, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 1303, 536, 537, 0, 535, 1304,
	538, 539, 540, 541, 542, 543, 331, 544, 1305, 545,
	617, 618, 619, 620, 1306, 554, 1307, 546, 547, 548,
	621, 549, 622, 1308, 550, 551, 552, 553, 0, 555,
	556, 1309, 1310, 557, 558, 559, 561, 562, 560, 563,
	1311, 564, 1312, 0, 565, 566, 567, 623, 624, 625,
	1313, 569, 568, 570, 626, 1314, 1315, 1316, 1317, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3753, 252, 254,
	253, 255, 256, 257, 258, 1239, 259, 260, 1240, 1241,
	1242, 0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 1248, 581, 270, 271, 272, 273, 274,
	275, 1249, 1250, 0, 276, 582, 583, 584, 1251, 277,
	278, 585, 1252, 1319, 1253, 279, 280, 281, 282, 283,
	284, 285, 0, 1254, 287, 288, 289, 286, 290, 1255,
	291, 0, 292, 293, 294, 295, 296, 297, 1256, 298,
	299, 300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261,
	1262, 1263, 303, 304, 305, 306, 0, 307, 586, 587,
	1264, 311, 308, 309, 1265, 312, 310, 1266, 313, 314,
	315, 1267, 1268, 316, 317, 318, 1269, 319, 320, 1270,
	321, 322, 323, 1271, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 1272,
	249, 1273, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 1274, 341, 1275, 1276, 1108, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 1277, 352, 594, 1278, 595, 353, 1279, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 1110, 359, 360,
	1280, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 1281, 1109, 367, 599, 600, 1282, 601, 1283,
	369, 370, 1111, 602, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 1284,
	381, 383, 382, 1285, 384, 603, 1114, 385, 386, 1115,
	1286, 387, 0, 0, 0, 388, 389, 1287, 1288, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1289, 251, 1118, 430, 431, 1290, 604,
	432, 605, 434, 435, 1291, 0, 436, 0, 1292, 1293,
	438, 439, 440, 1294, 1295, 441, 442, 606, 1119, 443,
	1120, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 1296, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 1297,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 1298, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	1299, 486, 487, 488, 1121, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 1300, 509, 510, 508, 511, 512, 513,
	1301, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 1302, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 1303, 536, 537, 0, 535, 1304, 538, 539, 540,
	541, 542, 543, 331, 544, 1305, 545, 617, 618, 619,
	620, 1306, 554, 1307, 546, 547, 548, 621, 549, 622,
	1308, 550, 551, 552, 553, 0, 555, 556, 1309, 1310,
	557, 558, 559, 561, 562, 560, 563, 1311, 564, 1312,
	0, 565, 566, 567, 623, 624, 625, 1313, 569, 568,
	570, 626, 1314, 1315, 1316, 1317, 571, 572, 627, 573,
	574, 575, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3928,
	252, 254, 253, 255, 256, 257, 258, 1239, 259, 260,
	1240, 1241, 1242, 0, 1243, 576, 1244, 1245, 1246, 1247,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 1248, 581, 270, 271, 272,
	273, 274, 275, 1249, 1250, 0, 276, 582, 583, 584,
	1251, 277, 278, 585, 1252, 1319, 1253, 279, 280, 281,
	282, 283, 284, 285, 0, 1254, 287, 288, 289, 286,
	290, 1255, 291, 0, 292, 293, 294, 295, 296, 297,
	1256, 298, 299, 300, 1107, 301, 302, 1257, 1258, 1260,
	1259, 1261, 1262, 1263, 303, 304, 305, 306, 0, 307,
	586, 587, 1264, 311, 308, 309, 1265, 312, 310, 1266,
	313, 314, 315, 1267, 1268, 316, 317, 318, 1269, 319,
	320, 1270, 321, 322, 323, 1271, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 1272, 249, 1273, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 1274, 341, 1275, 1276,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 1277, 352, 594, 1278, 595, 353, 1279,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 1280, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 1281, 1109, 367, 599, 600, 1282,
	601, 1283, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 1284, 381, 383, 382, 1285, 384, 603, 1114, 385,
	386, 1115, 1286, 387, 0, 0, 0, 388, 389, 1287,
	1288, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1289, 251, 1118, 430, 431,
	1290, 604, 432, 605, 434, 435, 1291, 0, 436, 0,
	1292, 1293, 438, 439, 440, 1294, 1295, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1296, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1297, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 1298, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 1299, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 1300, 509, 510, 508, 511,
	512, 513, 1301, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1302,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 1303, 536, 537, 0, 535, 1304, 538,
	539, 540, 541, 542, 543, 331, 544, 1305, 545, 617,
	618, 619, 620, 1306, 554, 1307, 546, 547, 548, 621,
	549, 622, 1308, 550, 551, 552, 553, 0, 555, 556,
	1309, 1310, 557, 558, 559, 561, 562, 560, 563, 1311,
	564, 1312, 0, 565, 566, 567, 623, 624, 625, 1313,
	569, 568, 570, 626, 1314, 1315, 1316, 1317, 571, 572,
	627, 573, 574, 575, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3817, 252, 254, 253, 255, 256, 257, 258, 1239,
	259, 260, 1240, 1241, 1242, 0, 1243, 576, 1244, 1245,
	1246, 1247, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 1248, 581, 270,
	271, 272, 273, 274, 275, 1249, 1250, 0, 276, 582,
	583, 584, 1251, 277, 278, 585, 1252, 1319, 1253, 279,
	280, 281, 282, 283, 284, 285, 0, 1254, 287, 288,
	289, 286, 290, 1255, 291, 0, 292, 293, 294, 295,
	296, 297, 1256, 298, 299, 300, 1107, 301, 302, 1257,
	1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305, 306,
	0, 307, 586, 587, 1264, 311, 308, 309, 1265, 312,
	310, 1266, 313, 314, 315, 1267, 1268, 316, 317, 318,
	1269, 319, 320, 1270, 321, 322, 323, 1271, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 1272, 249, 1273, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 1274, 341,
	1275, 1276, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 1277, 352, 594, 1278, 595,
	353, 1279, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 1280, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 1281, 1109, 367, 599,
	600, 1282, 601, 1283, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 1284, 381, 383, 382, 1285, 384, 603,
	1114, 385, 386, 1115, 1286, 387, 0, 0, 0, 388,
	389, 1287, 1288, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1289, 251, 1118,
	430, 431, 1290, 604, 432, 605, 434, 435, 1291, 0,
	436, 0, 1292, 1293, 438, 439, 440, 1294, 1295, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 1296, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 1297, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 1298, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 1299, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 1300, 509, 510,
	508, 511, 512, 513, 1301, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 1302, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 1303, 536, 537, 0, 535,
	1304, 538, 539, 540, 541, 542, 543, 331, 544, 1305,
	545, 617, 618, 619, 620, 1306, 554, 1307, 546, 547,
	548, 621, 549, 622, 1308, 550, 551, 552, 553, 0,
	555, 556, 1309, 1310, 557, 558, 559, 561, 562, 560,
	563, 1311, 564, 1312, 0, 565, 566, 567, 623, 624,
	625, 1313, 569, 568, 570, 626, 1314, 1315, 1316, 1317,
	571, 572, 627, 573, 574, 575, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3683, 252, 254, 253, 255, 256, 257,
	258, 1239, 259, 260, 1240, 1241, 1242, 0, 1243, 576,
	1244, 1245, 1246, 1247, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 1248,
	581, 270, 271, 272, 273, 274, 275, 1249, 1250, 0,
	276, 582, 583, 584, 1251, 277, 278, 585, 1252, 1319,
	1253, 279, 280, 281, 282, 283, 284, 285, 0, 1254,
	287, 288, 289, 286, 290, 1255, 291, 0, 292, 293,
	294, 295, 296, 297, 1256, 298, 299, 300, 1107, 301,
	302, 1257, 1258, 1260, 1259, 1261, 1262, 1263, 303, 304,
	305, 306, 0, 307, 586, 587, 1264, 311, 308, 309,
	1265, 312, 310, 1266, 313, 314, 315, 1267, 1268, 316,
	317, 318, 1269, 319, 320, 1270, 321, 322, 323, 1271,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 1272, 249, 1273, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	1274, 341, 1275, 1276, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 1277, 352, 594,
	1278, 595, 353, 1279, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 1110, 359, 360, 1280, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 1281, 1109,
	367, 599, 600, 1282, 601, 1283, 369, 370, 1111, 602,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 1284, 381, 383, 382, 1285,
	384, 603, 1114, 385, 386, 1115, 1286, 387, 0, 0,
	0, 388, 389, 1287, 1288, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1289,
	251, 1118, 430, 431, 1290, 604, 432, 605, 434, 435,
	1291, 0, 436, 0, 1292, 1293, 438, 439, 440, 1294,
	1295, 441, 442, 606, 1119, 443, 1120, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 1296,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 1297, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 1298,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 1299, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 1300,
	509, 510, 508, 511, 512, 513, 1301, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 1302, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 1303, 536, 537,
	0, 535, 1304, 538, 539, 540, 541, 542, 543, 331,
	544, 1305, 545, 617, 618, 619, 620, 1306, 554, 1307,
	546, 547, 548, 621, 549, 622, 1308, 550, 551, 552,
	553, 0, 555, 556, 1309, 1310, 557, 558, 559, 561,
	562, 560, 563, 1311, 564, 1312, 0, 565, 566, 567,
	623, 624, 625, 1313, 569, 568, 570, 626, 1314, 1315,
	1316, 1317, 571, 572, 627, 573, 574, 575, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 252, 254, 253, 255,
	256, 257, 258, 1239, 259, 260, 1240, 1241, 1242, 0,
	1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 1248, 581, 270, 271, 272, 273, 274, 275, 1249,
	1250, 0, 276, 582, 583, 584, 1251, 277, 278, 585,
	1252, 1319, 1253, 279, 280, 281, 282, 283, 284, 285,
	0, 1254, 287, 288, 289, 286, 290, 1255, 291, 0,
	292, 293, 294, 295, 296, 297, 1256, 298, 299, 300,
	1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262, 1263,
	303, 304, 305, 306, 0, 307, 586, 587, 1264, 311,
	308, 309, 1265, 312, 310, 1266, 313, 314, 315, 1267,
	1268, 316, 317, 318, 1269, 319, 320, 1270, 321, 322,
	323, 1271, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 1272, 249, 1273,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 1274, 341, 1275, 1276, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 1277,
	352, 594, 1278, 595, 353, 1279, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 1110, 359, 360, 1280, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	1281, 1109, 367, 599, 600, 1282, 601, 1283, 369, 370,
	1111, 602, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 1284, 381, 383,
	382, 1285, 384, 603, 1114, 385, 386, 1115, 1286, 387,
	0, 0, 0, 388, 389, 1287, 1288, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1289, 251, 1118, 430, 431, 1290, 604, 432, 605,
	434, 435, 1291, 0, 436, 0, 1292, 1293, 438, 439,
	440, 1294, 1295, 441, 442, 606, 1119, 443, 1120, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 1296, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 1297, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 1298, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 1299, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 1300, 509, 510, 508, 511, 512, 513, 1301, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 1302, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 1303,
	536, 537, 0, 535, 1304, 538, 539, 540, 541, 542,
	543, 331, 544, 1305, 545, 617, 618, 619, 620, 1306,
	554, 1307, 546, 547, 548, 621, 549, 622, 1308, 550,
	551, 552, 553, 0, 555, 556, 1309, 1310, 557, 558,
	559, 561, 562, 560, 563, 1311, 564, 1312, 0, 565,
	566, 567, 623, 624, 625, 1313, 569, 568, 570, 626,
	1314, 1315, 1316, 1317, 571, 572, 627, 573, 574, 575,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3242, 252, 254,
	253, 255, 256, 257, 258, 1239, 259, 260, 1240, 1241,
	1242, 0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 1248, 581, 270, 271, 272, 273, 274,
	275, 1249, 1250, 0, 276, 582, 583, 584, 1251, 277,
	278, 585, 1252, 1319, 1253, 279, 280, 281, 282, 283,
	284, 285, 0, 1254, 287, 288, 289, 286, 290, 1255,
	291, 0, 292, 293, 294, 295, 296, 297, 1256, 298,
	299, 300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261,
	1262, 1263, 303, 304, 305, 306, 0, 307, 586, 587,
	1264, 311, 308, 309, 1265, 312, 310, 1266, 313, 314,
	315, 1267, 1268, 316, 317, 318, 1269, 319, 320, 1270,
	321, 322, 323, 1271, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 1272,
	249, 1273, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 1274, 341, 1275, 1276, 1108, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 1277, 352, 594, 1278, 595, 353, 1279, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 1110, 359, 360,
	1280, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 1281, 1109, 367, 599, 600, 1282, 601, 1283,
	369, 370, 1111, 602, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 1284,
	381, 383, 382, 1285, 384, 603, 1114, 385, 386, 1115,
	1286, 387, 0, 0, 0, 388, 389, 1287, 1288, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1289, 251, 1118, 430, 431, 1290, 604,
	432, 605, 434, 435, 1291, 0, 436, 0, 1292, 1293,
	438, 439, 440, 1294, 1295, 441, 442, 606, 1119, 443,
	1120, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 1296, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 1297,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 1298, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	1299, 486, 487, 488, 1121, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 1300, 509, 510, 508, 511, 512, 513,
	1301, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 1302, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 1303, 536, 537, 0, 535, 1304, 538, 539, 540,
	541, 542, 543, 331, 544, 1305, 545, 617, 618, 619,
	620, 1306, 554, 1307, 546, 547, 548, 621, 549, 622,
	1308, 550, 551, 552, 553, 0, 555, 556, 1309, 1310,
	557, 558, 559, 561, 562, 560, 563, 1311, 564, 1312,
	0, 565, 566, 567, 623, 624, 625, 1313, 569, 568,
	570, 626, 1314, 1315, 1316, 1317, 571, 572, 627, 573,
	574, 575, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2370,
	252, 254, 253, 255, 256, 257, 258, 1239, 259, 260,
	1240, 1241, 1242, 0, 1243, 576, 1244, 1245, 1246, 1247,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 1248, 581, 270, 271, 272,
	273, 274, 275, 1249, 1250, 0, 276, 582, 583, 584,
	1251, 277, 278, 585, 1252, 1319, 1253, 279, 280, 281,
	282, 283, 284, 285, 0, 1254, 287, 288, 289, 286,
	290, 1255, 291, 0, 292, 293, 294, 295, 296, 297,
	1256, 298, 299, 300, 1107, 301, 302, 1257, 1258, 1260,
	1259, 1261, 1262, 1263, 303, 304, 305, 306, 0, 307,
	586, 587, 1264, 311, 308, 309, 1265, 312, 310, 1266,
	313, 314, 315, 1267, 1268, 316, 317, 318, 1269, 319,
	320, 1270, 321, 322, 323, 1271, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 1272, 249, 1273, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 1274, 341, 1275, 1276,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 1277, 352, 594, 1278, 595, 353, 1279,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 1280, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 1281, 1109, 367, 599, 600, 1282,
	601, 1283, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 1284, 381, 383, 382, 1285, 384, 603, 1114, 385,
	386, 1115, 1286, 387, 0, 0, 0, 388, 389, 1287,
	1288, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1289, 251, 1118, 430, 431,
	1290, 604, 432, 605, 434, 435, 1291, 0, 436, 0,
	1292, 1293, 438, 439, 440, 1294, 1295, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1296, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1297, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 1298, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 1299, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 1300, 509, 510, 508, 511,
	512, 513, 1301, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1302,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 1303, 536, 537, 0, 535, 1304, 538,
	539, 540, 541, 542, 543, 331, 544, 1305, 545, 617,
	618, 619, 620, 1306, 554, 1307, 546, 547, 548, 621,
	549, 622, 1308, 550, 551, 552, 553, 0, 555, 556,
	1309, 1310, 557, 558, 559, 561, 562, 560, 563, 1311,
	564, 1312, 0, 565, 566, 567, 623, 624, 625, 1313,
	569, 568, 570, 626, 1314, 1315, 1316, 1317, 571, 572,
	627, 573, 574, 575, 1331, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 252, 254, 253, 255, 256, 257, 258,
	1239, 259, 260, 1240, 1241, 1242, 0, 1243, 576, 1244,
	1245, 1246, 1247, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 1248, 581,
	270, 271, 272, 273, 274, 275, 1249, 1250, 0, 276,
	582, 583, 584, 1251, 277, 278, 585, 1252, 1319, 1253,
	279, 280, 281, 282, 283, 284, 285, 0, 1254, 287,
	288, 289, 286, 290, 1255, 291, 0, 292, 293, 294,
	295, 296, 297, 1256, 298, 299, 300, 1107, 301, 302,
	1257, 1258, 1260, 1259, 1261, 1262, 1263, 303, 304, 305,
	306, 0, 307, 586, 587, 1264, 311, 308, 309, 1265,
	312, 310, 1266, 313, 314, 315, 1267, 1268, 316, 317,
	318, 1269, 319, 320, 1270, 321, 322, 323, 1271, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 1272, 249, 1273, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 1274,
	341, 1275, 1276, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 1277, 352, 594, 1278,
	595, 353, 1279, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 1280, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 1281, 1109, 367,
	599, 600, 1282, 601, 1283, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 1284, 381, 383, 382, 1285, 384,
	603, 1114, 385, 386, 1115, 1286, 387, 0, 0, 0,
	388, 389, 1287, 1288, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 1289, 251,
	1118, 430, 431, 1290, 604, 432, 605, 434, 435, 1291,
	0, 436, 0, 1292, 1293, 438, 439, 440, 1294, 1295,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 1296, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 1297, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 1298, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 1299, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 1300, 509,
	510, 508, 511, 512, 513, 1301, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 1302, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 1303, 536, 537, 0,
	535, 1304, 538, 539, 540, 541, 542, 543, 331, 544,
	1305, 545, 617, 618, 619, 620, 1306, 554, 1307, 546,
	547, 548, 621, 549, 622, 1308, 550, 551, 552, 553,
	0, 555, 556, 1309, 1310, 557, 558, 559, 561, 562,
	560, 563, 1311, 564, 1312, 0, 565, 566, 567, 623,
	624, 625, 1313, 569, 568, 570, 626, 1314, 1315, 1316,
	1317, 571, 572, 627, 573, 574, 575, 1230, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 1239, 259, 260, 1240, 1241, 1242, 0,
	1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 1248, 581, 270, 271, 272, 273, 274, 275, 1249,
	1250, 0, 276, 582, 583, 584, 1251, 277, 278, 585,
	1252, 1319, 1253, 279, 280, 281, 282, 283, 284, 285,
	0, 1254, 287, 288, 289, 286, 290, 1255, 291, 0,
	292, 293, 294, 295, 296, 297, 1256, 298, 299, 300,
	1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262, 1263,
	303, 304, 305, 306, 0, 307, 586, 587, 1264, 311,
	308, 309, 1265, 312, 310, 1266, 313, 314, 315, 1267,
	1268, 316, 317, 318, 1269, 319, 320, 1270, 321, 322,
	323, 1271, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 1272, 249, 1273,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 1274, 341, 1275, 1276, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 1277,
	352, 594, 1278, 595, 353, 1279, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 1110, 359, 360, 1280, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	1281, 1109, 367, 599, 600, 1282, 601, 1283, 369, 370,
	1111, 602, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 1284, 381, 383,
	382, 1285, 384, 603, 1114, 385, 386, 1115, 1286, 387,
	0, 0, 0, 388, 389, 1287, 1288, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1289, 251, 1118, 430, 431, 1290, 604, 432, 605,
	434, 435, 1291, 0, 436, 0, 1292, 1293, 438, 439,
	440, 1294, 1295, 441, 442, 606, 1119, 443, 1120, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 1296, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 1297, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 1298, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 1299, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 1300, 509, 510, 508, 511, 512, 513, 1301, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 1302, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 1303,
	536, 537, 0, 535, 1304, 538, 539, 540, 541, 542,
	543, 331, 544, 1305, 545, 617, 618, 619, 620, 1306,
	554, 1307, 546, 547, 548, 621, 549, 622, 1308, 550,
	551, 552, 553, 0, 555, 556, 1309, 1310, 557, 558,
	559, 561, 562, 560, 563, 1311, 564, 1312, 0, 565,
	566, 567, 623, 624, 625, 1313, 569, 568, 570, 626,
	1314, 1315, 1316, 1317, 571, 572, 627, 573, 574, 575,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 1239, 259, 260, 1240, 1241, 1242,
	0, 1243, 576, 1244, 1245, 1246, 1247, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 1248, 581, 270, 271, 272, 273, 274, 275,
	1249, 1250, 0, 276, 582, 583, 584, 1251, 277, 278,
	585, 1252, 1319, 1253, 279, 280, 281, 282, 283, 284,
	285, 0, 1254, 287, 288, 289, 286, 290, 1255, 291,
	0, 292, 293, 294, 295, 296, 297, 1256, 298, 299,
	300, 1107, 301, 302, 1257, 1258, 1260, 1259, 1261, 1262,
	1263, 303, 304, 305, 306, 0, 307, 586, 587, 1264,
	311, 308, 309, 1265, 312, 310, 1266, 313, 314, 315,
	1267, 1268, 316, 317, 318, 1269, 319, 320, 1270, 321,
	322, 323, 1271, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 1272, 249,
	1273, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 1274, 341, 1275, 1276, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	1277, 352, 594, 1278, 595, 353, 1279, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 1110, 359, 360, 1280,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 1281, 1109, 367, 599, 600, 1282, 601, 1283, 369,
	370, 1111, 602, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1284, 381,
	383, 382, 1285, 384, 603, 1114, 385, 386, 1115, 1286,
	387, 0, 0, 0, 388, 389, 1287, 1288, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 1289, 251, 1118, 430, 431, 1290, 604, 432,
	605, 434, 435, 1291, 0, 436, 0, 1292, 1293, 438,
	439, 440, 1294, 1295, 441, 442, 606, 1119, 443, 1120,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 1296, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 1297, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 1298, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 1299,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 1300, 509, 510, 508, 511, 512, 513, 1301,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 1302, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	1303, 536, 537, 0, 535, 1304, 538, 539, 540, 541,
	542, 543, 331, 544, 1305, 545, 617, 618, 619, 620,
	1306, 554, 1307, 546, 547, 548, 621, 549, 622, 1308,
	550, 551, 552, 553, 0, 555, 556, 1309, 1310, 557,
	558, 559, 561, 562, 560, 563, 1311, 564, 1312, 0,
	565, 566, 567, 623, 624, 625, 1313, 569, 568, 570,
	626, 1314, 1315, 1316, 1317, 571, 572, 627, 573, 574,
	575, 2345, 0, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 2342, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 2343, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 2341,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 2344, 0, 0, 0, 0, 0, 0, 1026, 2340,
	0, 988, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 213, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 215, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 1510, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 207, 571, 572,
	627, 573, 574, 575, 1001, 0, 208, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1747, 1745,
	0, 0, 1024, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 213, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 215, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 1510, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 207, 571, 572, 627, 573,
	574, 575, 1001, 0, 208, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 1042,
	1014, 1015, 1016, 1012, 1013, 1025, 1747, 2919, 0, 0,
	1024, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 1030, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 1079, 0, 268, 1086, 269,
	1085, 0, 1096, 270, 271, 272, 273, 274, 275, 1032,
	1065, 999, 276, 1126, 1127, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 1089, 307, 1083, 1082, 1003, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1074, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1009, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 1021, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1081, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 1094,
	1095, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 1031, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 1076, 1077, 0, 1037, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1080, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 1010, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 213, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 1078, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 1125, 530, 531, 532, 533, 1101, 0,
	536, 537, 998, 535, 215, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 1090, 1091, 1092, 1093, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 1020, 550,
	551, 552, 553, 0, 555, 556, 0, 1004, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 1510, 1087, 1124, 0, 569, 568, 570, 626,
	0, 0, 0, 207, 571, 572, 627, 573, 574, 575,
	1001, 0, 208, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 0, 0, 0, 995, 996, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 1747, 1745, 0, 0, 1024, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 2473,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 2478, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 2474,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 2475,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 2390, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 2388, 0, 2387, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 2385, 0, 2384, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 2382, 0, 2381, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 2379, 0, 1600, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 1599, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 991, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 1005, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 1026, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 999, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	4214, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 1003, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1000, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 1005, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 1010, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 998, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	555, 556, 0, 1004, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1001, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 0, 0, 0, 0,
	0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	1026, 0, 0, 0, 1024, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	2259, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 2258, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 1005, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 1042,
	1014, 1015, 1016, 1012, 1013, 1025, 1026, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 1030, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 1079, 0, 268, 1086, 269,
	1085, 0, 1096, 270, 271, 272, 273, 274, 275, 1032,
	1065, 999, 276, 1126, 1127, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 3997, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 1089, 307, 1083, 1082, 1003, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1074, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1009, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 1021, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1081, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 1094,
	1095, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 1031, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 1076, 1077, 0, 1037, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084,
	434, 435, 0, 0, 436, 0, 1005, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1080, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 1010, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 1078, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 1125, 530, 531, 532, 533, 1101, 0,
	536, 537, 998, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 1090, 1091, 1092, 1093, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 1020, 550,
	551, 552, 553, 0, 555, 556, 0, 1004, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 623, 1087, 1124, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1001, 0, 0, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 0, 0, 0, 995, 996, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	3645, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 1815, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 1024, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 3393, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 1026, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 999, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 1003, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1000, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 1010, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 998, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	555, 556, 0, 1004, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1001, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 0, 0, 0, 0,
	0, 995, 996, 1815, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 1024, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 999, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 1003, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 2478, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1000, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 1010, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 998, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	555, 556, 0, 1004, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1001, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 0, 0, 0, 0,
	0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	1026, 0, 0, 0, 1024, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 1745,
	0, 2483, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 2481, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 2469, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 2458, 1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 2456, 1024, 2447, 2454, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 2450,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 2451, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 2452, 401, 2449, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 2453, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 2448, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 2444, 1024, 2447, 2454, 1015, 1016, 1012, 1013, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 2450,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 1031, 353, 0,
	354, 355, 356, 2451, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 2452, 401, 2449, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 2453, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 2448, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 1026, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 1753, 0, 1026, 0, 0, 0,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 2238, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1605,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1540,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1535,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1526,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1521,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1503,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1383,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1382, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1377,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1376, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 1026, 0, 0, 1370,
	1024, 1042, 1014, 1015, 1016, 1012, 1013, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 1042,
	1014, 1015, 1016, 1012, 1013, 1025, 1026, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 1030, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 1079, 0, 268, 1086, 269,
	1085, 0, 1096, 270, 271, 272, 273, 274, 275, 1032,
	1065, 999, 276, 1126, 1127, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 1089, 307, 1083, 1082, 1003, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1074, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1009, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 1021, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1081, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 1094,
	1095, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 1031, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 1076, 1077, 0, 1037, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1080, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 1010, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 1078, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 1125, 530, 531, 532, 533, 1101, 0,
	536, 537, 998, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 1090, 1091, 1092, 1093, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 1020, 550,
	551, 552, 553, 0, 555, 556, 0, 1004, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 623, 1087, 1124, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1001, 0, 0, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 0, 0, 0, 995, 996, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	4254, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 4253, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 995, 996, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 1026, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	4252, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 999, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 4254, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 1003, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 1000, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 1010, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 998, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	4253, 556, 0, 1004, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1001, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 0, 0, 0, 0,
	0, 995, 996, 1042, 1014, 1015, 1016, 1012, 1013, 1025,
	1026, 0, 0, 0, 1024, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1066, 1030, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 1079,
	0, 268, 1086, 269, 1085, 0, 1096, 270, 271, 272,
	273, 274, 275, 1032, 1065, 999, 276, 1126, 1127, 584,
	0, 277, 278, 1072, 0, 1053, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 3947, 302, 1056, 1054, 1055,
	1062, 1058, 1057, 1061, 303, 304, 305, 306, 1089, 307,
	1083, 1082, 1003, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1074, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1009, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1097,
	1098, 1021, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1081, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 1094, 1095, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1104, 0, 3948, 353, 0,
	354, 355, 356, 357, 358, 1067, 1068, 1071, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 1109, 367, 1076, 1077, 0,
	1037, 0, 369, 370, 1111, 1069, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 1105, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 1060,
	1059, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 1000, 251, 1118, 430, 431,
	1022, 1070, 432, 1084, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 1099, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1100, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1080, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	3946, 1010, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 1063, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 1078, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 1125, 530, 531,
	532, 533, 1101, 0, 536, 537, 998, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 1090,
	1091, 1092, 1093, 0, 554, 0, 546, 547, 548, 1102,
	549, 1103, 1020, 550, 551, 552, 553, 0, 555, 556,
	0, 1004, 557, 558, 559, 561, 562, 560, 563, 1064,
	564, 0, 0, 565, 566, 567, 623, 1087, 1124, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1001, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 995,
	996, 1042, 1014, 1015, 1016, 2886, 2887, 1025, 1026, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 1030, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 1079, 0, 268,
	1086, 269, 1085, 0, 1096, 270, 271, 272, 273, 274,
	275, 1032, 1065, 999, 276, 1126, 1127, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 1089, 307, 1083, 1082,
	1003, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1074, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1009, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 1021,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1081,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 1094, 1095, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 1031, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 1076, 1077, 0, 1037, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 1000, 251, 1118, 430, 431, 1022, 1070,
	432, 1084, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1080,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 1010,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 1078, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 1125, 530, 531, 532, 533,
	1101, 0, 536, 537, 998, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 1090, 1091, 1092,
	1093, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	1020, 550, 551, 552, 553, 0, 555, 556, 0, 1004,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 1087, 1124, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1001, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 995, 996, 1042,
	1014, 1015, 1016, 2884, 2885, 1025, 1026, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1066, 1030, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 1079, 0, 268, 1086, 269,
	1085, 0, 1096, 270, 271, 272, 273, 274, 275, 1032,
	1065, 999, 276, 1126, 1127, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 1089, 307, 1083, 1082, 1003, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1074, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1009, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 1021, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1081, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 1094,
	1095, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 1031, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 1076, 1077, 0, 1037, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 1000, 251, 1118, 430, 431, 1022, 1070, 432, 1084,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1080, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 1010, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 1078, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 1125, 530, 531, 532, 533, 1101, 0,
	536, 537, 998, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 1090, 1091, 1092, 1093, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 1020, 550,
	551, 552, 553, 0, 555, 556, 0, 1004, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 623, 1087, 1124, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1001, 0, 0, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 0, 0, 0, 995, 996, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 1026, 0, 0, 0, 1024, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 1118, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 555, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1001, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 0,
	0, 0, 0, 2246, 2247, 1042, 1014, 1015, 1016, 1012,
	1013, 1025, 1026, 0, 0, 0, 1024, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1066, 1030, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 1079, 0, 268, 1086, 269, 1085, 0, 1096, 270,
	271, 272, 273, 274, 275, 1032, 1065, 0, 276, 1126,
	1127, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	1089, 307, 1083, 1082, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1074, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1009, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 1021, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1081, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 1094, 1095, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 1031,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 1076,
	1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 251, 1118,
	430, 431, 1022, 1070, 432, 1084, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1080, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 1010, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 1078, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 1125,
	530, 531, 532, 533, 1101, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 1090, 1091, 1092, 1093, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 1020, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 1087,
	1124, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1042, 1014, 1015, 1016,
	1012, 1013, 1025, 0, 2466, 0, 0, 0, 0, 0,
	0, 2464, 2465, 252, 254, 253, 255, 256, 257, 258,
	1026, 259, 260, 0, 1024, 0, 0, 0, 1066, 1030,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 1079, 0, 268, 1086, 269, 1085, 0, 1096,
	270, 271, 272, 273, 274, 275, 1032, 1065, 0, 276,
	1126, 1127, 584, 0, 277, 278, 1072, 0, 1053, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305,
	306, 1089, 307, 1083, 1082, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1074,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1009, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1097, 1098, 1021, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1081, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 1094, 1095, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1104, 0,
	1031, 353, 0, 354, 355, 356, 357, 358, 1067, 1068,
	1071, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 1109, 367,
	1076, 1077, 0, 1037, 0, 369, 370, 1111, 1069, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	1105, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 1060, 1059, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 251,
	1118, 430, 431, 1022, 1070, 432, 1084, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 1099, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1100,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1080, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 2879, 2880, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 1063, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 1078,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	1125, 530, 531, 532, 533, 1101, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 1090, 1091, 1092, 1093, 0, 554, 0, 546,
	547, 548, 1102, 549, 1103, 1020, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 1064, 564, 0, 0, 565, 566, 567, 623,
	1087, 1124, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1042, 1014, 1015,
	1016, 1012, 1013, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 252, 254, 253, 255, 256, 257,
	258, 1026, 259, 260, 0, 1024, 0, 0, 0, 1066,
	1030, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 0, 1079, 0, 268, 1086, 269, 1085, 0,
	1096, 270, 271, 272, 273, 274, 275, 1032, 1065, 999,
	276, 1126, 1127, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	4254, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 1089, 307, 1083, 1082, 1003, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1074, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1009, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 1021, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1081, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 1094, 1095, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 1031, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 1076, 1077, 0, 1037, 0, 369, 370, 0, 1069,
	0, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 1000,
	251, 0, 430, 431, 1022, 1070, 432, 1084, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1080, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 1010, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	1078, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 1125, 530, 531, 532, 533, 1101, 0, 536, 537,
	998, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 1090, 1091, 1092, 1093, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 1020, 550, 551, 552,
	553, 0, 4253, 556, 0, 1004, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 1087, 1124, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	1164, 0, 0, 995, 996, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 1024, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 0, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 1065, 0, 276, 582, 583, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 599, 600, 0, 601, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 1150, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 0, 251, 1118, 430, 431, 0, 1070, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 1156, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 1158,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 213, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 1101,
	0, 536, 537, 0, 535, 215, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 1510, 624, 625, 0, 569, 568, 570,
	626, 0, 1164, 0, 207, 571, 572, 627, 573, 574,
	575, 0, 0, 208, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 1154, 1066, 1839, 0, 0, 0, 261,
	262, 1106, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 1065, 0, 276, 582, 583, 584, 0,
	277, 278, 1072, 0, 1053, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062,
	1058, 1057, 1061, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1097, 1098,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 1108,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1104, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1067, 1068, 1071, 433, 1110, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 1109, 367, 599, 600, 0, 601,
	0, 369, 370, 1111, 1069, 1112, 371, 372, 373, 1113,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	1150, 381, 383, 382, 0, 384, 1105, 1114, 385, 386,
	1115, 0, 387, 0, 0, 0, 388, 389, 1060, 1059,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1116,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1117, 420, 0, 251, 1118, 430, 431, 0,
	1070, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	1156, 438, 439, 440, 0, 0, 441, 442, 606, 1119,
	443, 1120, 1099, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1100, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 1121, 489, 490, 491, 492,
	613, 1158, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 213, 509, 510, 508, 511, 512,
	513, 1063, 514, 515, 498, 499, 516, 517, 1122, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 1101, 0, 536, 537, 0, 535, 215, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 1102, 549,
	1103, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 1064, 564,
	0, 0, 565, 566, 567, 1510, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 207, 571, 572, 627,
	573, 574, 575, 0, 0, 208, 0, 0, 0, 3063,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 0, 1839, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 0, 261, 262,
	1106, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 1065, 0, 276, 582, 583, 584, 0, 277,
	278, 1072, 0, 1053, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058,
	1057, 1061, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1097, 1098, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 1108, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1104, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 1067, 1068, 1071, 433, 1110, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 1109, 367, 599, 600, 0, 601, 0,
	369, 370, 1111, 1069, 1112, 371, 372, 373, 1113, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 1150,
	381, 383, 382, 0, 384, 1105, 1114, 385, 386, 1115,
	0, 387, 0, 0, 0, 388, 389, 1060, 1059, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1116, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1117, 420, 0, 251, 1118, 430, 431, 0, 1070,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 1156,
	438, 439, 440, 0, 0, 441, 442, 606, 1119, 443,
	1120, 1099, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1100, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 1121, 489, 490, 491, 492, 613,
	1158, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	1063, 514, 515, 498, 499, 516, 517, 1122, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	1101, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 1102, 549, 1103,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 1064, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 0, 1146, 0, 1164, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 1154, 0, 1152, 1066, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 1065, 0, 276, 582,
	583, 584, 0, 277, 278, 1072, 0, 1053, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 1056,
	1054, 1055, 1062, 1058, 1057, 1061, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1097, 1098, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1104, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 1067, 1068, 1071,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 1069, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 1150, 381, 383, 382, 0, 384, 1105,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 1060, 1059, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 251, 1118,
	430, 431, 0, 1070, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 1156, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 1099, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1100, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 1158, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 1063, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 1101, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 1102, 549, 1103, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 1064, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 1164, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 1154, 1066,
	1152, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 1065, 0,
	276, 582, 583, 584, 0, 277, 278, 1072, 0, 1053,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1097, 1098, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1104,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 1067,
	1068, 1071, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 1069,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 1150, 381, 383, 382, 0,
	384, 1105, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 1060, 1059, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	251, 1118, 430, 431, 0, 1070, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 1156, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 1099, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1100, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 1158, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 1063, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 1101, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 1102, 549, 1103, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 1064, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 0, 1164,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	1154, 1066, 1152, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	1065, 0, 276, 582, 583, 584, 0, 277, 278, 1072,
	0, 1053, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1097, 1098, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1104, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1067, 1068, 1071, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 1109, 367, 599, 600, 0, 601, 0, 369, 370,
	1111, 1069, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 1105, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 1060, 1059, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 251, 1118, 430, 431, 0, 1070, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 1099,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1100, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 1063, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 1101, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 1102, 549, 1103, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 1064, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1164, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1066, 0, 3541, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 1065, 0, 276, 582, 583, 584, 0, 277, 278,
	1072, 0, 1053, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 1056, 1054, 1055, 1062, 1058, 1057,
	1061, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1097, 1098, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1104, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1067, 1068, 1071, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 1109, 367, 599, 600, 0, 601, 0, 369,
	370, 1111, 1069, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 1105, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 1060, 1059, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 0, 251, 1118, 430, 431, 0, 1070, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	1099, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1100, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 1158,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 1063,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 1101,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 1102, 549, 1103, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 1064, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 988, 0, 1353, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 1738, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 213, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 215,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 1510, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 207, 571,
	572, 627, 573, 574, 575, 0, 0, 208, 0, 0,
	0, 1507, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 213, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 215, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 1510, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 207, 571, 572,
	627, 573, 574, 575, 1353, 1352, 208, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 177, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1353, 1352, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 1532,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 1319, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 0, 1118,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1353, 2035, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	3317, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 1319, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 2034, 383, 382, 0, 384,
	603, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 0,
	1118, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1353, 1352, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 1532, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 1319,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 602,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	0, 1118, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1164, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1066, 0, 1516, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 1065,
	0, 276, 582, 583, 584, 0, 277, 278, 1072, 0,
	1053, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 1056, 1054, 1055, 1062, 1058, 1057, 1061, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1097, 1098, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1104, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	1067, 1068, 1071, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	1109, 367, 599, 600, 0, 601, 0, 369, 370, 1111,
	1069, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 1105, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 1060, 1059, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	0, 251, 1118, 430, 431, 0, 1070, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 1099, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1100, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 1063, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 1101, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 1102, 549, 1103, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 1064, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 988,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 213, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 215, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 1510, 624, 625, 0, 569, 568,
	570, 626, 246, 0, 0, 207, 571, 572, 627, 573,
	574, 575, 0, 0, 208, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 177, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 246, 2799, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 1853, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 4396, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 246, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 3258, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 0, 246, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 1453, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 2770, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 3418, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 834, 0, 714,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	2138, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 721, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 832, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 719, 538, 539, 540, 541, 720,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 712, 0, 714, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 724, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 721, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 719, 538,
	539, 540, 541, 720, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 1890,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 0, 1896, 0, 268, 1886, 269,
	1902, 0, 1909, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 1912, 1913, 0, 0, 277, 278, 0,
	0, 1319, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 1089, 307, 1900, 1899, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1074, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 0, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 1898, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 1907,
	1908, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 0, 354, 355, 356, 357,
	358, 0, 0, 0, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 1109, 367, 1893, 1894, 0, 1889, 0, 369, 370,
	1111, 0, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 0, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 0, 1118, 430, 431, 0, 0, 432, 1901,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 0, 1119, 443, 1120, 0,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 1883, 456, 457, 458, 1884, 459,
	460, 461, 0, 462, 0, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1897, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 0, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 1895, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 1911, 530, 531, 532, 533, 0, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 1903, 1904, 1905, 1906, 0,
	554, 0, 546, 547, 548, 0, 549, 0, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 0, 1887, 1910, 0, 569, 568, 570, 714,
	0, 0, 0, 0, 571, 572, 0, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 1877, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 721, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 719, 538, 539, 540, 541, 720,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	714, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 724, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 721, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 2178, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 2179, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 719, 538, 539, 540, 541,
	720, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 2180, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 714, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 724, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 721, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 1916, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 719, 538, 539, 540,
	541, 720, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 1915, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 714, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 724,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 721, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 1869,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 719, 538, 539,
	540, 541, 720, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 1868, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1353, 1352, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	724, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 2734, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 2735, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1353, 1352, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 3591, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1353, 1352, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 1319, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 0, 1118,
	430, 431, 3230, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 1560, 0, 1353, 1352, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 1106, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 1319, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1107, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 1559,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 1108, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	1110, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 1109, 367, 599, 600,
	0, 601, 0, 369, 370, 1111, 602, 1112, 371, 372,
	373, 1113, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 1114,
	385, 386, 1115, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1116, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1117, 420, 0, 0, 1118, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1119, 443, 1120, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	1558, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 1121, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 1557, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	1122, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1500, 0, 1353, 1352, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 1319,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 1499,
	597, 598, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 602,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	0, 1118, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1428, 0,
	1353, 1352, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 1106,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 1319, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1107, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 1108, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1427, 597, 598, 433, 1110, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 1109, 367, 599, 600, 0, 601, 0, 369,
	370, 1111, 602, 1112, 371, 372, 373, 1113, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 1114, 385, 386, 1115, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1116, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1117, 420, 0, 0, 1118, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1119, 443, 1120,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 1121, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 1122, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 1388, 0, 1353, 1352, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 1106, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 1319, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1107, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	1108, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 1110,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 1109, 367, 599, 600, 0,
	601, 0, 369, 370, 1111, 602, 1112, 371, 372, 373,
	1113, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 1114, 385,
	386, 1115, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1116, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1117, 420, 0, 0, 1118, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1119, 443, 1120, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 1121, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 1122,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1348, 0, 1353, 1352, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 1106, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 1319, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1107, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 1108, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1347, 597,
	598, 433, 1110, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 1109, 367,
	599, 600, 0, 601, 0, 369, 370, 1111, 602, 1112,
	371, 372, 373, 1113, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 1114, 385, 386, 1115, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1116, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1117, 420, 0, 0,
	1118, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1119, 443, 1120, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 1121,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 1122, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1353, 1352, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 1106, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 1319,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1107, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 1108, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 1110, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 1109,
	367, 599, 600, 0, 601, 0, 369, 370, 1111, 602,
	1112, 371, 372, 373, 1113, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 1114, 385, 386, 1115, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1116, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1117, 420, 0,
	0, 1118, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1119, 443, 1120, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	1121, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 1122, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1353, 1352,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 1106, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	1319, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1107,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 1925, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 1108, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 1110, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	1109, 367, 599, 600, 0, 601, 0, 369, 370, 1111,
	602, 1112, 371, 372, 373, 1113, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 1114, 385, 386, 1115, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1116, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1117, 420,
	0, 0, 1118, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1119, 443, 1120, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 1121, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 1122, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1353,
	1352, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 1106, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 1319, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1107, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 1108, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 1110, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 1109, 367, 599, 600, 0, 601, 0, 369, 370,
	1111, 602, 1112, 371, 372, 373, 1113, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 1114, 385, 386, 1115, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1116, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1117,
	420, 0, 0, 1118, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1119, 443, 1120, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 1121, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 1122, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 1353, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 1106, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 1319, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1107, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 1108, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 1110, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 1109, 367, 599,
	600, 0, 601, 0, 369, 370, 1111, 602, 1112, 371,
	372, 373, 1113, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	1114, 385, 386, 1115, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1116, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1117, 420, 0, 0, 1118,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1119, 443, 1120, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 1121, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 1122, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 2603, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 2600,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 2607, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	2812, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 2606, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 2809, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 2811, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 2808,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 2605,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 2810,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 2603, 277, 278, 585, 0, 0,
	2597, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 2600, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	2607, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 2606, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 2596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 2605, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 2604, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1627, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 1630, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 1628, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 1629, 568, 570,
	626, 1323, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 1325, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 1156, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1320, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 1322, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 1156, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1226, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1228, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 1156, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	659, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 658, 257, 258, 648, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 651,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 652, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 653, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 647, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 648,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 651, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 652, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 653, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 1156,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 3193, 420, 0,
	251, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 2741, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 2740, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 2151, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 246,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 2067, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	2073, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 2072, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 2060, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 2062, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 2031, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 250, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 251, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 1156,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1493, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 1492, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 251, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 1484, 0, 246, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 1483,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 250, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	251, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1481, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1480, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1476, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 1475, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	250, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 251, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1431, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1341, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 250, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 251, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1334, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1336, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 629, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 250, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 251, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 237, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 251, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 651, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	652, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 653, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 2187,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 246, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 2185, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 250,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 251, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 2183, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 250, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 251, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 2117, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 250, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 251, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 2111, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 250, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 251, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 2079, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 250, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 251,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 821, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 820, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 819, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 2812, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 3853, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 681, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 1196, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 1194, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 682, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 678, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 1197, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 677, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 681,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	1196, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 1194, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 682, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 678, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 1197, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 677, 618, 619,
	620, 0, 554, 0, 546, 1195, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 638, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 637, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	636, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 246, 2799, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 246, 3863, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 246, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 3565, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 2517, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 246,
	2799, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	2796, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 246, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 2161,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 2149, 0, 246, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 681,
	0, 246, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	671, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 682, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 678, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 1515, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 677, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1497, 0, 246, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 1496, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 1490, 0, 246, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 1489,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1437, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 1436, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1420, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 1418, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 501, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1414, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 1392, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 1390, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1344, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1328, 0, 246, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	577, 578, 0, 268, 579, 269, 580, 0, 581, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 582,
	583, 584, 0, 277, 278, 585, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 586, 587, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	588, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 591, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 592, 593, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 594, 0, 595,
	353, 0, 354, 355, 356, 357, 358, 596, 597, 598,
	433, 0, 359, 360, 0, 361, 362, 363, 364, 0,
	0, 0, 0, 365, 366, 368, 0, 0, 367, 599,
	600, 0, 601, 0, 369, 370, 0, 602, 0, 371,
	372, 373, 0, 374, 0, 0, 0, 375, 376, 377,
	378, 379, 380, 0, 381, 383, 382, 0, 384, 603,
	0, 385, 386, 0, 0, 387, 0, 0, 0, 388,
	389, 0, 0, 390, 391, 392, 393, 0, 394, 395,
	397, 400, 396, 398, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 474, 473, 475, 0, 476, 0,
	0, 0, 0, 0, 477, 0, 479, 480, 481, 478,
	482, 483, 484, 485, 0, 486, 487, 488, 0, 489,
	490, 491, 492, 613, 493, 0, 494, 495, 501, 502,
	496, 497, 503, 504, 505, 506, 507, 0, 509, 510,
	508, 511, 512, 513, 0, 514, 515, 498, 499, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 500, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 331, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 246, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 1177, 259, 260, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 577, 578, 0, 268,
	579, 269, 580, 0, 581, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 582, 583, 584, 0, 277,
	278, 585, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 586, 587,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 588, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 591,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 592, 593, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 594, 0, 595, 353, 0, 354, 355,
	356, 357, 358, 596, 597, 598, 433, 0, 359, 360,
	0, 361, 362, 363, 364, 0, 0, 0, 0, 365,
	366, 368, 0, 0, 367, 599, 600, 0, 601, 0,
	369, 370, 0, 602, 0, 371, 372, 373, 0, 374,
	0, 0, 0, 375, 376, 377, 378, 379, 380, 0,
	381, 383, 382, 0, 384, 603, 0, 385, 386, 0,
	0, 387, 0, 0, 0, 388, 389, 0, 0, 390,
	391, 392, 393, 0, 394, 395, 397, 400, 396, 398,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	474, 473, 475, 0, 476, 0, 0, 0, 0, 0,
	477, 0, 479, 480, 481, 478, 482, 483, 484, 485,
	0, 486, 487, 488, 0, 489, 490, 491, 492, 613,
	493, 0, 494, 495, 501, 502, 496, 497, 503, 504,
	505, 506, 507, 0, 509, 510, 508, 511, 512, 513,
	0, 514, 515, 498, 499, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 500, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 331, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 246, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 687, 259, 260, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 577, 578, 0, 268, 579, 269, 580, 0,
	581, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 582, 583, 584, 0, 277, 278, 585, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 586, 587, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 588, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 591, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 592, 593, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 594,
	0, 595, 353, 0, 354, 355, 356, 357, 358, 596,
	597, 598, 433, 0, 359, 360, 0, 361, 362, 363,
	364, 0, 0, 0, 0, 365, 366, 368, 0, 0,
	367, 599, 600, 0, 601, 0, 369, 370, 0, 602,
	0, 371, 372, 373, 0, 374, 0, 0, 0, 375,
	376, 377, 378, 379, 380, 0, 381, 383, 382, 0,
	384, 603, 0, 385, 386, 0, 0, 387, 0, 0,
	0, 388, 389, 0, 0, 390, 391, 392, 393, 0,
	394, 395, 397, 400, 396, 398, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 474, 473, 475, 0,
	476, 0, 0, 0, 0, 0, 477, 0, 479, 480,
	481, 478, 482, 483, 484, 485, 0, 486, 487, 488,
	0, 489, 490, 491, 492, 613, 493, 0, 494, 495,
	501, 502, 496, 497, 503, 504, 505, 506, 507, 0,
	509, 510, 508, 511, 512, 513, 0, 514, 515, 498,
	499, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 500, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 331,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 681, 0,
	246, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 671,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 669,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 670, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 682, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 672, 493,
	0, 494, 495, 501, 502, 496, 497, 678, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 673, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 677, 618, 619, 620,
	0, 554, 0, 546, 675, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 663, 0, 246, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 577, 578,
	0, 268, 579, 269, 580, 0, 581, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 582, 583, 584,
	0, 277, 278, 585, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	586, 587, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 588, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 591, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 592, 593, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 594, 0, 595, 353, 0,
	354, 355, 356, 357, 358, 596, 597, 598, 433, 0,
	359, 360, 0, 361, 362, 363, 364, 0, 0, 0,
	0, 365, 366, 368, 0, 0, 367, 599, 600, 0,
	601, 0, 369, 370, 0, 602, 0, 371, 372, 373,
	0, 374, 0, 0, 0, 375, 376, 377, 378, 379,
	380, 0, 381, 383, 382, 0, 384, 603, 0, 385,
	386, 0, 0, 387, 0, 0, 0, 388, 389, 0,
	0, 390, 391, 392, 393, 0, 394, 395, 397, 400,
	396, 398, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 474, 473, 475, 0, 476, 0, 0, 0,
	0, 0, 477, 0, 479, 480, 481, 478, 482, 483,
	484, 485, 0, 486, 487, 488, 0, 489, 490, 491,
	492, 613, 493, 0, 494, 495, 664, 502, 496, 497,
	503, 504, 505, 506, 507, 0, 509, 510, 508, 511,
	512, 513, 0, 514, 515, 498, 499, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 500, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 331, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 661, 0, 246, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 655, 0, 246,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 577, 578, 0, 268, 579, 269,
	580, 0, 581, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 582, 583, 584, 0, 277, 278, 585,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 586, 587, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 588, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 591, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 592,
	593, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 594, 0, 595, 353, 0, 354, 355, 356, 357,
	358, 596, 597, 598, 433, 0, 359, 360, 0, 361,
	362, 363, 364, 0, 0, 0, 0, 365, 366, 368,
	0, 0, 367, 599, 600, 0, 601, 0, 369, 370,
	0, 602, 0, 371, 372, 373, 0, 374, 0, 0,
	0, 375, 376, 377, 378, 379, 380, 0, 381, 383,
	382, 0, 384, 603, 0, 385, 386, 0, 0, 387,
	0, 0, 0, 388, 389, 0, 0, 390, 391, 392,
	393, 0, 394, 395, 397, 400, 396, 398, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 474, 473,
	475, 0, 476, 0, 0, 0, 0, 0, 477, 0,
	479, 480, 481, 478, 482, 483, 484, 485, 0, 486,
	487, 488, 0, 489, 490, 491, 492, 613, 493, 0,
	494, 495, 501, 502, 496, 497, 503, 504, 505, 506,
	507, 0, 509, 510, 508, 511, 512, 513, 0, 514,
	515, 498, 499, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	500, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 331, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	633, 0, 246, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 596, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 3276, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 3224, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 501, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 3165, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 514, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 246, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 3163, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	3149, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 474, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 353,
	0, 354, 355, 356, 357, 358, 2750, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 493, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	246, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 577, 578, 0, 268, 579,
	269, 580, 0, 581, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 582, 583, 584, 0, 277, 278,
	585, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 586, 587, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 588, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 591, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	592, 593, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 594, 0, 595, 353, 0, 354, 355, 356,
	357, 358, 596, 597, 598, 433, 0, 359, 360, 0,
	361, 362, 363, 364, 0, 0, 0, 0, 365, 366,
	368, 0, 0, 367, 599, 600, 0, 601, 0, 369,
	370, 0, 602, 0, 371, 372, 373, 0, 374, 0,
	0, 0, 375, 376, 377, 378, 379, 380, 0, 381,
	383, 382, 0, 384, 603, 0, 385, 386, 0, 0,
	387, 0, 0, 0, 388, 389, 0, 0, 390, 391,
	392, 393, 0, 394, 395, 397, 400, 396, 398, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 474,
	473, 475, 0, 476, 0, 0, 0, 0, 0, 477,
	0, 479, 480, 481, 478, 482, 483, 484, 485, 0,
	486, 487, 488, 0, 489, 490, 491, 492, 613, 493,
	0, 494, 495, 664, 502, 496, 497, 503, 504, 505,
	506, 507, 0, 509, 510, 508, 511, 512, 513, 0,
	514, 515, 498, 499, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 500, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 331, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 246, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 576, 0,
	2096, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 577, 578, 0, 268, 579, 269, 580, 0, 581,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	582, 583, 584, 0, 277, 278, 585, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 586, 587, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 588, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 591, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 592, 593, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 594, 0,
	595, 353, 0, 354, 355, 356, 357, 358, 596, 597,
	598, 433, 0, 359, 360, 0, 361, 362, 363, 364,
	0, 0, 0, 0, 365, 366, 368, 0, 0, 367,
	599, 600, 0, 601, 0, 369, 370, 0, 602, 0,
	371, 372, 373, 0, 374, 0, 0, 0, 375, 376,
	377, 378, 379, 380, 0, 381, 383, 382, 0, 384,
	603, 0, 385, 386, 0, 0, 387, 0, 0, 0,
	388, 389, 0, 0, 390, 391, 392, 393, 0, 394,
	395, 397, 400, 396, 398, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 474, 473, 475, 0, 476,
	0, 0, 0, 0, 0, 477, 0, 479, 480, 481,
	478, 482, 483, 484, 485, 0, 486, 487, 488, 0,
	489, 490, 491, 492, 613, 493, 0, 494, 495, 501,
	502, 496, 497, 503, 504, 505, 506, 507, 0, 509,
	510, 508, 511, 512, 513, 0, 0, 515, 498, 499,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 500, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 331, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 246, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 577, 578, 0,
	268, 579, 269, 580, 0, 581, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 582, 583, 584, 0,
	277, 278, 585, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 586,
	587, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 588, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	591, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 592, 593, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 594, 0, 595, 353, 0, 354,
	355, 356, 357, 358, 1461, 597, 598, 433, 0, 359,
	360, 0, 361, 362, 363, 364, 0, 0, 0, 0,
	365, 366, 368, 0, 0, 367, 599, 600, 0, 601,
	0, 369, 370, 0, 602, 0, 371, 372, 373, 0,
	374, 0, 0, 0, 375, 376, 377, 378, 379, 380,
	0, 381, 383, 382, 0, 384, 603, 0, 385, 386,
	0, 0, 387, 0, 0, 0, 388, 389, 0, 0,
	390, 391, 392, 393, 0, 394, 395, 397, 400, 396,
	398, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 474, 473, 475, 0, 476, 0, 0, 0, 0,
	0, 477, 0, 479, 480, 481, 478, 482, 483, 484,
	485, 0, 486, 487, 488, 0, 489, 490, 491, 492,
	613, 493, 0, 494, 495, 501, 502, 496, 497, 503,
	504, 505, 506, 507, 0, 509, 510, 508, 511, 512,
	513, 0, 514, 515, 498, 499, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 500, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 331, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 246, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 577, 578, 0, 268, 579, 269, 580,
	0, 581, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 582, 583, 584, 0, 277, 278, 585, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 586, 587, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 588, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 591, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 592, 593,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	594, 0, 595, 353, 0, 354, 355, 356, 357, 358,
	596, 597, 598, 433, 0, 359, 360, 0, 361, 362,
	363, 364, 0, 0, 0, 0, 365, 366, 368, 0,
	0, 367, 599, 600, 0, 601, 0, 369, 370, 0,
	602, 0, 371, 372, 373, 0, 374, 0, 0, 0,
	375, 376, 377, 378, 379, 380, 0, 381, 383, 382,
	0, 384, 603, 0, 385, 386, 0, 0, 387, 0,
	0, 0, 388, 389, 0, 0, 390, 391, 392, 393,
	0, 394, 395, 397, 400, 396, 398, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 1129, 473, 475,
	0, 476, 0, 0, 0, 0, 0, 477, 0, 479,
	480, 481, 478, 482, 483, 484, 485, 0, 486, 487,
	488, 0, 489, 490, 491, 492, 613, 493, 0, 494,
	495, 501, 502, 496, 497, 503, 504, 505, 506, 507,
	0, 509, 510, 508, 511, 512, 513, 0, 514, 515,
	498, 499, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 500,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	331, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 246, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 577,
	578, 0, 268, 579, 269, 580, 0, 581, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 582, 583,
	584, 0, 277, 278, 585, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 586, 587, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 588,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 591, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 592, 593, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 594, 0, 595, 0,
	0, 354, 355, 356, 357, 358, 596, 597, 598, 433,
	0, 359, 360, 0, 361, 362, 363, 364, 0, 0,
	0, 0, 365, 366, 368, 0, 0, 367, 599, 600,
	0, 601, 0, 369, 370, 0, 602, 0, 371, 372,
	373, 0, 374, 0, 0, 0, 375, 376, 377, 378,
	379, 380, 0, 381, 383, 382, 0, 384, 603, 0,
	385, 386, 0, 0, 387, 0, 0, 0, 388, 389,
	0, 0, 390, 391, 392, 393, 0, 394, 395, 397,
	400, 396, 398, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	0, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 0,
	471, 472, 612, 474, 473, 475, 0, 476, 0, 0,
	0, 0, 0, 477, 0, 479, 480, 481, 478, 482,
	483, 484, 485, 0, 486, 487, 488, 0, 489, 490,
	491, 492, 613, 0, 0, 494, 495, 501, 502, 496,
	497, 503, 504, 505, 506, 507, 0, 509, 510, 508,
	511, 512, 513, 0, 514, 515, 498, 499, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 500, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 331, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1672, 1673, 0, 1705, 1706,
	1707, 1715, 1716, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1703, 0,
	0, 0, 0, 1672, 1673, 1675, 1705, 1706, 1707, 1715,
	1716, 1717, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1703, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 1674,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1698, 1699, 1700, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 1698, 1699,
	1700, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 1722, 0, 0,
	0, 0, 0, 1702, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 1719, 1712, 0, 0, 1722, 0, 0, 1689, 1690,
	0, 1702, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 1718, 0, 1719,
	0, 0, 0, 0, 0, 0, 1689, 1690, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 1696, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 1708,
	1703, 0, 0, 0, 0, 1672, 1673, 1675, 1705, 1706,
	1707, 1715, 1716, 1717, 1713, 1721, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1703, 0,
	0, 0, 0, 0, 0, 1675, 0, 0, 0, 0,
	0, 1674, 1713, 1721, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1711,
	0, 0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688,
	0, 1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682,
	0, 1697, 1698, 1699, 1700, 0, 0, 1711, 2961, 0,
	0, 1680, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685,
	1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 1697,
	1698, 1699, 1700, 0, 0, 0, 2347, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 1719, 1712, 0, 0, 1722, 0, 0,
	1689, 1690, 0, 1702, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1718,
	0, 1719, 0, 0, 0, 0, 0, 0, 1689, 1690,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 1696, 1672,
	1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 1703, 0, 1713, 0, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 4195, 0, 0, 1711,
	0, 0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688,
	0, 1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682,
	0, 0, 0, 0, 4191, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1698, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1680, 1672, 1673, 0, 1705, 1706, 1707,
	1715, 1716, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1703, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 1712, 0,
	0, 1722, 1721, 0, 0, 0, 0, 1702, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 1719, 0, 0, 1674, 0,
	0, 0, 1689, 1690, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	1710, 0, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 1697, 1698,
	1699, 1700, 0, 0, 1709, 0, 1694, 0, 1680, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 1722, 0, 0, 0,
	0, 0, 1702, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 1718, 0,
	1719, 0, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 0, 1696, 0, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 0, 0, 0, 1710, 1680, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 1713, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1703, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 1712, 0, 0, 1722, 1721, 0, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 1674, 0, 0, 0, 1689, 1690, 0, 0, 1709,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 1686, 1687,
	1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677,
	1678, 1679, 1681, 1682, 0, 0, 0, 1701, 4092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 1709, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 1708, 1703, 0, 1702, 1704, 0, 0, 0,
	1675, 0, 0, 0, 0, 1701, 0, 0, 1721, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 1713, 1695, 1691, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0,
	1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0,
	0, 0, 0, 4091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 1712,
	1701, 3982, 1722, 0, 0, 0, 0, 0, 1702, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 1718, 0, 1719, 0, 0, 0,
	0, 0, 0, 1689, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 1710, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 3931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 0, 0, 0, 0, 1680, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1703, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 1712, 0, 0, 1722, 1721, 0, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 1674, 0, 0, 0, 1689, 1690, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1686,
	1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 0, 0, 3787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 1709, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 1708, 1703, 0, 1702, 1704, 0, 0, 0,
	1675, 0, 0, 0, 0, 1701, 0, 0, 1721, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 1713, 1695, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 1712,
	1701, 3730, 1722, 0, 0, 0, 0, 0, 1702, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 1718, 0, 1719, 0, 0, 0,
	0, 0, 0, 1689, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 1710, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 3729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 0, 0, 0, 0, 1680, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1703, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 1712, 0, 0, 1722, 1721, 0, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 1674, 0, 0, 0, 1689, 1690, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1686,
	1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 0, 0, 3728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 1709, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 1708, 1703, 0, 1702, 1704, 0, 0, 0,
	1675, 0, 0, 0, 0, 1701, 0, 0, 1721, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 1713, 1695, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 1712,
	1701, 3423, 1722, 0, 0, 0, 0, 0, 1702, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 1718, 0, 1719, 0, 0, 0,
	0, 0, 0, 1689, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 1710, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 2959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 0, 0, 0, 0, 1680, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1703, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 1712, 0, 0, 1722, 1721, 0, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 1674, 0, 0, 0, 1689, 1690, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1686,
	1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 0, 0, 2958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 1709, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 1722,
	0, 0, 1708, 1703, 0, 1702, 1704, 0, 0, 0,
	1675, 0, 0, 0, 0, 1701, 0, 0, 1721, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 1713, 1695, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 1712,
	1701, 2957, 1722, 0, 0, 0, 0, 0, 1702, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 1718, 0, 1719, 0, 0, 0,
	0, 0, 0, 1689, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 1710, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 2956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 1697, 1698, 1699, 1700,
	0, 0, 0, 0, 0, 0, 1680, 4319, 1672, 1673,
	0, 1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1703, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 1712, 0, 0, 1722, 0, 1721, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 0, 1674, 0, 0, 1689, 1690, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 1691, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 1686,
	1687, 1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676,
	1677, 1678, 1679, 1681, 1682, 0, 0, 2923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1698, 1699, 1700, 0, 1709, 0, 0,
	0, 0, 1680, 0, 3043, 0, 0, 3042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4318,
	0, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	1722, 0, 0, 0, 0, 0, 1702, 1704, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 1718, 0, 1719, 0, 0, 0, 0, 0,
	0, 1689, 1690, 0, 0, 1696, 1672, 1673, 0, 1705,
	1706, 1707, 1715, 1716, 1717, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 1703,
	0, 1713, 0, 1695, 2894, 0, 1675, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2895, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1698, 1699, 1700, 0, 2491, 0, 0, 0, 0,
	1680, 1696, 1672, 1673, 0, 1705, 1706, 1707, 1715, 1716,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1703, 0, 1713, 0, 2490,
	0, 0, 1675, 0, 0, 1712, 0, 0, 1722, 0,
	1721, 0, 0, 0, 1702, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1718, 0, 1719, 0, 0, 0, 1674, 0, 0, 1689,
	1690, 0, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 1710, 1672, 1673,
	0, 1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1703, 0, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 1711, 0, 0, 0, 1721, 1686, 1687, 1693,
	1714, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678,
	1679, 1681, 1682, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 1697, 1698, 1699, 1700,
	0, 1709, 1694, 0, 0, 0, 1680, 0, 0, 0,
	0, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 1722, 0, 0, 0, 0, 0,
	1702, 1704, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 1718, 0, 1719, 0,
	0, 0, 0, 0, 0, 1689, 1690, 0, 0, 1696,
	0, 0, 1697, 1698, 1699, 1700, 0, 0, 0, 0,
	0, 0, 1680, 1710, 1672, 1673, 0, 1705, 1706, 1707,
	1715, 1716, 1717, 0, 0, 1713, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1703, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 1712, 0, 0,
	1722, 0, 1721, 0, 0, 0, 1702, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 1718, 0, 1719, 0, 0, 0, 1674, 0,
	0, 1689, 1690, 0, 0, 0, 0, 1709, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714, 1692,
	1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681,
	1682, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 1697, 1698,
	1699, 1700, 0, 1709, 985, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 1722, 0, 0, 1708,
	1703, 0, 1702, 1704, 0, 0, 0, 1675, 0, 0,
	0, 1701, 0, 0, 0, 1721, 0, 0, 1718, 0,
	1719, 0, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 1713, 0, 1695,
	1691, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 1686, 1687, 1693, 1714, 1692, 1688, 0, 1685, 1683,
	1684, 1676, 1677, 1678, 1679, 1681, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 3049, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 1686, 1687, 1693,
	1714, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678,
	1679, 1681, 1682, 0, 0, 0, 1712, 1701, 0, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 1710, 1672,
	1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 1703, 0, 0, 0, 3044, 0, 0, 1675,
	0, 3404, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0,
	1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 1697, 1698, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1680, 1672, 1673, 0, 1705, 1706, 1707,
	1715, 1716, 1717, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1703, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 1712, 0,
	0, 1722, 1721, 0, 0, 0, 0, 1702, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 1719, 0, 0, 1674, 0,
	0, 0, 1689, 1690, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1698,
	1699, 1700, 0, 0, 1709, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 1722, 0, 0, 1708,
	1703, 0, 1702, 1704, 2960, 0, 0, 1675, 0, 0,
	0, 0, 1701, 0, 0, 1721, 0, 0, 1718, 0,
	1719, 0, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 1713, 1695,
	1691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 0, 0, 3011,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 1686, 1687,
	1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677,
	1678, 1679, 1681, 1682, 0, 0, 1712, 1701, 0, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 1710, 1672,
	1673, 0, 1705, 1706, 1707, 1715, 1716, 1717, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 1703, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0,
	1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 1697, 1698, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1680, 1672, 1673, 0, 1705, 1706, 1707,
	1715, 1716, 1717, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1703, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 1712, 0,
	0, 1722, 1721, 0, 0, 0, 0, 1702, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 1719, 0, 0, 1674, 0,
	0, 0, 1689, 1690, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1698,
	1699, 1700, 0, 0, 1709, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 1673, 0,
	1705, 1706, 1707, 1715, 1716, 1717, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 1722, 0, 0, 0,
	1703, 0, 1702, 1704, 0, 0, 0, 1675, 0, 0,
	0, 0, 1701, 0, 0, 1721, 0, 0, 1718, 0,
	1719, 0, 0, 0, 0, 0, 0, 1689, 1690, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 1713, 1695,
	1691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1699, 1700, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 0, 1686, 1687,
	1693, 1714, 1692, 1688, 0, 1685, 1683, 1684, 1676, 1677,
	1678, 1679, 1681, 1682, 0, 0, 1712, 1701, 0, 1722,
	0, 0, 0, 0, 0, 1702, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 1718, 0, 1719, 0, 0, 0, 0, 0, 0,
	1689, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 1686, 1687, 1693, 1714, 1692, 1688, 0,
	1685, 1683, 1684, 1676, 1677, 1678, 1679, 1681, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 1686, 1687, 1693, 1714,
	1692, 1688, 0, 1685, 1683, 1684, 1676, 1677, 1678, 1679,
	1681, 1682,
}
var sqlPact = [...]int{

	5605, -1000, -1000, -1000, -1000, 192, -1000, -1000, 188, 187,
	186, 185, 184, 183, 180, 176, 175, -1000, -1000, -1000,
	-1000, -1000, -1000, 174, -1000, -1000, 172, -1000, 170, 168,
	166, -1000, -1000, 162, -1000, 161, -1000, -1000, -1000, -1000,
	159, 156, 155, 82134, 81611, 82650, 2118, 100858, 88870, 1897,
	73271, 100335, 72748, 99812, 99289, 2528, 154, -1000, 98766, 152,
	150, 149, -1000, 98243, -1000, 2059, -1000, 148, 4384, 59649,
	147, 146, 142, 2414, 139, -1000, 135, 134, 133, -1000,
	9751, 1497, -1000, 132, 131, -1000, 12449, 517, 86785, 130,
	129, 2365, 128, 126, 59125, 124, 120, 2151, 2665, -1000,
	-1000, 1929, -1000, -1000, 119, 116, 114, 111, 109, 105,
	103, 102, 101, 96, 95, -1000, 94, 92, 90, 89,
	87, 86, 85, 84, -1000, 83, 78, 76, 73, 72,
	71, 69, 67, 65, 64, 63, 61, 60, -1000, 10820,
	58, 1796, 1610, 1609, 1601, 1593, 1588, 967, 55, 54,
	53, 50, 49, 48, 47, 45, 42, -1000, 41, 40,
	39, 38, 37, 35, 34, 31, 163, 29, 25, 24,
	20, 19, 15, 11, 2233, -1000, 1504, 1368, 27133, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 106534, 101374, 10,
	-46, 9, -1000, 3011, 1011, 49171, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 255, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	484, 1718, 728, -1000, -1000, -1000, 97727, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2116, -67, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 726, -1000, 2115, 141, 2023, -1000,
	-1000, -1000, -1000, -1000, 101374, -1000, 1018, -1000, -1000, 3476,
	3475, 1917, 723, 88347, -1000, 1598, -1000, 916, 28777, -1000,
	1185, -1000, 28777, 252, -1000, -1000, -1000, -1000, -1000, -1000,
	3474, 3473, 3472, 3470, 3469, -1000, -1000, 72225, 20505, 71702,
	71179, 97211, 19972, 81088, 80565, 96688, 67012, 1015, -1000, -1000,
	-1000, 1360, -1000, -1000, -1000, -1000, -1000, -1000, -25, 64347,
	3223, 101374, -1000, 251, -1000, -1000, -1000, -1000, -1000, -1000,
	41597, 776, 41037, 492, 40477, 418, -1000, -1000, -1000, -1000,
	66479, -1000, 96165, 2245, 3468, 3467, 1093, 3465, 2962, 1711,
	3459, 1744, 1170, 3457, 3456, 3455, 3454, 3453, 3451, 1361,
	95642, 2708, 95119, 1580, 65946, 1009, 80042, 82650, 2402, 94596,
	1346, 1338, -1000, -1000, -1000, -1000, 2825, 2659, 2626, 1282,
	-1000, -1000, 2214, 3450, 3448, 3447, 3446, 3445, 106018, 1710,
	3444, 2314, 3441, 3440, 3439, 3438, 3436, 3428, 3427, -1000,
	79519, 997, 78996, 78473, 3093, 94073, 77950, 93550, 65413, 39917,
	1069, -1000, -1000, -1000, 51799, 5928, 4714, 93027, 53923, 82650,
	82650, -1000, -1000, -1000, -1000, -1000, 39357, 658, 38797, 1004,
	-1000, -1000, 52330, 2662, -1000, -1000, -1000, -1000, 38237, 453,
	37677, 960, 101374, -1000, 2707, 1831, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2428, 1552, 3246, 2489, 64880, 1887, 1344, 3031, 2824, 2822,
	1473, 3426, 3424, 2419, 2820, 2806, 2803, 2801, 2794, 1349,
	2355, 367, 26573, 2697, 1602, 37117, 1498, 1456, 2772, 2762,
	3264, 1810, 1844, 1968, 70656, 3422, 3416, 2999, 2759, 2743,
	2661, -1000, -1000, -1000, -1000, 1406, -1000, -1000, -1000, -1000,
	-1000, 73787, -1000, -1000, 1670, -1000, -1000, 1670, -1000, -1000,
	-1000, -1000, -1000, 1281, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1504, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2098, -1000, 1913, -1000,
	-1000, 2343, 3010, 3010, 3010, 3084, 468, 463, -1000, 163,
	-1000, -1000, 112908, -1000, -1000, 42145, 42145, 42145, 42145, 42145,
	42145, 42145, 1951, -1000, 722, -1000, -1000, 753, -1000, 721,
	600, -1000, -1000, -1000, -1000, -1000, -1000, 720, -1000, -1000,
	-1000, -1000, -1000, -1000, 3223, -1000, 23225, -1000, -1000, -1000,
	406, 719, 42145, -1000, -1000, 3278, 3276, 922, -1000, 219,
	924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2706, 713, 709, -1000, 706, 705, 703,
	702, 701, -1000, -1000, -1000, 699, 698, 696, 694, 693,
	690, 682, 680, -1000, 1829, -1000, -1000, -1000, -1000, -1000,
	-1000, 646, 644, 644, 644, -1000, 988, -1000, -1000, -1000,
	361, 642, 321, 639, 637, 635, -1000, 679, 678, 677,
	676, 674, 672, 671, 669, 668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 987, -1000, -1000, -1000, -1000, -26, 101374,
	-1000, 484, -26, -1000, -1000, 667, -1000, 30981, 30981, 30981,
	-1000, -1000, 2114, 42145, -1000, 2211, -1000, -20, -20, 864,
	50736, -1000, 48108, 864, 317, 763, 55488, -1000, 2660, -1000,
	-1000, 666, 218, -1000, -1000, -1000, -1000, 21036, 2651, 101374,
	101374, 82650, 82650, 82650, 2878, 42145, -1000, -1000, 62248, 101374,
	83166, 3179, 60165, 61727, 101374, 2701, -1000, 3002, -1000, -1000,
	101374, -1000, 42145, -1000, 3178, 1529, 68064, 3126, -38, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2289, 2304, 1107, 2139,
	-1000, 2914, 1347, -1000, 28777, 2951, -1000, -1000, -1000, 215,
	21036, -1000, -1000, -1000, -1000, -1000, -1000, 3039, 2854, 1477,
	-1000, 2138, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1688, 2852, -1000, 1909, 2850, 1685, -1000, -1000, 2153,
	-1000, -1000, 2989, -1000, -1000, 1964, 2849, -18, -1000, -1000,
	2180, -1000, -1000, 1861, -1000, -1000, 962, 2846, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 77427, 53392, 52330,
	64347, -31, -1000, -1000, -1000, -1000, -81, -1000, 19439, 112908,
	-1000, -1000, -1000, -1000, 1687, 112908, 889, -1000, -1000, 2845,
	-1000, 112908, 882, -1000, -1000, 2844, -1000, 2700, -1000, -1000,
	2213, -1000, -1000, 3415, -1000, -1000, 3412, -1000, 3411, 3410,
	3409, -1000, 1661, 1801, 3408, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 76911, 2113, -1000, -1000, 75865, -1000, 2208, 3120,
	-1000, -1000, -1000, 76388, 991, -1000, 962, 2206, -1000, 86262,
	843, -1000, 3407, 3082, 2459, 962, 2202, -1000, -1000, -1000,
	-1000, -1000, 965, -1000, 57047, -1000, 57047, -1000, 1515, -1000,
	105502, -20, 82650, 3223, -1000, 3405, -1000, -1000, -1000, -1000,
	-1000, 2843, 3404, 3400, 3398, -1000, 101374, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 191, 2841, -1000, -1000, 85746, 191,
	2839, -1000, 191, 2838, -1000, 85230, -1000, -1000, 2086, 2835,
	-1000, 194, 2833, -1000, -1000, 193, 2831, -1000, -153, 2828,
	-1000, -1000, 112908, -1000, -1000, -1000, -49, -1000, -1000, -1000,
	1011, -1000, 51260, -1000, 51260, 87824, 67543, 950, 772, 58601,
	112908, -1000, -1000, -1000, -1000, 112908, -1000, -1000, -1000, -246,
	-1000, -1000, 67543, 52330, 112908, -1000, -1000, -1000, -1000, 112908,
	-1000, -1000, -1000, 67543, 75865, -1000, 92504, 75349, -1000, -1000,
	1354, 2347, -1000, -1000, -1000, 67543, 1244, 67543, 67543, 67543,
	-1000, 91981, -1000, -1000, 1914, 1225, 2991, 1910, 82650, -1000,
	1734, -1000, -1000, -1000, 3015, -1000, -1000, 2698, -1000, 61206,
	84714, -1000, 84198, -1000, 83682, -1000, 82650, -1000, 82650, -1000,
	3397, 3396, 3394, 3384, -1000, 3373, 3013, -1000, 112908, 3006,
	-1000, 3372, 3113, 2697, 112908, -1000, 2860, 1605, 1597, 101374,
	-1000, -1000, 101374, -1000, 101374, -1000, -1000, -1000, 1428, -1000,
	-1000, 2288, -1000, -1000, -1000, -1000, 82650, -1000, -1000, -1000,
	-1000, -1000, -1000, 2694, -1000, 1592, -1000, 1705, -1000, 1352,
	-1000, -1000, 205, -1000, -1000, -38, -1000, 104986, -1000, 2343,
	-1000, 101374, -1000, 2298, 2676, 2693, 1355, 2126, 2388, -1000,
	36557, 2369, 45433, 2132, 163, -1000, -1000, 163, 163, 28229,
	-1000, -1000, 60165, 60165, 21036, 1310, 42145, 42145, 42145, 42145,
	42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145,
	42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145,
	42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145,
	42145, 1852, 42145, 1280, 42145, 42145, 42145, 42145, 1795, -1000,
	-1000, 1808, 528, 1945, -1000, 3224, 3224, 3224, 973, 973,
	113256, 113256, 465, 3370, 753, -1000, 42145, -1000, 91, 42145,
	21569, -1000, 463, 11216, 2244, -1000, 461, 22129, -1000, -1000,
	-1000, 23225, 600, 35997, 42145, 975, 112908, -1000, -1000, 1535,
	3241, 18907, 2669, 2535, 665, 773, 651, 26013, 25453, 24893,
	24333, 550, 42145, 42145, 42145, 42145, 42145, 42145, 42145, 42145,
	-1000, -1000, 3256, -1000, 3241, -1000, -1000, -1000, -1000, 3241,
	1308, 1174, 3241, -1000, 3241, 3241, 8393, 8393, 35449, 34889,
	34329, 45981, 33769, 42145, 23773, 33209, 32649, -1000, 101374, -26,
	3177, 42145, 125, -1000, 111621, -1000, 125, 125, 657, -50,
	112908, 2333, 2333, 49693, 2179, 1955, 1955, 1955, -1000, 864,
	14622, 864, 90944, 1977, 864, 864, 212, 277, 457, 47586,
	2211, 90944, 736, 655, -1, -3, -4, -1000, -1000, -7,
	-9, -1000, -1000, 82650, 654, 21569, 21036, 210, 1386, -52,
	2392, 2387, 2386, -1000, 2376, 1659, -57, 1279, 82650, 101374,
	-58, -1000, 1020, -62, -1000, 1259, 209, 3241, -1000, -1000,
	-1000, -1000, -1000, 3369, 3368, -1000, 985, 653, 650, 417,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 646, 644,
	644, 644, -1000, 361, 642, 321, 639, 637, 635, -1000,
	-1000, -1000, -1000, -1000, 2650, 82650, 101374, -81, 83166, 82650,
	833, -64, 1099, -38, -1000, -1000, -1000, 1670, -1000, 1767,
	-1000, -1000, -1000, -1000, -1000, -1000, 1366, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 922, -1000, -1000, -1000, -1000,
	-1000, -1000, 3235, 3230, -28, -1000, -1000, 21036, -1000, -40,
	1576, 1629, -1000, 70133, 2209, 2993, 2973, 1509, -1000, 1408,
	1275, 3064, 73787, 3148, 3164, 910, -1000, 2648, -1000, -1000,
	906, 1571, 1628, 1274, 73787, 1909, -1000, 60165, -1000, 2417,
	3063, 1353, 1341, 1353, 1353, 1356, -1000, 73787, 1617, 1273,
	1269, -1000, 1266, 1265, -1000, -51, 3144, 3160, 244, -1000,
	2639, 1262, -1000, -1000, 82650, 21036, 1507, 1505, 1615, 1261,
	-30, -1000, 3140, 3139, 1248, 1239, -1000, 4692, -1000, 67543,
	1671, 2827, 2487, 847, 2482, -1000, -1000, 847, -31, 64347,
	101374, 207, -1000, 91, 42145, 42145, 91, 42145, 91, 3109,
	2811, -1000, -1000, -1000, -1000, -1000, 3366, 1786, 2312, -1000,
	-1000, 633, 2198, 2631, 101374, 2407, -34, 82650, -1000, 2808,
	62769, 1909, 2197, -1000, -1000, 74826, -1000, 2807, 484, 2195,
	-1000, 523, 3365, -1000, 104470, -1000, 3002, 1200, 2800, 1057,
	549, 3176, -1000, 549, 57569, -1000, 101374, -1000, -20, -1000,
	101374, -1000, -1000, -1000, 3364, -1000, 82650, -1000, -1000, 82650,
	191, 2798, -1000, 82650, -1000, 82650, 189, 2797, -1000, -1000,
	101374, -1000, 82650, 82650, -1000, 101374, 67543, 67543, 4540, 69101,
	-65, -71, 456, -1000, 91465, 101374, 1055, 69617, 101374, 2941,
	958, 52330, -1000, -74, -246, 2479, 950, 950, 847, -1000,
	847, -1000, 82650, 2691, -1000, -1000, 67543, 950, 950, 950,
	-1000, -1000, -1000, -1000, 3361, 3358, 3357, -1000, -1000, -1000,
	959, 82650, 101374, 82650, -1000, -1000, 101374, -1000, 101374, 101374,
	82650, -1000, 959, 101374, 959, 101374, 959, 101374, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 91, 42145, -1000, -1000, 3356,
	1520, -1000, 2688, -1000, 2682, -1000, 23, -1000, -1000, -1000,
	-1000, -1000, 1821, 82650, 82650, 82650, 82650, 101374, 82650, -1000,
	73787, -1000, 2298, 2676, -1000, -1000, -1000, -1000, -1000, -1000,
	1618, 2041, -1000, 2346, -1000, 1445, -1000, -1000, -1000, 112908,
	46512, -1000, -1000, 112908, 1725, -1000, 44885, 44337, -1000, -1000,
	1591, 82650, 2404, -1000, 2404, -236, -1000, 111455, 2345, 82650,
	-1000, -1000, -1000, -1000, -1000, 903, 602, 602, 1188, 1188,
	1188, 1188, 3123, 564, 1232, 1859, 312, 312, 5339, 5339,
	5339, 5339, 5339, 312, 360, 973, 973, 360, 360, 360,
	360, 360, 973, 973, 973, 312, 312, 312, 113256, 113073,
	8770, 42145, 42145, 1192, 1794, 528, 8555, 42145, 8892, 8892,
	8892, 8892, -1000, 1901, -1000, -1000, -1000, -1000, 2617, 632,
	45981, 45981, -1000, -1000, -1000, -1000, 22677, 42145, -1000, -1000,
	-1000, -1000, 32089, -1000, -1000, 110799, -314, 455, -222, -10,
	-1000, 42145, 42145, 42145, 450, -1000, 206, 42145, 101374, -1000,
	107602, 734, -207, -1000, -79, 1365, -1000, 42145, -1000, -1000,
	1167, -1000, 1165, 1164, 1163, -1000, 623, 448, -1000, 202,
	-1000, 1953, 622, 615, 42145, -1000, -1000, -1000, -1000, -1000,
	110616, -1000, -1000, 110451, -1000, -1000, 110199, -1000, -1000, 110016,
	-1000, -1000, -1000, 112656, 107574, 14051, 13489, 7532, 13002, 12071,
	-89, 447, -91, 445, 900, 887, 444, 433, 432, -96,
	-1000, 3354, 3353, 3350, -1000, 3348, 3346, 3341, -1000, 3340,
	3339, 3338, -1000, 3337, 3335, 3334, -1000, 3333, 3331, 3329,
	-1000, 3327, 3326, 3322, -1000, 3321, 3319, 3318, -1000, 3317,
	3313, 3312, -99, 431, -1000, 2610, -222, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 428, -1000, 427, -1000, 112473,
	-222, 420, 4806, -1000, 45981, 45981, 45981, -1000, 414, -1000,
	111217, -1000, 112308, 31541, 31541, 31541, 413, 112056, 42145, -222,
	-102, -1000, -110, -1000, -1000, 572, -111, 976, 30981, 48647,
	21036, -1000, 976, 976, 42145, -1000, 42145, 2362, -1000, -1000,
	-1000, 2360, 1986, 2333, 49693, -1000, -1000, -1000, -1000, 90944,
	-1000, 3223, 2776, -1000, 90944, -1000, -1000, 101374, 484, -1000,
	90944, 90944, 21036, 864, -1000, 864, 90944, 577, -1000, -1000,
	-1000, -1000, -1000, 411, 54444, -10, 201, 21036, 962, -1000,
	2468, 2468, 2468, 2468, -1000, -1000, 101374, 1161, -36, -101,
	3199, -1000, 1848, -1000, 60165, -1000, 749, 1060, 21036, -1000,
	-1000, -1000, 614, -1000, 3241, 3241, -1000, 3241, 101374, 2606,
	104, 98, 971, 28777, -1000, 1670, -1000, -1000, 1511, -1000,
	1789, -1000, 1145, -1000, -1000, -1000, -1000, 28777, -1000, 1935,
	101374, 101374, 82650, -1000, 101374, -1000, 2194, 103954, 2193, 60165,
	101374, -1000, -1000, 610, 607, 2344, 2339, 1050, 101374, 101374,
	2338, 103438, 102922, 101374, 1847, 42145, 62769, 2064, 2201, 91,
	91, -1000, -1000, 91, 606, 1254, 82650, 82650, 101374, 82650,
	1625, -1000, -1000, -1000, -1000, -1000, 74303, -1000, -1000, 3250,
	3248, -1000, 1353, -1000, -1000, -1000, 1353, 1909, 1603, 101374,
	82650, 62769, 1607, 101374, 1889, 91, 91, -1000, -1000, 91,
	605, 21036, 1816, -1000, 2731, 101374, 3274, 101374, 101374, 101374,
	62769, 3022, 102406, 101374, 101374, 62769, 4692, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 63831, 1063,
	962, 1579, 1160, 73787, 52330, 957, 52330, 2465, -1000, -1000,
	18375, -1000, 112908, 112908, -1000, 112908, -1000, 60685, 101374, -1000,
	990, 101374, 69617, 944, 2796, 56525, -81, 950, 67543, 82650,
	-34, 101374, -1000, -1000, -1000, -1000, -1000, 1909, 2792, 484,
	2184, -1000, 67543, 3175, 2791, 604, 3311, 3310, -1000, 2110,
	2177, -1000, -1000, 101890, 2810, 787, 101374, 976, 49693, 1814,
	-1000, 54967, 1029, 101374, 1726, 80, -1000, -1000, -1000, 8,
	101374, -1000, 609, 3308, -1000, -1000, 191, -1000, 82650, 191,
	191, -1000, 82650, 82650, 2086, -1000, 194, 193, -1000, -153,
	-1000, -1000, 4540, 4540, 950, -245, 603, -1000, 841, 839,
	52861, 67543, -112, -1000, -1000, -1000, -1000, -1000, 82650, 101374,
	700, 2458, 101374, -113, -1000, 199, 601, -1000, 2436, -1000,
	-1000, 958, 52330, 2600, -1000, -1000, 968, -1000, 1339, 950,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-21, -81, -81, -81, -36, -1000, 959, -1000, 959, -1000,
	959, -1000, 112908, -1000, -1000, 1514, 1501, 101374, -1000, 21036,
	101374, 82650, 21036, 82650, 2672, 2670, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1070, -1000, 1725, 2040, -1000, 600,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2272,
	-1000, -37, 28229, 869, -1000, -1000, 82650, -22, 42145, 42145,
	8448, 8157, 42145, 45981, 45981, -1000, 42145, 6198, -1000, -1000,
	-1000, -1000, -1000, 2586, 593, 42145, 60165, 7324, 7141, -1000,
	409, 9186, 360, -1000, 42145, -1000, 404, 30433, -1000, 111707,
	-60, -119, -1000, 15167, -222, -120, -1000, -1000, 748, -1000,
	2750, -1000, 42145, 111873, 2232, 1895, 1679, 1542, 3241, 3273,
	17843, -1000, 58085, 977, 1998, 109851, -1000, -1000, -1000, -1000,
	60165, 60165, 42145, 42145, -1000, 42145, 42145, 42145, -1000, -1000,
	-1000, 3241, 919, -1000, -1000, -1000, 919, -1000, -1000, 1353,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1353, -1000, 42145, -1000, -1000,
	2578, 42145, -1000, 60165, 60165, 45981, 45981, 45981, 45981, 45981,
	45981, 45981, 45981, 45981, 45981, 45981, 45981, 45981, 45981, 45981,
	45981, 45981, 45981, 45981, 2325, 45981, 3222, 3222, 3222, -1000,
	2667, 2578, 42145, 42145, 60165, 400, 397, 394, -1000, 42145,
	-222, -1000, -1000, 4540, 591, -1000, 2259, -1000, 2529, -1000,
	42145, -1000, -238, -1000, 2211, -1000, -1000, 2529, 2529, -126,
	112908, 49693, 49693, -1000, 590, 42145, 2352, -1000, -1000, 733,
	-315, -1000, 838, -1000, -1000, -1000, -1000, -1000, 484, -1000,
	-1000, -1000, 198, 90944, 90944, 732, -1000, -127, -1000, -1000,
	-128, -1000, 3174, 389, 21036, -1000, 976, 2995, -1000, -1000,
	-1000, -1000, -1000, -1000, -81, 101374, 101374, 2021, 3272, -1000,
	3244, 742, 731, 190, 3241, 388, 387, 384, -81, 101374,
	101374, 101374, -1000, 2423, -1000, -38, -1000, -1000, -1000, 42145,
	-1000, -1000, 2983, 1158, 1157, -1000, -1000, 2789, -1000, 2176,
	-1000, 1036, -1000, 1572, -1000, 42145, 50215, 587, 586, 3303,
	1797, 3302, 1053, 2782, 2086, 2781, 2086, -1000, -1000, 884,
	-1000, 112908, -1000, 584, 583, -1000, -40, 1543, 1566, 966,
	-1000, -1000, 42145, 42145, 90428, -1000, 440, 2989, -23, -1000,
	-1000, 1557, 1154, -1000, -1000, -1000, -1000, 1909, 1545, 1135,
	-1000, -1000, -1000, 964, -1000, -1000, 963, -1000, -1000, 42145,
	-1000, -51, 1133, 3124, 2172, 82650, 1126, -1000, 1125, -1000,
	-1000, -1000, 3125, 2086, 2777, 1141, -1000, -1000, -1000, -1000,
	-1000, 63300, -1000, 101374, 82650, 1541, 847, -1000, 2137, 847,
	957, 2577, -1000, 2405, -1000, 82650, 3301, 382, -133, -59,
	60165, 3173, -1000, 2100, 612, 82650, 904, -1000, 3223, -1000,
	-1000, -1000, -1000, 3116, 82650, 3170, 2763, 962, 91, 82650,
	3271, -1000, -1000, 82650, 2761, 2105, 2170, 2299, 787, 68585,
	-1000, 962, 1989, -148, -1000, 1726, 29873, 2981, -134, -1000,
	-1000, -1000, 976, 57569, 49693, 42145, 3298, -135, -1000, -1000,
	-1000, -1000, 191, -1000, -1000, -1000, 189, -1000, -1000, -1000,
	-1000, -1000, -1000, 89391, 89391, 67543, 67543, 67543, 950, 101374,
	101374, 69617, -1000, 582, 101374, 101374, 576, -1000, 101374, 101374,
	3297, 67543, -76, 575, -1000, 836, 835, 829, -1000, -1000,
	-1000, -1000, -1000, -1000, -246, 91, -1000, 2019, 82650, -1000,
	17311, -1000, -1000, -1000, -1000, -1000, 959, -1000, -1000, 1903,
	2129, 1903, 1703, 1698, -1000, 2033, -1000, -1000, -1000, -1000,
	2396, 3009, 21036, 3095, 8892, 42145, 42145, 6026, 5955, 5013,
	8892, 42145, 42145, 60165, 7903, -136, 42145, 42145, -1000, 42145,
	730, 112908, 3268, 42145, 378, 374, -1000, -1000, -1000, 3239,
	-1000, -1000, -1000, 112908, 42145, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 373, -1000, 164, -1000, -1000, -1000, 107050, -1000,
	42145, 372, 3054, -1000, 371, 370, 247, 6960, 109599, 109416,
	109251, 369, -1000, -1000, 368, 345, 112908, 2667, 112908, -1000,
	-1000, 871, 871, 1297, 1297, 1297, 1297, 3222, 271, 860,
	509, 793, 793, 793, 913, 1079, 1079, 793, 793, 793,
	2571, 2324, 573, 5971, -1000, -1000, 112908, 112908, 340, -1000,
	-1000, -1000, -222, 337, 4540, -1000, 2523, 3050, 112908, -1000,
	49693, 2523, 2523, -1000, -1000, 1986, 101374, 112908, 49693, -1000,
	2776, -1000, 15710, -1000, 21036, -1000, -1000, -1000, -1000, 3223,
	-1000, 54444, -1000, 571, -1000, 81, -1000, 2995, -1000, 826,
	-1000, -81, -81, -1000, -1000, 565, 3296, 741, 21036, 336,
	-1000, -1000, -1000, -81, -81, -81, -1000, 2940, 112908, 101374,
	101374, 101374, 2749, -1000, 4457, -1000, 1050, 108999, -141, -1000,
	101374, 42145, 101374, 50215, 101374, -1000, -1000, 1823, 2385, 1087,
	-1000, 3023, 101374, -1000, 101374, -1000, -1000, 101374, 101374, 82650,
	101374, 2733, -155, 112908, -88, -1000, 825, -1000, 1320, -1000,
	16779, 101374, 82650, 101374, 82650, 1931, 2732, -156, 21036, -1000,
	3267, 3266, 2746, 3027, 3265, 101374, -1000, 101374, 82650, 2939,
	-1000, -1000, -1000, -1000, 1533, 1124, 957, -105, 570, -1000,
	824, -1000, -1000, 815, 957, -1000, 67543, 52330, 484, -1000,
	2453, -1000, 87301, 2028, 91, -1000, 3295, 89912, 569, -1000,
	2003, -1000, 553, 62769, 1909, 91, 82650, -1000, -1000, 484,
	333, -108, -1000, 1041, 21036, 82650, 2745, 2306, 787, 68585,
	-1000, 1200, 2388, -1000, -125, -1000, 435, 91, 1989, -1000,
	-148, 112908, -1000, 812, -1000, -1000, -1000, -161, -1000, -1000,
	330, -1000, 2938, 2937, -1000, 2562, 50215, 567, 566, 101374,
	2933, -1000, -1000, -162, 2310, 2310, 67543, 52330, 67543, 958,
	-1000, 2239, -1000, -1000, -1000, -1000, -1000, 21036, 1570, -1000,
	563, 561, -1000, -1000, -1000, -1000, 3009, 8892, 8892, 42145,
	42145, 42145, 8892, 7903, -164, -1000, 8892, 8892, -222, -1000,
	-1000, 111707, -1000, -1000, -1000, 112908, -1000, 16247, 1941, -1000,
	108816, -1000, 28229, -1000, -1000, 42145, 42145, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 45981, 2564, 539, 60165, -1000,
	-1000, 329, 974, 42145, 43789, 2211, 974, 974, -1000, -169,
	-1000, -1000, -1000, 3223, 81, -1000, -1000, 3292, 21036, -1000,
	67543, 738, -1000, 3291, -1000, -1000, -1000, -1000, -1000, -1000,
	101374, -1000, 101374, -1000, 21036, 101374, 2546, 2162, -1000, -1000,
	2334, 538, 45981, 82650, 872, -1000, 3190, 2547, 1899, 50215,
	-1000, 3009, -1000, 108651, -1000, -172, -174, 2161, -1000, -1000,
	2150, 42145, -1000, 60165, 537, 2086, 2086, -179, -182, -1000,
	-1000, 42145, 1121, 101374, 29325, -1000, 3290, 2989, -1000, -1000,
	-1000, -1000, 101374, 42145, 1105, -1000, -1000, -1000, 3262, 2086,
	21036, -1000, 2086, 2086, 3027, 1081, 101374, 82650, -1000, 2178,
	2178, 67543, 52330, -1000, -153, 957, 3168, 1889, 2476, -1000,
	-1000, -1000, -1000, 2330, -1000, -1000, 101374, 2319, 951, -1000,
	-184, -1000, 795, 790, 69617, 944, 905, -1000, -1000, -1000,
	-1000, 484, 3165, -1000, 3260, 536, 101374, 2103, 530, 21036,
	2976, 787, 68585, -1000, 2810, 1726, -1000, 2167, 101374, 2970,
	-1000, 2388, 528, -1000, 950, 524, 520, 3503, 3503, -185,
	50215, 50215, -187, 519, 950, -1000, -190, -1000, -1000, -1000,
	-1000, -154, -1000, 840, 803, -1000, -1000, 82650, 82650, 42145,
	42145, -1000, 8892, 8892, 8892, -1000, 293, -1000, -1000, 1989,
	3049, -1000, -171, 108563, 108398, 552, 45981, 60165, -200, -1000,
	-1000, 101374, 112908, -196, -1000, 112908, 516, 515, 408, -1000,
	-1000, -1000, 551, -1000, -1000, 3289, -1000, -1000, 1838, -1000,
	-1000, -1000, 101374, 2169, -1000, 1049, 42145, 5971, 513, 42145,
	-1000, 3161, -1000, 2418, 2607, 2453, 511, -1000, -1000, -1000,
	-1000, 869, 101374, 1040, 1764, -1000, -1000, 112908, 3027, 50215,
	-1000, -1000, 508, 496, 112908, 494, 788, 2559, -1000, -1000,
	-1000, -1000, 112908, 493, 3124, -1000, -1000, -1000, -1000, 2086,
	82650, -1000, -1000, -1000, -201, -1000, -1000, 1768, 91, 944,
	-1000, 1916, 2028, 491, -1000, -1000, 2045, 2420, -1000, 89912,
	28777, 28777, 278, 3159, 905, -1000, 3218, -1000, 3157, 91,
	-1000, 50215, -1000, 82650, 50215, 2088, -1000, 2283, 68585, -1000,
	2299, -1000, -1000, -202, 101374, 1726, -1000, -1000, 67543, 67543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1040, -210, -215, -1000, 67543, -1000, -1000, 2239, -1000,
	101374, -1000, 101374, -1000, -1000, -216, -217, -1000, 1932, 42145,
	28229, -1000, -1000, 552, -224, -1000, -212, -1000, 3155, 43789,
	3288, 3287, 3286, -1000, -1000, -1000, -1000, 2741, 2511, 107994,
	2264, 101374, 107966, -1000, 2589, -1000, -1000, 1889, 101374, -1000,
	-1000, 2453, 2503, 82650, 1043, -225, 1903, 1903, 42145, 27681,
	1912, 42145, -1000, -1000, 3027, -1000, 2552, 3232, -1000, 2045,
	82650, 101374, -1000, 3017, -1000, 2926, -1000, -1000, -1000, 2453,
	91, -1000, -1000, 91, -1000, -226, 1041, -227, 82650, 787,
	-1000, 2306, 976, -1000, -1000, -244, -247, 1899, 1040, 948,
	-249, -1000, -250, -252, -1000, -1000, 272, 43241, 43241, 43241,
	-222, -236, -1000, 101374, 488, -1000, -1000, -1000, -1000, 2723,
	956, -1000, 2048, 1760, 257, 1044, -1000, -1000, 2547, -257,
	-1000, 955, 484, -1000, 42145, 1040, -258, -1000, 1026, -263,
	-1000, 1023, -265, -1000, 2558, -1000, -266, 2086, 954, 3104,
	-1000, -1000, -1000, -1000, 483, -273, -1000, -1000, 2242, -1000,
	1889, 951, -1000, 1040, 482, 1899, 481, 1353, 2976, 2872,
	950, 950, 2453, 1899, 976, 480, 950, -1000, -1000, -1000,
	2774, -1000, 47043, 2067, 1691, 111051, 2774, 2774, -1000, -1000,
	101374, 3094, -1000, 2065, 2058, 1444, -1000, -1000, -1000, -1000,
	-1000, -1000, 976, -1000, 3092, 2264, 112908, 2453, -1000, 1903,
	2474, -1000, 1903, 2557, -1000, 1911, -1000, -1000, -1000, 1612,
	3220, 101374, -1000, 101374, 1642, 1613, 3284, 944, 2045, 1899,
	50215, 2453, 50215, -1000, -1000, 1255, -1000, -1000, 1889, 2453,
	-1000, -1000, -1000, 1740, 3186, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 786, -1000, 2911, -1000, 1068, 2060, 2060,
	-1000, 783, 2048, -1000, -1000, 478, -1000, 477, -1000, 2001,
	-1000, -1000, -274, -1000, -1000, 3283, -1000, 2045, -1000, 2453,
	-275, 1889, -285, -1000, 1486, 948, 1889, 1674, -1000, -1000,
	1973, 42693, 42145, -1000, 3203, -1000, -1000, 2354, -1000, 42145,
	2547, 42145, 42145, 56009, 2077, -1000, -1000, 1889, 1040, 948,
	1899, 57569, 976, 948, -1000, -1000, -1000, 112908, -1000, -1000,
	-1000, 112908, -1000, -288, -290, -245, 89391, -1000, -1000, -1000,
	948, 1899, 976, 2453, -271, -1000, 976, 1889, 1104, -291,
	976, 2453, -1000, 1889, -1000, -1000, -1000, 466, -1000, -1000,
	1889, 948, 42145, 948, 976, -293, 976, -1000, 1889, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 4117, 4115, 4113, 4112, 4111, 4106, 4105, 4103, 4102,
	4097, 4096, 4095, 4094, 4088, 4084, 4081, 4073, 4072, 4071,
	4066, 4065, 4064, 4062, 4061, 4058, 4057, 4056, 4054, 4053,
	4046, 4044, 4041, 4040, 4039, 4033, 4029, 4027, 4026, 4025,
	4024, 4023, 4022, 4021, 4020, 4017, 4016, 4015, 4014, 4012,
	4011, 4010, 4009, 4008, 37, 4007, 4006, 4004, 4003, 4002,
	4001, 4000, 3999, 3997, 3992, 3989, 3988, 3986, 3985, 3984,
	3983, 3978, 3977, 3976, 51, 3974, 241, 3973, 3971, 3969,
	3968, 3966, 3965, 3961, 3960, 3959, 3952, 3947, 3936, 240,
	3935, 142, 3933, 3928, 3927, 3926, 3925, 239, 3922, 3916,
	3906, 3904, 245, 3903, 3899, 3898, 3897, 3896, 3895, 3893,
	3890, 3888, 76, 130, 3879, 3878, 472, 3877, 3876, 3875,
	3868, 3866, 3865, 3864, 3863, 3862, 3859, 212, 3857, 237,
	3856, 3853, 3852, 3850, 3849, 3848, 3847, 3846, 3845, 3839,
	3838, 3832, 3830, 3828, 3826, 3825, 3821, 3820, 3814, 3813,
	3811, 3810, 3808, 3805, 3803, 3801, 3799, 3797, 3796, 3792,
	3791, 3789, 3785, 243, 177, 3784, 3782, 236, 234, 3781,
	3780, 3779, 3777, 3774, 101, 7, 34, 3773, 3765, 85,
	77, 67, 80, 88, 71, 3762, 94, 3758, 102, 53,
	3756, 15, 4, 229, 200, 9700, 198, 3755, 3753, 3752,
	205, 160, 3751, 204, 3750, 3749, 3748, 3746, 79, 52,
	152, 151, 143, 141, 740, 3743, 3742, 82, 61, 42,
	31, 23, 3737, 3734, 3733, 3732, 3066, 106, 3730, 223,
	210, 139, 3728, 3722, 3720, 443, 3716, 3711, 59, 3706,
	213, 63, 112, 17, 105, 3704, 116, 28, 3697, 147,
	46, 3696, 129, 81, 69, 6313, 7437, 3695, 96, 39,
	92, 2715, 155, 132, 165, 226, 137, 181, 174, 145,
	150, 3693, 219, 3692, 3162, 60, 134, 3691, 3689, 3687,
	58, 166, 91, 3685, 3683, 56, 13, 6, 1, 144,
	14, 104, 18, 3681, 21, 3680, 3676, 3674, 3673, 38,
	158, 3672, 244, 3666, 66, 43, 40, 3664, 248, 182,
	3663, 192, 113, 3661, 3660, 220, 172, 136, 3658, 74,
	188, 3655, 3653, 3651, 3650, 3648, 108, 3, 107, 3646,
	3644, 118, 3643, 35, 203, 164, 3641, 48, 3638, 3637,
	146, 84, 110, 238, 122, 191, 99, 189, 153, 194,
	3636, 3634, 3633, 156, 3632, 3629, 187, 135, 3626, 3625,
	170, 246, 32, 62, 201, 64, 161, 133, 3623, 169,
	3622, 3621, 242, 154, 180, 8, 19, 83, 103, 3620,
	9, 196, 127, 171, 98, 3619, 5096, 2274, 2504, 3618,
	3616, 131, 100, 57, 111, 125, 232, 55, 3614, 3613,
	2366, 3612, 3611, 3610, 3609, 159, 3606, 3604, 3599, 115,
	123, 222, 3597, 72, 68, 45, 11, 93, 215, 247,
	90, 185, 148, 224, 3590, 3586, 3581, 157, 3580, 44,
	117, 3578, 167, 218, 3577, 3576, 176, 3575, 119, 1671,
	50, 126, 3573, 186, 3572, 3569, 3568, 3567, 3566, 3565,
	3564, 899, 197, 3563, 3562, 3561, 29, 162, 3560, 231,
	128, 190, 87, 36, 3559, 78, 3757, 3558, 214, 207,
	89, 97, 3557, 1276, 49, 0, 10580, 7003, 9571, 10371,
	3555, 2276, 3553, 3552, 3551, 183, 114, 3550, 3546, 3545,
	86, 3543, 65, 3541, 3540, 54, 3539, 20, 2, 10,
	24, 22, 173, 168, 3537, 3536, 47, 109, 120, 3535,
	233, 193, 3534, 3533, 3532, 3530, 75, 3529, 25, 3526,
	27, 3524, 3523, 41, 12, 33, 3518, 3514, 209, 3513,
	184, 211, 3512, 138, 3511, 3147, 124, 3510, 3509, 228,
	73, 3508, 221, 3507, 3091, 3506, 3505, 16, 3504, 3503,
	206, 149, 178, 3501, 3500, 140, 3498, 3496, 3494, 217,
	3492, 3490, 26, 3488, 5, 3487, 3486, 175, 3006, 3485,
	3484, 30, 3480, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 539, 539, 21, 35, 22, 36,
	15, 540, 540, 540, 540, 28, 23, 37, 25, 25,
	25, 25, 25, 177, 177, 177, 177, 20, 20, 31,
	31, 211, 211, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 538, 538, 213, 213,
	212, 207, 207, 541, 541, 214, 214, 214, 216, 216,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 440,
	440, 440, 471, 471, 471, 554, 554, 555, 555, 555,
	555, 555, 115, 115, 339, 339, 339, 43, 43, 43,
	43, 43, 533, 533, 179, 179, 179, 181, 181, 180,
	180, 180, 180, 65, 65, 546, 546, 547, 547, 545,
	548, 548, 548, 178, 178, 178, 111, 111, 111, 111,
	112, 112, 113, 113, 182, 182, 182, 184, 184, 183,
	183, 183, 183, 183, 183, 183, 183, 188, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 93, 93, 473,
	473, 474, 474, 173, 173, 174, 174, 174, 174, 175,
	175, 176, 176, 176, 57, 185, 185, 187, 187, 186,
	186, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 164,
	164, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 62, 62, 62, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 557, 557, 558, 558, 559, 559, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 71, 71, 301, 301,
	273, 273, 72, 72, 72, 73, 73, 74, 74, 59,
	59, 531, 531, 316, 316, 431, 431, 76, 76, 338,
	338, 77, 77, 77, 77, 77, 77, 78, 78, 78,
	78, 78, 78, 78, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 86, 86,
	86, 86, 86, 87, 87, 87, 84, 84, 84, 81,
	81, 81, 80, 80, 80, 85, 85, 85, 530, 264,
	264, 83, 83, 83, 82, 82, 82, 317, 317, 88,
	88, 88, 88, 274, 89, 89, 89, 89, 89, 89,
	89, 89, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 433, 433, 90, 90, 90,
	398, 398, 94, 94, 94, 354, 354, 95, 95, 95,
	95, 95, 96, 96, 96, 96, 96, 96, 114, 114,
	114, 114, 114, 114, 535, 535, 309, 309, 229, 229,
	229, 229, 104, 104, 104, 104, 105, 105, 105, 106,
	106, 169, 169, 121, 121, 121, 121, 121, 120, 120,
	120, 120, 120, 120, 49, 49, 49, 50, 50, 51,
	51, 52, 52, 53, 53, 54, 54, 54, 54, 54,
	123, 123, 551, 551, 125, 122, 122, 122, 124, 124,
	124, 124, 126, 127, 127, 127, 127, 127, 127, 127,
	127, 128, 128, 465, 465, 325, 325, 463, 463, 482,
	482, 464, 464, 278, 278, 278, 278, 278, 279, 279,
	279, 472, 472, 472, 472, 472, 472, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 170, 170, 171, 172, 172, 172, 172, 172, 149,
	149, 149, 163, 163, 163, 163, 163, 163, 163, 152,
	152, 152, 139, 139, 130, 130, 130, 130, 130, 130,
	130, 134, 134, 134, 134, 134, 134, 134, 134, 131,
	131, 141, 141, 141, 141, 141, 135, 135, 136, 136,
	159, 159, 138, 138, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 132, 132, 132, 132, 143, 143, 143,
	143, 361, 361, 361, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 162, 162, 162, 162, 162,
	162, 549, 549, 550, 550, 156, 156, 156, 156, 156,
	156, 412, 412, 150, 150, 150, 150, 155, 155, 155,
	155, 158, 158, 158, 158, 344, 344, 147, 147, 147,
	148, 148, 148, 153, 153, 154, 151, 151, 157, 157,
	157, 157, 133, 133, 133, 561, 561, 561, 160, 160,
	146, 146, 161, 161, 161, 161, 161, 161, 161, 161,
	145, 145, 145, 144, 144, 144, 144, 137, 532, 532,
	528, 528, 528, 528, 528, 528, 528, 528, 529, 529,
	529, 529, 534, 534, 99, 99, 99, 99, 99, 107,
	107, 107, 107, 107, 100, 100, 100, 100, 100, 102,
	102, 101, 101, 101, 101, 66, 66, 66, 66, 66,
	14, 14, 14, 67, 67, 191, 191, 191, 192, 192,
	286, 286, 286, 286, 189, 189, 190, 190, 68, 68,
	562, 562, 562, 542, 542, 542, 543, 543, 543, 543,
	543, 543, 280, 280, 281, 281, 378, 378, 378, 378,
	378, 284, 284, 284, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 287, 287, 215, 215, 215, 290, 291,
	291, 288, 288, 289, 289, 289, 293, 293, 292, 295,
	295, 294, 377, 491, 491, 493, 493, 493, 493, 493,
	493, 493, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 563, 563, 489, 489, 489, 490, 485,
	485, 486, 486, 486, 486, 486, 282, 282, 283, 283,
	283, 283, 487, 488, 307, 307, 416, 492, 492, 494,
	494, 496, 564, 564, 564, 564, 564, 564, 565, 565,
	565, 376, 376, 375, 375, 299, 299, 497, 497, 497,
	497, 498, 498, 498, 498, 498, 501, 500, 499, 499,
	499, 499, 499, 70, 70, 70, 341, 341, 340, 340,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 166, 166, 232, 232, 64,
	64, 64, 12, 12, 12, 544, 544, 544, 69, 69,
	69, 69, 69, 69, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 537, 537, 536, 536, 233, 233,
	567, 567, 75, 75, 75, 75, 75, 75, 75, 434,
	434, 435, 435, 63, 63, 63, 63, 63, 362, 362,
	360, 360, 359, 359, 306, 306, 414, 414, 414, 415,
	237, 237, 238, 238, 208, 208, 208, 27, 26, 19,
	19, 24, 24, 39, 39, 39, 39, 42, 42, 38,
	38, 38, 38, 40, 40, 34, 34, 552, 552, 553,
	553, 103, 103, 108, 108, 108, 108, 108, 109, 109,
	109, 109, 110, 110, 110, 110, 119, 119, 165, 165,
	165, 165, 165, 165, 165, 44, 44, 44, 44, 56,
	56, 56, 56, 117, 569, 569, 569, 118, 118, 118,
	568, 568, 230, 230, 372, 372, 373, 373, 570, 570,
	374, 374, 374, 374, 374, 223, 222, 224, 224, 225,
	225, 61, 61, 61, 217, 217, 218, 218, 219, 219,
	220, 220, 221, 221, 571, 571, 97, 97, 97, 168,
	168, 272, 272, 272, 369, 369, 369, 300, 300, 244,
	244, 371, 371, 371, 371, 337, 337, 337, 167, 167,
	314, 314, 327, 327, 328, 328, 428, 428, 329, 116,
	116, 195, 195, 193, 193, 193, 193, 193, 193, 193,
	193, 200, 200, 201, 201, 202, 202, 203, 204, 204,
	204, 204, 318, 318, 205, 205, 205, 194, 194, 194,
	196, 196, 196, 196, 196, 196, 196, 199, 199, 199,
	199, 206, 206, 206, 198, 198, 508, 508, 508, 510,
	510, 512, 512, 511, 511, 507, 507, 509, 509, 566,
	566, 343, 343, 343, 297, 298, 296, 296, 304, 304,
	302, 303, 303, 305, 305, 413, 413, 413, 209, 209,
	209, 334, 334, 334, 334, 335, 335, 365, 365, 363,
	363, 363, 363, 364, 364, 366, 366, 366, 367, 367,
	368, 368, 331, 331, 332, 332, 333, 333, 333, 333,
	394, 394, 197, 197, 197, 311, 311, 311, 312, 312,
	384, 384, 384, 384, 384, 384, 385, 385, 383, 383,
	383, 383, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 418, 419, 419, 313, 313, 420, 370, 370, 526,
	526, 526, 527, 527, 411, 411, 421, 421, 421, 421,
	421, 421, 409, 409, 410, 410, 429, 430, 430, 347,
	347, 347, 347, 345, 345, 348, 348, 348, 348, 346,
	346, 422, 422, 422, 422, 336, 336, 423, 423, 423,
	423, 424, 425, 425, 426, 426, 379, 380, 380, 436,
	436, 436, 436, 438, 310, 310, 310, 310, 310, 484,
	483, 483, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 453, 453, 453, 453, 453, 453, 453,
	439, 439, 439, 439, 439, 443, 443, 443, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 444,
	444, 449, 449, 450, 450, 450, 445, 446, 451, 451,
	451, 451, 572, 572, 455, 455, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 441, 441, 441, 448, 448,
	448, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 355, 355, 357, 357, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 388, 388, 388, 388, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 502, 502, 502, 502, 502, 502,
	502, 502, 390, 390, 505, 505, 506, 506, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 513, 513, 514,
	514, 516, 516, 517, 517, 518, 519, 519, 519, 520,
	521, 521, 515, 515, 522, 522, 522, 522, 523, 523,
	524, 524, 524, 524, 524, 525, 525, 525, 525, 525,
	400, 400, 401, 401, 407, 407, 407, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 234, 234, 234, 234, 234, 323, 323,
	321, 321, 321, 324, 324, 322, 322, 320, 320, 319,
	319, 397, 397, 395, 395, 399, 399, 349, 349, 454,
	454, 454, 454, 454, 454, 454, 454, 350, 350, 350,
	358, 351, 351, 352, 352, 352, 352, 352, 391, 392,
	353, 353, 353, 393, 393, 402, 406, 406, 405, 404,
	404, 403, 403, 381, 381, 382, 382, 330, 330, 573,
	573, 326, 326, 427, 427, 427, 427, 276, 276, 315,
	315, 275, 275, 267, 267, 268, 268, 268, 268, 308,
	308, 408, 408, 456, 456, 457, 457, 458, 458, 459,
	459, 460, 461, 462, 396, 396, 254, 253, 241, 242,
	252, 251, 250, 240, 243, 247, 248, 249, 245, 246,
	260, 259, 258, 265, 266, 256, 257, 432, 239, 269,
	269, 270, 270, 270, 271, 271, 271, 271, 235, 235,
	236, 236, 261, 261, 262, 263, 263, 255, 255, 255,
	226, 226, 226, 227, 227, 228, 228, 470, 470, 467,
	467, 467, 468, 468, 468, 469, 469, 469, 469, 466,
	466, 466, 466, 466, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	476, 476, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	478, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 481, 481,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 2, 6, 4,
	7, 7, 7, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 2, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 5, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 11, 14, 1, 2, 3, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 1,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 9, 12, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 562, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -114, -119, -103, -115, -121, -165, -170,
	-171, -172, -3, -43, -45, -58, -76, -78, -89, -98,
	-97, -99, -104, -111, -107, -93, -49, -116, -120, -129,
	-166, -167, -168, 32, 31, 99, 79, 150, 125, 133,
	194, 370, 406, 417, 398, 387, -124, -125, 434, -44,
	-56, -118, -117, 72, 126, 393, -4, -12, 29, 45,
	-46, -47, -48, 61, -64, -60, -71, -65, -62, -556,
	101, -509, -79, -82, -110, -560, 138, 157, 212, -100,
	-101, 353, -105, -106, 400, -108, -109, 402, 158, -51,
	-50, 152, -193, -195, -122, -123, -169, -130, -131, -132,
	-133, -134, -135, -136, -159, -137, -138, -139, -140, -141,
	-142, -162, -143, -144, -145, -146, -151, -147, -148, -149,
	-150, -152, -153, -155, -156, -157, -158, -160, -161, 439,
	-154, 494, 48, 453, 81, 142, 410, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -59, -61, -63,
	-66, -67, -68, -75, -69, -70, -508, -80, -81, -84,
	-86, -87, -83, -85, 399, -196, -194, 559, 509, -16,
	-21, -22, -17, -18, -20, -23, -19, -24, -30, -35,
	-36, -32, -33, -31, -34, -37, -38, -39, -40, -41,
	-42, -26, -28, -29, -27, -15, -25, 528, 537, -199,
	-197, -198, -206, 426, 517, 469, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, -274, 2, -256, -261,
	-262, -263, -255, -226, -478, -481, 4, -475, -479, 163,
	221, 317, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 52, 54,
	58, 59, 60, 61, 62, 63, 67, 72, 73, 78,
	79, 80, 81, 82, 83, 84, 90, 87, 88, 89,
	91, 93, 95, 96, 97, 98, 99, 100, 102, 103,
	104, 106, 107, 115, 116, 117, 118, 120, 125, 126,
	129, 124, 128, 131, 132, 133, 136, 137, 138, 140,
	141, 143, 144, 145, 147, 148, 150, 151, 152, 155,
	153, 476, 154, 156, 157, 158, 159, 169, 170, 171,
	176, 178, 182, 183, 186, 187, 188, 189, 190, 191,
	192, 193, 195, 199, 201, 202, 203, 204, 205, 211,
	212, 214, 215, 216, 217, 222, 223, 227, 224, 233,
	234, 238, 239, 240, 242, 246, 247, 248, 249, 250,
	251, 253, 255, 254, 257, 260, 261, 264, 268, 269,
	272, 273, 274, 275, 277, 278, 281, 279, 282, 283,
	280, 284, 286, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 285, 300, 298, 302, 303, 304,
	315, 313, 308, 309, 305, 310, 306, 307, 311, 312,
	319, 320, 323, 209, 325, 326, 329, 347, 333, 334,
	335, 338, 339, 342, 345, 346, 348, 349, 350, 351,
	352, 353, 354, 355, 357, 358, 360, 361, 362, 364,
	365, 366, 368, 370, 371, 373, 375, 376, 377, 378,
	379, 380, 381, 384, 383, 385, 387, 393, 398, 395,
	396, 397, 399, 400, 401, 402, 404, 405, 406, 408,
	409, 410, 411, 413, 415, 416, 419, 420, 436, 437,
	455, 417, 418, 421, 422, 423, 424, 425, 429, 427,
	428, 430, 431, 432, 434, 435, 438, 439, 441, 442,
	443, 444, 445, 446, 449, 451, 452, 453, 454, 456,
	459, 460, 461, 462, 457, 468, 465, 466, 470, 471,
	472, 473, 474, 475, 477, 479, 487, 488, 489, 491,
	494, 495, 496, 497, 485, 499, 500, 503, 504, 505,
	508, 506, 507, 509, 511, 514, 515, 516, 522, 521,
	523, 529, 530, 532, 533, 534, 36, 49, 50, 53,
	55, 57, 68, 69, 70, 74, 121, 122, 149, 160,
	161, 172, 184, 185, 196, 198, 206, 207, 208, 228,
	229, 231, 236, 258, 322, 324, 340, 344, 359, 363,
	367, 369, 382, 412, 447, 458, 463, 480, 481, 482,
	483, 490, 492, 517, 518, 519, 524, 531, -274, 2,
	-256, 331, -249, 2, -226, -226, 370, 28, 2, 28,
	358, 428, 471, 473, 2, -535, -309, 2, 28, -229,
	-226, 101, 194, 426, -249, 2, -535, -309, 25, 2,
	-226, 2, -230, 2, 417, -226, 278, 2, 562, 93,
	269, 73, 412, 431, -127, 488, -126, 480, 421, -128,
	-465, 2, 300, -226, 562, 562, 562, 28, -239, -226,
	469, 221, 421, 117, 466, 562, 2, 469, 350, 521,
	427, 117, 379, 221, 496, 421, -544, 278, 408, 197,
	510, -533, 2, -528, 4, -479, -475, -268, -267, 469,
	474, 117, -263, -255, 552, -262, 562, 562, 562, 2,
	239, 240, 378, 377, 431, 432, 562, 562, 562, 562,
	419, 2, 159, 22, 27, 65, 92, 97, 123, 179,
	182, 336, -557, 347, 376, 430, 468, 477, 491, -543,
	454, 67, 421, -542, -544, 278, 496, 136, -359, 117,
	269, 193, 504, 473, 471, 502, 129, 227, 507, 506,
	562, 562, 22, 27, 65, 76, 97, 136, 159, 179,
	182, -559, 347, 376, 415, 430, 468, 477, 491, 2,
	521, 278, 427, 469, 221, 117, 496, 421, -544, 419,
	420, 374, -91, 2, 559, 32, 31, 434, -188, 469,
	232, 2, -226, 562, 562, 2, 239, 240, 419, 420,
	562, 562, 180, -528, 2, 562, 562, 2, 239, 240,
	419, 420, 232, 2, 67, 423, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 2, -163,
	431, 454, 203, 46, 45, 73, 28, 375, 78, 351,
	118, 144, 497, 195, 221, 222, 247, 92, 93, -361,
	44, 240, 239, 420, -549, 419, -412, 470, 422, 428,
	465, 251, 417, 488, 101, 511, 409, 534, 379, 380,
	153, 4, 117, 300, 433, 480, 269, 416, 354, 83,
	562, -566, 2, 469, -568, 2, 488, 488, 2, -568,
	2, -568, 2, -568, 2, -569, 488, 531, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, -194, -196, -195, 562, 562,
	562, 562, 562, 562, 562, -163, 431, 2, 73, 28,
	-302, -304, 501, 230, 146, 337, -193, -195, 2, -508,
	-463, 2, -386, -482, -388, 550, 551, 543, 467, 66,
	316, 535, -400, 123, 502, 331, -481, -389, -402, 149,
	412, -324, 8, 9, 5, 6, 7, -235, -390, -396,
	493, 162, 321, -271, 563, 10, 559, -505, -195, -401,
	37, 198, 64, -467, -270, -236, -439, 231, -269, -255,
	-502, -503, 4, -475, -476, -468, -442, -450, -446, -447,
	-453, -226, -478, 76, 109, 110, 108, 113, 112, 271,
	270, 114, 111, 433, 510, 65, 36, 206, 207, 236,
	322, 208, 74, -504, 137, -477, 228, 229, 447, 50,
	382, 172, 122, 121, 324, 55, 53, 518, -451, 119,
	480, 481, 482, 483, 184, 185, 57, 160, 161, 344,
	367, 463, 490, 492, 196, 258, 43, 105, 181, 226,
	210, 235, 237, 241, 259, 262, 301, 314, 318, 341,
	343, 407, 440, -572, 519, 458, 68, 69, -510, 383,
	-511, -249, -510, 562, 562, 564, 562, -296, -297, -298,
	2, 28, 134, 559, 2, -417, 2, -418, -422, -195,
	252, -421, 559, -419, 557, -256, 332, -506, 413, -502,
	-503, -235, -255, -270, 4, -475, -477, 561, -299, 559,
	117, 469, 77, 221, -354, 559, -226, 28, 331, 484,
	564, -398, 559, 331, 180, 334, -226, 521, 2, 2,
	436, 2, 559, -127, 70, 488, 43, 431, -373, 2,
	-374, -222, -223, -224, -429, -225, 238, 373, 381, 538,
	127, 316, 534, -463, -551, 180, 542, 484, -463, -325,
	561, 2, 2, 2, 2, 2, 2, -422, 206, -256,
	2, -253, -466, 4, -475, -479, -476, -480, -478, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 56, 64,
	65, 71, 75, 77, 86, 92, 101, 108, 109, 111,
	110, 112, 113, 114, 123, 127, 130, 134, 135, 139,
	142, 146, 162, 164, 177, 179, 180, 194, 197, 200,
	213, 225, 230, 232, 252, 256, 263, 270, 271, 316,
	321, 327, 331, 332, 336, 337, 356, 372, 386, 403,
	426, 433, 450, 464, 469, 478, 484, 486, 493, 501,
	502, 510, 512, 520, 525, 526, 527, 528, -481, 76,
	2, -422, 206, 2, -258, 206, -422, -261, 2, -240,
	-226, 2, -252, -466, 2, -275, 206, -256, -257, -261,
	-259, 2, -261, -265, 2, -226, -473, 206, 2, -470,
	10, -469, 5, 4, -475, -479, -476, 521, 232, 484,
	564, -315, -267, -268, -462, 8, -308, -226, 561, -386,
	2, -116, -102, 2, 177, -386, 206, 2, -116, 206,
	2, -386, 206, 2, -116, 206, 2, -546, 2, -473,
	206, -226, 2, 282, 2, 2, 491, 2, 97, 469,
	116, 2, 397, -558, 415, 495, 2, 2, 2, 2,
	2, 2, 469, -245, 2, -226, 177, -265, 206, -266,
	2, -226, -227, 427, -567, 383, -473, 206, 2, 521,
	-259, 2, -259, 221, 234, -240, 206, 2, 473, 471,
	473, 471, 180, 2, 232, 2, 232, 2, -423, 2,
	-424, -418, -425, 557, 332, 282, 2, 2, 2, 2,
	2, 206, -226, 469, 116, 2, 250, 2, 2, 2,
	2, 2, 2, 2, -317, 206, 2, -256, 521, -317,
	206, 2, -317, 206, 2, -360, 2, 86, -240, 206,
	2, -264, 206, 2, -259, -308, 206, 2, -474, 206,
	2, -473, -386, 2, -116, 2, -433, 2, -432, -469,
	517, -91, 559, -91, 559, 431, 559, -473, -256, -256,
	-386, 2, -116, -102, 2, -386, 2, -116, 2, -113,
	-112, -473, 559, 180, -386, 2, -116, -102, 2, -386,
	2, -116, 2, -188, 177, 2, 117, 469, -163, 2,
	177, 512, 2, 8, 2, 213, -473, 422, 380, 169,
	2, 436, 2, 437, 73, -361, 534, 73, 180, 2,
	180, 2, -344, 2, 528, 2, 2, -532, 2, 331,
	180, 2, 180, 2, 180, 2, 180, 2, 180, 2,
	377, 432, 489, 240, 2, -116, 525, -102, -386, 525,
	2, -550, 177, 420, -386, 2, 487, 249, 154, 180,
	-344, 2, 180, 2, 180, 2, 5, 2, 378, 455,
	2, 238, 373, 455, 2, -256, -561, 2, 469, 521,
	427, 2, 2, 87, 88, 180, 2, 180, 2, 180,
	534, 2, -336, -422, -372, -373, -372, 484, -302, -304,
	-163, 436, 2, -200, -334, -202, 177, -363, -364, -203,
	263, 164, 327, -204, -343, 28, 134, -343, -343, 59,
	560, 560, 11, 12, 75, 41, 550, 551, 552, 553,
	175, 554, 555, 548, 549, 547, 540, 541, 545, 244,
	245, 94, 544, 542, 85, 276, 414, 165, 166, 167,
	168, 394, 219, 34, 220, 14, 15, 16, 33, 336,
	262, 535, 210, 440, 543, 17, 18, 19, 235, 237,
	318, 49, 213, -234, -277, -386, -386, -386, -386, -386,
	-386, -386, 343, 559, -330, -381, 557, -195, 559, 559,
	559, -462, -195, -386, -400, 560, -322, 559, -195, -400,
	-395, 559, 412, 557, 559, -403, -386, 5, 5, 5,
	559, 561, -513, 529, 177, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	369, -444, 559, -443, 559, -443, -443, 522, -441, 559,
	537, 530, 559, -441, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 522, 564, -510,
	-299, 559, -326, -427, -386, 552, -326, -326, 331, -319,
	-386, 105, -347, 241, 301, 181, 259, 407, 226, -383,
	563, -383, -411, 537, -195, -419, -255, -195, -421, 559,
	-417, -411, -92, -462, -76, -89, -97, -116, -129, -167,
	-168, 552, -256, 559, 180, 559, 561, -466, 180, -308,
	-240, -256, -269, -270, -275, 133, -319, -528, 496, 421,
	-308, -229, 38, -397, -436, -437, -484, 563, -483, -439,
	-449, -445, -448, 359, 363, -468, 53, 518, -451, 231,
	4, -475, -477, 228, 229, 447, 50, 382, 172, 122,
	121, 324, 55, 480, 481, 482, 483, 184, 185, 57,
	519, 458, 68, 69, -528, 496, 421, -308, 177, -360,
	-465, -319, 38, -373, 2, 123, -470, -570, 564, 261,
	-279, 275, 315, 202, 332, 532, 325, 127, -472, 5,
	4, -396, -408, 123, 269, 231, -456, -458, 8, -457,
	9, -459, 550, 551, -464, -463, 107, 561, -466, -211,
	395, 434, -210, 24, 29, 138, 515, 155, -289, 223,
	346, 350, 149, 451, 505, -539, -540, 418, 475, 476,
	89, 325, 434, 395, 149, -340, -342, 38, 115, 304,
	345, 60, 216, 280, 281, 453, 524, 149, 434, 395,
	346, -540, 98, 395, -540, -213, 451, 505, -539, -540,
	418, 395, -212, -289, 149, 563, 24, 395, 434, 346,
	-554, -555, 138, 29, 395, 346, -536, -507, 528, 149,
	-422, 206, -547, -112, 253, 5, 10, -112, -315, 564,
	564, -466, 552, 420, 419, 149, 149, 149, 149, 177,
	316, 2, 2, 2, 2, 2, 182, -542, -559, 2,
	2, -256, 206, -301, 331, -531, -316, 469, -256, 316,
	43, -258, 206, 2, -261, 521, -536, 316, -260, 206,
	-256, 38, 559, 2, -360, 2, 221, -507, 316, -423,
	-272, -256, -418, -272, 434, -249, 38, -383, -256, 2,
	149, 2, 2, 2, -226, -214, 564, 63, 401, 149,
	-317, 206, -214, 149, -214, 149, -276, 206, -275, -214,
	149, -214, 564, 149, -214, 149, 564, 149, 560, 564,
	-433, -433, -473, -176, 528, 180, 101, 559, 559, -188,
	-430, 564, -429, -474, -113, -473, -473, -531, -240, 2,
	-256, 2, 469, 242, -473, -176, 213, -473, -473, -473,
	-465, 28, 437, 2, 377, 432, 489, 88, 437, 2,
	-256, 469, 117, 221, 79, -534, 177, -529, 408, 421,
	496, -528, -256, 117, -256, 117, -256, 117, -256, -256,
	2, 2, 2, 2, 2, 84, 84, 2, 45, -550,
	177, 2, 487, 2, 487, 2, -226, -226, -226, 454,
	261, -256, 177, 469, 221, 469, 221, 117, 469, -214,
	564, -230, -200, -334, -465, -335, -334, -201, -200, -203,
	177, 381, 506, 304, 438, 246, -364, -363, 28, -386,
	-368, 171, 303, -386, -366, -388, 550, 551, -457, -459,
	-318, 325, -194, -194, -194, -305, -413, -386, 372, 221,
	-438, -436, -436, -254, -466, 480, -386, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, 262, 210, 440, 49, 213, -386, 484, -386, -386,
	-386, -386, 298, 316, 321, 493, 162, 503, 134, 325,
	-573, 464, 40, -393, -195, -323, 559, -407, 35, 450,
	28, -400, 559, 2, -381, -386, -382, -320, -319, -319,
	560, 520, 28, 134, 552, 2, 560, 564, 38, 560,
	-386, -320, -399, -395, -319, -406, -405, 525, -355, -356,
	533, 285, 120, 204, 283, -357, 425, -460, 8, -466,
	552, -514, 170, 197, 559, 560, 2, 560, 2, 560,
	-386, 2, 560, -386, 2, 560, -386, 2, 560, -386,
	2, 560, 2, -386, -386, -386, -386, -386, -386, -386,
	-319, 8, -460, -460, 480, 480, -460, -460, -460, -452,
	359, 360, 361, 362, 264, 265, 266, 267, 363, 364,
	365, 366, 290, 291, 292, 293, 286, 287, 288, 289,
	294, 295, 296, 297, 189, 190, 191, 192, 185, 186,
	187, 188, -452, -349, 2, -454, -319, 4, 533, 285,
	120, 204, 283, 425, 5, -349, 2, -350, 2, -386,
	-319, -351, -387, -388, 550, 551, 543, -400, -352, 2,
	-386, -320, -386, 56, 256, 486, -353, -386, 180, -319,
	-319, 2, -319, 2, -511, 38, -319, -311, 564, 180,
	38, 4, -311, -311, 559, 560, 564, -348, 201, 279,
	274, -348, -417, -347, 241, -345, 341, -345, -345, -411,
	-241, 557, 565, -466, -411, -410, -409, 38, -249, 338,
	-411, -411, 561, 560, -410, 558, -526, 559, 562, 562,
	562, 562, 562, -256, 559, -319, -466, 561, 456, 560,
	235, 235, 235, 235, 413, 560, 484, -530, -264, -308,
	528, -91, 333, 560, 564, -310, 37, 557, 561, -460,
	2, 2, -455, 522, 559, 559, -356, 559, 180, -530,
	-308, -309, -260, -551, 560, 488, -374, -278, 381, 449,
	396, 429, 466, 8, 9, 8, 9, 564, -466, 564,
	-552, 92, 484, 77, 421, -377, 206, 77, -485, -243,
	92, -486, -226, 71, 502, 372, 179, 147, -552, 92,
	372, -552, 92, 92, 434, 454, 484, 59, -422, 41,
	41, 28, -116, 257, 180, 534, 469, 221, 421, 484,
	-422, -342, -436, 115, 280, 281, 59, -461, -456, 550,
	551, -461, 59, -461, -461, -461, 528, -258, -422, 421,
	484, 484, 484, 484, 564, 41, 41, 28, -116, 257,
	180, 484, -275, -241, 516, 42, 516, 484, 42, 421,
	484, 564, 42, 42, 484, 484, -537, -231, 104, 310,
	273, 311, 96, 307, 95, 306, 102, 308, 103, 309,
	523, 319, 62, 305, 284, 312, -232, -233, 352, 514,
	-473, 434, 395, 149, 213, -430, 213, -430, -267, -226,
	561, -116, -386, -386, -116, -386, -116, 45, 149, 2,
	-567, 250, 559, -282, 316, 180, -308, -431, 232, 564,
	-316, 149, -471, -470, 114, 433, -341, -340, 316, -260,
	206, 2, 149, -299, 316, 143, 559, 379, 2, -242,
	206, -227, -226, -360, -217, 472, 149, -338, 512, -369,
	-116, 559, 123, 38, -369, -327, -328, -428, -329, -243,
	559, -249, -383, -226, 2, -256, -317, -214, 149, -317,
	-317, -214, 564, 149, -240, -259, -264, -308, -473, -474,
	-91, -432, 560, 560, 560, -175, 335, -174, -226, 5,
	-188, 512, -281, -378, -377, -489, -490, -485, 262, 221,
	502, 234, 163, -300, -244, -243, 116, -182, 528, -112,
	560, -430, 213, -176, -176, -430, -430, -256, 177, -473,
	-176, -176, -176, 2, 2, 2, -344, -256, -240, -275,
	-256, -308, -308, -308, -264, -344, -240, -344, -240, -344,
	-240, -116, -386, 2, 431, 177, 177, 561, -344, 379,
	117, 469, 350, 221, -256, -275, -256, -275, -240, -256,
	-422, -335, -201, 332, 246, 438, -366, -367, -388, 412,
	413, -367, 412, 413, 8, 9, 8, 9, -205, 442,
	320, -317, 564, -208, 39, 130, 246, -256, 534, 145,
	-386, -386, 484, -573, 464, -393, 145, -386, 298, 321,
	493, 162, 503, 134, 325, 180, 559, -387, -387, 560,
	-321, -386, -386, 558, 567, 560, -304, 564, -302, -386,
	-319, -319, 560, 561, -319, -308, 558, 558, 564, 560,
	-404, -405, 139, -386, 484, 484, 484, 484, 559, 560,
	561, -519, 342, 559, 559, -386, 560, 560, 560, 560,
	38, 564, 564, 564, 560, 564, 564, 564, 560, 560,
	560, 564, 560, 534, 534, 560, 560, 560, 560, 564,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 560, 564, 560, 180, 560, 560,
	-358, 356, 560, 11, 12, 550, 551, 552, 553, 175,
	554, 555, 548, 549, 547, 540, 541, 542, 85, 276,
	414, 14, 15, 16, 235, 213, -387, -387, -387, 560,
	-391, -392, 180, 177, 38, -353, -353, -353, 560, 180,
	-319, 560, 560, 559, -512, 278, 316, 560, -380, -379,
	526, -427, -312, 2, -417, -251, -466, -380, -380, -319,
	-386, 241, 241, -346, 512, 331, -348, -417, -410, -462,
	-385, -384, 178, 39, 130, 313, 209, -410, -249, -299,
	-410, -410, -466, -411, -411, -409, 560, -527, -462, 560,
	-313, -420, -506, -304, 561, -466, -185, -507, -164, 5,
	321, -164, -164, -164, -308, 484, 484, 25, 357, -436,
	557, 558, 8, -466, 559, -460, -460, -460, -308, 180,
	180, 180, -339, 528, -463, -373, 500, 82, 381, 480,
	-463, -210, 395, -243, -243, -256, -265, 316, -377, 206,
	-216, 316, -436, -250, -226, 559, 559, 246, 246, 512,
	-243, -250, 246, 206, -243, 206, -250, -250, -538, 381,
	326, -386, -471, 268, 379, 317, -211, 395, 434, -116,
	-116, -116, 559, -551, 512, 133, -256, -275, -256, -265,
	-260, 434, 395, 314, -269, -461, -461, -340, 434, 395,
	-265, -258, -471, 421, -240, -212, -116, -116, -116, 559,
	-241, -213, 395, 5, 206, -243, 5, -226, -243, -265,
	-471, -555, 24, -243, 206, -243, -265, -471, -231, -473,
	321, 508, -536, 421, 484, -422, -112, -179, 528, -112,
	-173, 217, 552, -533, -226, 521, -226, -280, -283, -281,
	-243, -191, -192, 530, 528, 149, -273, -256, 557, -176,
	-473, -256, -265, -266, 149, -299, 316, -473, 38, 149,
	559, 2, 2, 331, 316, -242, 206, -218, 140, -571,
	542, -240, -380, -312, -337, -371, 403, 331, -300, 517,
	-249, -337, -314, 564, 180, 542, 561, -300, -426, 552,
	2, -214, -317, -214, -214, -275, -276, -214, -214, -214,
	-91, -91, -176, 564, 559, 542, 542, 559, -473, -473,
	560, 564, -256, -242, 221, 221, -248, -227, 560, 564,
	561, 559, -184, 335, -183, 141, 248, 233, 443, 444,
	445, 446, 132, -182, -113, 180, -52, 528, 469, -176,
	563, -344, -344, -344, 431, 431, -226, -252, -240, -256,
	-253, -275, 177, 177, 506, -367, 332, 272, -413, -209,
	536, -256, 563, -386, -386, 145, 145, -386, -387, -387,
	-386, 145, 180, 559, -386, -397, 33, 33, 560, 564,
	-382, -386, 560, 520, -304, -304, 560, 552, -466, 563,
	560, -395, 142, -386, 478, 285, 204, 283, -357, 283,
	-357, -357, -460, 5, -466, 552, -520, -246, 559, -226,
	526, -303, 337, 560, -438, -436, -386, -386, -386, -386,
	-386, -460, -441, -441, -456, -456, -386, -391, -386, -438,
	-436, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	134, 316, 325, -387, -392, -391, -386, -386, -436, 560,
	560, 560, -319, -91, 559, 278, -331, 197, -386, -430,
	564, -331, -331, 560, -417, -417, 559, -386, 241, 558,
	564, 566, 542, -299, 561, -409, -410, 558, 560, 564,
	560, 564, -370, 38, 560, -466, -380, -187, -186, 131,
	52, -308, -308, 334, 5, 8, 557, 558, 561, -460,
	560, 560, 560, -308, -308, -308, 116, 304, -386, 484,
	484, 149, 316, 514, -491, -486, 147, -386, -306, -414,
	-506, 559, -226, 559, 559, 2, -207, 138, 434, -553,
	2, 512, 149, -214, 149, -214, 532, 559, 559, 484,
	421, 528, -319, -386, -177, 123, -465, -540, 563, -540,
	563, 421, 484, 421, 484, 528, 528, -319, 484, -440,
	47, 26, 316, -259, 484, 484, -214, 149, 496, 434,
	-473, 321, -265, -260, 434, 395, -430, -181, 335, -180,
	141, 405, 132, 248, -430, -179, 180, 232, -260, 2,
	560, 560, 564, -492, 38, 329, 329, 559, -256, -72,
	528, -429, -462, 43, -258, 38, 149, -536, -116, -260,
	-434, -435, 5, -256, 149, 331, 316, -219, 255, -571,
	-470, -507, -304, -337, -326, 317, 90, 560, -380, -328,
	-312, -386, 2, 560, -214, -214, -174, -175, -473, -473,
	-473, -176, -188, -188, -378, -284, 559, -242, -227, 559,
	-188, -244, 2, -474, 564, 559, 542, 542, 542, -430,
	-116, 335, -256, 552, -344, -291, -290, 350, 325, -291,
	412, 412, 332, 171, 251, -208, -241, -386, -386, 145,
	33, 33, -386, -386, -397, 560, -386, -386, -319, 558,
	5, -386, 560, 560, 8, -386, 560, 561, -521, -226,
	-386, 560, 59, 560, 560, 564, 564, 560, 560, 560,
	560, 560, 560, 560, -392, 180, 134, 325, 559, 560,
	560, -91, -394, 200, 59, -417, -394, -394, -346, -308,
	-417, -384, -241, 557, -466, -462, -420, 559, 561, -186,
	542, 558, 2, 557, -466, 560, 116, -243, -243, -377,
	149, -493, 92, -495, 75, 163, 101, 316, 321, 502,
	372, 71, 123, 386, -563, 38, 539, 560, 560, 564,
	-415, -237, -226, -386, -415, -306, -308, 316, 461, 123,
	316, 123, 116, 496, 78, -243, -250, -308, -308, -256,
	-265, 156, 560, 564, 542, 2, 552, 552, -265, -260,
	-265, -258, 348, 156, 560, -241, 5, 5, 149, -238,
	75, 5, -243, -243, -259, 116, 421, 484, -179, 564,
	559, 542, 542, -179, -474, -112, -299, -287, 224, -243,
	-490, -487, -488, 372, -494, -496, 163, 372, -116, 2,
	-190, -189, -226, 5, 559, -282, 335, 558, -471, -341,
	-116, -260, -299, 560, 564, -362, 512, -241, -256, 149,
	-220, 254, -571, -470, -217, -365, -363, 135, 559, 331,
	-116, -304, 542, 560, 560, 116, 116, 215, 148, -306,
	559, 559, -308, 116, 560, -183, -184, -473, -112, -473,
	-182, -53, -54, 221, 92, 355, -253, 469, 221, 559,
	559, -208, -386, -386, -386, 560, -304, -466, 552, -515,
	350, 560, -413, -386, -386, -387, 180, 559, -397, 560,
	-516, 527, -386, -332, -333, -386, 411, 106, 198, -516,
	-516, 560, -462, 2, -473, 557, 2, -377, -250, -254,
	-247, -226, 163, 206, 321, 246, 559, -387, -256, 559,
	2, 30, -564, 127, 225, -376, -565, 100, 462, 214,
	-414, -208, 560, 560, 560, 321, 321, -386, -436, 559,
	-214, -214, 560, 560, -386, 484, -465, 99, -463, 2,
	-540, -240, -386, 484, 5, -214, -254, -214, -214, -238,
	496, -265, -260, -180, -181, -473, -112, -179, 38, -288,
	-289, 213, -492, 246, -247, 246, -562, 528, 560, 564,
	542, 542, -280, -191, -73, -74, 485, -429, -299, 38,
	5, 559, -226, 331, 559, -241, -221, 91, -571, -470,
	-218, -337, 317, -308, 92, -365, -393, -176, 559, 559,
	-285, 80, 93, 124, 205, 183, 222, 454, 459, 28,
	-285, 560, -306, -306, 560, 559, -176, 560, 564, 28,
	559, 28, 559, -256, -275, -319, -319, 560, -304, 59,
	564, 560, 560, -387, -397, 560, -517, -518, -246, 564,
	559, 559, 435, 558, 2, -495, -247, 316, 512, -386,
	-228, 559, -386, 38, 225, 128, 211, -287, 559, -209,
	-415, -375, 512, 386, -238, -306, 559, 559, 559, 542,
	180, 559, -440, -214, -259, 560, -545, 384, -116, -191,
	348, 559, -286, 331, 116, 304, -189, -463, -463, 560,
	38, -74, 9, 38, -116, -306, -256, -306, 331, 263,
	-470, -219, 560, -250, -337, -474, -474, -375, 560, 560,
	-474, -54, -308, -308, 560, 560, -522, 379, 413, 199,
	-319, -305, 560, 564, 38, -333, 2, 2, 2, 149,
	201, 560, -497, 277, -226, 560, 128, 211, -288, -308,
	-287, 201, -256, -541, 512, 560, -293, -292, -290, -295,
	-294, -290, -319, -463, 99, 348, -319, -238, -548, 181,
	-547, 5, 10, -286, -256, -307, -416, -243, 81, 116,
	-287, -116, -116, 560, -362, 560, -256, -571, -220, -380,
	560, 560, -376, -375, -192, 528, 560, 560, 560, 560,
	-523, -524, 49, 499, 107, -386, -523, -523, -518, -520,
	163, 528, -498, -501, -500, 331, 441, 181, 349, 560,
	461, 524, -564, 560, 528, -299, -386, -375, 560, 564,
	517, 560, 564, 517, 560, 180, 560, -214, -178, 528,
	45, 559, 560, 564, 371, 129, 138, -288, -562, -375,
	559, -376, 559, -456, -221, 135, -176, -176, -287, -376,
	-380, -176, -525, 147, -524, 368, 176, 412, 368, 176,
	-525, -525, -247, 54, -500, 331, -501, 331, 506, 129,
	-380, 54, -497, -287, -292, 213, -294, 180, 348, 419,
	-547, 30, -308, -416, 413, 413, 2, -191, -286, -376,
	-306, -287, -306, 317, 506, -288, -287, 107, 197, 479,
	304, 33, 542, -499, 304, 401, 63, 434, -499, 542,
	-498, 559, 559, 335, 560, 2, -286, -287, 560, -288,
	560, 434, -192, -288, 412, 339, -524, -386, 23, 321,
	123, -386, -564, -319, -319, -175, 559, -215, 63, 401,
	-288, -375, -192, -376, -327, -380, -192, 560, 560, -175,
	-192, -376, -380, -287, -380, -380, -288, 484, 560, -380,
	-287, -288, 559, -288, -192, -319, -192, -380, 560, -380,
	-288,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 482, 483, 485, 486, 487, 489, 490, 492,
	494, 496, 497, 498, 500, 501, 503, 504, 505, 506,
	507, 509, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 575, 0, 1208,
	1210, 1212, 1214, 0, 713, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, 320,
	-2, 0, 417, 418, 420, 422, -2, -2, 0, 884,
	886, 0, 562, 564, 0, 889, 891, 0, 0, 584,
	585, 0, 1299, -2, 578, 580, 582, 647, 649, 651,
	653, 655, 657, 659, 661, 663, 664, 666, 668, 670,
	672, 674, 676, 678, 680, 681, 683, 685, 687, 689,
	691, 693, 695, 697, 699, 701, 703, 705, 707, -2,
	709, -2, -2, 0, -2, -2, -2, 1226, 36, 38,
	40, 42, 44, 46, 48, 50, 52, 368, 369, 371,
	373, 375, 377, 380, 382, 384, 1357, 424, 426, 428,
	430, 432, 434, 436, 0, -2, 1369, 0, 0, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 83, 84,
	85, 86, 87, 88, 89, 90, 66, 67, 69, 70,
	71, 75, 76, 77, 78, 81, 64, 0, 0, 1330,
	1332, 1334, 1336, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 484, 488, 491, 493,
	495, 499, 502, 508, 510, 512, 469, 470, 473, 2025,
	2042, 2043, 2044, 2047, 2048, 2049, 2050, 2051, 2052, 2470,
	2551, 2552, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 471, 472,
	1046, 0, 536, 534, 2017, 537, 2285, 539, 541, 411,
	412, 413, 414, 415, 416, 0, 555, 547, 554, 556,
	558, 559, 560, 561, 531, 529, 0, 555, 2078, 553,
	1206, 1207, 1191, 1192, 2323, 1233, 0, 193, 574, -2,
	-2, -2, 2435, -2, 606, -2, 613, 2439, 2325, 618,
	0, 620, -2, 623, 1209, 1211, 1213, 711, 712, 2028,
	0, 0, 0, 0, 0, 34, 35, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 1096,
	1097, 0, 201, 203, -2, -2, -2, -2, 0, 0,
	2364, 2127, 1985, 2044, 1988, 1983, 282, 284, 286, 287,
	0, 0, 0, 0, 0, 0, 312, 315, 317, 319,
	-2, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 933, 934, 1152, 0, 0, 0, -2,
	419, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 347, 474, 475, 0, 1358, 1358, 0, 0, 0,
	0, 256, 247, 885, 887, 888, 0, 0, 0, 0,
	563, 565, 0, 0, 229, 890, 892, 893, 0, 0,
	0, 0, 0, 258, 0, 0, 579, 581, 583, 648,
	650, 652, 654, 656, 658, 660, 662, 665, 667, 669,
	671, 673, 675, 677, 679, 682, 684, 686, 688, 690,
	692, 694, 696, 698, 700, 702, 704, 706, 708, 719,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 803, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 722, 724, 725, 726, 0, 783, 801, 802, 811,
	710, 0, 1086, 1359, 1235, 1216, 1230, 1235, 1218, 1219,
	1220, 1221, 1222, 1227, 1229, 1223, 1224, 1225, 37, 39,
	41, 43, 45, 47, 49, 51, 53, 370, 372, 374,
	376, 378, 381, 383, 385, -2, 1328, 1329, 425, 427,
	429, 431, 433, 435, 437, 566, 0, 568, 0, 723,
	-2, 0, 1363, 1363, 1363, 0, 0, 1329, 1327, 0,
	571, 572, 627, 628, 1628, 0, 0, 0, 0, 0,
	0, 0, 1882, 1714, 0, 629, -2, 1745, 1747, 2410,
	2435, 1881, 1749, 1750, 1751, 1752, 1753, 0, 1755, 1756,
	1757, 1758, 1759, 1760, 0, 1762, 0, 1767, 1768, 1769,
	0, 2417, 1962, 2038, -2, 0, 0, 2423, 2034, 0,
	1848, 1785, -2, -2, 2061, 2040, 1560, 1561, 1562, 1563,
	1564, -2, -2, 2453, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 0, 2398, 2418, 2419, 2424,
	2426, 2420, 2407, 1810, 2139, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1587, 1596,
	-2, -2, -2, -2, -2, -2, -2, 2411, 2412, 2429,
	2432, 2438, 2443, 2444, 2416, 2425, 2452, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 1588, -2, -2, -2, -2, 1346, 2296,
	1349, 1046, 1347, 1331, 1333, 0, 1335, 0, 0, 0,
	1340, 1366, 1364, 0, 1413, 1344, 1345, 1431, 1431, 1455,
	0, 1436, 0, 1455, 1358, 1481, 0, 1442, 2315, 1786,
	1787, 0, 2044, 2039, -2, -2, 2450, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 538, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 1232, 1151, 576, 577,
	0, 601, 0, 605, 2406, -2, 0, 2334, -2, 609,
	1236, 1240, 1241, 1242, 1243, 1244, 0, 0, 0, 0,
	1249, 0, 0, 615, 0, 0, 602, 603, 621, 624,
	0, 714, 715, 716, 717, 718, 63, 0, 2418, 1481,
	65, 0, 2007, 2069, 2070, 2071, 2072, 2073, 2451, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2453,
	68, 0, 2418, 72, 0, 2418, 0, -2, 79, 0,
	2013, 82, 0, 2010, 91, 0, 2418, 0, 1982, -2,
	0, 178, 2021, 0, 912, 2023, -2, 2418, 1094, 259,
	260, 2057, 2058, 2065, 2066, 2067, 2068, 0, 0, 0,
	0, 875, 1979, 1984, 876, 2003, 877, 1989, 0, 288,
	289, 290, 291, 292, 0, 293, 2418, 295, 296, 0,
	298, 299, 2418, 301, 302, 0, 304, 0, 214, 215,
	2418, 323, 324, 0, 326, 327, 0, 329, 0, 0,
	0, 333, -2, 348, 0, 345, 336, 337, 339, 340,
	341, 342, 0, 389, 387, 2018, 0, 905, 2418, 0,
	909, -2, 2024, 0, 0, 1131, -2, 2418, 1091, 0,
	1137, 1133, 0, -2, 0, 1356, 2418, 1253, 937, 938,
	939, 940, 1493, 408, 0, 1268, 0, 1270, 0, 1289,
	1487, 1431, 0, 0, 1492, 0, 350, 351, 352, 353,
	354, 2418, 0, 0, 0, 359, 0, 361, 362, 363,
	364, 365, 366, 367, 167, 2418, 442, 467, 0, 167,
	2418, 445, 167, 2418, 448, 0, 451, 1150, 167, 2418,
	454, 167, 2418, 457, 459, 167, 2418, 463, 464, 2418,
	466, 261, 1202, 1203, 1204, 1205, 0, -2, 525, 2027,
	-2, 477, 0, 478, 0, -2, 0, 273, 0, 0,
	894, 895, 896, 897, 898, 901, 902, 903, 904, 1468,
	232, 230, 0, 0, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 0, 0, 586, 0, 0, 720, 721,
	0, 0, 731, 732, 733, 0, 273, 2326, 2293, 2159,
	740, 0, 743, 746, -2, 0, 0, 0, 0, 750,
	0, 755, 756, 757, 0, 759, 761, 883, 763, 0,
	0, 765, 0, 769, 0, 772, 0, 774, 0, 776,
	-2, -2, -2, -2, 787, -2, 0, 790, 792, 0,
	794, -2, 0, 803, 799, 800, 0, 0, 0, 0,
	819, 820, 0, 829, 0, 832, 833, 834, 0, 836,
	837, 0, 839, 840, 841, 842, 0, 844, 845, -2,
	-2, 849, 851, 0, 858, 0, 862, 0, 866, 0,
	727, 728, 167, 1485, 1215, -2, 1217, 0, -2, 0,
	567, 0, 570, 1386, 1314, 1311, 0, 1383, 1384, 1315,
	0, 0, 0, 1322, 0, 1361, 1362, 0, 0, 0,
	1301, 1302, 0, 0, 0, 0, 1887, 1888, 1889, 1890,
	1891, 1892, 1895, 1896, 1893, 1894, 1897, 1898, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1900, 1901, 1902, 0, 0,
	1904, 0, 1906, 0, 0, 0, 0, 0, 0, 1693,
	1695, 1970, 0, 0, 1903, 1633, 1634, 1635, 1636, 1637,
	1672, 1673, 0, 0, 1746, 1967, 1966, 1748, 0, 1918,
	0, 1761, -2, 0, 1882, 1913, 0, 0, 1770, 1771,
	1772, 0, 0, 1918, 0, 0, 1961, 1782, 1783, 1625,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 1573, 0, 1575, 0, 1576, 1577, 1584, 1597, 0,
	0, 0, 0, 1601, 0, 0, 0, 0, 0, 0,
	0, 1942, -2, 0, 0, 0, 0, 1589, 0, 1348,
	0, 0, 1417, 1971, 1975, 1976, 1417, 1417, 0, 0,
	1919, 1478, 1478, 0, 0, 1474, 1474, 1474, 1472, 1455,
	0, 1455, 1465, 0, 1455, 1455, 0, -2, 1436, 0,
	0, 1465, 0, 1449, 513, 515, 517, 519, 520, 521,
	523, 1482, 1483, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 2374, 2325,
	543, 557, 1358, 0, 1921, 1508, 1512, 0, 1514, 1515,
	1516, 1517, 1518, 0, 0, 1509, -2, 1585, 1587, 1608,
	2062, 2063, 2064, 1568, 1569, 1570, 1571, 1572, 1580, 1567,
	1567, 1567, 1578, 1607, 1599, 1607, 1603, 1553, 1554, 1555,
	1590, 1591, 1592, 1593, 0, 2374, 2325, 549, 0, 0,
	0, 0, 0, -2, 611, 616, 617, 0, 1238, 0,
	1245, 638, 639, 640, 1247, 1248, 0, 1250, 614, 641,
	642, 643, 644, 645, 646, 0, 1991, 1992, 1993, 1994,
	1997, 1998, 0, 0, 612, 631, 619, 0, 625, 92,
	1188, 0, 131, 0, 1188, 1188, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 116, 127, 104, 105,
	0, 0, 0, 0, 0, 73, 1068, 0, 1071, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 115, 0, 0, 110, 94, 0, 0, 0, 117,
	129, 0, 158, 160, 0, 0, 0, 0, 0, 0,
	177, 185, 0, 0, 0, 0, 1092, 0, 1355, 0,
	0, 2418, 0, 1468, 2203, -2, -2, 1468, 874, 0,
	0, 2045, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 328, 330, 331, 332, 0, 1130, 0, 338,
	379, 1017, 2418, 0, 0, 406, 401, 0, 403, 0,
	0, 1067, 2418, 1065, 2022, 0, 1089, 0, 1046, 2418,
	2020, 0, 0, 1138, 2054, 1147, 1151, 1255, 0, 410,
	0, 1271, 1273, 0, 0, 1488, 0, 1490, 1431, 349,
	0, 356, 357, 358, 0, 438, 0, 165, 166, 0,
	167, 2418, 443, 0, 446, 0, 167, 2418, 1977, 452,
	0, 455, 0, 0, 461, 0, 0, 0, 1358, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	236, 0, 1467, 0, 1468, 230, 273, 273, 1468, 588,
	1468, 590, 0, 0, 734, 735, 0, 273, 273, 273,
	741, 742, 744, 745, -2, -2, -2, 859, 747, 748,
	826, 0, 0, 0, 825, 762, 0, 868, 2311, 2325,
	2374, 881, 826, 2127, 826, 2127, 826, 2127, 773, 775,
	778, 814, 822, 786, 791, 0, 0, 796, 804, -2,
	0, 806, 0, 808, 0, 810, 826, 827, 830, 835,
	838, 843, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 1228, 1386, 1314, 569, 1305, 1385, 1306, 1313, 1316,
	0, 0, 1318, 0, 1320, 0, 1381, 1382, 1389, 1390,
	0, 1400, 1401, 1393, 0, -2, 0, 0, 1396, 1397,
	1324, 0, 1341, 1342, 1343, 1370, 1373, 1166, 0, 2551,
	1629, 1503, 1630, 1631, 2006, 0, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, -2, -2, -2, -2,
	-2, -2, -2, -2, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, -2, -2, -2, 1670, 1671,
	-2, 1905, 1907, 0, 1970, 0, -2, 0, -2, -2,
	-2, -2, 1690, 0, 1692, 1697, 1699, 1701, 0, 0,
	0, 0, 1969, 1711, 1953, 1954, 0, 0, 1884, 1885,
	1886, 1696, 0, 1715, 1968, 1965, 0, 0, 1917, 1369,
	1774, 0, 0, 0, 0, 1781, 1766, 1915, 0, 1914,
	0, 0, 0, 1925, 0, 1960, 1956, 0, 2004, 1624,
	1611, 1612, 1613, 1614, 1615, 1616, 1626, 0, 2001, 2031,
	2037, 1858, 0, 0, 0, 1811, 1812, 1813, 1814, 1815,
	0, 1817, 1818, 0, 1820, 1821, 0, 1823, 1824, 0,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 1525, 0, 0, 0, 1529, 0,
	0, 0, 1533, 0, 0, 0, 1537, 0, 0, 0,
	1541, 0, 0, 0, 1545, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 1830, 0, 1928, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1832, 0, 1834, 1919,
	1939, 0, 0, 1716, 0, 0, 0, 1882, 0, 1837,
	1919, 1947, 0, 0, 0, 0, 0, 1919, 0, 1952,
	0, 1844, 0, 1846, 1350, 0, 0, 1498, 0, 0,
	0, 1974, 1498, 1498, 0, 1412, 0, 0, 1475, 1476,
	1477, 0, 0, 1478, 0, 1469, 1473, 1470, 1471, 1465,
	1428, 0, 0, 2008, 1465, 1434, 1464, 0, 1046, 1454,
	1465, 1465, 0, -2, 1438, 1455, 0, 0, 514, 516,
	518, 522, 524, 0, 0, 1369, -2, 0, -2, 1045,
	0, 0, 0, 0, 533, 535, 0, 0, 458, 0,
	0, 527, 0, 530, 0, 1499, 1502, 0, 0, 1513,
	1519, 1520, 0, -2, 0, 0, 1609, 0, 0, 0,
	0, 0, 196, 0, 604, 0, 1237, 1246, 0, 635,
	0, 637, 0, 1995, 1999, 1996, 2000, 0, 626, 0,
	0, 0, 0, 1187, 0, 135, 2418, 0, 169, 0,
	0, 1010, 2014, 0, 0, 0, 0, 2146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 1069, 1070, 1072, 1079, 1081, 0, 1075, 2002, 0,
	0, 1076, 0, 1078, 1080, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 107, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1126, 1124, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 0, 0,
	-2, 0, 0, 0, 0, 206, 0, 264, 1980, 1990,
	0, 899, 900, 294, 297, 300, 303, 202, 0, 334,
	0, 0, 943, 918, 0, 0, 388, 273, 0, 0,
	402, 2054, 907, 182, 183, 184, 1063, 1066, 0, 1046,
	2418, 1103, 0, 0, 0, 0, 0, 0, 1136, 0,
	2418, 2009, 2053, 2054, 1257, 1265, 0, 1498, 0, 1287,
	1274, 0, 0, 0, 1287, 1291, 1292, 1294, 1295, 0,
	0, 1489, 1495, 0, 360, 468, 167, 440, 0, 167,
	167, 449, 0, 0, 167, 460, 167, 167, 262, 465,
	476, 526, 1358, 1358, 273, 271, 2262, 269, 266, 268,
	0, 0, 0, 944, 946, 947, 948, 949, 0, 2054,
	0, 2192, 2054, 0, 1277, 1279, 0, 226, 0, 233,
	231, 236, 0, 0, 400, 587, 592, 729, 0, 273,
	737, 738, 739, 780, 816, 824, 749, 751, 752, 753,
	0, 882, 878, 879, 880, 764, 826, 767, 826, 770,
	826, 789, 793, 798, 805, 0, 0, 0, 818, 0,
	0, 0, 0, 0, 0, 0, 863, 864, 865, 867,
	1486, 1309, 1310, 1312, 0, 1321, 0, 0, 1395, -2,
	-2, 1394, 1398, 1399, -2, -2, -2, -2, 1317, 0,
	1326, 1323, 0, 1380, 1164, 1165, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1712, 0, -2, 1691, 1694,
	1698, 1700, 1702, 0, 0, 0, 0, 0, 0, 1908,
	0, 1910, 1713, 1963, 1966, 1880, 0, 0, 1368, 1369,
	1369, 0, 1780, 0, 1916, 0, 1923, 1924, 0, 1773,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1816, 1819, 1822, 1825,
	0, 0, 0, 0, 1805, 0, 0, 0, 1809, 1579,
	1565, 0, 1607, 1605, 1606, 1600, 1607, 1604, 1557, 0,
	1522, 1523, 1524, 1526, 1527, 1528, 1530, 1531, 1532, 1534,
	1535, 1536, 1538, 1539, 1540, 1542, 1543, 1544, 1546, 1547,
	1548, 1550, 1551, 1552, 1556, 0, 1829, 0, 1831, 1833,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 1720, 1721, 1836,
	1945, 1946, 0, 0, 0, 0, 0, 0, 1842, 0,
	1951, 1843, 1845, 1358, 0, 1351, 0, 1414, 1403, 1497,
	0, 1972, 1468, 1416, 1418, 1973, 2011, 1403, 1403, 0,
	1920, 0, 0, 1459, 0, 0, 0, 1461, 1432, 0,
	0, 1426, 0, 1422, 1423, 1424, 1425, 1433, 1046, 1463,
	1435, 1439, 2031, 0, 1465, 0, 1450, 0, 1452, 1484,
	0, 1444, 1447, 0, 0, 2046, 1498, 0, 305, 309,
	310, 306, 307, 308, 542, 0, 0, 0, 0, 1922,
	0, 1504, 0, 1510, 0, 0, 0, 0, 548, 0,
	0, 0, 192, 0, 600, -2, 633, 634, 636, 0,
	632, 132, 1188, 0, 0, 1169, 1171, 0, 137, 2418,
	146, 0, 984, 0, 2012, 0, 0, 0, 0, 0,
	1190, 0, 0, 2418, 167, 2418, 167, 149, 152, 0,
	157, 154, 155, 0, 0, 975, 93, 1188, 0, 96,
	100, 108, 0, 0, 0, 114, 0, 0, 0, 1173,
	1179, 0, 0, 1073, 1074, 1077, 1083, 74, 0, 0,
	1177, 1183, 80, 0, 1168, 159, 98, 102, 109, 0,
	1185, 95, 0, 181, 0, 0, 0, 173, 0, 174,
	175, 186, 0, 167, 2418, 0, 910, 911, 1125, 1087,
	1088, 0, 1093, 0, 0, 0, 1468, 198, 0, 1468,
	206, 0, 1986, 0, 322, 0, 0, 0, 0, 942,
	1028, 0, 915, 0, 0, 0, 394, 390, 0, 399,
	405, 404, 906, 0, 0, 0, 0, -2, 0, 0,
	1140, 1134, 1135, 0, 0, 0, 2418, 1259, 1265, 0,
	1264, 1356, 1369, 409, 1266, 1287, 0, 0, 0, 1276,
	1272, 1269, 1498, 0, 0, 0, 0, 0, 1491, 1494,
	355, 439, 167, 444, 447, 1978, 167, 453, 456, 462,
	479, 480, 248, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 953, 0, 2054, 2054, 0, 2016, 0, 0,
	0, 0, 234, 0, 237, 0, 0, 0, 242, 243,
	244, 245, 246, 227, 1468, 0, 589, 0, 0, 736,
	0, 766, 768, 771, 807, 809, 826, 852, 853, 970,
	0, 970, 0, 0, 1319, 0, 1392, 1325, 1374, 1375,
	0, 1166, 0, 1632, 1675, 0, 0, -2, 0, 0,
	1679, 0, 0, 0, -2, 0, 0, 0, 1909, 1911,
	0, 1965, 1775, 0, 0, 0, 1779, 1763, 1764, 0,
	1883, 1926, 1955, 1959, 0, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 0, 2005, 2032, 2036, 1856, 1857, 1861, 2019,
	0, 0, 0, 1788, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 1602, 0, 0, 1927, 1938, 1940, 1717,
	1718, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, -2, -2, -2, 1735, 1736, 1737, -2, -2, -2,
	0, 0, 0, 1941, 1943, 1944, 1948, 1949, 0, 1839,
	1840, 1841, 1950, 0, 1358, 1352, 1411, 0, 1496, 1415,
	0, 1411, 1411, 1365, 1457, 0, 0, 1480, 0, 1429,
	0, 1430, 0, 1462, 0, 1437, 1440, 1441, 1451, 0,
	1443, 0, 1446, 0, 1775, -2, 274, 275, 277, 0,
	280, 545, 546, 544, 528, 0, 0, 1506, 0, 0,
	1582, 1586, 1610, 551, 552, 550, 194, 0, 1466, 0,
	0, 0, 0, 168, 982, 1009, 0, 0, 0, 1154,
	1161, 0, -2, 0, 0, 1015, 139, 0, 0, 0,
	147, 0, 0, 144, 0, 151, 156, 0, 0, 0,
	0, 0, 0, 111, 112, 113, 0, 118, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 1163, 0, 0, 188, 0, 0, 0,
	1128, 1129, 1174, 1180, 0, 0, 206, 204, 0, 207,
	0, 210, 211, 0, 206, 200, 0, 0, 1046, 335,
	964, 1016, 0, 1018, 0, 916, 0, 0, 1017, 386,
	0, 393, 0, 0, 1067, 0, 0, 1090, 1101, 1046,
	0, 1139, 1141, 1149, 0, 0, 0, 1261, 1265, 0,
	1254, 1255, 1388, 1267, 1285, -2, 0, 0, 1369, 1293,
	1290, 1296, 1297, 0, 441, 450, 270, 0, 265, 267,
	0, 251, 0, 0, 945, 950, 0, 0, 0, 0,
	0, 1278, 1280, 0, 0, 0, 0, 0, 0, 236,
	257, 0, 730, 754, 817, 854, 969, 0, 0, 856,
	0, 0, 1391, 1378, 1379, 1376, 1166, 1677, 1681, 0,
	0, 0, 1683, -2, 0, 1705, -2, -2, 1912, 1964,
	1754, 1369, 1776, 1778, 1765, 1958, 1627, 0, 1863, 1860,
	0, 1847, 0, 1800, 1801, 0, 0, 1804, 1806, 1807,
	1808, 1566, 1559, 1558, 1937, 0, 0, 0, 0, 1838,
	1353, 0, 1852, 0, 0, 1419, 1852, 1852, 1458, 0,
	1460, 1427, 1420, 0, 2032, 1453, 1445, 0, 0, 278,
	0, 1500, 1505, 0, 1511, 1581, 195, 133, 134, 136,
	0, 983, 0, 986, 0, 0, 0, 0, 993, 994,
	0, 0, 0, 0, 0, 1003, 0, 1032, 1042, 0,
	1156, 1166, 1160, 0, 1158, 0, 0, 0, 141, 162,
	0, 0, 1189, 0, 0, 167, 167, 0, 0, 1170,
	1172, 0, 0, 0, 0, 121, 0, 0, 1175, 1181,
	1178, 1184, 0, 0, 0, 1186, 179, 180, 0, 167,
	0, 172, 167, 167, 1163, 0, 0, 0, 197, 0,
	0, 0, 0, 199, 263, 206, 0, 972, 0, 1028,
	1020, 1021, 1022, 0, 1027, 1029, 0, 0, 930, 917,
	0, 926, 0, 0, 943, 918, 0, 391, 908, 1064,
	1098, 1046, 0, 1132, 0, 0, 0, 0, 0, 0,
	1263, 1265, 0, 1256, 1257, 1287, 1387, 0, 0, 0,
	1275, 1388, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 238, 0, 239, 240, 241,
	228, 591, 593, 0, 0, 599, 968, 0, 0, 0,
	0, 1377, 1685, -2, -2, 1706, 0, 2033, 2035, 1369,
	0, 1849, 1371, 0, 0, -2, 0, 0, 0, 1354,
	1337, 0, 1410, 1402, 1404, 1406, 2314, 2123, 2417, 1338,
	1339, 1479, 0, 1448, 279, 0, 1507, 138, 0, 987,
	988, 2015, 990, 0, 992, 995, 0, 998, 2056, 0,
	1002, 0, 1011, 1033, 0, 964, 0, 1038, 1039, 1040,
	1155, 1380, 1161, 1044, 0, 140, 142, 161, 1163, 0,
	143, 150, 0, 0, 97, 0, 0, 2118, 124, 122,
	120, 1167, 99, 0, 181, 187, 1162, 176, 189, 167,
	0, 1176, 1182, 208, 0, 209, 212, 0, 0, 918,
	971, 0, 1019, 0, 1030, 1031, 920, 0, 919, 0,
	0, 0, 0, 0, 392, 395, 0, 398, 0, 0,
	1142, 0, 1148, 0, 0, 0, 1251, 0, 0, 1258,
	1259, 407, 1281, 0, 0, 1287, 1298, 250, 0, 0,
	951, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	952, 1044, 0, 0, 1008, 0, 255, 235, 0, 595,
	0, 597, 0, 855, 857, 0, 0, 1777, 1867, 0,
	0, 1802, 1803, -2, 0, 1743, 1851, 1853, 0, 0,
	0, 0, 0, 1421, 1501, 985, 989, 0, 0, 0,
	1050, 0, 0, 1004, 0, 1036, 1037, 972, 0, 1159,
	1157, 964, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 171, 190, 1163, 205, 222, 0, 1099, 920,
	0, 0, 928, 0, 931, 0, 927, 924, 925, 964,
	0, 396, 397, 0, 1102, 0, 1149, 0, 0, 1265,
	1260, 1261, 1498, 1284, 1288, 0, 0, 1042, 1044, 918,
	0, 594, 0, 0, 860, 861, 0, 0, 0, 0,
	1862, 1372, 1744, 0, 0, 1405, 1407, 1408, 1409, 0,
	0, 997, 1055, 0, 0, 0, 1034, 1035, 1032, 0,
	1013, 0, 1046, 145, 0, 1044, 0, 976, 0, 0,
	979, 0, 0, 125, 2118, 123, 0, 167, 225, 0,
	219, 217, 218, 913, 0, 0, 1024, 1026, 0, 932,
	972, 930, 1100, 1044, 0, 1042, 0, 0, 1263, 0,
	273, 273, 964, 1042, 1498, 0, 273, 596, 598, 1859,
	1879, 1868, -2, 2377, 2124, 0, 1879, 1879, 1854, 1855,
	0, 0, 999, 1051, 1052, 0, 1047, 1048, 1049, 2055,
	1000, 1001, 1498, 1041, 0, 1050, 163, 964, 973, 0,
	0, 974, 0, 0, 128, 0, 130, 191, 213, 0,
	0, 0, 1023, 0, 0, 0, 0, 918, 920, 1042,
	0, 964, 0, 1262, 1252, 0, 252, 253, 972, 964,
	1007, 254, 1864, 0, 0, 1870, 1871, 1872, 1873, 1874,
	1865, 1866, 991, 0, 1053, 0, 1054, 0, 0, 0,
	1012, 0, 1055, 148, 977, 0, 980, 0, 126, 0,
	220, 221, 0, 1025, 921, 0, 923, 920, 929, 964,
	0, 972, 0, 1282, 0, 918, 972, 0, 1876, 1877,
	0, 0, 0, 1056, 0, 1059, 1060, 0, 1057, 0,
	1032, 0, 0, 0, 967, 922, 914, 972, 1044, 918,
	1042, 0, 1498, 918, 1875, 1878, 1869, 996, 1058, 1061,
	1062, 1043, 1014, 0, 0, 223, 0, 963, 965, 966,
	918, 1042, 1498, 964, 1498, 1005, 1498, 972, 0, 0,
	1498, 964, 1145, 972, 1283, 1006, 978, 0, 224, 1143,
	972, 918, 0, 918, 1498, 0, 1498, 1146, 972, 1144,
	981,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 548, 3, 554, 549, 3,
	559, 560, 552, 550, 564, 551, 561, 553, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 567, 3,
	540, 542, 541, 545, 563, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 557, 3, 558, 555, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 565, 547, 566, 543,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 544, 57883, 546, 57884, 556,
	57885, 562, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1262
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1365
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1378
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1395
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1399
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1403
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1420
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1424
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1445
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1485
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1501
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1510
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1531
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1539
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1549
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1553
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1563
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1574
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1581
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1593
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1628
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1647
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1667
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1676
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1687
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1693
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1719
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1724
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1893
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1945
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1995
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2054
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2058
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2112
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2195
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2203
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2230
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2341
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2456
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2500
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2589
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2600
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2615
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2619
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2638
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2722
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2752
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2838
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2874
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2886
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2927
		{
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2944
		{
			return unimplemented(sqllex, "create access method")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "create cast")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "create operator")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "create publication")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "create rule")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "create server")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2965
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2969
		{
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2972
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2973
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplemented(sqllex, "drop server")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3114
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3149
		{

			sqlVAL.union.val = nil
		}
	case 407:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return helpWith(sqllex, "DELETE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3177
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "DROP")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3403
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3426
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3468
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3492
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "DELETE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "INSERT")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "INSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3577
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3651
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "GRANT")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3754
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "RESET")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "RESET")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "USE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3828
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			return helpWith(sqllex, "USE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			return unimplemented(sqllex, "set from current")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4071
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = tree.Low
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.Normal
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.High
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4244
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.str = "client_encoding"
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.str = "timezone"
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4313
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4376
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4385
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = true
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = true
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = false
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4704
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = false
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = true
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = false
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4824
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4914
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4922
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4959
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4982
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4998
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "RESUME")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5422
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5437
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = nil
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = nil
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5471
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5519
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5533
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5548
		{
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5646
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.str = ""
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 981:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5870
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5881
		{
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5882
		{
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5980
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6098
		{
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6259
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6268
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6292
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6317
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6355
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6370
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = true
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{

			sqlVAL.union.val = true
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = false
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6395
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6409
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6421
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6433
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6443
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = nil
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6580
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6582
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6586
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6590
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6628
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6646
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6665
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6682
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6699
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = false
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = true
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = false
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6775
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.str = ""
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.str = ""
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6834
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6840
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6910
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6916
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6928
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6934
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6948
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6954
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6971
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6972
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6975
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7131
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7142
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7163
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7206
		{
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7210
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.str = ""
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.str = ""
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.str = ""
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7335
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7348
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7349
		{
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7378
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7396
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7485
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7489
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7745
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7851
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = true
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = false
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7921
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = nil
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = true
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = false
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = false
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = true
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8027
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8032
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8150
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8153
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8222
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8259
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8264
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8311
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8350
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8360
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8406
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8469
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = nil
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = true
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = false
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.str = tree.AstFull
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.str = tree.AstRight
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.str = tree.AstInner
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8589
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.str = tree.AstHash
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8696
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8766
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8787
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8795
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8815
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8876
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8881
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8883
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8887
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8890
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8895
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8898
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8901
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8902
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8905
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8909
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = types.Geography
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8926
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8934
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8968
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = nil
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = types.Int2
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = types.Int
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = types.Float4
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = types.Float
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9011
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9027
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = types.Bool
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9041
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = types.Float
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9060
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9066
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9088
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = types.String
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = types.Date
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9145
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9159
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9176
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9193
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = types.Interval
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9217
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9316
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = nil
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9346
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9724
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9945
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9995
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10025
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10036
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10037
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10127
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10323
		{
			return unimplemented(sqllex, "treat")
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.str = ""
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10498
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10595
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = tree.Any
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.Some
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.All
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = tree.Div
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = tree.LT
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = tree.GT
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = tree.LE
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.GE
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.NE
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = tree.Like
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10956
		{
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10957
		{
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11037
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11110
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11126
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11175
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11355
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11375
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.str = ""
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
