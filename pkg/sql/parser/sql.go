// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11500

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1297,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	216, 194,
	440, 194,
	-2, 0,
	-1, 79,
	205, 1105,
	218, 1105,
	234, 334,
	331, 334,
	340, 902,
	372, 334,
	384, 902,
	425, 902,
	450, 334,
	475, 902,
	-2, 0,
	-1, 85,
	234, 338,
	-2, 0,
	-1, 86,
	119, 1297,
	211, 1297,
	460, 1297,
	461, 1297,
	-2, 0,
	-1, 102,
	136, 1268,
	154, 1268,
	167, 1268,
	214, 1268,
	247, 1268,
	290, 1268,
	300, 1268,
	455, 1268,
	-2, 1239,
	-1, 136,
	144, 787,
	233, 787,
	334, 756,
	389, 756,
	443, 787,
	-2, 0,
	-1, 138,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	28, 1299,
	29, 1299,
	35, 1299,
	40, 1299,
	41, 1299,
	42, 1299,
	43, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	50, 1299,
	51, 1299,
	52, 1299,
	53, 1299,
	55, 1299,
	56, 1299,
	57, 1299,
	58, 1299,
	59, 1299,
	63, 1299,
	64, 1299,
	65, 1299,
	66, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	74, 1299,
	75, 1299,
	76, 1299,
	77, 1299,
	78, 1299,
	79, 1299,
	80, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	86, 1299,
	88, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	96, 1299,
	97, 1299,
	105, 1299,
	106, 1299,
	107, 1299,
	108, 1299,
	110, 1299,
	111, 1299,
	112, 1299,
	114, 1299,
	115, 1299,
	116, 1299,
	118, 1299,
	119, 1299,
	121, 1299,
	122, 1299,
	123, 1299,
	126, 1299,
	127, 1299,
	128, 1299,
	130, 1299,
	131, 1299,
	133, 1299,
	134, 1299,
	135, 1299,
	137, 1299,
	138, 1299,
	139, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	143, 1299,
	144, 1299,
	145, 1299,
	146, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	150, 1299,
	151, 1299,
	153, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	166, 1299,
	168, 1299,
	172, 1299,
	173, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	179, 1299,
	180, 1299,
	182, 1299,
	183, 1299,
	185, 1299,
	186, 1299,
	187, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	195, 1299,
	196, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	205, 1299,
	206, 1299,
	207, 1299,
	208, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	215, 1299,
	217, 1299,
	218, 1299,
	220, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	226, 1299,
	230, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	235, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	242, 1299,
	244, 1299,
	245, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	253, 1299,
	254, 1299,
	255, 1299,
	256, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	262, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	266, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	272, 1299,
	273, 1299,
	274, 1299,
	275, 1299,
	276, 1299,
	277, 1299,
	279, 1299,
	281, 1299,
	283, 1299,
	285, 1299,
	286, 1299,
	287, 1299,
	288, 1299,
	289, 1299,
	292, 1299,
	295, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	305, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	310, 1299,
	311, 1299,
	312, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	326, 1299,
	327, 1299,
	328, 1299,
	330, 1299,
	332, 1299,
	333, 1299,
	334, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	340, 1299,
	341, 1299,
	342, 1299,
	344, 1299,
	350, 1299,
	352, 1299,
	353, 1299,
	354, 1299,
	355, 1299,
	356, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	370, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	384, 1299,
	385, 1299,
	386, 1299,
	387, 1299,
	388, 1299,
	389, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	402, 1299,
	403, 1299,
	405, 1299,
	407, 1299,
	408, 1299,
	409, 1299,
	410, 1299,
	411, 1299,
	412, 1299,
	413, 1299,
	414, 1299,
	415, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	421, 1299,
	422, 1299,
	424, 1299,
	426, 1299,
	427, 1299,
	428, 1299,
	429, 1299,
	430, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	435, 1299,
	436, 1299,
	437, 1299,
	438, 1299,
	439, 1299,
	441, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	449, 1299,
	450, 1299,
	451, 1299,
	453, 1299,
	454, 1299,
	457, 1299,
	458, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	463, 1299,
	465, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	472, 1299,
	473, 1299,
	475, 1299,
	476, 1299,
	477, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	-2, 0,
	-1, 139,
	1, 1173,
	222, 1173,
	330, 1173,
	338, 1173,
	490, 1173,
	514, 1173,
	-2, 0,
	-1, 141,
	1, 1173,
	514, 1173,
	-2, 0,
	-1, 142,
	1, 1173,
	514, 1173,
	-2, 0,
	-1, 143,
	1, 1173,
	440, 1173,
	514, 1173,
	-2, 0,
	-1, 172,
	136, 1267,
	154, 1267,
	167, 1267,
	214, 1267,
	247, 1267,
	290, 1267,
	300, 1267,
	455, 1267,
	-2, 1242,
	-1, 208,
	4, 1306,
	5, 1306,
	6, 1306,
	7, 1306,
	8, 1306,
	9, 1306,
	10, 1306,
	21, 1306,
	22, 1306,
	23, 1306,
	24, 1306,
	25, 1306,
	26, 1306,
	28, 1306,
	29, 1306,
	35, 1306,
	36, 1306,
	40, 1306,
	41, 1306,
	42, 1306,
	43, 1306,
	44, 1306,
	45, 1306,
	46, 1306,
	47, 1306,
	48, 1306,
	50, 1306,
	51, 1306,
	52, 1306,
	53, 1306,
	55, 1306,
	56, 1306,
	57, 1306,
	58, 1306,
	59, 1306,
	60, 1306,
	61, 1306,
	62, 1306,
	63, 1306,
	64, 1306,
	65, 1306,
	66, 1306,
	68, 1306,
	69, 1306,
	70, 1306,
	72, 1306,
	74, 1306,
	75, 1306,
	76, 1306,
	77, 1306,
	78, 1306,
	79, 1306,
	80, 1306,
	83, 1306,
	84, 1306,
	85, 1306,
	86, 1306,
	88, 1306,
	90, 1306,
	91, 1306,
	92, 1306,
	94, 1306,
	95, 1306,
	96, 1306,
	97, 1306,
	98, 1306,
	99, 1306,
	100, 1306,
	101, 1306,
	102, 1306,
	103, 1306,
	104, 1306,
	105, 1306,
	106, 1306,
	107, 1306,
	108, 1306,
	109, 1306,
	110, 1306,
	111, 1306,
	112, 1306,
	113, 1306,
	114, 1306,
	115, 1306,
	116, 1306,
	118, 1306,
	119, 1306,
	121, 1306,
	122, 1306,
	123, 1306,
	126, 1306,
	127, 1306,
	128, 1306,
	130, 1306,
	131, 1306,
	133, 1306,
	134, 1306,
	135, 1306,
	137, 1306,
	138, 1306,
	139, 1306,
	140, 1306,
	141, 1306,
	142, 1306,
	143, 1306,
	144, 1306,
	145, 1306,
	146, 1306,
	147, 1306,
	148, 1306,
	149, 1306,
	150, 1306,
	151, 1306,
	152, 1306,
	153, 1306,
	159, 1306,
	160, 1306,
	161, 1306,
	162, 1306,
	166, 1306,
	168, 1306,
	171, 1306,
	172, 1306,
	173, 1306,
	174, 1306,
	175, 1306,
	176, 1306,
	177, 1306,
	179, 1306,
	180, 1306,
	182, 1306,
	183, 1306,
	185, 1306,
	186, 1306,
	187, 1306,
	188, 1306,
	189, 1306,
	190, 1306,
	191, 1306,
	192, 1306,
	193, 1306,
	194, 1306,
	195, 1306,
	196, 1306,
	198, 1306,
	199, 1306,
	200, 1306,
	201, 1306,
	205, 1306,
	206, 1306,
	207, 1306,
	208, 1306,
	210, 1306,
	211, 1306,
	212, 1306,
	213, 1306,
	215, 1306,
	217, 1306,
	218, 1306,
	219, 1306,
	220, 1306,
	221, 1306,
	222, 1306,
	223, 1306,
	224, 1306,
	225, 1306,
	226, 1306,
	230, 1306,
	231, 1306,
	232, 1306,
	233, 1306,
	234, 1306,
	235, 1306,
	237, 1306,
	238, 1306,
	239, 1306,
	241, 1306,
	242, 1306,
	243, 1306,
	244, 1306,
	245, 1306,
	246, 1306,
	248, 1306,
	249, 1306,
	250, 1306,
	251, 1306,
	252, 1306,
	253, 1306,
	254, 1306,
	255, 1306,
	256, 1306,
	258, 1306,
	259, 1306,
	260, 1306,
	261, 1306,
	262, 1306,
	263, 1306,
	264, 1306,
	265, 1306,
	266, 1306,
	267, 1306,
	268, 1306,
	270, 1306,
	271, 1306,
	272, 1306,
	273, 1306,
	274, 1306,
	275, 1306,
	276, 1306,
	277, 1306,
	278, 1306,
	279, 1306,
	280, 1306,
	281, 1306,
	282, 1306,
	283, 1306,
	284, 1306,
	285, 1306,
	286, 1306,
	287, 1306,
	288, 1306,
	289, 1306,
	292, 1306,
	296, 1306,
	297, 1306,
	298, 1306,
	301, 1306,
	302, 1306,
	303, 1306,
	304, 1306,
	305, 1306,
	306, 1306,
	307, 1306,
	308, 1306,
	309, 1306,
	310, 1306,
	311, 1306,
	312, 1306,
	313, 1306,
	314, 1306,
	315, 1306,
	316, 1306,
	317, 1306,
	318, 1306,
	320, 1306,
	321, 1306,
	322, 1306,
	323, 1306,
	324, 1306,
	325, 1306,
	326, 1306,
	327, 1306,
	328, 1306,
	330, 1306,
	332, 1306,
	333, 1306,
	334, 1306,
	335, 1306,
	336, 1306,
	337, 1306,
	338, 1306,
	339, 1306,
	340, 1306,
	341, 1306,
	342, 1306,
	344, 1306,
	350, 1306,
	352, 1306,
	353, 1306,
	354, 1306,
	355, 1306,
	356, 1306,
	357, 1306,
	358, 1306,
	359, 1306,
	361, 1306,
	362, 1306,
	363, 1306,
	364, 1306,
	365, 1306,
	366, 1306,
	367, 1306,
	368, 1306,
	369, 1306,
	370, 1306,
	372, 1306,
	373, 1306,
	374, 1306,
	375, 1306,
	376, 1306,
	377, 1306,
	378, 1306,
	379, 1306,
	380, 1306,
	381, 1306,
	382, 1306,
	384, 1306,
	385, 1306,
	386, 1306,
	387, 1306,
	388, 1306,
	389, 1306,
	390, 1306,
	391, 1306,
	392, 1306,
	393, 1306,
	394, 1306,
	395, 1306,
	396, 1306,
	397, 1306,
	398, 1306,
	399, 1306,
	400, 1306,
	401, 1306,
	402, 1306,
	403, 1306,
	405, 1306,
	407, 1306,
	408, 1306,
	409, 1306,
	410, 1306,
	411, 1306,
	412, 1306,
	413, 1306,
	414, 1306,
	415, 1306,
	416, 1306,
	417, 1306,
	418, 1306,
	419, 1306,
	421, 1306,
	422, 1306,
	423, 1306,
	424, 1306,
	426, 1306,
	427, 1306,
	428, 1306,
	429, 1306,
	430, 1306,
	431, 1306,
	432, 1306,
	433, 1306,
	435, 1306,
	436, 1306,
	437, 1306,
	438, 1306,
	439, 1306,
	441, 1306,
	443, 1306,
	444, 1306,
	445, 1306,
	446, 1306,
	447, 1306,
	448, 1306,
	449, 1306,
	450, 1306,
	451, 1306,
	453, 1306,
	454, 1306,
	456, 1306,
	457, 1306,
	458, 1306,
	459, 1306,
	460, 1306,
	461, 1306,
	462, 1306,
	463, 1306,
	464, 1306,
	465, 1306,
	468, 1306,
	469, 1306,
	470, 1306,
	471, 1306,
	472, 1306,
	473, 1306,
	475, 1306,
	476, 1306,
	477, 1306,
	482, 1306,
	483, 1306,
	484, 1306,
	485, 1306,
	486, 1306,
	487, 1306,
	488, 1306,
	495, 1306,
	502, 1306,
	503, 1306,
	504, 1306,
	511, 1306,
	515, 1306,
	-2, 0,
	-1, 621,
	170, 2013,
	440, 2013,
	494, 2013,
	513, 2013,
	-2, 0,
	-1, 622,
	170, 2100,
	440, 2100,
	494, 2100,
	513, 2100,
	-2, 0,
	-1, 623,
	170, 2001,
	440, 2001,
	494, 2001,
	513, 2001,
	-2, 0,
	-1, 625,
	170, 2199,
	440, 2199,
	494, 2199,
	513, 2199,
	-2, 0,
	-1, 627,
	170, 2233,
	440, 2233,
	494, 2233,
	513, 2233,
	-2, 0,
	-1, 634,
	170, 2115,
	440, 2115,
	494, 2115,
	513, 2115,
	-2, 606,
	-1, 664,
	513, 1953,
	516, 1953,
	-2, 841,
	-1, 665,
	513, 1955,
	516, 1955,
	-2, 842,
	-1, 666,
	513, 1954,
	516, 1954,
	-2, 843,
	-1, 667,
	516, 1888,
	-2, 844,
	-1, 689,
	167, 208,
	-2, 0,
	-1, 711,
	475, 1082,
	-2, 903,
	-1, 750,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	26, 1103,
	28, 1103,
	29, 1103,
	35, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	50, 1103,
	51, 1103,
	52, 1103,
	53, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	58, 1103,
	59, 1103,
	63, 1103,
	64, 1103,
	65, 1103,
	66, 1103,
	68, 1103,
	69, 1103,
	70, 1103,
	74, 1103,
	75, 1103,
	76, 1103,
	77, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	83, 1103,
	84, 1103,
	85, 1103,
	86, 1103,
	88, 1103,
	90, 1103,
	91, 1103,
	92, 1103,
	94, 1103,
	96, 1103,
	97, 1103,
	105, 1103,
	106, 1103,
	107, 1103,
	108, 1103,
	110, 1103,
	111, 1103,
	112, 1103,
	114, 1103,
	115, 1103,
	116, 1103,
	118, 1103,
	119, 1103,
	121, 1103,
	122, 1103,
	123, 1103,
	126, 1103,
	127, 1103,
	128, 1103,
	130, 1103,
	131, 1103,
	133, 1103,
	134, 1103,
	135, 1103,
	137, 1103,
	138, 1103,
	139, 1103,
	140, 1103,
	141, 1103,
	142, 1103,
	143, 1103,
	144, 1103,
	145, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	151, 1103,
	153, 1103,
	159, 1103,
	160, 1103,
	161, 1103,
	162, 1103,
	166, 1103,
	168, 1103,
	172, 1103,
	173, 1103,
	174, 1103,
	175, 1103,
	176, 1103,
	177, 1103,
	179, 1103,
	180, 1103,
	182, 1103,
	183, 1103,
	185, 1103,
	186, 1103,
	187, 1103,
	188, 1103,
	189, 1103,
	190, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	195, 1103,
	196, 1103,
	198, 1103,
	199, 1103,
	200, 1103,
	201, 1103,
	205, 1103,
	206, 1103,
	207, 1103,
	208, 1103,
	211, 1103,
	212, 1103,
	213, 1103,
	215, 1103,
	217, 1103,
	218, 1103,
	220, 1103,
	222, 1103,
	223, 1103,
	224, 1103,
	226, 1103,
	230, 1103,
	231, 1103,
	232, 1103,
	233, 1103,
	234, 1103,
	235, 1103,
	237, 1103,
	238, 1103,
	239, 1103,
	241, 1103,
	242, 1103,
	244, 1103,
	245, 1103,
	248, 1103,
	249, 1103,
	250, 1103,
	253, 1103,
	254, 1103,
	255, 1103,
	256, 1103,
	258, 1103,
	259, 1103,
	260, 1103,
	261, 1103,
	262, 1103,
	263, 1103,
	264, 1103,
	265, 1103,
	266, 1103,
	267, 1103,
	268, 1103,
	270, 1103,
	272, 1103,
	273, 1103,
	274, 1103,
	275, 1103,
	276, 1103,
	277, 1103,
	279, 1103,
	281, 1103,
	283, 1103,
	285, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	292, 1103,
	296, 1103,
	297, 1103,
	298, 1103,
	301, 1103,
	302, 1103,
	303, 1103,
	305, 1103,
	307, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	311, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	315, 1103,
	316, 1103,
	317, 1103,
	318, 1103,
	320, 1103,
	321, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	326, 1103,
	327, 1103,
	328, 1103,
	330, 1103,
	332, 1103,
	333, 1103,
	334, 1103,
	335, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	339, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	344, 1103,
	350, 1103,
	352, 1103,
	353, 1103,
	354, 1103,
	355, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	359, 1103,
	361, 1103,
	362, 1103,
	363, 1103,
	365, 1103,
	366, 1103,
	367, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	372, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	380, 1103,
	381, 1103,
	382, 1103,
	384, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	388, 1103,
	389, 1103,
	391, 1103,
	392, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	397, 1103,
	398, 1103,
	399, 1103,
	400, 1103,
	401, 1103,
	402, 1103,
	403, 1103,
	405, 1103,
	407, 1103,
	408, 1103,
	409, 1103,
	410, 1103,
	411, 1103,
	412, 1103,
	413, 1103,
	414, 1103,
	415, 1103,
	416, 1103,
	417, 1103,
	418, 1103,
	419, 1103,
	421, 1103,
	422, 1103,
	424, 1103,
	426, 1103,
	427, 1103,
	428, 1103,
	429, 1103,
	430, 1103,
	431, 1103,
	432, 1103,
	433, 1103,
	435, 1103,
	436, 1103,
	437, 1103,
	438, 1103,
	439, 1103,
	441, 1103,
	443, 1103,
	444, 1103,
	445, 1103,
	446, 1103,
	447, 1103,
	449, 1103,
	450, 1103,
	451, 1103,
	453, 1103,
	454, 1103,
	457, 1103,
	458, 1103,
	459, 1103,
	460, 1103,
	461, 1103,
	462, 1103,
	463, 1103,
	465, 1103,
	468, 1103,
	469, 1103,
	470, 1103,
	471, 1103,
	472, 1103,
	473, 1103,
	475, 1103,
	476, 1103,
	477, 1103,
	482, 1103,
	483, 1103,
	484, 1103,
	485, 1103,
	486, 1103,
	487, 1103,
	-2, 0,
	-1, 828,
	334, 757,
	389, 757,
	-2, 0,
	-1, 829,
	334, 756,
	389, 756,
	-2, 702,
	-1, 833,
	1, 797,
	510, 797,
	512, 797,
	514, 797,
	-2, 0,
	-1, 834,
	1, 735,
	510, 735,
	512, 735,
	514, 735,
	-2, 0,
	-1, 835,
	1, 840,
	167, 840,
	510, 840,
	512, 840,
	514, 840,
	-2, 0,
	-1, 843,
	1, 760,
	510, 760,
	512, 760,
	514, 760,
	-2, 0,
	-1, 849,
	1, 797,
	510, 797,
	512, 797,
	514, 797,
	-2, 0,
	-1, 850,
	1, 799,
	510, 799,
	512, 799,
	514, 799,
	-2, 0,
	-1, 851,
	1, 802,
	510, 802,
	512, 802,
	514, 802,
	-2, 0,
	-1, 857,
	1, 819,
	510, 819,
	512, 819,
	514, 819,
	-2, 0,
	-1, 858,
	1, 821,
	510, 821,
	512, 821,
	514, 821,
	-2, 0,
	-1, 907,
	154, 1308,
	167, 1308,
	247, 1308,
	290, 1308,
	-2, 1246,
	-1, 922,
	154, 1307,
	167, 1307,
	247, 1307,
	290, 1307,
	-2, 1243,
	-1, 948,
	513, 1952,
	-2, 614,
	-1, 976,
	5, 1944,
	511, 1942,
	-2, 1933,
	-1, 984,
	5, 1965,
	511, 1962,
	-2, 1953,
	-1, 985,
	5, 1966,
	511, 1963,
	-2, 1954,
	-1, 993,
	513, 1950,
	-2, 1932,
	-1, 994,
	511, 2311,
	-2, 1951,
	-1, 1017,
	511, 2310,
	-2, 1967,
	-1, 1018,
	5, 1472,
	-2, 2281,
	-1, 1019,
	5, 1473,
	-2, 2282,
	-1, 1020,
	5, 1474,
	-2, 2296,
	-1, 1021,
	5, 1475,
	-2, 2261,
	-1, 1022,
	5, 1476,
	-2, 2294,
	-1, 1023,
	5, 1484,
	-2, 2273,
	-1, 1024,
	5, 1471,
	-2, 2269,
	-1, 1025,
	5, 1471,
	-2, 2268,
	-1, 1026,
	5, 1471,
	-2, 2287,
	-1, 1027,
	5, 1482,
	-2, 2263,
	-1, 1028,
	5, 1487,
	-2, 2262,
	-1, 1029,
	5, 1489,
	-2, 2306,
	-1, 1032,
	5, 1511,
	-2, 2299,
	-1, 1033,
	5, 1503,
	-2, 2300,
	-1, 1034,
	5, 1511,
	-2, 2301,
	-1, 1035,
	5, 1507,
	-2, 2302,
	-1, 1036,
	5, 1458,
	-2, 2274,
	-1, 1037,
	5, 1459,
	-2, 2275,
	-1, 1064,
	5, 1494,
	-2, 2307,
	-1, 1065,
	5, 1495,
	-2, 2297,
	-1, 1066,
	5, 1496,
	476, 1496,
	-2, 2264,
	-1, 1067,
	5, 1497,
	476, 1497,
	-2, 2265,
	-1, 1104,
	511, 1962,
	-2, 1953,
	-1, 1105,
	511, 1963,
	-2, 1954,
	-1, 1135,
	170, 2233,
	440, 2233,
	494, 2233,
	513, 2233,
	-2, 0,
	-1, 1138,
	1, 592,
	514, 592,
	-2, 1181,
	-1, 1263,
	352, 1928,
	391, 1928,
	504, 1928,
	-2, 1926,
	-1, 1275,
	515, 1928,
	-2, 1929,
	-1, 1282,
	1, 1079,
	510, 1079,
	512, 1079,
	514, 1079,
	-2, 1295,
	-1, 1335,
	340, 902,
	475, 902,
	-2, 333,
	-1, 1356,
	1, 1079,
	510, 1079,
	512, 1079,
	514, 1079,
	-2, 1295,
	-1, 1363,
	4, 1103,
	21, 1103,
	22, 1103,
	23, 1103,
	24, 1103,
	25, 1103,
	26, 1103,
	28, 1103,
	29, 1103,
	35, 1103,
	40, 1103,
	41, 1103,
	42, 1103,
	43, 1103,
	44, 1103,
	45, 1103,
	46, 1103,
	47, 1103,
	48, 1103,
	50, 1103,
	51, 1103,
	52, 1103,
	53, 1103,
	55, 1103,
	56, 1103,
	57, 1103,
	58, 1103,
	59, 1103,
	63, 1103,
	64, 1103,
	65, 1103,
	66, 1103,
	68, 1103,
	69, 1103,
	70, 1103,
	74, 1103,
	75, 1103,
	76, 1103,
	77, 1103,
	78, 1103,
	79, 1103,
	80, 1103,
	83, 1103,
	84, 1103,
	85, 1103,
	86, 1103,
	88, 1103,
	90, 1103,
	91, 1103,
	92, 1103,
	94, 1103,
	96, 1103,
	97, 1103,
	105, 1103,
	106, 1103,
	107, 1103,
	108, 1103,
	110, 1103,
	111, 1103,
	112, 1103,
	114, 1103,
	115, 1103,
	116, 1103,
	118, 1103,
	119, 1103,
	121, 1103,
	122, 1103,
	123, 1103,
	126, 1103,
	127, 1103,
	128, 1103,
	130, 1103,
	131, 1103,
	133, 1103,
	134, 1103,
	135, 1103,
	137, 1103,
	138, 1103,
	139, 1103,
	140, 1103,
	141, 1103,
	142, 1103,
	143, 1103,
	144, 1103,
	145, 1103,
	146, 1103,
	147, 1103,
	148, 1103,
	149, 1103,
	150, 1103,
	151, 1103,
	159, 1103,
	160, 1103,
	161, 1103,
	162, 1103,
	166, 1103,
	168, 1103,
	172, 1103,
	173, 1103,
	174, 1103,
	175, 1103,
	176, 1103,
	177, 1103,
	179, 1103,
	180, 1103,
	182, 1103,
	183, 1103,
	185, 1103,
	186, 1103,
	187, 1103,
	188, 1103,
	189, 1103,
	190, 1103,
	191, 1103,
	192, 1103,
	193, 1103,
	195, 1103,
	196, 1103,
	198, 1103,
	199, 1103,
	200, 1103,
	201, 1103,
	206, 1103,
	207, 1103,
	208, 1103,
	211, 1103,
	212, 1103,
	213, 1103,
	215, 1103,
	217, 1103,
	218, 1103,
	220, 1103,
	222, 1103,
	223, 1103,
	224, 1103,
	226, 1103,
	230, 1103,
	231, 1103,
	232, 1103,
	233, 1103,
	234, 1103,
	235, 1103,
	237, 1103,
	238, 1103,
	239, 1103,
	241, 1103,
	242, 1103,
	244, 1103,
	245, 1103,
	248, 1103,
	249, 1103,
	250, 1103,
	253, 1103,
	254, 1103,
	255, 1103,
	256, 1103,
	258, 1103,
	259, 1103,
	260, 1103,
	261, 1103,
	262, 1103,
	263, 1103,
	264, 1103,
	265, 1103,
	266, 1103,
	267, 1103,
	268, 1103,
	270, 1103,
	272, 1103,
	273, 1103,
	274, 1103,
	275, 1103,
	276, 1103,
	277, 1103,
	279, 1103,
	283, 1103,
	285, 1103,
	286, 1103,
	287, 1103,
	288, 1103,
	289, 1103,
	292, 1103,
	294, 1103,
	296, 1103,
	297, 1103,
	298, 1103,
	301, 1103,
	302, 1103,
	303, 1103,
	305, 1103,
	307, 1103,
	308, 1103,
	309, 1103,
	310, 1103,
	311, 1103,
	312, 1103,
	313, 1103,
	314, 1103,
	315, 1103,
	316, 1103,
	317, 1103,
	318, 1103,
	320, 1103,
	321, 1103,
	322, 1103,
	323, 1103,
	324, 1103,
	325, 1103,
	326, 1103,
	327, 1103,
	328, 1103,
	330, 1103,
	332, 1103,
	333, 1103,
	334, 1103,
	335, 1103,
	336, 1103,
	337, 1103,
	338, 1103,
	339, 1103,
	340, 1103,
	341, 1103,
	342, 1103,
	344, 1103,
	350, 1103,
	352, 1103,
	353, 1103,
	354, 1103,
	355, 1103,
	356, 1103,
	357, 1103,
	358, 1103,
	359, 1103,
	361, 1103,
	362, 1103,
	363, 1103,
	365, 1103,
	366, 1103,
	367, 1103,
	368, 1103,
	369, 1103,
	370, 1103,
	372, 1103,
	373, 1103,
	374, 1103,
	375, 1103,
	376, 1103,
	377, 1103,
	378, 1103,
	379, 1103,
	380, 1103,
	381, 1103,
	382, 1103,
	384, 1103,
	385, 1103,
	386, 1103,
	387, 1103,
	388, 1103,
	389, 1103,
	391, 1103,
	392, 1103,
	393, 1103,
	394, 1103,
	395, 1103,
	397, 1103,
	398, 1103,
	399, 1103,
	400, 1103,
	401, 1103,
	402, 1103,
	403, 1103,
	405, 1103,
	407, 1103,
	408, 1103,
	409, 1103,
	410, 1103,
	411, 1103,
	412, 1103,
	413, 1103,
	414, 1103,
	415, 1103,
	416, 1103,
	417, 1103,
	418, 1103,
	419, 1103,
	421, 1103,
	422, 1103,
	424, 1103,
	426, 1103,
	427, 1103,
	428, 1103,
	429, 1103,
	430, 1103,
	431, 1103,
	432, 1103,
	433, 1103,
	435, 1103,
	436, 1103,
	437, 1103,
	438, 1103,
	439, 1103,
	441, 1103,
	443, 1103,
	444, 1103,
	445, 1103,
	446, 1103,
	447, 1103,
	449, 1103,
	450, 1103,
	451, 1103,
	453, 1103,
	454, 1103,
	457, 1103,
	458, 1103,
	459, 1103,
	460, 1103,
	461, 1103,
	462, 1103,
	463, 1103,
	465, 1103,
	468, 1103,
	469, 1103,
	470, 1103,
	471, 1103,
	472, 1103,
	473, 1103,
	475, 1103,
	476, 1103,
	477, 1103,
	482, 1103,
	483, 1103,
	484, 1103,
	485, 1103,
	486, 1103,
	487, 1103,
	-2, 0,
	-1, 1435,
	1, 469,
	510, 469,
	512, 469,
	514, 469,
	-2, 1266,
	-1, 1438,
	4, 2305,
	11, 2305,
	12, 2305,
	14, 2305,
	15, 2305,
	16, 2305,
	17, 2305,
	18, 2305,
	19, 2305,
	21, 2305,
	22, 2305,
	23, 2305,
	24, 2305,
	25, 2305,
	26, 2305,
	28, 2305,
	29, 2305,
	32, 2305,
	33, 2305,
	35, 2305,
	37, 2305,
	40, 2305,
	41, 2305,
	42, 2305,
	43, 2305,
	44, 2305,
	45, 2305,
	46, 2305,
	47, 2305,
	48, 2305,
	50, 2305,
	51, 2305,
	52, 2305,
	53, 2305,
	55, 2305,
	56, 2305,
	57, 2305,
	58, 2305,
	59, 2305,
	63, 2305,
	64, 2305,
	65, 2305,
	66, 2305,
	68, 2305,
	69, 2305,
	70, 2305,
	71, 2305,
	74, 2305,
	75, 2305,
	76, 2305,
	77, 2305,
	78, 2305,
	79, 2305,
	80, 2305,
	81, 2305,
	83, 2305,
	84, 2305,
	85, 2305,
	86, 2305,
	88, 2305,
	89, 2305,
	90, 2305,
	91, 2305,
	92, 2305,
	94, 2305,
	95, 2305,
	96, 2305,
	97, 2305,
	105, 2305,
	106, 2305,
	107, 2305,
	108, 2305,
	110, 2305,
	111, 2305,
	112, 2305,
	114, 2305,
	115, 2305,
	116, 2305,
	118, 2305,
	119, 2305,
	121, 2305,
	122, 2305,
	123, 2305,
	126, 2305,
	127, 2305,
	128, 2305,
	130, 2305,
	131, 2305,
	133, 2305,
	134, 2305,
	135, 2305,
	137, 2305,
	138, 2305,
	139, 2305,
	140, 2305,
	141, 2305,
	142, 2305,
	143, 2305,
	144, 2305,
	145, 2305,
	146, 2305,
	147, 2305,
	148, 2305,
	149, 2305,
	150, 2305,
	151, 2305,
	155, 2305,
	156, 2305,
	157, 2305,
	158, 2305,
	159, 2305,
	160, 2305,
	161, 2305,
	162, 2305,
	165, 2305,
	166, 2305,
	168, 2305,
	171, 2305,
	172, 2305,
	173, 2305,
	174, 2305,
	175, 2305,
	176, 2305,
	177, 2305,
	179, 2305,
	180, 2305,
	182, 2305,
	183, 2305,
	185, 2305,
	186, 2305,
	187, 2305,
	188, 2305,
	189, 2305,
	190, 2305,
	191, 2305,
	192, 2305,
	193, 2305,
	194, 2305,
	195, 2305,
	196, 2305,
	197, 2305,
	198, 2305,
	199, 2305,
	200, 2305,
	201, 2305,
	203, 2305,
	204, 2305,
	206, 2305,
	207, 2305,
	208, 2305,
	210, 2305,
	211, 2305,
	212, 2305,
	213, 2305,
	215, 2305,
	217, 2305,
	218, 2305,
	219, 2305,
	220, 2305,
	221, 2305,
	222, 2305,
	223, 2305,
	224, 2305,
	225, 2305,
	226, 2305,
	228, 2305,
	229, 2305,
	230, 2305,
	231, 2305,
	232, 2305,
	233, 2305,
	234, 2305,
	235, 2305,
	237, 2305,
	238, 2305,
	239, 2305,
	241, 2305,
	242, 2305,
	243, 2305,
	244, 2305,
	245, 2305,
	246, 2305,
	248, 2305,
	249, 2305,
	250, 2305,
	253, 2305,
	254, 2305,
	255, 2305,
	256, 2305,
	257, 2305,
	258, 2305,
	259, 2305,
	260, 2305,
	261, 2305,
	262, 2305,
	263, 2305,
	264, 2305,
	265, 2305,
	266, 2305,
	267, 2305,
	268, 2305,
	270, 2305,
	271, 2305,
	272, 2305,
	273, 2305,
	274, 2305,
	275, 2305,
	276, 2305,
	277, 2305,
	279, 2305,
	282, 2305,
	283, 2305,
	285, 2305,
	286, 2305,
	287, 2305,
	288, 2305,
	289, 2305,
	292, 2305,
	296, 2305,
	297, 2305,
	298, 2305,
	299, 2305,
	301, 2305,
	302, 2305,
	303, 2305,
	305, 2305,
	307, 2305,
	308, 2305,
	309, 2305,
	310, 2305,
	311, 2305,
	312, 2305,
	313, 2305,
	314, 2305,
	315, 2305,
	316, 2305,
	317, 2305,
	318, 2305,
	320, 2305,
	321, 2305,
	322, 2305,
	323, 2305,
	324, 2305,
	325, 2305,
	326, 2305,
	327, 2305,
	328, 2305,
	330, 2305,
	332, 2305,
	333, 2305,
	334, 2305,
	335, 2305,
	336, 2305,
	337, 2305,
	338, 2305,
	339, 2305,
	340, 2305,
	341, 2305,
	342, 2305,
	344, 2305,
	350, 2305,
	351, 2305,
	352, 2305,
	353, 2305,
	354, 2305,
	355, 2305,
	356, 2305,
	357, 2305,
	358, 2305,
	359, 2305,
	361, 2305,
	362, 2305,
	363, 2305,
	364, 2305,
	365, 2305,
	366, 2305,
	367, 2305,
	368, 2305,
	369, 2305,
	370, 2305,
	371, 2305,
	372, 2305,
	373, 2305,
	374, 2305,
	375, 2305,
	376, 2305,
	377, 2305,
	378, 2305,
	379, 2305,
	380, 2305,
	381, 2305,
	382, 2305,
	384, 2305,
	385, 2305,
	386, 2305,
	387, 2305,
	388, 2305,
	389, 2305,
	391, 2305,
	392, 2305,
	393, 2305,
	394, 2305,
	395, 2305,
	396, 2305,
	397, 2305,
	398, 2305,
	399, 2305,
	400, 2305,
	401, 2305,
	402, 2305,
	403, 2305,
	405, 2305,
	407, 2305,
	408, 2305,
	409, 2305,
	410, 2305,
	411, 2305,
	412, 2305,
	413, 2305,
	414, 2305,
	415, 2305,
	416, 2305,
	417, 2305,
	418, 2305,
	419, 2305,
	421, 2305,
	422, 2305,
	424, 2305,
	426, 2305,
	427, 2305,
	428, 2305,
	429, 2305,
	430, 2305,
	431, 2305,
	432, 2305,
	433, 2305,
	435, 2305,
	436, 2305,
	437, 2305,
	438, 2305,
	439, 2305,
	441, 2305,
	443, 2305,
	444, 2305,
	445, 2305,
	446, 2305,
	447, 2305,
	449, 2305,
	450, 2305,
	451, 2305,
	453, 2305,
	454, 2305,
	457, 2305,
	458, 2305,
	459, 2305,
	460, 2305,
	461, 2305,
	462, 2305,
	463, 2305,
	465, 2305,
	468, 2305,
	469, 2305,
	470, 2305,
	471, 2305,
	472, 2305,
	473, 2305,
	475, 2305,
	476, 2305,
	477, 2305,
	482, 2305,
	483, 2305,
	484, 2305,
	485, 2305,
	486, 2305,
	487, 2305,
	488, 2305,
	489, 2305,
	492, 2305,
	493, 2305,
	494, 2305,
	495, 2305,
	496, 2305,
	497, 2305,
	499, 2305,
	500, 2305,
	501, 2305,
	502, 2305,
	503, 2305,
	504, 2305,
	505, 2305,
	506, 2305,
	507, 2305,
	509, 2305,
	512, 2305,
	513, 2305,
	515, 2305,
	516, 2305,
	-2, 0,
	-1, 1443,
	170, 2199,
	440, 2199,
	494, 2199,
	513, 2199,
	-2, 0,
	-1, 1491,
	334, 757,
	389, 757,
	-2, 0,
	-1, 1516,
	1, 752,
	510, 752,
	512, 752,
	514, 752,
	-2, 0,
	-1, 1517,
	1, 788,
	510, 788,
	512, 788,
	514, 788,
	-2, 0,
	-1, 1518,
	1, 759,
	510, 759,
	512, 759,
	514, 759,
	-2, 0,
	-1, 1520,
	1, 763,
	510, 763,
	512, 763,
	514, 763,
	-2, 0,
	-1, 1526,
	1, 770,
	510, 770,
	512, 770,
	514, 770,
	-2, 0,
	-1, 1554,
	1, 2253,
	510, 2253,
	512, 2253,
	513, 2253,
	514, 2253,
	-2, 817,
	-1, 1555,
	1, 2196,
	510, 2196,
	512, 2196,
	513, 2196,
	514, 2196,
	-2, 818,
	-1, 1570,
	1, 1176,
	514, 1176,
	-2, 1181,
	-1, 1573,
	154, 1307,
	167, 1307,
	247, 1307,
	290, 1307,
	-2, 1247,
	-1, 1667,
	136, 1268,
	154, 1268,
	167, 1268,
	214, 1268,
	247, 1268,
	290, 1268,
	300, 1268,
	455, 1268,
	-2, 1672,
	-1, 1727,
	512, 1822,
	-2, 0,
	-1, 1762,
	136, 1268,
	154, 1268,
	167, 1268,
	214, 1268,
	247, 1268,
	290, 1268,
	300, 1268,
	455, 1268,
	-2, 1388,
	-1, 1809,
	511, 1499,
	-2, 1487,
	-1, 1844,
	1, 594,
	514, 594,
	-2, 1181,
	-1, 2070,
	1, 754,
	510, 754,
	512, 754,
	514, 754,
	-2, 0,
	-1, 2071,
	1, 790,
	510, 790,
	512, 790,
	514, 790,
	-2, 0,
	-1, 2101,
	1, 772,
	510, 772,
	512, 772,
	514, 772,
	-2, 0,
	-1, 2147,
	369, 1334,
	370, 1334,
	-2, 1532,
	-1, 2178,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1552,
	-1, 2179,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1553,
	-1, 2180,
	89, 0,
	228, 0,
	229, 0,
	496, 0,
	497, 0,
	-2, 1554,
	-1, 2181,
	89, 0,
	228, 0,
	229, 0,
	496, 0,
	497, 0,
	-2, 1555,
	-1, 2182,
	89, 0,
	228, 0,
	229, 0,
	496, 0,
	497, 0,
	-2, 1556,
	-1, 2183,
	89, 0,
	228, 0,
	229, 0,
	496, 0,
	497, 0,
	-2, 1557,
	-1, 2184,
	89, 0,
	228, 0,
	229, 0,
	496, 0,
	497, 0,
	-2, 1558,
	-1, 2185,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1559,
	-1, 2197,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1571,
	-1, 2198,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1572,
	-1, 2199,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1573,
	-1, 2202,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1578,
	-1, 2208,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1582,
	-1, 2210,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1590,
	-1, 2211,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1591,
	-1, 2212,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1592,
	-1, 2213,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1593,
	-1, 2325,
	5, 1965,
	170, 1833,
	511, 1962,
	-2, 1953,
	-1, 2326,
	170, 1834,
	-2, 2257,
	-1, 2327,
	170, 1835,
	-2, 2114,
	-1, 2328,
	170, 1836,
	-2, 2024,
	-1, 2329,
	170, 1837,
	-2, 2068,
	-1, 2330,
	170, 1838,
	-2, 2109,
	-1, 2331,
	170, 1839,
	-2, 2194,
	-1, 2332,
	170, 1840,
	-2, 1655,
	-1, 2401,
	1, 1389,
	2, 1389,
	95, 1389,
	136, 1389,
	154, 1389,
	167, 1389,
	171, 1389,
	181, 1389,
	184, 1389,
	210, 1389,
	214, 1389,
	225, 1389,
	243, 1389,
	247, 1389,
	271, 1389,
	290, 1389,
	294, 1389,
	300, 1389,
	360, 1389,
	364, 1389,
	455, 1389,
	466, 1389,
	479, 1389,
	480, 1389,
	481, 1389,
	490, 1389,
	510, 1389,
	512, 1389,
	514, 1389,
	516, 1389,
	-2, 1388,
	-1, 2414,
	511, 1934,
	-2, 1948,
	-1, 2416,
	1, 270,
	-2, 1295,
	-1, 2438,
	511, 1498,
	-2, 1488,
	-1, 2555,
	1, 1079,
	510, 1079,
	512, 1079,
	514, 1079,
	-2, 1295,
	-1, 2719,
	295, 1337,
	-2, 2295,
	-1, 2720,
	295, 1338,
	-2, 2180,
	-1, 2724,
	369, 1899,
	370, 1899,
	-2, 1653,
	-1, 2725,
	369, 1903,
	370, 1903,
	-2, 1654,
	-1, 2726,
	369, 1900,
	370, 1900,
	-2, 1653,
	-1, 2727,
	369, 1904,
	370, 1904,
	-2, 1654,
	-1, 2740,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1580,
	-1, 2741,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1584,
	-1, 2747,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1586,
	-1, 2945,
	222, 1181,
	330, 1181,
	338, 1181,
	490, 1181,
	-2, 591,
	-1, 3072,
	1, 1079,
	510, 1079,
	512, 1079,
	514, 1079,
	-2, 1295,
	-1, 3177,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1588,
	-1, 3184,
	219, 0,
	221, 0,
	282, 0,
	-2, 1607,
	-1, 3251,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1636,
	-1, 3252,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1637,
	-1, 3253,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1638,
	-1, 3257,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1642,
	-1, 3258,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1643,
	-1, 3259,
	14, 0,
	15, 0,
	16, 0,
	492, 0,
	493, 0,
	494, 0,
	-2, 1644,
	-1, 3305,
	511, 1935,
	-2, 1949,
	-1, 3429,
	513, 2411,
	-2, 1225,
	-1, 3486,
	219, 0,
	221, 0,
	282, 0,
	-2, 1608,
	-1, 3489,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1611,
	-1, 3490,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1613,
	-1, 3695,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1612,
	-1, 3696,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 1614,
	-1, 3707,
	219, 0,
	-2, 1645,
	-1, 3853,
	219, 0,
	-2, 1646,
	-1, 4001,
	47, 0,
	194, 0,
	246, 0,
	396, 0,
	488, 0,
	495, 0,
	-2, 2260,
}

const sqlPrivate = 57344

const sqlLast = 101421

var sqlAct = [...]int{

	242, 3896, 4000, 3739, 4011, 3058, 3742, 3057, 4108, 3960,
	2639, 3970, 3875, 3976, 3957, 2874, 4012, 3942, 3621, 4013,
	4058, 2611, 3331, 3727, 3782, 3789, 1108, 3216, 3469, 3857,
	3999, 2875, 3652, 3647, 3606, 3684, 932, 1301, 3421, 2157,
	3798, 1426, 3635, 3369, 923, 3555, 3820, 3088, 2041, 2225,
	2963, 3081, 3657, 1459, 3399, 1796, 3384, 1285, 2471, 1458,
	2025, 2532, 1582, 3053, 3043, 3083, 936, 1421, 1896, 2165,
	666, 3169, 2733, 3382, 1768, 2357, 632, 2050, 1167, 3712,
	2648, 3332, 2661, 2158, 3133, 2600, 37, 2574, 3135, 2583,
	3307, 2889, 2650, 1097, 666, 2857, 2917, 2897, 3468, 2658,
	2048, 3525, 2597, 2647, 2641, 1839, 2595, 2878, 1906, 1260,
	976, 1945, 1944, 2612, 2509, 931, 163, 1737, 3276, 2394,
	2856, 764, 2880, 2162, 3858, 4, 1713, 2393, 2238, 1268,
	1499, 1457, 2473, 661, 2717, 2546, 983, 3027, 2657, 2267,
	2023, 1675, 1939, 2508, 1923, 2584, 1930, 3783, 1880, 1738,
	1151, 2924, 980, 1797, 2258, 236, 2375, 235, 1883, 2354,
	1570, 2396, 1402, 2222, 2146, 1870, 2129, 3055, 2127, 1436,
	1418, 2605, 1412, 1979, 1265, 1354, 985, 1422, 2462, 667,
	1088, 2651, 668, 1140, 598, 2261, 1747, 1091, 2383, 2239,
	1070, 2321, 2311, 1660, 1708, 172, 1583, 173, 2128, 614,
	663, 2365, 163, 1584, 1287, 1526, 1087, 1434, 2269, 584,
	1425, 1105, 758, 606, 1754, 1978, 626, 2130, 1378, 1757,
	987, 738, 1296, 711, 2000, 672, 2151, 675, 1895, 961,
	601, 42, 41, 39, 30, 28, 26, 609, 1068, 1589,
	2768, 1093, 1307, 841, 823, 1569, 2764, 1300, 2014, 672,
	3290, 675, 3291, 2876, 4170, 2016, 927, 2016, 2374, 3098,
	2016, 2016, 4164, 68, 4150, 1519, 3114, 4149, 2374, 4125,
	2016, 2374, 4123, 3571, 101, 2943, 3571, 4119, 4041, 69,
	4035, 1953, 4042, 4033, 2374, 4030, 2367, 2374, 4027, 4031,
	3097, 4022, 4028, 73, 779, 1953, 3997, 3996, 3995, 3991,
	1953, 1953, 2034, 2034, 3990, 927, 1124, 3985, 2034, 1597,
	1598, 3571, 1630, 1631, 1632, 1640, 1641, 1642, 3983, 3955,
	3936, 1103, 3571, 3571, 2429, 3929, 3114, 1119, 79, 2374,
	1633, 1628, 3928, 1085, 2528, 3923, 2374, 3922, 1600, 3571,
	3916, 3571, 3889, 2732, 1953, 1646, 3613, 1100, 3855, 3837,
	2374, 3834, 2429, 3457, 1321, 1953, 3831, 1466, 3791, 908,
	3571, 907, 3792, 85, 1071, 1071, 3759, 3758, 3750, 1599,
	1953, 1953, 1953, 1148, 3749, 3937, 3718, 100, 3571, 1619,
	1953, 3697, 86, 97, 3676, 2429, 86, 1616, 2034, 3665,
	3601, 3590, 3570, 3114, 2374, 2374, 3571, 3488, 3437, 2049,
	3431, 2429, 3130, 1120, 3130, 3397, 3300, 1597, 1598, 3398,
	3301, 3298, 1148, 3283, 922, 3299, 917, 2374, 3200, 3196,
	2777, 3850, 1953, 2374, 2829, 2830, 2778, 3838, 3129, 1628,
	1309, 87, 3130, 3121, 2034, 2873, 1600, 3122, 3280, 2374,
	2868, 2867, 1072, 2820, 2374, 2374, 2818, 2821, 2810, 928,
	2819, 2425, 2811, 1622, 1623, 1624, 1625, 2808, 2779, 2494,
	2664, 2374, 2374, 1605, 2034, 2637, 2636, 1599, 3280, 2037,
	2037, 2446, 2374, 2428, 2423, 2374, 208, 2429, 2374, 2417,
	2373, 2036, 2366, 1953, 2374, 2037, 1953, 1074, 3646, 1075,
	3613, 3591, 1637, 1953, 3457, 1647, 3122, 208, 2523, 1315,
	2461, 1627, 1629, 1900, 1850, 2015, 2580, 1952, 1452, 2540,
	2459, 2829, 2830, 1733, 2847, 2848, 2849, 1643, 210, 1644,
	1295, 2767, 1309, 3361, 3172, 3150, 1614, 1615, 1755, 1933,
	3099, 2427, 3484, 1501, 2410, 2409, 2408, 234, 2407, 210,
	2406, 1076, 1320, 1073, 1635, 916, 915, 914, 208, 3100,
	3541, 90, 913, 912, 2017, 1620, 2017, 911, 910, 2017,
	2017, 1605, 906, 905, 209, 2697, 3500, 1597, 1598, 2017,
	904, 903, 902, 901, 202, 900, 899, 898, 2835, 897,
	1645, 2844, 203, 896, 895, 209, 894, 893, 892, 1628,
	210, 171, 93, 891, 96, 202, 1600, 1634, 1308, 1627,
	1629, 208, 890, 203, 174, 3097, 872, 1684, 821, 820,
	819, 818, 817, 816, 815, 814, 813, 812, 208, 4018,
	811, 1120, 208, 810, 809, 174, 763, 1599, 1300, 808,
	136, 985, 2366, 807, 136, 985, 209, 806, 805, 804,
	803, 802, 801, 210, 800, 799, 208, 798, 797, 1626,
	1170, 1470, 1120, 1620, 1170, 2608, 796, 795, 1290, 794,
	210, 793, 792, 782, 210, 2835, 1456, 1150, 781, 1621,
	2845, 1155, 777, 1309, 776, 770, 174, 769, 729, 3998,
	728, 985, 688, 985, 138, 985, 687, 1314, 210, 209,
	1290, 686, 678, 677, 1638, 676, 646, 638, 175, 202,
	637, 636, 620, 230, 229, 1144, 209, 203, 228, 227,
	209, 1282, 2625, 1290, 2032, 1271, 202, 2029, 2015, 2850,
	202, 1605, 226, 1276, 203, 2591, 225, 2122, 203, 174,
	224, 223, 2294, 222, 209, 208, 221, 220, 208, 219,
	218, 1521, 217, 1324, 202, 1299, 174, 1433, 216, 3315,
	174, 215, 203, 930, 214, 1290, 985, 2845, 213, 1627,
	1629, 1290, 212, 1309, 211, 1290, 1356, 1621, 1306, 3294,
	1313, 3131, 1319, 985, 174, 985, 2280, 210, 2920, 1290,
	210, 2790, 1360, 1362, 2846, 985, 1636, 985, 1138, 2773,
	1611, 1612, 1618, 1639, 1617, 1613, 2871, 1610, 1608, 1609,
	1601, 1602, 1603, 1604, 1606, 1607, 2829, 2830, 1429, 2561,
	3510, 1758, 2433, 1620, 3509, 2415, 2400, 2872, 1445, 1030,
	1878, 1781, 1686, 209, 1303, 672, 209, 675, 1290, 1163,
	2044, 1257, 1262, 202, 1596, 2278, 202, 1157, 1107, 982,
	3903, 203, 1133, 1432, 203, 985, 3847, 3711, 985, 1298,
	3666, 1716, 1297, 3661, 3841, 3839, 1677, 1715, 1716, 3645,
	1450, 3548, 1455, 174, 1715, 3737, 174, 1279, 2829, 2830,
	3523, 2846, 1464, 3522, 1469, 1597, 1598, 163, 163, 1719,
	208, 1483, 3516, 2264, 3515, 3514, 1714, 1439, 1441, 208,
	2829, 2830, 1365, 3507, 3506, 1610, 1608, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 1600, 3504, 3499, 2043, 3125, 3496,
	1471, 1406, 1409, 2838, 2839, 2831, 2832, 2833, 2834, 2836,
	2837, 1350, 210, 3495, 3402, 208, 1415, 1621, 2593, 959,
	1520, 210, 3396, 3359, 1381, 1599, 2829, 2830, 985, 985,
	985, 985, 985, 985, 985, 3319, 3318, 3317, 3304, 3271,
	3270, 3269, 1574, 3192, 1144, 759, 3188, 1144, 2915, 2864,
	2835, 2265, 2855, 2829, 2830, 1437, 2828, 210, 209, 985,
	2825, 2824, 2822, 2817, 2816, 985, 2815, 209, 202, 208,
	1535, 68, 2812, 762, 761, 2809, 203, 202, 2789, 2772,
	2765, 2638, 2841, 2842, 2843, 203, 1678, 69, 1676, 2840,
	2838, 2839, 2831, 2832, 2833, 2834, 2836, 2837, 174, 1677,
	2401, 73, 1084, 209, 2251, 1596, 1451, 174, 1991, 1960,
	1958, 210, 2835, 202, 1595, 4163, 3403, 4117, 1465, 1605,
	4116, 203, 208, 4051, 4049, 928, 2266, 2263, 4040, 1109,
	3218, 1666, 3895, 3885, 2835, 3882, 79, 208, 2869, 3881,
	1099, 3880, 3874, 2607, 1568, 3867, 1608, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 3835, 3819, 3818, 209, 2228, 1476,
	3660, 3806, 3803, 1492, 210, 3755, 3733, 202, 985, 985,
	985, 85, 1597, 1598, 985, 203, 1522, 3709, 3692, 210,
	2835, 1105, 3691, 1105, 3673, 100, 3672, 3638, 1735, 3614,
	86, 97, 3540, 2592, 3521, 3458, 3452, 174, 1170, 3449,
	3349, 1600, 3348, 1685, 2845, 3335, 985, 2835, 3334, 666,
	209, 3286, 1579, 1814, 666, 1571, 3274, 908, 208, 907,
	202, 3859, 2912, 985, 208, 209, 2845, 1290, 203, 3183,
	1101, 1578, 1599, 3403, 1664, 202, 3132, 1784, 1573, 87,
	3115, 2234, 985, 203, 3074, 2268, 3016, 1793, 1170, 1744,
	174, 1718, 1837, 1575, 2991, 1592, 1593, 2966, 2965, 2938,
	210, 2794, 2936, 2793, 1789, 174, 210, 2788, 2756, 2573,
	1722, 1772, 1721, 1720, 1717, 1709, 1707, 2440, 1876, 1263,
	2439, 1791, 1275, 1278, 1847, 2412, 1741, 1742, 2405, 2372,
	2276, 1103, 1780, 1103, 1736, 1731, 1730, 1841, 1842, 2845,
	163, 1729, 1728, 1144, 2966, 1765, 209, 1597, 1598, 1727,
	1710, 1711, 209, 1788, 1726, 1725, 202, 1100, 2846, 1100,
	1724, 1071, 202, 1723, 203, 1704, 1605, 1703, 1702, 1701,
	203, 3641, 2293, 928, 1700, 1699, 1600, 1698, 2045, 1697,
	2846, 1696, 1278, 1278, 1695, 1694, 174, 1693, 1692, 2262,
	1691, 1690, 174, 1679, 1867, 1787, 1665, 1663, 1658, 90,
	1132, 1122, 1115, 3544, 672, 3492, 675, 1599, 3314, 672,
	1763, 675, 3297, 1869, 2442, 1785, 2279, 3289, 2776, 2431,
	1278, 2403, 3722, 3546, 1290, 1290, 1844, 2831, 2832, 2833,
	2834, 2836, 2837, 1756, 1170, 3313, 2829, 2830, 1734, 171,
	93, 1889, 96, 1766, 1678, 2934, 1861, 1860, 1661, 1792,
	1869, 1871, 3593, 2846, 1836, 1776, 1775, 1774, 1773, 1771,
	1770, 1769, 1760, 1154, 1920, 1869, 208, 1922, 3842, 3840,
	1927, 1869, 4114, 1808, 763, 2277, 4107, 3883, 136, 3084,
	3794, 1794, 3793, 1948, 1950, 3664, 2840, 2838, 2839, 2831,
	2832, 2833, 2834, 2836, 2837, 2994, 3616, 928, 1603, 1604,
	1606, 1607, 3615, 3799, 3736, 1148, 1872, 3592, 210, 1862,
	2839, 2831, 2832, 2833, 2834, 2836, 2837, 1153, 3543, 2513,
	3461, 1699, 1699, 3460, 3459, 3292, 3117, 3116, 1152, 3406,
	1758, 1145, 138, 1716, 1491, 1566, 1905, 3347, 1148, 1715,
	978, 2814, 888, 2813, 2738, 2496, 175, 1149, 3060, 1931,
	3059, 1900, 1148, 1688, 209, 1864, 1536, 4146, 1500, 2833,
	2834, 2836, 2837, 4019, 202, 2042, 3790, 4038, 4023, 4010,
	3044, 1290, 203, 1290, 2662, 1290, 1501, 1856, 1946, 2876,
	3366, 672, 889, 675, 2831, 2832, 2833, 2834, 2836, 2837,
	3352, 1290, 1290, 1983, 760, 1990, 3148, 3713, 3220, 1988,
	2259, 2438, 1290, 1732, 2782, 1298, 1712, 1997, 1297, 3051,
	1987, 1359, 1127, 2537, 4032, 1290, 1290, 1290, 4029, 3093,
	2534, 3326, 1992, 4020, 3876, 3648, 3954, 3864, 2040, 2969,
	1926, 3342, 2051, 1845, 2645, 2604, 666, 1480, 3041, 1146,
	4075, 3915, 2137, 4074, 1429, 2053, 3164, 1147, 1951, 1139,
	3379, 1083, 2947, 3775, 3581, 2054, 1327, 1866, 886, 2447,
	884, 882, 2062, 2465, 1293, 880, 1994, 2107, 2063, 2064,
	2065, 4158, 2005, 877, 3768, 2105, 3761, 2463, 3375, 3374,
	3368, 3365, 3363, 2465, 3323, 1533, 2135, 3322, 1971, 1970,
	2787, 1337, 1865, 2786, 2785, 2066, 2784, 2463, 2742, 2047,
	2544, 2543, 2539, 1601, 1602, 1603, 1604, 1606, 1607, 1381,
	3378, 2002, 2530, 2002, 2522, 868, 985, 2521, 985, 2500,
	2424, 1999, 2264, 2052, 1534, 985, 2007, 2008, 1814, 1814,
	1170, 2003, 985, 985, 985, 985, 985, 985, 985, 985,
	985, 985, 985, 985, 985, 985, 985, 985, 985, 985,
	985, 985, 985, 985, 985, 985, 985, 985, 985, 985,
	985, 985, 985, 985, 985, 985, 985, 1857, 985, 1338,
	985, 985, 985, 985, 1532, 1437, 2139, 1437, 2038, 2056,
	2039, 1275, 2209, 2126, 2147, 2019, 1572, 2949, 2021, 2307,
	1133, 672, 985, 675, 2026, 985, 985, 2028, 1154, 1148,
	2265, 2031, 1478, 985, 2935, 2306, 2136, 985, 647, 985,
	985, 2547, 1154, 724, 2167, 2601, 3149, 1170, 2055, 1371,
	3914, 1370, 4102, 985, 985, 985, 985, 874, 985, 985,
	985, 985, 985, 985, 985, 985, 2084, 1392, 2993, 1969,
	1369, 1897, 1368, 1607, 2120, 928, 2060, 928, 1333, 3690,
	2454, 1345, 1153, 1145, 985, 985, 985, 985, 985, 985,
	985, 985, 985, 926, 2101, 2416, 1153, 985, 2487, 1145,
	2240, 2241, 2134, 1893, 2119, 2266, 2263, 1473, 2224, 1105,
	2224, 2163, 2164, 2150, 2240, 2256, 1170, 1545, 1294, 2111,
	644, 2498, 2432, 2077, 2116, 1105, 2715, 1898, 1899, 2137,
	3744, 2730, 2123, 2125, 3988, 725, 4103, 2510, 2511, 2138,
	2302, 985, 1170, 652, 2131, 908, 3008, 2154, 908, 908,
	2155, 2156, 2124, 2341, 2340, 1894, 3577, 1577, 2074, 2324,
	2324, 2338, 2837, 2240, 3001, 1489, 2358, 2360, 2517, 3338,
	2486, 925, 2364, 2135, 1873, 1874, 2121, 2388, 1808, 1808,
	2255, 4016, 1493, 2259, 3594, 3007, 2004, 3155, 2069, 2510,
	2511, 1146, 1884, 2475, 3154, 2510, 2511, 1885, 2070, 1147,
	1776, 2549, 2118, 3000, 2694, 1907, 1131, 1146, 3209, 1290,
	2268, 4074, 1474, 2236, 1531, 1147, 2413, 659, 643, 1103,
	1919, 2078, 2548, 2550, 2268, 1911, 1549, 3364, 2253, 4105,
	1516, 2380, 3362, 3351, 2538, 1103, 3746, 2133, 1355, 1170,
	2520, 654, 2536, 1884, 596, 1100, 2729, 1765, 1885, 2232,
	1565, 1986, 1903, 2071, 2402, 1071, 2230, 927, 2946, 1918,
	3350, 1100, 2553, 3329, 2379, 1501, 1847, 1501, 1814, 591,
	944, 163, 2535, 1908, 4091, 2320, 2333, 2349, 2304, 2533,
	2464, 2426, 1353, 2305, 2362, 1517, 2308, 1144, 2309, 2310,
	1099, 1902, 1099, 2136, 1170, 2478, 2381, 1886, 928, 3689,
	2385, 2386, 1811, 2370, 2371, 3567, 2499, 928, 1290, 790,
	1275, 928, 1763, 2466, 1888, 1718, 1957, 1956, 985, 985,
	1112, 985, 4017, 3575, 722, 2467, 721, 2268, 2262, 679,
	878, 1479, 878, 878, 2387, 3563, 2392, 879, 2106, 2398,
	2399, 2497, 2493, 4111, 2115, 878, 2104, 1528, 1886, 649,
	4118, 1148, 2445, 2531, 1110, 3933, 2722, 2723, 2441, 2134,
	2220, 2555, 4090, 2753, 783, 1888, 2422, 1148, 1912, 2434,
	4128, 4063, 653, 2527, 2502, 2577, 1890, 2590, 1710, 1711,
	1101, 3564, 1101, 2444, 727, 726, 1391, 2518, 2218, 3474,
	4104, 2751, 3473, 2448, 3090, 1290, 1290, 1332, 1290, 928,
	3091, 658, 1335, 2562, 1891, 3877, 2565, 4015, 2567, 2556,
	1290, 2558, 924, 3891, 656, 2554, 2512, 2514, 2515, 2516,
	651, 2503, 2117, 2615, 2480, 2483, 2470, 1890, 1900, 1913,
	1914, 1884, 3339, 2489, 1900, 645, 1885, 2633, 642, 1355,
	2948, 2076, 1909, 3019, 2206, 2501, 1546, 2606, 2632, 1429,
	2606, 1543, 1113, 2586, 4141, 2477, 3745, 2628, 2519, 985,
	3576, 648, 757, 2667, 2668, 2659, 3090, 1705, 672, 2663,
	675, 863, 2673, 2674, 2675, 1943, 1910, 2700, 2932, 2683,
	875, 2684, 1891, 1746, 1891, 2016, 771, 655, 1808, 2744,
	2450, 2223, 1298, 3470, 921, 2559, 3702, 2980, 4062, 2681,
	660, 4084, 3965, 985, 2214, 2452, 2571, 2748, 3931, 985,
	985, 650, 163, 2665, 2581, 240, 2215, 2669, 1942, 2670,
	2216, 2986, 2634, 2749, 2221, 2644, 1544, 2754, 2617, 2599,
	1475, 2250, 3829, 1891, 3630, 2610, 1886, 2705, 2453, 2707,
	3894, 2621, 3932, 2622, 2691, 2623, 2979, 1576, 3559, 2073,
	680, 681, 3560, 1888, 1547, 1488, 1490, 2451, 4109, 1750,
	2987, 2629, 2627, 592, 985, 985, 2678, 2635, 2982, 2718,
	985, 2631, 2952, 2646, 864, 2703, 2685, 1915, 2687, 2068,
	2689, 3821, 2476, 985, 985, 784, 785, 1597, 1598, 985,
	985, 2204, 4044, 3822, 2207, 985, 1130, 3562, 1753, 2698,
	2984, 4045, 1437, 2630, 985, 985, 985, 1657, 2792, 1628,
	985, 3565, 2680, 1748, 3686, 1890, 1600, 2745, 2384, 3823,
	985, 2686, 3206, 2688, 4129, 2690, 791, 593, 2231, 2397,
	3387, 1751, 2624, 927, 3222, 1548, 4139, 985, 1887, 3385,
	3640, 2721, 4110, 2203, 3464, 1916, 2766, 1599, 2775, 2341,
	2341, 3310, 2712, 2711, 2708, 2983, 1891, 4061, 1125, 1749,
	2465, 683, 682, 2710, 3475, 3401, 3166, 2716, 2150, 594,
	2713, 595, 1111, 1746, 2481, 4112, 2731, 1477, 3825, 863,
	2770, 2771, 2891, 2702, 2217, 2774, 3897, 2750, 4014, 1887,
	1504, 948, 4073, 2219, 3824, 1929, 2752, 3207, 4071, 3911,
	3805, 1921, 921, 985, 985, 985, 2699, 772, 773, 3419,
	3631, 3826, 985, 985, 985, 684, 685, 985, 1928, 3077,
	1587, 1891, 1977, 1743, 3561, 1123, 1934, 985, 1105, 1170,
	2743, 1941, 3685, 985, 1118, 985, 583, 865, 786, 787,
	3388, 1605, 1750, 1105, 3519, 3471, 2883, 2884, 3387, 1750,
	1924, 2153, 1752, 4142, 1586, 3170, 1901, 3385, 1586, 3568,
	1881, 1170, 1858, 4134, 3752, 2925, 3751, 1581, 3863, 2341,
	2341, 2341, 2781, 1105, 1898, 1899, 1170, 1811, 1811, 1627,
	1629, 1753, 864, 2905, 2017, 3731, 3420, 3372, 1753, 3325,
	1814, 3078, 2866, 2205, 1170, 2701, 2382, 3071, 2961, 1882,
	1657, 4043, 1925, 1748, 1855, 2957, 985, 619, 2885, 2585,
	3580, 2575, 1998, 1989, 1751, 1263, 2268, 3579, 2919, 1982,
	985, 1751, 2930, 1965, 2895, 3205, 3898, 2143, 3275, 2112,
	1275, 1940, 1814, 1620, 3167, 3943, 2376, 1586, 1103, 2504,
	2914, 2942, 2944, 1851, 3422, 3687, 3653, 1585, 985, 1749,
	2572, 1585, 3476, 1103, 2890, 1394, 2950, 866, 3388, 3260,
	774, 775, 3788, 928, 1100, 2893, 2918, 3786, 3732, 2972,
	3386, 2861, 2862, 2863, 1853, 2894, 2877, 1887, 2968, 1100,
	2903, 2953, 2954, 1103, 2911, 1144, 2906, 2907, 2923, 2967,
	1587, 1170, 2971, 1802, 1587, 2976, 2977, 1854, 2892, 2970,
	1290, 2736, 2974, 867, 2714, 1290, 2378, 2061, 3520, 1100,
	2958, 2377, 3288, 1518, 1290, 3827, 2482, 2904, 1290, 2996,
	3828, 2888, 1170, 2887, 3383, 2421, 3477, 1278, 1278, 666,
	1585, 2927, 2928, 2929, 4133, 1752, 2420, 2988, 2989, 2144,
	1290, 2990, 1752, 2933, 2419, 865, 2418, 1621, 1099, 3392,
	1290, 925, 3017, 3022, 2579, 3870, 3025, 3028, 3740, 1377,
	3033, 3035, 3028, 3622, 1099, 1105, 2999, 3039, 2945, 1889,
	3126, 3013, 3014, 3070, 1996, 3015, 1275, 3045, 1788, 3086,
	2951, 2909, 1505, 2910, 3578, 2962, 1363, 3065, 3386, 3047,
	3670, 3010, 3056, 3066, 3899, 2505, 2506, 1889, 2985, 1364,
	1375, 789, 3020, 3072, 4081, 1290, 1290, 2992, 2939, 2940,
	1808, 2941, 1937, 3784, 1275, 3261, 1275, 3004, 3095, 2666,
	3003, 3005, 2557, 3262, 3006, 3946, 2659, 1290, 3042, 2391,
	3012, 1931, 3729, 3871, 3951, 2659, 3018, 2956, 1101, 1931,
	3940, 3038, 3037, 3031, 2926, 3526, 3106, 3113, 3277, 2275,
	3741, 3669, 1808, 2502, 1101, 1935, 3969, 3011, 3119, 3120,
	1170, 1563, 3049, 1170, 618, 866, 3079, 4083, 4034, 3730,
	2998, 3884, 3087, 1561, 3708, 1103, 1540, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 672, 2103, 675, 1811, 1538, 1515,
	3518, 3009, 3391, 985, 1936, 2858, 3182, 3146, 2823, 985,
	985, 1100, 3947, 985, 985, 985, 3092, 985, 3144, 3026,
	3872, 867, 163, 163, 3036, 3101, 985, 1814, 2755, 3128,
	3124, 1513, 3111, 3112, 3161, 985, 2576, 3107, 985, 1511,
	1509, 3094, 2529, 2495, 1170, 2443, 1783, 3085, 1507, 1779,
	1498, 3160, 1564, 985, 1461, 2859, 948, 3163, 3162, 1581,
	948, 1170, 2696, 3068, 2695, 2672, 1496, 1373, 3145, 2132,
	2114, 1814, 1814, 985, 985, 1254, 985, 985, 985, 1254,
	2341, 2341, 3185, 1376, 3194, 3195, 3168, 3151, 1527, 3152,
	2081, 3153, 1962, 1838, 985, 1689, 1472, 3021, 985, 3157,
	1814, 1814, 985, 985, 985, 985, 985, 985, 985, 985,
	985, 985, 985, 985, 985, 985, 985, 985, 985, 985,
	985, 3165, 985, 1349, 1374, 788, 2274, 4009, 2899, 985,
	985, 1814, 3600, 3589, 4085, 3143, 985, 3939, 3651, 1562,
	3103, 3104, 3105, 3605, 3136, 3158, 3108, 985, 3109, 1669,
	3110, 1560, 928, 1674, 1539, 3552, 3418, 3411, 1105, 1105,
	2102, 3377, 985, 3190, 3345, 3343, 1537, 1514, 2341, 2341,
	2341, 2341, 2341, 2341, 2341, 2341, 2341, 2341, 2341, 2341,
	2341, 2341, 2341, 2341, 2341, 2341, 2341, 3217, 2341, 876,
	3201, 1170, 3324, 3069, 3224, 3208, 3210, 3211, 3061, 1512,
	2626, 3293, 2602, 4059, 3234, 3143, 3235, 1510, 1508, 3232,
	2900, 3272, 2589, 3233, 3136, 2582, 1506, 3237, 1497, 2569,
	985, 2035, 3264, 3239, 2163, 3225, 3567, 2033, 2030, 3202,
	3138, 2027, 2319, 2315, 1495, 1372, 985, 985, 2022, 2020,
	2018, 2009, 1961, 1959, 1947, 3137, 1932, 1808, 3265, 3279,
	1917, 3320, 1904, 2163, 3240, 163, 3563, 1892, 2898, 3082,
	3556, 1080, 985, 985, 3812, 3273, 3032, 3212, 1103, 1103,
	1790, 1941, 3281, 3282, 3309, 1590, 3554, 4075, 1802, 1802,
	3284, 3285, 3558, 2902, 3268, 3979, 1081, 985, 3675, 3668,
	3231, 1808, 1808, 2734, 1100, 1100, 3667, 3612, 2660, 3295,
	3138, 1877, 3564, 1329, 993, 2313, 1275, 3814, 3296, 2485,
	1900, 3134, 1290, 657, 2465, 3137, 3430, 1558, 1559, 2072,
	1808, 1808, 2317, 2318, 2316, 2465, 1995, 1814, 2463, 1986,
	2098, 881, 883, 885, 3358, 3360, 1414, 3353, 2097, 2484,
	3357, 3978, 3557, 1413, 2079, 3308, 3582, 3607, 238, 238,
	238, 1808, 586, 587, 1290, 602, 586, 602, 612, 617,
	3373, 985, 3367, 635, 1494, 3380, 3328, 2901, 641, 1105,
	985, 1940, 1591, 3849, 238, 2735, 1597, 1598, 3527, 2312,
	2314, 3390, 3432, 1082, 3505, 2502, 2507, 1290, 1290, 1290,
	1597, 1598, 768, 712, 2488, 1594, 3440, 4077, 238, 754,
	4069, 3426, 4039, 1290, 2568, 1600, 1414, 3427, 597, 3408,
	3407, 3424, 3139, 3140, 3141, 3142, 3389, 3316, 3423, 3371,
	919, 1170, 863, 1414, 2100, 231, 2615, 3394, 1848, 2534,
	3413, 2542, 2541, 1275, 1275, 2526, 1599, 2524, 3444, 3370,
	3441, 3442, 3443, 1170, 3456, 921, 985, 985, 2525, 3409,
	1599, 2490, 985, 985, 1814, 3412, 1429, 985, 985, 2659,
	985, 608, 3938, 3907, 985, 3904, 3869, 3425, 3781, 3559,
	580, 3410, 3400, 3560, 3303, 985, 3434, 1099, 3428, 1103,
	2962, 3433, 3139, 3140, 3141, 3142, 3073, 920, 2492, 3439,
	2609, 985, 1099, 3344, 2363, 3346, 3447, 1843, 4106, 3451,
	3454, 2491, 3450, 3463, 3479, 1100, 1795, 586, 586, 3487,
	3738, 1275, 3445, 3446, 3478, 238, 3462, 2931, 3562, 1811,
	4132, 3453, 1099, 3971, 3971, 864, 2829, 2830, 3972, 3972,
	3472, 3906, 3565, 1254, 1300, 3491, 1597, 1598, 2457, 2458,
	2455, 2456, 3497, 1482, 2270, 3312, 2457, 1808, 4087, 1481,
	2455, 1105, 3376, 2303, 3802, 1542, 3769, 3467, 1541, 1105,
	3608, 1811, 3604, 1170, 3603, 1170, 3493, 1101, 3416, 3311,
	3213, 3023, 1105, 1683, 1682, 4120, 4092, 948, 3860, 3765,
	3723, 3720, 1101, 1254, 3633, 3545, 1170, 3455, 1802, 1168,
	3436, 3395, 3393, 1269, 3532, 3341, 3336, 3102, 3076, 3075,
	2693, 2677, 2676, 3517, 2619, 985, 2594, 2570, 2436, 2435,
	2235, 2099, 1101, 2096, 2095, 2094, 2093, 2012, 2011, 2010,
	1993, 1972, 1968, 1967, 3535, 1966, 3438, 3573, 1964, 1963,
	1557, 1556, 1170, 1502, 1401, 1400, 1399, 1398, 1397, 1170,
	1396, 1395, 1393, 3574, 3538, 3561, 1388, 3531, 1387, 1386,
	1385, 3549, 3550, 3529, 3530, 1384, 3585, 3586, 3534, 1344,
	163, 1103, 1290, 1290, 1343, 2918, 3584, 3542, 3539, 1103,
	3524, 1342, 3583, 3528, 1808, 3551, 3572, 1341, 1340, 1339,
	3568, 3533, 1103, 1334, 1328, 1326, 1325, 1100, 865, 1170,
	1161, 3620, 1160, 1159, 1290, 1100, 1158, 1129, 1128, 1063,
	3602, 1849, 887, 3618, 3609, 873, 3610, 3743, 1100, 3566,
	1551, 84, 1336, 700, 1099, 1429, 3611, 78, 1938, 3340,
	985, 846, 3619, 3968, 3617, 1322, 3890, 3623, 707, 1254,
	1290, 1290, 1290, 3953, 2978, 2545, 2080, 1503, 2082, 3597,
	2913, 1170, 3671, 2404, 3930, 3599, 3501, 3663, 2791, 3856,
	3649, 3655, 3701, 985, 985, 985, 2273, 3632, 3654, 3658,
	3674, 3624, 3639, 1687, 2829, 2830, 2870, 3643, 80, 3642,
	969, 1170, 1015, 3629, 3628, 3553, 985, 3327, 2649, 985,
	985, 3656, 3626, 3679, 3625, 3681, 1799, 3644, 3662, 985,
	3680, 1801, 1814, 935, 1173, 1859, 975, 985, 985, 1875,
	1868, 2437, 2323, 992, 1101, 989, 918, 1803, 866, 3698,
	1805, 991, 1170, 3678, 1290, 3682, 3677, 990, 1804, 3688,
	1706, 988, 3693, 1798, 3415, 3414, 2578, 1170, 2613, 1380,
	1278, 848, 3588, 1863, 2844, 985, 2229, 2257, 2233, 2780,
	1680, 950, 985, 3596, 971, 3598, 1811, 3710, 2254, 1121,
	985, 960, 1814, 1669, 867, 2341, 949, 2896, 3089, 3704,
	985, 3302, 3659, 985, 2142, 716, 2826, 3721, 2260, 1114,
	2346, 985, 2339, 3715, 2335, 3725, 2603, 1986, 1170, 3716,
	3717, 3719, 1567, 1659, 2614, 1156, 1290, 1290, 953, 2227,
	1811, 1811, 1671, 1116, 2760, 2152, 3726, 3096, 2916, 3764,
	2430, 2341, 3975, 3724, 3221, 1976, 1079, 2345, 1078, 1077,
	3959, 3956, 3448, 3054, 3748, 1852, 3774, 3796, 2835, 1811,
	1811, 1126, 1170, 3747, 3787, 1290, 2449, 1649, 3062, 965,
	635, 1274, 2881, 3127, 3766, 1346, 640, 977, 3762, 3778,
	3776, 3801, 1648, 985, 985, 2552, 3779, 3771, 3785, 2551,
	1811, 3866, 1143, 238, 3780, 238, 238, 1266, 3777, 238,
	238, 1281, 985, 985, 1142, 3832, 3833, 3056, 3813, 1141,
	2960, 4140, 3795, 3337, 238, 3811, 1302, 207, 3810, 985,
	1814, 2728, 3809, 3807, 3816, 3817, 3815, 3830, 3800, 3808,
	1588, 1580, 204, 206, 205, 3836, 3658, 1099, 1099, 3634,
	3306, 1331, 2922, 4037, 985, 3754, 3355, 985, 3046, 21,
	2845, 20, 1808, 1348, 19, 1281, 3848, 105, 40, 238,
	238, 3844, 1266, 3862, 18, 1254, 985, 119, 135, 134,
	133, 3873, 238, 132, 131, 3854, 137, 3845, 3846, 130,
	1390, 3861, 129, 124, 128, 2341, 127, 1782, 3879, 126,
	125, 123, 238, 238, 238, 122, 1266, 238, 1281, 3878,
	3893, 121, 120, 118, 985, 985, 117, 116, 635, 115,
	238, 238, 1808, 114, 985, 113, 112, 985, 111, 1290,
	110, 109, 108, 3886, 107, 106, 631, 1101, 1101, 1290,
	1290, 628, 57, 768, 56, 104, 3908, 1879, 103, 3910,
	3901, 3902, 3756, 3757, 17, 3900, 1290, 38, 3905, 14,
	1802, 61, 1254, 3888, 3921, 62, 16, 13, 33, 3913,
	985, 985, 83, 95, 2846, 3770, 94, 34, 3772, 3773,
	3919, 3920, 92, 3918, 91, 3917, 3912, 32, 3892, 15,
	89, 88, 1429, 1429, 3925, 3800, 1811, 3924, 3926, 31,
	3927, 29, 1802, 985, 985, 11, 985, 9, 8, 1429,
	3935, 238, 35, 1767, 3950, 3973, 12, 5, 3948, 168,
	167, 170, 166, 1986, 169, 82, 165, 164, 238, 3958,
	3961, 1254, 3949, 81, 27, 10, 1278, 160, 3797, 3405,
	3963, 76, 3980, 3967, 162, 3934, 161, 159, 3992, 158,
	1808, 157, 985, 985, 985, 3993, 77, 1254, 1099, 3994,
	74, 156, 155, 3984, 75, 154, 3987, 25, 3989, 6,
	60, 7, 4021, 3683, 3977, 985, 3147, 98, 3962, 99,
	36, 3966, 72, 4005, 4006, 71, 4008, 4007, 4026, 70,
	24, 59, 23, 1954, 197, 196, 195, 194, 193, 4024,
	192, 187, 2840, 2838, 2839, 2831, 2832, 2833, 2834, 2836,
	2837, 3981, 4050, 186, 3982, 191, 4048, 189, 188, 190,
	4056, 185, 985, 1811, 4060, 4046, 199, 4047, 198, 201,
	4052, 4055, 184, 182, 178, 177, 181, 2757, 2758, 183,
	180, 179, 176, 3887, 200, 152, 4066, 4067, 1101, 153,
	4072, 67, 4070, 4068, 1254, 151, 150, 4076, 149, 4053,
	4054, 4082, 4078, 4080, 4057, 4079, 148, 2615, 147, 4094,
	985, 4086, 985, 2345, 4093, 4095, 4089, 3958, 146, 145,
	3961, 66, 22, 2, 1, 0, 0, 0, 4099, 4097,
	0, 0, 4096, 0, 4098, 4101, 0, 0, 4088, 0,
	4100, 0, 0, 4115, 4113, 0, 0, 0, 0, 1254,
	0, 0, 0, 0, 0, 4121, 0, 0, 0, 0,
	0, 3977, 0, 0, 586, 0, 0, 985, 985, 4130,
	0, 0, 0, 0, 4122, 985, 4126, 985, 985, 4136,
	1099, 0, 4124, 0, 0, 238, 4127, 238, 1099, 0,
	4145, 238, 4147, 2345, 2345, 0, 4144, 2852, 2853, 2854,
	0, 1099, 0, 4148, 1302, 1266, 238, 4143, 238, 4153,
	4151, 4154, 0, 238, 1302, 602, 0, 0, 238, 1302,
	0, 4155, 238, 4159, 985, 635, 4156, 1802, 4166, 4160,
	0, 4168, 0, 4161, 4157, 0, 0, 0, 0, 0,
	0, 4162, 4169, 0, 4171, 0, 4165, 0, 0, 0,
	0, 0, 4137, 4138, 0, 4172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 1802, 1802, 1597, 1598, 0, 4036, 0, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 1101, 0, 0, 0, 1628, 0, 0, 0, 4167,
	1802, 1802, 1600, 0, 0, 1597, 1598, 0, 0, 0,
	0, 0, 0, 2345, 2345, 2345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 2166,
	0, 1802, 0, 1599, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 0, 1278, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 1597, 1598, 0, 1630, 1631, 1632, 1640, 1641,
	1642, 0, 0, 0, 0, 0, 2271, 0, 0, 0,
	0, 0, 0, 1633, 1628, 0, 0, 1605, 0, 3482,
	0, 1600, 0, 0, 0, 0, 0, 0, 1646, 0,
	238, 0, 0, 0, 238, 0, 0, 0, 238, 1622,
	1623, 1624, 1625, 0, 238, 0, 0, 0, 0, 1605,
	0, 1811, 1599, 0, 0, 1627, 1629, 238, 0, 238,
	0, 238, 1619, 0, 0, 586, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	0, 0, 0, 0, 0, 0, 0, 1627, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 2414, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 1614, 1615, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 768, 0, 0, 0, 1622, 1623, 1624, 1625,
	0, 1620, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 1266,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 1254, 1637, 0, 0, 1647, 1811,
	238, 0, 0, 0, 1627, 1629, 0, 0, 3178, 3179,
	238, 238, 0, 238, 0, 238, 0, 238, 2460, 238,
	1643, 0, 1644, 0, 0, 0, 1254, 0, 0, 1614,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 1254, 2109, 1621, 2110, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 1626, 238, 0, 1620, 1254,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 948, 0, 0, 0, 1621, 0, 617, 0, 0,
	0, 635, 0, 1645, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3241, 3242, 3243, 3244,
	3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254,
	3255, 3256, 3257, 3258, 3259, 0, 3263, 0, 0, 0,
	1597, 1598, 0, 0, 2345, 2345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 1626, 0, 0, 0, 1254, 0, 0, 0,
	0, 2829, 2830, 0, 2847, 2848, 2849, 0, 0, 0,
	0, 0, 1621, 0, 1601, 1602, 1603, 1604, 1606, 1607,
	1599, 0, 3483, 0, 0, 0, 0, 1254, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 1638, 1616, 0,
	1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604,
	1606, 1607, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345,
	2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345,
	2345, 2844, 2345, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 3181, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 1622, 1623, 1624, 1625, 0, 238,
	0, 586, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613, 0,
	1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607, 0,
	0, 0, 1627, 1629, 0, 2835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1254, 0, 0, 1254, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	144, 0, 0, 602, 0, 0, 0, 68, 0, 44,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 139, 1620, 0, 0, 2850,
	0, 0, 0, 0, 0, 0, 0, 73, 1745, 0,
	0, 0, 0, 0, 68, 0, 0, 63, 0, 2474,
	0, 0, 0, 0, 46, 0, 141, 238, 0, 1254,
	69, 0, 1802, 0, 0, 0, 0, 2845, 0, 238,
	45, 0, 79, 0, 73, 0, 1254, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 64, 0, 238, 0, 0,
	0, 0, 49, 0, 0, 0, 0, 85, 0, 79,
	0, 142, 0, 0, 0, 0, 0, 238, 2560, 47,
	1626, 100, 1802, 0, 0, 0, 86, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 1302, 0, 85, 238, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 50, 100, 2598,
	0, 0, 0, 86, 97, 0, 0, 0, 2882, 2474,
	0, 586, 0, 0, 2618, 87, 0, 0, 0, 0,
	238, 2846, 0, 238, 0, 238, 0, 238, 0, 0,
	0, 0, 1266, 0, 238, 238, 0, 1281, 1281, 0,
	2908, 0, 0, 0, 0, 0, 1254, 2642, 768, 0,
	2474, 2474, 87, 0, 934, 2921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 2937, 0, 0, 0, 0, 0, 0,
	0, 238, 1266, 238, 0, 0, 1302, 0, 1302, 0,
	1802, 1266, 0, 1266, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	238, 238, 238, 238, 1266, 238, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 2841, 2842, 2843, 0, 51, 0, 0, 2840,
	2838, 2839, 2831, 2832, 2833, 2834, 2836, 2837, 238, 0,
	0, 0, 0, 55, 0, 0, 238, 0, 0, 65,
	0, 0, 90, 0, 54, 171, 93, 0, 96, 0,
	0, 0, 52, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 2921, 208, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 171, 93, 136, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 210, 0, 0, 763, 0, 0,
	0, 136, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 68,
	0, 0, 0, 0, 0, 0, 1254, 0, 0, 0,
	0, 210, 175, 3707, 0, 69, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 1254, 73,
	202, 0, 0, 0, 0, 138, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 3734,
	174, 0, 0, 3, 79, 0, 0, 202, 0, 1269,
	68, 0, 1168, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 85,
	73, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 238, 86, 97,
	0, 0, 586, 0, 0, 0, 0, 586, 0, 2345,
	586, 0, 0, 586, 586, 79, 0, 0, 0, 586,
	0, 0, 0, 3198, 0, 0, 0, 238, 1254, 0,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	3214, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	85, 1254, 0, 0, 0, 2345, 0, 0, 1302, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 86,
	97, 0, 0, 0, 0, 0, 0, 2474, 2474, 238,
	0, 1281, 0, 3853, 2474, 0, 0, 2964, 0, 0,
	0, 0, 0, 0, 0, 2474, 2964, 1254, 2474, 2964,
	2964, 0, 0, 0, 1254, 0, 0, 0, 0, 0,
	0, 0, 238, 238, 1281, 238, 0, 0, 87, 934,
	0, 0, 0, 934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 238, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2474,
	0, 3024, 2474, 1281, 1254, 0, 2474, 2474, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 1304,
	3305, 1310, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 3050, 0, 0, 3052, 2474, 0,
	0, 238, 0, 0, 0, 238, 0, 1281, 0, 2345,
	0, 0, 0, 0, 0, 0, 1254, 171, 93, 0,
	96, 0, 0, 0, 2598, 0, 0, 1266, 0, 238,
	0, 0, 2474, 0, 586, 0, 0, 0, 0, 0,
	0, 2474, 0, 0, 208, 0, 1254, 0, 90, 0,
	238, 238, 763, 0, 1430, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 1453, 0, 0, 0, 238, 2598, 0,
	0, 2598, 0, 1462, 0, 1467, 210, 1254, 171, 93,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1254, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 3156, 763, 175, 1266, 238, 136, 238, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 948, 0,
	0, 0, 202, 1523, 0, 0, 1529, 0, 0, 0,
	203, 0, 0, 1254, 0, 0, 0, 210, 0, 0,
	0, 238, 0, 0, 2829, 2830, 0, 2847, 2848, 2849,
	0, 0, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 3187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 1254, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 3219, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2844, 0, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1440, 0, 0, 0, 0, 0, 0,
	1597, 1598, 0, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 1633, 1628, 1681, 0, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2829, 2830, 0, 2847, 2848, 2849, 0,
	1599, 0, 238, 238, 0, 0, 0, 0, 2835, 0,
	1619, 0, 0, 0, 3186, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 586, 586, 0, 0, 0, 948,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3537, 0, 0, 0, 0, 0,
	1597, 1598, 0, 0, 0, 0, 0, 0, 1302, 0,
	0, 0, 2850, 2844, 0, 3547, 1739, 1739, 1739, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 1622, 1623, 1624, 1625, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	2845, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 948,
	1619, 0, 0, 1637, 0, 0, 1647, 0, 1616, 0,
	0, 0, 1627, 1629, 0, 0, 0, 238, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 2835, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 3176, 1635, 238, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 1620, 0, 0, 0,
	0, 0, 238, 0, 1622, 1623, 1624, 1625, 0, 0,
	0, 2850, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 1645, 2474, 238, 2846, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 0, 0, 0, 0, 1634, 2642,
	2642, 0, 0, 0, 0, 768, 768, 2474, 0, 2845,
	2598, 2598, 1627, 1629, 768, 2474, 0, 0, 0, 0,
	3699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3699, 0, 0, 0, 0, 1620, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 2166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 3502, 0, 2841, 2842, 2843, 0, 0,
	0, 0, 2840, 2838, 2839, 2831, 2832, 2833, 2834, 2836,
	2837, 0, 0, 2846, 0, 0, 0, 2166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 1302, 0, 238, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 238, 1636, 0, 0,
	0, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 2474, 2474, 2474,
	0, 2804, 0, 0, 0, 2805, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 2474, 0,
	2964, 0, 0, 1302, 1302, 238, 1281, 0, 0, 0,
	0, 0, 0, 0, 2841, 2842, 2843, 1281, 238, 1281,
	238, 2840, 2838, 2839, 2831, 2832, 2833, 2834, 2836, 2837,
	2474, 0, 2474, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 1598,
	0, 0, 0, 2474, 0, 0, 0, 0, 3636, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	1628, 0, 0, 0, 238, 1617, 1613, 1600, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1599, 0,
	0, 0, 0, 0, 2141, 0, 2145, 0, 1619, 0,
	0, 0, 0, 2159, 0, 0, 1616, 0, 0, 0,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 0, 2208, 0, 2210, 2211,
	2212, 2213, 3175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2237, 0, 1622, 1623, 1624, 1625, 0, 0, 0, 0,
	0, 1668, 1605, 0, 0, 2252, 0, 2474, 0, 2964,
	0, 0, 3728, 0, 0, 0, 0, 0, 0, 0,
	238, 2282, 2285, 2288, 2291, 0, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 0, 0, 0, 0, 0, 0, 0,
	1627, 1629, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 2337, 0, 2348, 2350, 2355, 0,
	0, 0, 0, 0, 0, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3728, 0, 0, 0, 0,
	0, 0, 0, 2474, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 3804, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 239, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 3728, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 1597, 1598, 0, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 3636, 0, 0,
	0, 0, 0, 0, 0, 1597, 1598, 1633, 1628, 0,
	238, 0, 0, 0, 0, 1600, 0, 0, 0, 2964,
	0, 0, 1646, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 1600, 0, 2563, 2564, 0, 2566,
	0, 0, 0, 0, 0, 1302, 1599, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	1095, 0, 0, 0, 1616, 1599, 2829, 2830, 0, 2847,
	2848, 2849, 3944, 0, 0, 1619, 0, 0, 0, 1302,
	0, 0, 238, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 0, 0, 0, 0, 238,
	2474, 0, 0, 0, 233, 233, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 1623, 1624, 1625, 0, 0, 2844, 0, 0, 0,
	1605, 0, 3219, 0, 0, 0, 0, 0, 0, 1622,
	1623, 1624, 1625, 0, 0, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 1647, 0, 0, 0, 0, 2692, 1627, 1629,
	0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632, 1640,
	1641, 1642, 0, 2474, 1643, 0, 1644, 1627, 1629, 0,
	0, 0, 0, 1614, 1615, 1628, 0, 0, 0, 0,
	0, 0, 1600, 0, 3728, 0, 0, 0, 0, 1646,
	2835, 1635, 0, 0, 0, 0, 0, 1650, 1651, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 1302, 0, 2474, 0, 0,
	0, 1620, 0, 1619, 0, 0, 0, 1645, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 2740, 2741, 0, 0, 0, 0, 2747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2761, 2762, 0,
	0, 0, 2845, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 2769, 0, 0, 0, 1626, 1622, 1623, 1624,
	1625, 0, 0, 0, 0, 0, 0, 1605, 2783, 0,
	0, 0, 0, 0, 2642, 1626, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 2795, 0, 2642, 0, 0,
	0, 0, 0, 0, 0, 1621, 1637, 0, 0, 1647,
	0, 1638, 0, 0, 0, 1627, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 1644, 0, 0, 0, 0, 0, 0,
	1614, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 2846, 0, 0, 1620,
	2355, 2355, 2355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 2886, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 0, 0, 2248, 0, 0,
	0, 2249, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604,
	1606, 1607, 0, 0, 0, 0, 0, 0, 0, 239,
	1174, 239, 239, 0, 1174, 239, 239, 0, 1174, 0,
	0, 0, 0, 1626, 934, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 934, 0,
	0, 2829, 2830, 1621, 2847, 2848, 2849, 2841, 2842, 2843,
	1174, 0, 0, 0, 2840, 2838, 2839, 2831, 2832, 2833,
	2834, 2836, 2837, 0, 0, 0, 2981, 0, 1638, 0,
	0, 0, 0, 1174, 0, 239, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2829, 2830, 239, 2847,
	2848, 2849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 239,
	239, 2844, 0, 239, 0, 1174, 0, 0, 0, 0,
	0, 1174, 0, 1597, 1598, 1174, 239, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 1600, 0, 0, 0, 2844, 0, 0, 0,
	1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613,
	0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607,
	0, 0, 0, 1599, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 1619, 0, 2835, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 1597, 1598, 0, 1165,
	0, 0, 1640, 1641, 1642, 1273, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2851, 1628, 0,
	0, 0, 0, 0, 239, 1600, 0, 0, 0, 0,
	2835, 0, 1646, 0, 0, 0, 0, 2746, 0, 2850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 1622, 1623, 1624,
	1625, 0, 0, 0, 0, 0, 1619, 1605, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 2845, 1382, 0,
	0, 0, 0, 0, 2850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 1405,
	1405, 2159, 0, 0, 0, 1627, 1629, 3173, 3174, 0,
	0, 3177, 0, 0, 0, 3180, 1446, 1447, 0, 0,
	0, 0, 2845, 0, 3184, 0, 0, 0, 0, 0,
	1614, 1615, 0, 3191, 0, 0, 2886, 0, 0, 0,
	1622, 1623, 1624, 1625, 0, 0, 0, 0, 0, 0,
	1605, 3203, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3226, 3227, 0, 3228, 3229, 3230, 0, 0, 1637,
	0, 0, 1647, 0, 0, 0, 0, 0, 1627, 1629,
	0, 2846, 3236, 0, 0, 0, 3238, 1597, 1598, 0,
	1630, 1631, 1632, 1640, 1641, 1642, 0, 1550, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 1600, 3266, 3267, 0,
	0, 1635, 0, 1646, 0, 0, 2846, 0, 0, 0,
	0, 0, 1620, 0, 0, 3278, 0, 239, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 1599, 1174, 0,
	3287, 0, 239, 239, 239, 0, 0, 1619, 0, 239,
	0, 0, 0, 1621, 239, 1616, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 2841, 2842, 2843, 0, 0, 0, 3321, 2840,
	2838, 2839, 2831, 2832, 2833, 2834, 2836, 2837, 0, 0,
	0, 0, 0, 0, 3330, 3333, 1626, 0, 0, 0,
	0, 1622, 1623, 1624, 1625, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 1621, 2841, 2842, 2843,
	0, 3354, 0, 0, 2840, 2838, 2839, 2831, 2832, 2833,
	2834, 2836, 2837, 0, 0, 0, 0, 0, 0, 0,
	1637, 1638, 0, 1647, 0, 0, 0, 0, 0, 1627,
	1629, 0, 0, 0, 0, 0, 0, 0, 1617, 1613,
	0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607,
	0, 0, 0, 0, 1614, 1615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1620, 1174, 1174, 239, 1777, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 1739,
	0, 0, 1786, 0, 1273, 0, 0, 0, 3435, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 1840, 0,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 0, 239, 0, 0, 0,
	239, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 239, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 3480, 3481, 0, 0, 0, 0,
	3485, 3486, 0, 0, 0, 3489, 3490, 1621, 0, 0,
	0, 0, 3494, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3498, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 3503,
	0, 1174, 0, 1174, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 239, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 1174, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 239, 0, 239,
	0, 239, 0, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 1611, 1612,
	1618, 1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 0, 0, 1974, 0, 0, 0,
	1981, 0, 239, 3333, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 2001, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3333, 0,
	0, 0, 0, 1981, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 3694, 3695, 3696, 0, 0, 0, 2085, 0, 2087,
	0, 2089, 0, 2091, 0, 2092, 0, 0, 1597, 1598,
	0, 981, 0, 0, 2159, 0, 0, 3705, 3706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 3714, 0, 1600, 0, 0,
	0, 0, 2113, 0, 1597, 1598, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 1599, 239,
	0, 0, 1174, 1600, 0, 0, 0, 0, 1619, 0,
	3333, 673, 0, 0, 0, 0, 1616, 0, 3753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3760, 0,
	0, 934, 0, 0, 1599, 673, 0, 0, 0, 3767,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2739, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 1623, 1624, 1625, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3333, 3333, 239, 0, 0, 0, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 239, 0, 0, 1605, 0,
	1627, 1629, 0, 0, 0, 0, 0, 0, 239, 0,
	970, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 239, 1174, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 1629, 1174, 0,
	0, 0, 3865, 239, 0, 3868, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 3333, 0, 0, 0, 0, 2411,
	0, 239, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 934, 934, 0, 0, 239, 0, 0, 239,
	0, 239, 3333, 239, 0, 3333, 0, 0, 0, 0,
	239, 239, 0, 0, 0, 1174, 1174, 0, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 2159,
	0, 0, 0, 0, 0, 0, 0, 239, 1621, 239,
	0, 0, 0, 0, 909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 929, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 239, 239, 239, 239,
	0, 239, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4004, 4004, 4004, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4025, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 0, 2620, 0, 0, 1405,
	4004, 1405, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 690, 0, 0, 0, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 691,
	0, 2671, 0, 0, 0, 0, 0, 0, 3333, 0,
	3333, 0, 0, 0, 0, 0, 0, 2679, 0, 2682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 692, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2704, 1273, 2706, 1273,
	693, 2709, 0, 694, 0, 4004, 4131, 0, 0, 0,
	0, 0, 0, 4135, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 695, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 0, 0, 0, 715,
	0, 0, 2737, 0, 0, 0, 0, 0, 0, 1174,
	237, 0, 237, 237, 0, 0, 237, 237, 0, 0,
	0, 0, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 1174, 697, 0, 0, 698, 0, 0, 0, 0,
	719, 0, 0, 0, 659, 0, 1174, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 732, 0, 237,
	237, 237, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 733, 0, 237, 237, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 239, 239,
	0, 239, 751, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 699, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 701, 735, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 1174, 0,
	0, 0, 1174, 0, 736, 0, 702, 737, 0, 239,
	0, 0, 0, 0, 0, 0, 659, 239, 237, 0,
	1174, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 237, 0, 0, 658, 0,
	750, 0, 102, 0, 102, 0, 102, 0, 0, 689,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 239, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 0, 1174, 1174, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 704, 0, 0,
	722, 0, 721, 0, 0, 2955, 705, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 706,
	0, 929, 102, 102, 714, 0, 0, 0, 0, 723,
	0, 720, 0, 0, 102, 0, 102, 660, 2995, 2997,
	1174, 1840, 239, 1174, 239, 739, 102, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 757, 0, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 102, 0, 0, 741, 0, 0,
	0, 755, 756, 753, 1174, 0, 0, 3063, 0, 748,
	0, 3067, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 1102, 0, 0, 0, 237, 743,
	749, 0, 0, 0, 0, 0, 1273, 1273, 744, 0,
	0, 0, 0, 237, 1761, 237, 0, 0, 0, 0,
	673, 745, 0, 0, 0, 673, 752, 0, 0, 237,
	0, 0, 909, 3123, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	747, 0, 1662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 3159, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 1598, 0, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1762, 0, 102, 0, 673, 0, 0,
	1599, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 237, 0, 0,
	239, 237, 0, 0, 0, 237, 0, 0, 239, 1106,
	0, 237, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 237, 0, 237, 0,
	0, 0, 0, 0, 1622, 1623, 1624, 1625, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 1174, 1174, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1647, 0, 0, 0,
	239, 1174, 1627, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 1174, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 1635, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 673, 237, 0,
	237, 1645, 237, 0, 237, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 3417, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 1174, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	3465, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 1174, 929, 239, 0, 239, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 1174,
	239, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	1174, 1174, 1174, 0, 0, 3508, 0, 0, 0, 0,
	1102, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 909, 909, 0, 0, 0, 1106, 0,
	0, 0, 1106, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 1174, 0, 0, 0, 0, 0,
	0, 3587, 0, 0, 0, 0, 0, 1174, 1106, 0,
	0, 0, 0, 0, 1840, 0, 239, 0, 2226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 0, 0, 1667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 1840, 0, 237, 0, 1174, 1174, 0, 0,
	3650, 0, 0, 1106, 0, 0, 237, 0, 0, 1106,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 1174, 0, 237, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	239, 239, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	237, 0, 237, 0, 237, 0, 0, 0, 0, 0,
	0, 237, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	237, 0, 0, 0, 0, 0, 239, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 1174,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 237, 237, 237,
	237, 0, 237, 0, 237, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 1171, 0,
	0, 0, 1291, 0, 0, 237, 0, 102, 239, 0,
	102, 0, 102, 237, 0, 0, 0, 0, 0, 0,
	3843, 1273, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 1106,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 1291, 1106, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 1291, 0, 986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 3909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1628, 0, 3952, 0,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 1102,
	1646, 0, 0, 0, 0, 3974, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 3986, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 2226, 0,
	0, 0, 1616, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	237, 0, 237, 0, 0, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	1647, 0, 0, 237, 0, 0, 1627, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1089, 1635,
	673, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	1620, 0, 237, 1089, 0, 0, 0, 0, 0, 1106,
	0, 1106, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 1645, 1102, 0, 0, 1106,
	1106, 0, 0, 665, 0, 0, 0, 0, 665, 0,
	1106, 0, 1634, 0, 0, 0, 0, 237, 237, 0,
	0, 1291, 0, 1106, 1106, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 102, 0, 1621, 102, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 102, 102, 0, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 1815, 1815, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 929, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 0, 0, 0, 0, 1106, 0, 102, 102, 3189,
	1597, 1598, 0, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	1102, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	1599, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	1619, 0, 0, 1106, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 0, 1172, 0, 0, 0, 1172,
	1106, 0, 0, 1292, 0, 1291, 0, 1291, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 1292, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	1291, 1291, 0, 0, 1622, 1623, 1624, 1625, 1292, 0,
	0, 0, 0, 0, 1605, 0, 0, 1106, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 237, 0, 1647, 1106, 0, 0,
	1292, 0, 1627, 1629, 0, 0, 1292, 0, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 237, 1292, 0, 1815, 1614, 1615, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	102, 237, 0, 0, 0, 1635, 0, 0, 0, 237,
	0, 0, 1106, 0, 0, 0, 1620, 0, 1089, 1089,
	0, 0, 0, 0, 1171, 0, 1106, 0, 0, 0,
	1102, 0, 0, 1292, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 1171, 0, 1106, 1106, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 1171, 0, 0, 0,
	0, 0, 1102, 0, 0, 0, 0, 0, 0, 0,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	0, 0, 0, 1291, 0, 2807, 0, 102, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 237, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 237, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	1291, 1106, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 1106, 0, 0, 237, 0, 1292,
	1292, 0, 0, 0, 0, 0, 0, 0, 1815, 1172,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 1597, 1598, 0,
	1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 1628,
	0, 0, 0, 0, 0, 0, 1600, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 237, 237, 1106, 0, 0, 0, 1599, 0, 0,
	0, 0, 1106, 0, 0, 0, 1106, 1619, 0, 0,
	1106, 0, 0, 0, 0, 1616, 1292, 0, 1292, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 0, 1292, 1292, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	1292, 1292, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 1622, 1623, 1624, 1625, 0, 0, 0, 0, 0,
	0, 1605, 0, 1106, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	1637, 0, 0, 1647, 0, 0, 0, 0, 0, 1627,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 1644, 1106, 0,
	0, 1106, 0, 0, 1614, 1615, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 2226, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 1172, 0, 0, 0, 237,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 1645, 0,
	1171, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 1634, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1815, 1815,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 822, 0, 863, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 1171, 0, 0, 0, 829,
	0, 1172, 0, 0, 1291, 0, 1106, 1106, 0, 1291,
	0, 0, 0, 0, 0, 842, 827, 0, 1291, 0,
	0, 0, 1291, 0, 0, 0, 1171, 1172, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 1106,
	0, 828, 0, 0, 1291, 0, 831, 0, 0, 0,
	0, 871, 0, 0, 1291, 0, 0, 0, 0, 839,
	840, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 102, 864,
	833, 0, 0, 0, 1636, 0, 0, 0, 1611, 1612,
	1618, 1639, 1617, 1613, 1292, 1610, 1608, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 0, 0, 834, 0, 0, 1291,
	1291, 0, 2806, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 0, 0, 0, 0, 0, 0, 826,
	1106, 0, 0, 0, 1171, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 836, 837, 1172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 0, 844, 843, 0, 0, 0,
	0, 0, 1106, 838, 0, 0, 0, 853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 1106, 1106, 1171, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 1171, 1597, 1598, 0, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 1633, 1628, 0,
	1292, 1292, 0, 1292, 0, 1600, 832, 0, 0, 870,
	0, 1106, 1646, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 1815, 0, 830, 0, 0, 0, 860, 861,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 0, 858, 0,
	0, 0, 0, 0, 0, 869, 854, 0, 847, 845,
	0, 850, 0, 0, 0, 0, 0, 851, 0, 0,
	824, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 852, 0, 0, 0, 0, 849, 1106,
	1622, 1623, 1624, 1625, 0, 0, 0, 1106, 867, 0,
	1605, 1106, 0, 1106, 0, 0, 855, 0, 0, 0,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 857, 0, 1637,
	0, 0, 1647, 0, 0, 0, 0, 0, 1627, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	0, 0, 0, 0, 1643, 0, 1644, 0, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 1291, 0, 0, 0,
	1106, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 1106, 0, 1634, 0, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 1106,
	1106, 1291, 1291, 1291, 0, 0, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 1626, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1172, 1171, 1621, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	1815, 1638, 0, 0, 0, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 1172, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 1172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 1636, 1106, 1106, 0, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 0, 0, 1171, 0, 1171,
	0, 2803, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 0, 1106, 0, 0, 1172, 0, 0, 0,
	1171, 0, 0, 0, 0, 1292, 0, 0, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	0, 0, 0, 1292, 0, 0, 0, 1172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1292, 1171, 0, 1815, 0,
	0, 0, 0, 1171, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 1291, 0,
	1292, 1292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 1291, 1291, 1106, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 1106, 1106, 0,
	0, 0, 0, 0, 0, 1172, 0, 0, 1172, 0,
	0, 0, 1597, 1598, 1106, 1630, 1631, 1632, 1640, 1641,
	1642, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 1633, 1628, 0, 0, 0, 0, 0,
	0, 1600, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 1291, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 1172,
	0, 1171, 1619, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 1597, 1598, 1172, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1628, 0, 0, 0,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	1646, 0, 1171, 0, 0, 0, 0, 0, 0, 0,
	1291, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 1622, 1623, 1624, 1625,
	0, 0, 0, 0, 1619, 0, 1605, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 1171, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 1647, 0,
	0, 0, 0, 0, 1627, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 1644, 0, 0, 0, 1172, 0, 0, 1614,
	1615, 0, 0, 0, 0, 0, 0, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 1635, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	1647, 0, 0, 1645, 0, 0, 1627, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 1291, 1291, 0, 0, 1292, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 1292, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1172, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613, 0,
	1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 2802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632, 1640,
	1641, 1642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 1628, 0, 0, 0, 0,
	0, 0, 1600, 0, 0, 0, 0, 0, 0, 1646,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 0, 0, 1599, 0, 0, 0, 0, 1172, 2801,
	1172, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 0,
	0, 0, 0, 0, 1172, 0, 0, 1622, 1623, 1624,
	1625, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 1292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 1647,
	0, 0, 0, 0, 1172, 1627, 1629, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 1644, 0, 0, 0, 0, 0, 0,
	1614, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1292, 1292, 1292, 1635, 0,
	0, 0, 0, 0, 0, 0, 1172, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 1638, 0,
	0, 1292, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613,
	0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 2249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1169, 0, 1292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1292, 1292, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1175, 253, 254, 1176, 1177,
	1178, 1292, 1179, 529, 1180, 1181, 1182, 1183, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 1184, 264, 265, 266, 267, 268, 1185, 1186,
	0, 269, 534, 535, 536, 1187, 270, 271, 537, 1188,
	1255, 1189, 272, 273, 274, 275, 276, 277, 278, 0,
	1190, 280, 281, 282, 279, 1191, 283, 0, 284, 285,
	286, 1192, 287, 1047, 288, 289, 1193, 1194, 1196, 1195,
	1197, 1198, 1199, 290, 291, 292, 293, 0, 294, 538,
	539, 1200, 298, 295, 296, 1201, 299, 297, 1202, 300,
	301, 302, 1203, 1204, 303, 304, 305, 1205, 306, 307,
	1206, 308, 309, 310, 1207, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	1208, 244, 1209, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 1210, 328, 1211, 1212, 1048,
	329, 330, 544, 545, 331, 332, 1213, 333, 546, 1214,
	547, 334, 1215, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 1216, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 1217, 1049, 348,
	551, 552, 1218, 553, 1219, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1220, 362, 364, 363, 1221, 365,
	555, 1054, 366, 367, 1055, 1222, 368, 369, 370, 1223,
	1224, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 1225, 246,
	1058, 394, 1226, 556, 395, 557, 397, 398, 1227, 0,
	399, 0, 1228, 1229, 401, 402, 403, 1230, 1231, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 1232, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 1233, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 1234, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 1235, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 1236, 466, 467, 465, 468, 469, 470, 1237, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 1238, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 1239, 492,
	493, 0, 491, 1240, 494, 495, 496, 497, 498, 499,
	318, 500, 1241, 501, 569, 570, 571, 572, 1242, 508,
	1243, 502, 503, 573, 504, 574, 1244, 505, 506, 507,
	0, 509, 510, 1245, 1246, 511, 512, 513, 515, 516,
	514, 517, 1247, 518, 1248, 0, 519, 520, 521, 575,
	576, 577, 1249, 523, 522, 578, 1250, 1251, 1252, 1253,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 2389, 0, 0,
	0, 0, 0, 0, 0, 2390, 247, 248, 249, 250,
	251, 252, 1175, 253, 254, 1176, 1177, 1178, 0, 1179,
	529, 1180, 1181, 1182, 1183, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 1184,
	264, 265, 266, 267, 268, 1185, 1186, 0, 269, 534,
	535, 536, 1187, 270, 271, 537, 1188, 1255, 1189, 272,
	273, 274, 275, 276, 277, 278, 0, 1190, 280, 281,
	282, 279, 1191, 283, 0, 284, 285, 286, 1192, 287,
	1047, 288, 289, 1193, 1194, 1196, 1195, 1197, 1198, 1199,
	290, 291, 292, 293, 0, 294, 538, 539, 1200, 298,
	295, 296, 1201, 299, 297, 1202, 300, 301, 302, 1203,
	1204, 303, 304, 305, 1205, 306, 307, 1206, 308, 309,
	310, 1207, 311, 312, 540, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 541, 542, 1208, 244, 1209,
	0, 0, 0, 0, 324, 325, 326, 543, 0, 0,
	0, 327, 1210, 328, 1211, 1212, 1048, 329, 330, 544,
	545, 331, 332, 1213, 333, 546, 1214, 547, 334, 1215,
	335, 336, 337, 338, 339, 548, 549, 550, 396, 1050,
	340, 341, 1216, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1217, 1049, 348, 551, 552, 1218,
	553, 1219, 350, 351, 1051, 554, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1220, 362, 364, 363, 1221, 365, 555, 1054, 366,
	367, 1055, 1222, 368, 369, 370, 1223, 1224, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 1225, 246, 1058, 394, 1226,
	556, 395, 557, 397, 398, 1227, 0, 399, 0, 1228,
	1229, 401, 402, 403, 1230, 1231, 404, 405, 558, 1059,
	406, 1060, 559, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1232, 417, 418, 560, 561, 562,
	419, 563, 420, 421, 1233, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 564, 431, 430, 432, 1234, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1235, 443, 444, 445, 1061,
	446, 447, 448, 449, 565, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1236, 466,
	467, 465, 468, 469, 470, 1237, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 566, 0,
	480, 1238, 481, 482, 483, 484, 457, 485, 490, 567,
	486, 487, 488, 489, 568, 1239, 492, 493, 0, 491,
	1240, 494, 495, 496, 497, 498, 499, 318, 500, 1241,
	501, 569, 570, 571, 572, 1242, 508, 1243, 502, 503,
	573, 504, 574, 1244, 505, 506, 507, 0, 509, 510,
	1245, 1246, 511, 512, 513, 515, 516, 514, 517, 1247,
	518, 1248, 0, 519, 520, 521, 575, 576, 577, 1249,
	523, 522, 578, 1250, 1251, 1252, 1253, 524, 525, 579,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 3197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3199, 247, 248, 249, 250, 251, 252, 1175, 253, 254,
	1176, 1177, 1178, 0, 1179, 529, 1180, 1181, 1182, 1183,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 1184, 264, 265, 266, 267, 268,
	1185, 1186, 0, 269, 534, 535, 536, 1187, 270, 271,
	537, 1188, 1255, 1189, 272, 273, 274, 275, 276, 277,
	278, 0, 1190, 280, 281, 282, 279, 1191, 283, 0,
	284, 285, 286, 1192, 287, 1047, 288, 289, 1193, 1194,
	1196, 1195, 1197, 1198, 1199, 290, 291, 292, 293, 0,
	294, 538, 539, 1200, 298, 295, 296, 1201, 299, 297,
	1202, 300, 301, 302, 1203, 1204, 303, 304, 305, 1205,
	306, 307, 1206, 308, 309, 310, 1207, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 1208, 244, 1209, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 1210, 328, 1211,
	1212, 1048, 329, 330, 544, 545, 331, 332, 1213, 333,
	546, 1214, 547, 334, 1215, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 1050, 340, 341, 1216, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 1217,
	1049, 348, 551, 552, 1218, 553, 1219, 350, 351, 1051,
	554, 1052, 352, 353, 354, 1053, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 1220, 362, 364, 363,
	1221, 365, 555, 1054, 366, 367, 1055, 1222, 368, 369,
	370, 1223, 1224, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1056, 387, 388, 389, 392, 393, 391, 1057, 390,
	1225, 246, 1058, 394, 1226, 556, 395, 557, 397, 398,
	1227, 0, 399, 0, 1228, 1229, 401, 402, 403, 1230,
	1231, 404, 405, 558, 1059, 406, 1060, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 1232,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 1233,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 1234, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	1235, 443, 444, 445, 1061, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 1236, 466, 467, 465, 468, 469, 470,
	1237, 471, 455, 456, 472, 473, 1062, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 1238, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	1239, 492, 493, 0, 491, 1240, 494, 495, 496, 497,
	498, 499, 318, 500, 1241, 501, 569, 570, 571, 572,
	1242, 508, 1243, 502, 503, 573, 504, 574, 1244, 505,
	506, 507, 0, 509, 510, 1245, 1246, 511, 512, 513,
	515, 516, 514, 517, 1247, 518, 1248, 0, 519, 520,
	521, 575, 576, 577, 1249, 523, 522, 578, 1250, 1251,
	1252, 1253, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3536,
	247, 248, 249, 250, 251, 252, 1175, 253, 254, 1176,
	1177, 1178, 0, 1179, 529, 1180, 1181, 1182, 1183, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1184, 264, 265, 266, 267, 268, 1185,
	1186, 0, 269, 534, 535, 536, 1187, 270, 271, 537,
	1188, 1255, 1189, 272, 273, 274, 275, 276, 277, 278,
	0, 1190, 280, 281, 282, 279, 1191, 283, 0, 284,
	285, 286, 1192, 287, 1047, 288, 289, 1193, 1194, 1196,
	1195, 1197, 1198, 1199, 290, 291, 292, 293, 0, 294,
	538, 539, 1200, 298, 295, 296, 1201, 299, 297, 1202,
	300, 301, 302, 1203, 1204, 303, 304, 305, 1205, 306,
	307, 1206, 308, 309, 310, 1207, 311, 312, 540, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 541,
	542, 1208, 244, 1209, 0, 0, 0, 0, 324, 325,
	326, 543, 0, 0, 0, 327, 1210, 328, 1211, 1212,
	1048, 329, 330, 544, 545, 331, 332, 1213, 333, 546,
	1214, 547, 334, 1215, 335, 336, 337, 338, 339, 548,
	549, 550, 396, 1050, 340, 341, 1216, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1217, 1049,
	348, 551, 552, 1218, 553, 1219, 350, 351, 1051, 554,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1220, 362, 364, 363, 1221,
	365, 555, 1054, 366, 367, 1055, 1222, 368, 369, 370,
	1223, 1224, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 1225,
	246, 1058, 394, 1226, 556, 395, 557, 397, 398, 1227,
	0, 399, 0, 1228, 1229, 401, 402, 403, 1230, 1231,
	404, 405, 558, 1059, 406, 1060, 559, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1232, 417,
	418, 560, 561, 562, 419, 563, 420, 421, 1233, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 564, 431,
	430, 432, 1234, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1235,
	443, 444, 445, 1061, 446, 447, 448, 449, 565, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1236, 466, 467, 465, 468, 469, 470, 1237,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 566, 0, 480, 1238, 481, 482, 483, 484,
	457, 485, 490, 567, 486, 487, 488, 489, 568, 1239,
	492, 493, 0, 491, 1240, 494, 495, 496, 497, 498,
	499, 318, 500, 1241, 501, 569, 570, 571, 572, 1242,
	508, 1243, 502, 503, 573, 504, 574, 1244, 505, 506,
	507, 0, 509, 510, 1245, 1246, 511, 512, 513, 515,
	516, 514, 517, 1247, 518, 1248, 0, 519, 520, 521,
	575, 576, 577, 1249, 523, 522, 578, 1250, 1251, 1252,
	1253, 524, 525, 579, 526, 527, 528, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3700, 247, 248, 249, 250, 251, 252,
	1175, 253, 254, 1176, 1177, 1178, 0, 1179, 529, 1180,
	1181, 1182, 1183, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1184, 264, 265,
	266, 267, 268, 1185, 1186, 0, 269, 534, 535, 536,
	1187, 270, 271, 537, 1188, 1255, 1189, 272, 273, 274,
	275, 276, 277, 278, 0, 1190, 280, 281, 282, 279,
	1191, 283, 0, 284, 285, 286, 1192, 287, 1047, 288,
	289, 1193, 1194, 1196, 1195, 1197, 1198, 1199, 290, 291,
	292, 293, 0, 294, 538, 539, 1200, 298, 295, 296,
	1201, 299, 297, 1202, 300, 301, 302, 1203, 1204, 303,
	304, 305, 1205, 306, 307, 1206, 308, 309, 310, 1207,
	311, 312, 540, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 541, 542, 1208, 244, 1209, 0, 0,
	0, 0, 324, 325, 326, 543, 0, 0, 0, 327,
	1210, 328, 1211, 1212, 1048, 329, 330, 544, 545, 331,
	332, 1213, 333, 546, 1214, 547, 334, 1215, 335, 336,
	337, 338, 339, 548, 549, 550, 396, 1050, 340, 341,
	1216, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1217, 1049, 348, 551, 552, 1218, 553, 1219,
	350, 351, 1051, 554, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1220,
	362, 364, 363, 1221, 365, 555, 1054, 366, 367, 1055,
	1222, 368, 369, 370, 1223, 1224, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 1225, 246, 1058, 394, 1226, 556, 395,
	557, 397, 398, 1227, 0, 399, 0, 1228, 1229, 401,
	402, 403, 1230, 1231, 404, 405, 558, 1059, 406, 1060,
	559, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1232, 417, 418, 560, 561, 562, 419, 563,
	420, 421, 1233, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 564, 431, 430, 432, 1234, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1235, 443, 444, 445, 1061, 446, 447,
	448, 449, 565, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1236, 466, 467, 465,
	468, 469, 470, 1237, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 566, 0, 480, 1238,
	481, 482, 483, 484, 457, 485, 490, 567, 486, 487,
	488, 489, 568, 1239, 492, 493, 0, 491, 1240, 494,
	495, 496, 497, 498, 499, 318, 500, 1241, 501, 569,
	570, 571, 572, 1242, 508, 1243, 502, 503, 573, 504,
	574, 1244, 505, 506, 507, 0, 509, 510, 1245, 1246,
	511, 512, 513, 515, 516, 514, 517, 1247, 518, 1248,
	0, 519, 520, 521, 575, 576, 577, 1249, 523, 522,
	578, 1250, 1251, 1252, 1253, 524, 525, 579, 526, 527,
	528, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3595, 247, 248,
	249, 250, 251, 252, 1175, 253, 254, 1176, 1177, 1178,
	0, 1179, 529, 1180, 1181, 1182, 1183, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 1184, 264, 265, 266, 267, 268, 1185, 1186, 0,
	269, 534, 535, 536, 1187, 270, 271, 537, 1188, 1255,
	1189, 272, 273, 274, 275, 276, 277, 278, 0, 1190,
	280, 281, 282, 279, 1191, 283, 0, 284, 285, 286,
	1192, 287, 1047, 288, 289, 1193, 1194, 1196, 1195, 1197,
	1198, 1199, 290, 291, 292, 293, 0, 294, 538, 539,
	1200, 298, 295, 296, 1201, 299, 297, 1202, 300, 301,
	302, 1203, 1204, 303, 304, 305, 1205, 306, 307, 1206,
	308, 309, 310, 1207, 311, 312, 540, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 541, 542, 1208,
	244, 1209, 0, 0, 0, 0, 324, 325, 326, 543,
	0, 0, 0, 327, 1210, 328, 1211, 1212, 1048, 329,
	330, 544, 545, 331, 332, 1213, 333, 546, 1214, 547,
	334, 1215, 335, 336, 337, 338, 339, 548, 549, 550,
	396, 1050, 340, 341, 1216, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 1217, 1049, 348, 551,
	552, 1218, 553, 1219, 350, 351, 1051, 554, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 1220, 362, 364, 363, 1221, 365, 555,
	1054, 366, 367, 1055, 1222, 368, 369, 370, 1223, 1224,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 1225, 246, 1058,
	394, 1226, 556, 395, 557, 397, 398, 1227, 0, 399,
	0, 1228, 1229, 401, 402, 403, 1230, 1231, 404, 405,
	558, 1059, 406, 1060, 559, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 1232, 417, 418, 560,
	561, 562, 419, 563, 420, 421, 1233, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 564, 431, 430, 432,
	1234, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 1235, 443, 444,
	445, 1061, 446, 447, 448, 449, 565, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	1236, 466, 467, 465, 468, 469, 470, 1237, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	566, 0, 480, 1238, 481, 482, 483, 484, 457, 485,
	490, 567, 486, 487, 488, 489, 568, 1239, 492, 493,
	0, 491, 1240, 494, 495, 496, 497, 498, 499, 318,
	500, 1241, 501, 569, 570, 571, 572, 1242, 508, 1243,
	502, 503, 573, 504, 574, 1244, 505, 506, 507, 0,
	509, 510, 1245, 1246, 511, 512, 513, 515, 516, 514,
	517, 1247, 518, 1248, 0, 519, 520, 521, 575, 576,
	577, 1249, 523, 522, 578, 1250, 1251, 1252, 1253, 524,
	525, 579, 526, 527, 528, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3466, 247, 248, 249, 250, 251, 252, 1175, 253,
	254, 1176, 1177, 1178, 0, 1179, 529, 1180, 1181, 1182,
	1183, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 1184, 264, 265, 266, 267,
	268, 1185, 1186, 0, 269, 534, 535, 536, 1187, 270,
	271, 537, 1188, 1255, 1189, 272, 273, 274, 275, 276,
	277, 278, 0, 1190, 280, 281, 282, 279, 1191, 283,
	0, 284, 285, 286, 1192, 287, 1047, 288, 289, 1193,
	1194, 1196, 1195, 1197, 1198, 1199, 290, 291, 292, 293,
	0, 294, 538, 539, 1200, 298, 295, 296, 1201, 299,
	297, 1202, 300, 301, 302, 1203, 1204, 303, 304, 305,
	1205, 306, 307, 1206, 308, 309, 310, 1207, 311, 312,
	540, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 541, 542, 1208, 244, 1209, 0, 0, 0, 0,
	324, 325, 326, 543, 0, 0, 0, 327, 1210, 328,
	1211, 1212, 1048, 329, 330, 544, 545, 331, 332, 1213,
	333, 546, 1214, 547, 334, 1215, 335, 336, 337, 338,
	339, 548, 549, 550, 396, 1050, 340, 341, 1216, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	1217, 1049, 348, 551, 552, 1218, 553, 1219, 350, 351,
	1051, 554, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1220, 362, 364,
	363, 1221, 365, 555, 1054, 366, 367, 1055, 1222, 368,
	369, 370, 1223, 1224, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 1225, 246, 1058, 394, 1226, 556, 395, 557, 397,
	398, 1227, 0, 399, 0, 1228, 1229, 401, 402, 403,
	1230, 1231, 404, 405, 558, 1059, 406, 1060, 559, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	1232, 417, 418, 560, 561, 562, 419, 563, 420, 421,
	1233, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	564, 431, 430, 432, 1234, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 1235, 443, 444, 445, 1061, 446, 447, 448, 449,
	565, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 1236, 466, 467, 465, 468, 469,
	470, 1237, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 566, 0, 480, 1238, 481, 482,
	483, 484, 457, 485, 490, 567, 486, 487, 488, 489,
	568, 1239, 492, 493, 0, 491, 1240, 494, 495, 496,
	497, 498, 499, 318, 500, 1241, 501, 569, 570, 571,
	572, 1242, 508, 1243, 502, 503, 573, 504, 574, 1244,
	505, 506, 507, 0, 509, 510, 1245, 1246, 511, 512,
	513, 515, 516, 514, 517, 1247, 518, 1248, 0, 519,
	520, 521, 575, 576, 577, 1249, 523, 522, 578, 1250,
	1251, 1252, 1253, 524, 525, 579, 526, 527, 528, 1169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3215, 247, 248, 249, 250,
	251, 252, 1175, 253, 254, 1176, 1177, 1178, 0, 1179,
	529, 1180, 1181, 1182, 1183, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 1184,
	264, 265, 266, 267, 268, 1185, 1186, 0, 269, 534,
	535, 536, 1187, 270, 271, 537, 1188, 1255, 1189, 272,
	273, 274, 275, 276, 277, 278, 0, 1190, 280, 281,
	282, 279, 1191, 283, 0, 284, 285, 286, 1192, 287,
	1047, 288, 289, 1193, 1194, 1196, 1195, 1197, 1198, 1199,
	290, 291, 292, 293, 0, 294, 538, 539, 1200, 298,
	295, 296, 1201, 299, 297, 1202, 300, 301, 302, 1203,
	1204, 303, 304, 305, 1205, 306, 307, 1206, 308, 309,
	310, 1207, 311, 312, 540, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 541, 542, 1208, 244, 1209,
	0, 0, 0, 0, 324, 325, 326, 543, 0, 0,
	0, 327, 1210, 328, 1211, 1212, 1048, 329, 330, 544,
	545, 331, 332, 1213, 333, 546, 1214, 547, 334, 1215,
	335, 336, 337, 338, 339, 548, 549, 550, 396, 1050,
	340, 341, 1216, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1217, 1049, 348, 551, 552, 1218,
	553, 1219, 350, 351, 1051, 554, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1220, 362, 364, 363, 1221, 365, 555, 1054, 366,
	367, 1055, 1222, 368, 369, 370, 1223, 1224, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 1225, 246, 1058, 394, 1226,
	556, 395, 557, 397, 398, 1227, 0, 399, 0, 1228,
	1229, 401, 402, 403, 1230, 1231, 404, 405, 558, 1059,
	406, 1060, 559, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1232, 417, 418, 560, 561, 562,
	419, 563, 420, 421, 1233, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 564, 431, 430, 432, 1234, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1235, 443, 444, 445, 1061,
	446, 447, 448, 449, 565, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1236, 466,
	467, 465, 468, 469, 470, 1237, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 566, 0,
	480, 1238, 481, 482, 483, 484, 457, 485, 490, 567,
	486, 487, 488, 489, 568, 1239, 492, 493, 0, 491,
	1240, 494, 495, 496, 497, 498, 499, 318, 500, 1241,
	501, 569, 570, 571, 572, 1242, 508, 1243, 502, 503,
	573, 504, 574, 1244, 505, 506, 507, 0, 509, 510,
	1245, 1246, 511, 512, 513, 515, 516, 514, 517, 1247,
	518, 1248, 0, 519, 520, 521, 575, 576, 577, 1249,
	523, 522, 578, 1250, 1251, 1252, 1253, 524, 525, 579,
	526, 527, 528, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3048,
	247, 248, 249, 250, 251, 252, 1175, 253, 254, 1176,
	1177, 1178, 0, 1179, 529, 1180, 1181, 1182, 1183, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1184, 264, 265, 266, 267, 268, 1185,
	1186, 0, 269, 534, 535, 536, 1187, 270, 271, 537,
	1188, 1255, 1189, 272, 273, 274, 275, 276, 277, 278,
	0, 1190, 280, 281, 282, 279, 1191, 283, 0, 284,
	285, 286, 1192, 287, 1047, 288, 289, 1193, 1194, 1196,
	1195, 1197, 1198, 1199, 290, 291, 292, 293, 0, 294,
	538, 539, 1200, 298, 295, 296, 1201, 299, 297, 1202,
	300, 301, 302, 1203, 1204, 303, 304, 305, 1205, 306,
	307, 1206, 308, 309, 310, 1207, 311, 312, 540, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 541,
	542, 1208, 244, 1209, 0, 0, 0, 0, 324, 325,
	326, 543, 0, 0, 0, 327, 1210, 328, 1211, 1212,
	1048, 329, 330, 544, 545, 331, 332, 1213, 333, 546,
	1214, 547, 334, 1215, 335, 336, 337, 338, 339, 548,
	549, 550, 396, 1050, 340, 341, 1216, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1217, 1049,
	348, 551, 552, 1218, 553, 1219, 350, 351, 1051, 554,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1220, 362, 364, 363, 1221,
	365, 555, 1054, 366, 367, 1055, 1222, 368, 369, 370,
	1223, 1224, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 1225,
	246, 1058, 394, 1226, 556, 395, 557, 397, 398, 1227,
	0, 399, 0, 1228, 1229, 401, 402, 403, 1230, 1231,
	404, 405, 558, 1059, 406, 1060, 559, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1232, 417,
	418, 560, 561, 562, 419, 563, 420, 421, 1233, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 564, 431,
	430, 432, 1234, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1235,
	443, 444, 445, 1061, 446, 447, 448, 449, 565, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1236, 466, 467, 465, 468, 469, 470, 1237,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 566, 0, 480, 1238, 481, 482, 483, 484,
	457, 485, 490, 567, 486, 487, 488, 489, 568, 1239,
	492, 493, 0, 491, 1240, 494, 495, 496, 497, 498,
	499, 318, 500, 1241, 501, 569, 570, 571, 572, 1242,
	508, 1243, 502, 503, 573, 504, 574, 1244, 505, 506,
	507, 0, 509, 510, 1245, 1246, 511, 512, 513, 515,
	516, 514, 517, 1247, 518, 1248, 0, 519, 520, 521,
	575, 576, 577, 1249, 523, 522, 578, 1250, 1251, 1252,
	1253, 524, 525, 579, 526, 527, 528, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2272, 247, 248, 249, 250, 251, 252,
	1175, 253, 254, 1176, 1177, 1178, 0, 1179, 529, 1180,
	1181, 1182, 1183, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 1184, 264, 265,
	266, 267, 268, 1185, 1186, 0, 269, 534, 535, 536,
	1187, 270, 271, 537, 1188, 1255, 1189, 272, 273, 274,
	275, 276, 277, 278, 0, 1190, 280, 281, 282, 279,
	1191, 283, 0, 284, 285, 286, 1192, 287, 1047, 288,
	289, 1193, 1194, 1196, 1195, 1197, 1198, 1199, 290, 291,
	292, 293, 0, 294, 538, 539, 1200, 298, 295, 296,
	1201, 299, 297, 1202, 300, 301, 302, 1203, 1204, 303,
	304, 305, 1205, 306, 307, 1206, 308, 309, 310, 1207,
	311, 312, 540, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 541, 542, 1208, 244, 1209, 0, 0,
	0, 0, 324, 325, 326, 543, 0, 0, 0, 327,
	1210, 328, 1211, 1212, 1048, 329, 330, 544, 545, 331,
	332, 1213, 333, 546, 1214, 547, 334, 1215, 335, 336,
	337, 338, 339, 548, 549, 550, 396, 1050, 340, 341,
	1216, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 1217, 1049, 348, 551, 552, 1218, 553, 1219,
	350, 351, 1051, 554, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1220,
	362, 364, 363, 1221, 365, 555, 1054, 366, 367, 1055,
	1222, 368, 369, 370, 1223, 1224, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 1225, 246, 1058, 394, 1226, 556, 395,
	557, 397, 398, 1227, 0, 399, 0, 1228, 1229, 401,
	402, 403, 1230, 1231, 404, 405, 558, 1059, 406, 1060,
	559, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 1232, 417, 418, 560, 561, 562, 419, 563,
	420, 421, 1233, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 564, 431, 430, 432, 1234, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 1235, 443, 444, 445, 1061, 446, 447,
	448, 449, 565, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 1236, 466, 467, 465,
	468, 469, 470, 1237, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 566, 0, 480, 1238,
	481, 482, 483, 484, 457, 485, 490, 567, 486, 487,
	488, 489, 568, 1239, 492, 493, 0, 491, 1240, 494,
	495, 496, 497, 498, 499, 318, 500, 1241, 501, 569,
	570, 571, 572, 1242, 508, 1243, 502, 503, 573, 504,
	574, 1244, 505, 506, 507, 0, 509, 510, 1245, 1246,
	511, 512, 513, 515, 516, 514, 517, 1247, 518, 1248,
	0, 519, 520, 521, 575, 576, 577, 1249, 523, 522,
	578, 1250, 1251, 1252, 1253, 524, 525, 579, 526, 527,
	528, 1267, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	247, 248, 249, 250, 251, 252, 1175, 253, 254, 1176,
	1177, 1178, 0, 1179, 529, 1180, 1181, 1182, 1183, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1184, 264, 265, 266, 267, 268, 1185,
	1186, 0, 269, 534, 535, 536, 1187, 270, 271, 537,
	1188, 1255, 1189, 272, 273, 274, 275, 276, 277, 278,
	0, 1190, 280, 281, 282, 279, 1191, 283, 0, 284,
	285, 286, 1192, 287, 1047, 288, 289, 1193, 1194, 1196,
	1195, 1197, 1198, 1199, 290, 291, 292, 293, 0, 294,
	538, 539, 1200, 298, 295, 296, 1201, 299, 297, 1202,
	300, 301, 302, 1203, 1204, 303, 304, 305, 1205, 306,
	307, 1206, 308, 309, 310, 1207, 311, 312, 540, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 541,
	542, 1208, 244, 1209, 0, 0, 0, 0, 324, 325,
	326, 543, 0, 0, 0, 327, 1210, 328, 1211, 1212,
	1048, 329, 330, 544, 545, 331, 332, 1213, 333, 546,
	1214, 547, 334, 1215, 335, 336, 337, 338, 339, 548,
	549, 550, 396, 1050, 340, 341, 1216, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1217, 1049,
	348, 551, 552, 1218, 553, 1219, 350, 351, 1051, 554,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1220, 362, 364, 363, 1221,
	365, 555, 1054, 366, 367, 1055, 1222, 368, 369, 370,
	1223, 1224, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 1225,
	246, 1058, 394, 1226, 556, 395, 557, 397, 398, 1227,
	0, 399, 0, 1228, 1229, 401, 402, 403, 1230, 1231,
	404, 405, 558, 1059, 406, 1060, 559, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1232, 417,
	418, 560, 561, 562, 419, 563, 420, 421, 1233, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 564, 431,
	430, 432, 1234, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1235,
	443, 444, 445, 1061, 446, 447, 448, 449, 565, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1236, 466, 467, 465, 468, 469, 470, 1237,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 566, 0, 480, 1238, 481, 482, 483, 484,
	457, 485, 490, 567, 486, 487, 488, 489, 568, 1239,
	492, 493, 0, 491, 1240, 494, 495, 496, 497, 498,
	499, 318, 500, 1241, 501, 569, 570, 571, 572, 1242,
	508, 1243, 502, 503, 573, 504, 574, 1244, 505, 506,
	507, 0, 509, 510, 1245, 1246, 511, 512, 513, 515,
	516, 514, 517, 1247, 518, 1248, 0, 519, 520, 521,
	575, 576, 577, 1249, 523, 522, 578, 1250, 1251, 1252,
	1253, 524, 525, 579, 526, 527, 528, 1166, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 1175, 253, 254, 1176, 1177, 1178, 0, 1179,
	529, 1180, 1181, 1182, 1183, 255, 256, 258, 257, 259,
	260, 261, 530, 531, 0, 262, 532, 263, 533, 1184,
	264, 265, 266, 267, 268, 1185, 1186, 0, 269, 534,
	535, 536, 1187, 270, 271, 537, 1188, 1255, 1189, 272,
	273, 274, 275, 276, 277, 278, 0, 1190, 280, 281,
	282, 279, 1191, 283, 0, 284, 285, 286, 1192, 287,
	1047, 288, 289, 1193, 1194, 1196, 1195, 1197, 1198, 1199,
	290, 291, 292, 293, 0, 294, 538, 539, 1200, 298,
	295, 296, 1201, 299, 297, 1202, 300, 301, 302, 1203,
	1204, 303, 304, 305, 1205, 306, 307, 1206, 308, 309,
	310, 1207, 311, 312, 540, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 541, 542, 1208, 244, 1209,
	0, 0, 0, 0, 324, 325, 326, 543, 0, 0,
	0, 327, 1210, 328, 1211, 1212, 1048, 329, 330, 544,
	545, 331, 332, 1213, 333, 546, 1214, 547, 334, 1215,
	335, 336, 337, 338, 339, 548, 549, 550, 396, 1050,
	340, 341, 1216, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 1217, 1049, 348, 551, 552, 1218,
	553, 1219, 350, 351, 1051, 554, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 1220, 362, 364, 363, 1221, 365, 555, 1054, 366,
	367, 1055, 1222, 368, 369, 370, 1223, 1224, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 1225, 246, 1058, 394, 1226,
	556, 395, 557, 397, 398, 1227, 0, 399, 0, 1228,
	1229, 401, 402, 403, 1230, 1231, 404, 405, 558, 1059,
	406, 1060, 559, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 1232, 417, 418, 560, 561, 562,
	419, 563, 420, 421, 1233, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 564, 431, 430, 432, 1234, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 1235, 443, 444, 445, 1061,
	446, 447, 448, 449, 565, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 1236, 466,
	467, 465, 468, 469, 470, 1237, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 566, 0,
	480, 1238, 481, 482, 483, 484, 457, 485, 490, 567,
	486, 487, 488, 489, 568, 1239, 492, 493, 0, 491,
	1240, 494, 495, 496, 497, 498, 499, 318, 500, 1241,
	501, 569, 570, 571, 572, 1242, 508, 1243, 502, 503,
	573, 504, 574, 1244, 505, 506, 507, 0, 509, 510,
	1245, 1246, 511, 512, 513, 515, 516, 514, 517, 1247,
	518, 1248, 0, 519, 520, 521, 575, 576, 577, 1249,
	523, 522, 578, 1250, 1251, 1252, 1253, 524, 525, 579,
	526, 527, 528, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1175, 253, 254, 1176,
	1177, 1178, 0, 1179, 529, 1180, 1181, 1182, 1183, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 1184, 264, 265, 266, 267, 268, 1185,
	1186, 0, 269, 534, 535, 536, 1187, 270, 271, 537,
	1188, 1255, 1189, 272, 273, 274, 275, 276, 277, 278,
	0, 1190, 280, 281, 282, 279, 1191, 283, 0, 284,
	285, 286, 1192, 287, 1047, 288, 289, 1193, 1194, 1196,
	1195, 1197, 1198, 1199, 290, 291, 292, 293, 0, 294,
	538, 539, 1200, 298, 295, 296, 1201, 299, 297, 1202,
	300, 301, 302, 1203, 1204, 303, 304, 305, 1205, 306,
	307, 1206, 308, 309, 310, 1207, 311, 312, 540, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 541,
	542, 1208, 244, 1209, 0, 0, 0, 0, 324, 325,
	326, 543, 0, 0, 0, 327, 1210, 328, 1211, 1212,
	1048, 329, 330, 544, 545, 331, 332, 1213, 333, 546,
	1214, 547, 334, 1215, 335, 336, 337, 338, 339, 548,
	549, 550, 396, 1050, 340, 341, 1216, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 1217, 1049,
	348, 551, 552, 1218, 553, 1219, 350, 351, 1051, 554,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 1220, 362, 364, 363, 1221,
	365, 555, 1054, 366, 367, 1055, 1222, 368, 369, 370,
	1223, 1224, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 1225,
	246, 1058, 394, 1226, 556, 395, 557, 397, 398, 1227,
	0, 399, 0, 1228, 1229, 401, 402, 403, 1230, 1231,
	404, 405, 558, 1059, 406, 1060, 559, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 1232, 417,
	418, 560, 561, 562, 419, 563, 420, 421, 1233, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 564, 431,
	430, 432, 1234, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 1235,
	443, 444, 445, 1061, 446, 447, 448, 449, 565, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 1236, 466, 467, 465, 468, 469, 470, 1237,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 566, 0, 480, 1238, 481, 482, 483, 484,
	457, 485, 490, 567, 486, 487, 488, 489, 568, 1239,
	492, 493, 0, 491, 1240, 494, 495, 496, 497, 498,
	499, 318, 500, 1241, 501, 569, 570, 571, 572, 1242,
	508, 1243, 502, 503, 573, 504, 574, 1244, 505, 506,
	507, 0, 509, 510, 1245, 1246, 511, 512, 513, 515,
	516, 514, 517, 1247, 518, 1248, 0, 519, 520, 521,
	575, 576, 577, 1249, 523, 522, 578, 1250, 1251, 1252,
	1253, 524, 525, 579, 526, 527, 528, 2247, 0, 984,
	956, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 2244, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 2245,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 2243,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 2246,
	0, 0, 0, 0, 0, 0, 968, 2242, 0, 930,
	966, 984, 956, 957, 958, 954, 955, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	208, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 210, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 1438, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 202, 524,
	525, 579, 526, 527, 528, 943, 203, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 984, 956, 957, 958, 954, 955, 967, 1672, 1670,
	0, 0, 966, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	208, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 210, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 1438, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 202, 524,
	525, 579, 526, 527, 528, 943, 203, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 984, 956, 957, 958, 954, 955, 967, 1672, 2759,
	0, 0, 966, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	208, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 210, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 1438, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 202, 524,
	525, 579, 526, 527, 528, 943, 203, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 984, 956, 957, 958, 954, 955, 967, 1672, 1670,
	0, 0, 966, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 2351, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 2356, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 2352, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 2353,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 575, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 0, 524,
	525, 579, 526, 527, 528, 943, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 2292, 966, 984, 956, 957, 958, 954, 955, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 0, 0, 0, 0, 0,
	968, 2290, 0, 2289, 966, 984, 956, 957, 958, 954,
	955, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 0, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 0, 0, 0, 0, 0,
	0, 0, 968, 2287, 0, 2286, 966, 984, 956, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 2284, 0, 2283, 966, 984,
	956, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 0,
	0, 0, 0, 0, 0, 0, 968, 2281, 0, 1525,
	966, 984, 956, 957, 958, 954, 955, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 575, 1029,
	1064, 0, 523, 522, 578, 1524, 0, 0, 0, 524,
	525, 579, 526, 527, 528, 943, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 933, 966, 984, 956, 957, 958, 954, 955, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 947, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 984, 956, 957, 958, 954, 955, 967,
	968, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	3964, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 947, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 984, 956, 957, 958, 954, 955, 967,
	968, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 2161, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 2160, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 984, 956, 957, 958, 954, 955, 967,
	968, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 947, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 984, 956, 957, 958, 954, 955, 967,
	968, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	3763, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 947, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 984, 956, 957, 958, 954, 955, 967,
	968, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	3429, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 1740, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 966, 984, 956, 957, 958, 954,
	955, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 3193, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 984, 956, 957, 958, 954,
	955, 967, 968, 0, 0, 0, 966, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 0, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 1740, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 966, 984, 956, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 2356, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 984, 956, 957,
	958, 954, 955, 967, 968, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 1670, 0, 2361, 966, 984,
	956, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 2359,
	966, 984, 956, 957, 958, 954, 955, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 575, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 0, 524,
	525, 579, 526, 527, 528, 943, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 2347, 966, 984, 956, 957, 958, 954, 955, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 2336, 966, 984, 956, 957, 958, 954,
	955, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 0, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 2334, 966, 2325, 2332, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 2328, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 2329, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 2330, 2327, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 2331, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 2326,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 2322, 966, 2325,
	2332, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 2328, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 2329, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 2330, 2327,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 2331, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 2326, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 0,
	0, 0, 0, 0, 1678, 0, 968, 0, 0, 0,
	966, 984, 956, 957, 958, 954, 955, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 2140, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 575, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 0, 524,
	525, 579, 526, 527, 528, 943, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 1530, 966, 984, 956, 957, 958, 954, 955, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 1468, 966, 984, 956, 957, 958, 954,
	955, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 0, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 1463, 966, 984, 956, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 1454, 966, 984,
	956, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 1449,
	966, 984, 956, 957, 958, 954, 955, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1008, 972, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 1021, 0, 262, 1028, 263,
	1027, 0, 264, 265, 266, 267, 268, 974, 1007, 941,
	269, 1066, 1067, 536, 0, 270, 271, 1014, 0, 995,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 1047, 288, 289, 998, 996, 997, 1004, 1000,
	999, 1003, 290, 291, 292, 293, 1031, 294, 1025, 1024,
	945, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 1016, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 951, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 1038, 1039, 963,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 1023,
	0, 0, 0, 327, 0, 328, 0, 0, 1048, 329,
	330, 1036, 1037, 331, 332, 0, 333, 1045, 0, 973,
	334, 0, 335, 336, 337, 338, 339, 1009, 1010, 1013,
	396, 1050, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 1049, 348, 1018,
	1019, 0, 979, 0, 350, 351, 1051, 1011, 1052, 352,
	353, 354, 1053, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 1046,
	1054, 366, 367, 1055, 0, 368, 369, 370, 1002, 1001,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 1056, 387,
	388, 389, 392, 393, 391, 1057, 390, 942, 246, 1058,
	394, 964, 1012, 395, 1026, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 1059, 406, 1060, 1040, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 1041, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 1022, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 1061, 446, 447, 448, 449, 952, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 1005, 471, 455,
	456, 472, 473, 1062, 474, 475, 476, 477, 478, 479,
	1020, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 1065, 486, 487, 488, 489, 1042, 0, 492, 493,
	940, 491, 0, 494, 495, 496, 497, 498, 499, 318,
	500, 0, 501, 1032, 1033, 1034, 1035, 0, 508, 0,
	502, 503, 1043, 504, 1044, 962, 505, 506, 507, 0,
	509, 510, 0, 946, 511, 512, 513, 515, 516, 514,
	517, 1006, 518, 0, 0, 519, 520, 521, 575, 1029,
	1064, 0, 523, 522, 578, 0, 0, 0, 0, 524,
	525, 579, 526, 527, 528, 943, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 937,
	938, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 1431, 966, 984, 956, 957, 958, 954, 955, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 941, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 945, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 942,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 952, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 940, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 946, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 943, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 1318, 966, 984, 956, 957, 958, 954,
	955, 967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1008, 972, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 1021,
	0, 262, 1028, 263, 1027, 0, 264, 265, 266, 267,
	268, 974, 1007, 941, 269, 1066, 1067, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	1031, 294, 1025, 1024, 945, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 1016, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	951, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 963, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 1023, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 1036, 1037, 331, 332, 0,
	333, 1045, 0, 973, 334, 0, 335, 336, 337, 338,
	339, 1317, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 1018, 1019, 0, 979, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 942, 246, 1058, 394, 964, 1012, 395, 1026, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	1022, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	952, 450, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 1020, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 1065, 486, 487, 488, 489,
	1042, 0, 492, 493, 940, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 1032, 1033, 1034,
	1035, 0, 508, 0, 502, 503, 1043, 504, 1044, 962,
	505, 506, 507, 0, 509, 510, 0, 946, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 1029, 1064, 0, 523, 522, 578, 0,
	0, 0, 0, 524, 525, 579, 526, 527, 528, 943,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 937, 938, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 1312, 966, 984, 956, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1311, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 1058, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 509, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 943, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 1305, 966, 984,
	956, 957, 958, 954, 955, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 4003, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 4002, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 4001, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 4003, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 4002, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 2726, 2727, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 2724, 2725, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 937, 938, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 941, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 945, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 942, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 940, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 946, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 943, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 2148, 2149, 984,
	956, 957, 958, 954, 955, 967, 968, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1008, 972, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 530, 1021, 0, 262, 1028, 263, 1027, 0,
	264, 265, 266, 267, 268, 974, 1007, 0, 269, 1066,
	1067, 536, 0, 270, 271, 1014, 0, 995, 0, 272,
	273, 274, 275, 276, 277, 278, 0, 0, 280, 281,
	282, 279, 0, 283, 0, 284, 285, 286, 0, 287,
	1047, 288, 289, 998, 996, 997, 1004, 1000, 999, 1003,
	290, 291, 292, 293, 1031, 294, 1025, 1024, 0, 298,
	295, 296, 0, 299, 297, 0, 300, 301, 302, 0,
	0, 303, 1016, 305, 0, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 951, 313, 314, 315, 317, 319,
	316, 320, 321, 322, 323, 1038, 1039, 963, 244, 0,
	0, 0, 0, 0, 324, 325, 326, 1023, 0, 0,
	0, 327, 0, 328, 0, 0, 1048, 329, 330, 1036,
	1037, 331, 332, 0, 333, 1045, 0, 973, 334, 0,
	335, 336, 337, 338, 339, 1009, 1010, 1013, 396, 1050,
	340, 341, 0, 342, 343, 344, 345, 0, 0, 0,
	245, 346, 347, 349, 0, 1049, 348, 1018, 1019, 0,
	979, 0, 350, 351, 1051, 1011, 1052, 352, 353, 354,
	1053, 355, 0, 0, 0, 356, 357, 358, 359, 360,
	361, 0, 362, 364, 363, 0, 365, 1046, 1054, 366,
	367, 1055, 0, 368, 369, 370, 1002, 1001, 371, 372,
	373, 374, 0, 375, 376, 378, 380, 377, 379, 384,
	381, 382, 383, 386, 0, 385, 1056, 387, 388, 389,
	392, 393, 391, 1057, 390, 0, 246, 1058, 394, 964,
	1012, 395, 1026, 397, 398, 0, 0, 399, 0, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 558, 1059,
	406, 1060, 1040, 407, 408, 400, 409, 410, 411, 412,
	413, 414, 415, 416, 0, 417, 418, 560, 561, 1041,
	419, 563, 420, 421, 0, 422, 0, 423, 424, 425,
	426, 427, 428, 429, 1022, 431, 430, 432, 0, 433,
	0, 0, 0, 0, 0, 434, 0, 436, 437, 438,
	435, 439, 440, 441, 442, 0, 443, 444, 445, 1061,
	446, 447, 448, 449, 952, 450, 0, 451, 452, 458,
	459, 453, 454, 460, 461, 462, 463, 464, 0, 466,
	467, 465, 468, 469, 470, 1005, 471, 455, 456, 472,
	473, 1062, 474, 475, 476, 477, 478, 479, 1020, 0,
	480, 0, 481, 482, 483, 484, 457, 485, 490, 1065,
	486, 487, 488, 489, 1042, 0, 492, 493, 0, 491,
	0, 494, 495, 496, 497, 498, 499, 318, 500, 0,
	501, 1032, 1033, 1034, 1035, 0, 508, 0, 502, 503,
	1043, 504, 1044, 962, 505, 506, 507, 0, 509, 510,
	0, 0, 511, 512, 513, 515, 516, 514, 517, 1006,
	518, 0, 0, 519, 520, 521, 575, 1029, 1064, 0,
	523, 522, 578, 0, 0, 0, 0, 524, 525, 579,
	526, 527, 528, 984, 956, 957, 958, 954, 955, 967,
	2344, 0, 0, 0, 0, 0, 0, 2342, 2343, 0,
	247, 248, 249, 250, 251, 252, 968, 253, 254, 0,
	966, 0, 0, 0, 1008, 972, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 1021, 0, 262,
	1028, 263, 1027, 0, 264, 265, 266, 267, 268, 974,
	1007, 0, 269, 1066, 1067, 536, 0, 270, 271, 1014,
	0, 995, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 998, 996, 997,
	1004, 1000, 999, 1003, 290, 291, 292, 293, 1031, 294,
	1025, 1024, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 1016, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 951, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 1038,
	1039, 963, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 1023, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 1036, 1037, 331, 332, 0, 333, 1045,
	0, 973, 334, 0, 335, 336, 337, 338, 339, 1009,
	1010, 1013, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 245, 346, 347, 349, 0, 1049,
	348, 1018, 1019, 0, 979, 0, 350, 351, 1051, 1011,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 1046, 1054, 366, 367, 1055, 0, 368, 369, 370,
	1002, 1001, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 0,
	246, 1058, 394, 964, 1012, 395, 1026, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 1040, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 1041, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 1022, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 2719, 2720,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 0, 466, 467, 465, 468, 469, 470, 1005,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 1020, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 1065, 486, 487, 488, 489, 1042, 0,
	492, 493, 0, 491, 0, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 1032, 1033, 1034, 1035, 0,
	508, 0, 502, 503, 1043, 504, 1044, 962, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 1006, 518, 0, 0, 519, 520, 521,
	575, 1029, 1064, 0, 523, 522, 578, 0, 0, 0,
	0, 524, 525, 579, 526, 527, 528, 984, 956, 957,
	958, 954, 955, 967, 0, 0, 0, 0, 0, 0,
	0, 1873, 1874, 0, 247, 248, 249, 250, 251, 252,
	968, 253, 254, 0, 966, 0, 0, 0, 1008, 972,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	0, 1021, 0, 262, 1028, 263, 1027, 0, 264, 265,
	266, 267, 268, 974, 1007, 941, 269, 1066, 1067, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	4003, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 1031, 294, 1025, 1024, 945, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	1016, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 951, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 963, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 1023, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 1036, 1037, 331,
	332, 0, 333, 1045, 0, 973, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 1018, 1019, 0, 979, 0,
	350, 351, 0, 1011, 0, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 0,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 942, 246, 0, 394, 964, 1012, 395,
	1026, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 1022, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 952, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 1020, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 1065, 486, 487,
	488, 489, 1042, 0, 492, 493, 940, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 1032,
	1033, 1034, 1035, 0, 508, 0, 502, 503, 1043, 504,
	1044, 962, 505, 506, 507, 0, 4002, 510, 0, 946,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 575, 1029, 1064, 0, 523, 522,
	578, 0, 0, 0, 0, 524, 525, 579, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 0, 1104, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 966, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1008, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 1007,
	0, 269, 534, 535, 536, 0, 270, 271, 1014, 0,
	995, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 998, 996, 997, 1004,
	1000, 999, 1003, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 1038, 1039,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 1045, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 1009, 1010,
	1013, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 1011, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 1090, 362, 364, 363, 0, 365,
	1046, 1054, 366, 367, 1055, 0, 368, 369, 370, 1002,
	1001, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 246,
	1058, 394, 0, 1012, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 1096, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 1040, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 1041, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 1098, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 208, 466, 467, 465, 468, 469, 470, 1005, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 1042, 0, 492,
	493, 0, 491, 210, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 1043, 504, 1044, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 1006, 518, 0, 0, 519, 520, 521, 1438,
	576, 577, 0, 523, 522, 578, 0, 1104, 0, 202,
	524, 525, 579, 526, 527, 528, 0, 203, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1094, 1008, 1764,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 264, 265,
	266, 267, 268, 0, 1007, 0, 269, 534, 535, 536,
	0, 270, 271, 1014, 0, 995, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 1047, 288,
	289, 998, 996, 997, 1004, 1000, 999, 1003, 290, 291,
	292, 293, 0, 294, 538, 539, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 540, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 1038, 1039, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 543, 0, 0, 0, 327,
	0, 328, 0, 0, 1048, 329, 330, 544, 545, 331,
	332, 0, 333, 1045, 0, 547, 334, 0, 335, 336,
	337, 338, 339, 1009, 1010, 1013, 396, 1050, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 1049, 348, 551, 552, 0, 553, 0,
	350, 351, 1051, 1011, 1052, 352, 353, 354, 1053, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 1090,
	362, 364, 363, 0, 365, 1046, 1054, 366, 367, 1055,
	0, 368, 369, 370, 1002, 1001, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 1056, 387, 388, 389, 392, 393,
	391, 1057, 390, 0, 246, 1058, 394, 0, 1012, 395,
	557, 397, 398, 0, 0, 399, 0, 0, 1096, 401,
	402, 403, 0, 0, 404, 405, 558, 1059, 406, 1060,
	1040, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 1041, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 564, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 1061, 446, 447,
	448, 449, 565, 1098, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 208, 466, 467, 465,
	468, 469, 470, 1005, 471, 455, 456, 472, 473, 1062,
	474, 475, 476, 477, 478, 479, 566, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 567, 486, 487,
	488, 489, 1042, 0, 492, 493, 0, 491, 210, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 569,
	570, 571, 572, 0, 508, 0, 502, 503, 1043, 504,
	1044, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 1006, 518, 0,
	0, 519, 520, 521, 1438, 576, 577, 0, 523, 522,
	578, 0, 0, 0, 202, 524, 525, 579, 526, 527,
	528, 0, 203, 0, 0, 0, 2879, 0, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 1764, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1008,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 1007, 0, 269, 534, 535,
	536, 0, 270, 271, 1014, 0, 995, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1047,
	288, 289, 998, 996, 997, 1004, 1000, 999, 1003, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 1038, 1039, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 1048, 329, 330, 544, 545,
	331, 332, 0, 333, 1045, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 1009, 1010, 1013, 396, 1050, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 1049, 348, 551, 552, 0, 553,
	0, 350, 351, 1051, 1011, 1052, 352, 353, 354, 1053,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	1090, 362, 364, 363, 0, 365, 1046, 1054, 366, 367,
	1055, 0, 368, 369, 370, 1002, 1001, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1056, 387, 388, 389, 392,
	393, 391, 1057, 390, 0, 246, 1058, 394, 0, 1012,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 1096,
	401, 402, 403, 0, 0, 404, 405, 558, 1059, 406,
	1060, 1040, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 1041, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1061, 446,
	447, 448, 449, 565, 1098, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 1005, 471, 455, 456, 472, 473,
	1062, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 1042, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 1043,
	504, 1044, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 1006, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 0, 1086, 0, 1104, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 1094, 0, 1092, 1008, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 264, 265, 266, 267,
	268, 0, 1007, 0, 269, 534, 535, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	0, 294, 538, 539, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	540, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 543, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 544, 545, 331, 332, 0,
	333, 1045, 0, 547, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 551, 552, 0, 553, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 1090, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 0, 246, 1058, 394, 0, 1012, 395, 557, 397,
	398, 0, 0, 399, 0, 0, 1096, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	564, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	565, 1098, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 566, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 567, 486, 487, 488, 489,
	1042, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 569, 570, 571,
	572, 0, 508, 0, 502, 503, 1043, 504, 1044, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 576, 577, 0, 523, 522, 578, 0,
	1104, 0, 0, 524, 525, 579, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	1094, 1008, 1092, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 1007, 0, 269,
	534, 535, 536, 0, 270, 271, 1014, 0, 995, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1047, 288, 289, 998, 996, 997, 1004, 1000, 999,
	1003, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1038, 1039, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 1048, 329, 330,
	544, 545, 331, 332, 0, 333, 1045, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1009, 1010, 1013, 396,
	1050, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1049, 348, 551, 552,
	0, 553, 0, 350, 351, 1051, 1011, 1052, 352, 353,
	354, 1053, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 1090, 362, 364, 363, 0, 365, 1046, 1054,
	366, 367, 1055, 0, 368, 369, 370, 1002, 1001, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1056, 387, 388,
	389, 392, 393, 391, 1057, 390, 0, 246, 1058, 394,
	0, 1012, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 1096, 401, 402, 403, 0, 0, 404, 405, 558,
	1059, 406, 1060, 1040, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	1041, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1061, 446, 447, 448, 449, 565, 1098, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1005, 471, 455, 456,
	472, 473, 1062, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 1042, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 1043, 504, 1044, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	1006, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 0, 1104, 0, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 1094, 1008, 1092, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 530, 531,
	0, 262, 532, 263, 533, 0, 264, 265, 266, 267,
	268, 0, 1007, 0, 269, 534, 535, 536, 0, 270,
	271, 1014, 0, 995, 0, 272, 273, 274, 275, 276,
	277, 278, 0, 0, 280, 281, 282, 279, 0, 283,
	0, 284, 285, 286, 0, 287, 1047, 288, 289, 998,
	996, 997, 1004, 1000, 999, 1003, 290, 291, 292, 293,
	0, 294, 538, 539, 0, 298, 295, 296, 0, 299,
	297, 0, 300, 301, 302, 0, 0, 303, 304, 305,
	0, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	540, 313, 314, 315, 317, 319, 316, 320, 321, 322,
	323, 1038, 1039, 0, 244, 0, 0, 0, 0, 0,
	324, 325, 326, 543, 0, 0, 0, 327, 0, 328,
	0, 0, 1048, 329, 330, 544, 545, 331, 332, 0,
	333, 1045, 0, 547, 334, 0, 335, 336, 337, 338,
	339, 1009, 1010, 1013, 396, 1050, 340, 341, 0, 342,
	343, 344, 345, 0, 0, 0, 245, 346, 347, 349,
	0, 1049, 348, 551, 552, 0, 553, 0, 350, 351,
	1051, 1011, 1052, 352, 353, 354, 1053, 355, 0, 0,
	0, 356, 357, 358, 359, 360, 361, 0, 362, 364,
	363, 0, 365, 1046, 1054, 366, 367, 1055, 0, 368,
	369, 370, 1002, 1001, 371, 372, 373, 374, 0, 375,
	376, 378, 380, 377, 379, 384, 381, 382, 383, 386,
	0, 385, 1056, 387, 388, 389, 392, 393, 391, 1057,
	390, 0, 246, 1058, 394, 0, 1012, 395, 557, 397,
	398, 0, 0, 399, 0, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 558, 1059, 406, 1060, 1040, 407,
	408, 400, 409, 410, 411, 412, 413, 414, 415, 416,
	0, 417, 418, 560, 561, 1041, 419, 563, 420, 421,
	0, 422, 0, 423, 424, 425, 426, 427, 428, 429,
	564, 431, 430, 432, 0, 433, 0, 0, 0, 0,
	0, 434, 0, 436, 437, 438, 435, 439, 440, 441,
	442, 0, 443, 444, 445, 1061, 446, 447, 448, 449,
	565, 1098, 0, 451, 452, 458, 459, 453, 454, 460,
	461, 462, 463, 464, 0, 466, 467, 465, 468, 469,
	470, 1005, 471, 455, 456, 472, 473, 1062, 474, 475,
	476, 477, 478, 479, 566, 0, 480, 0, 481, 482,
	483, 484, 457, 485, 490, 567, 486, 487, 488, 489,
	1042, 0, 492, 493, 0, 491, 0, 494, 495, 496,
	497, 498, 499, 318, 500, 0, 501, 569, 570, 571,
	572, 0, 508, 0, 502, 503, 1043, 504, 1044, 0,
	505, 506, 507, 0, 509, 510, 0, 0, 511, 512,
	513, 515, 516, 514, 517, 1006, 518, 0, 0, 519,
	520, 521, 575, 576, 577, 0, 523, 522, 578, 0,
	930, 0, 1289, 524, 525, 579, 526, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 1663, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 208, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 210, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 1438,
	576, 577, 0, 523, 522, 578, 0, 0, 0, 202,
	524, 525, 579, 526, 527, 528, 0, 203, 0, 0,
	0, 1435, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 530, 531, 0, 262,
	532, 263, 533, 0, 264, 265, 266, 267, 268, 0,
	0, 0, 269, 534, 535, 536, 0, 270, 271, 537,
	0, 1255, 0, 272, 273, 274, 275, 276, 277, 278,
	0, 0, 280, 281, 282, 279, 0, 283, 0, 284,
	285, 286, 0, 287, 1047, 288, 289, 0, 0, 0,
	0, 0, 0, 0, 290, 291, 292, 293, 0, 294,
	538, 539, 0, 298, 295, 296, 0, 299, 297, 0,
	300, 301, 302, 0, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 540, 313,
	314, 315, 317, 319, 316, 320, 321, 322, 323, 541,
	542, 0, 244, 0, 0, 0, 0, 0, 324, 325,
	326, 543, 0, 0, 0, 327, 0, 328, 0, 0,
	1048, 329, 330, 544, 545, 331, 332, 0, 333, 546,
	0, 547, 334, 0, 335, 336, 337, 338, 339, 548,
	549, 550, 396, 1050, 340, 341, 0, 342, 343, 344,
	345, 0, 0, 0, 0, 346, 347, 349, 0, 1049,
	348, 551, 552, 0, 553, 0, 350, 351, 1051, 554,
	1052, 352, 353, 354, 1053, 355, 0, 0, 0, 356,
	357, 358, 359, 360, 361, 0, 362, 364, 363, 0,
	365, 555, 1054, 366, 367, 1055, 0, 368, 369, 370,
	0, 0, 371, 372, 373, 374, 0, 375, 376, 378,
	380, 377, 379, 384, 381, 382, 383, 386, 0, 385,
	1056, 387, 388, 389, 392, 393, 391, 1057, 390, 0,
	0, 1058, 394, 0, 556, 395, 557, 397, 398, 0,
	0, 399, 0, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 558, 1059, 406, 1060, 559, 407, 408, 400,
	409, 410, 411, 412, 413, 414, 415, 416, 0, 417,
	418, 560, 561, 562, 419, 563, 420, 421, 0, 422,
	0, 423, 424, 425, 426, 427, 428, 429, 564, 431,
	430, 432, 0, 433, 0, 0, 0, 0, 0, 434,
	0, 436, 437, 438, 435, 439, 440, 441, 442, 0,
	443, 444, 445, 1061, 446, 447, 448, 449, 565, 450,
	0, 451, 452, 458, 459, 453, 454, 460, 461, 462,
	463, 464, 208, 466, 467, 465, 468, 469, 470, 0,
	471, 455, 456, 472, 473, 1062, 474, 475, 476, 477,
	478, 479, 566, 0, 480, 0, 481, 482, 483, 484,
	457, 485, 490, 567, 486, 487, 488, 489, 568, 0,
	492, 493, 0, 491, 210, 494, 495, 496, 497, 498,
	499, 318, 500, 0, 501, 569, 570, 571, 572, 0,
	508, 0, 502, 503, 573, 504, 574, 0, 505, 506,
	507, 0, 509, 510, 0, 0, 511, 512, 513, 515,
	516, 514, 517, 0, 518, 0, 0, 519, 520, 521,
	1438, 576, 577, 0, 523, 522, 578, 0, 0, 0,
	202, 524, 525, 579, 526, 527, 528, 0, 203, 0,
	0, 0, 0, 0, 1289, 1288, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 1255, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1047, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 1048, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 1050, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1049, 348, 551, 552, 0, 553, 0, 350, 351, 1051,
	554, 1052, 352, 353, 354, 1053, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 1054, 366, 367, 1055, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1056, 387, 388, 389, 392, 393, 391, 1057, 390,
	0, 0, 1058, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 1059, 406, 1060, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1061, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1062, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 0, 0,
	0, 0, 524, 525, 579, 526, 527, 528, 1289, 1288,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 1460, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 1255, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1047,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 1048, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 1050, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1049, 348, 551, 552, 0, 553,
	0, 350, 351, 1051, 554, 1052, 352, 353, 354, 1053,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 1054, 366, 367,
	1055, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1056, 387, 388, 389, 392,
	393, 391, 1057, 390, 0, 0, 1058, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 1059, 406,
	1060, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1061, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1062, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 1289, 1288, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 3118, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 1949, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 1289, 1288, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 1460,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 1255, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1047, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 1048, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 1050, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1049, 348, 551, 552, 0, 553, 0, 350,
	351, 1051, 554, 1052, 352, 353, 354, 1053, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 1054, 366, 367, 1055, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1056, 387, 388, 389, 392, 393, 391,
	1057, 390, 0, 0, 1058, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 1059, 406, 1060, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1061, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 1062, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	1104, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 1008, 0, 1444, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 1007, 0, 269,
	534, 535, 536, 0, 270, 271, 1014, 0, 995, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1047, 288, 289, 998, 996, 997, 1004, 1000, 999,
	1003, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 1038, 1039, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 1048, 329, 330,
	544, 545, 331, 332, 0, 333, 1045, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1009, 1010, 1013, 396,
	1050, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 1049, 348, 551, 552,
	0, 553, 0, 350, 351, 1051, 1011, 1052, 352, 353,
	354, 1053, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 1046, 1054,
	366, 367, 1055, 0, 368, 369, 370, 1002, 1001, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1056, 387, 388,
	389, 392, 393, 391, 1057, 390, 0, 246, 1058, 394,
	0, 1012, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	1059, 406, 1060, 1040, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	1041, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1061, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 1005, 471, 455, 456,
	472, 473, 1062, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 1042, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 1043, 504, 1044, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	1006, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 930, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 208, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 210, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 1438, 576, 577, 0, 523, 522, 578,
	241, 0, 0, 202, 524, 525, 579, 526, 527, 528,
	0, 203, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 174, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 0, 1379, 0, 241, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1778, 529, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	530, 531, 0, 262, 532, 263, 533, 0, 264, 265,
	266, 267, 268, 0, 0, 0, 269, 534, 535, 536,
	0, 270, 271, 537, 0, 0, 0, 272, 273, 274,
	275, 276, 277, 278, 0, 0, 280, 281, 282, 279,
	0, 283, 0, 284, 285, 286, 0, 287, 0, 288,
	289, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 293, 0, 294, 538, 539, 0, 298, 295, 296,
	0, 299, 297, 0, 300, 301, 302, 0, 0, 303,
	304, 305, 0, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 540, 313, 314, 315, 317, 319, 316, 320,
	321, 322, 323, 541, 542, 0, 244, 0, 0, 0,
	0, 0, 324, 325, 326, 543, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 544, 545, 331,
	332, 0, 333, 546, 0, 547, 334, 0, 335, 336,
	337, 338, 339, 548, 549, 550, 396, 0, 340, 341,
	0, 342, 343, 344, 345, 0, 0, 0, 245, 346,
	347, 349, 0, 0, 348, 551, 552, 0, 553, 0,
	350, 351, 0, 554, 0, 352, 353, 354, 0, 355,
	0, 0, 0, 356, 357, 358, 359, 360, 361, 0,
	362, 364, 363, 0, 365, 555, 0, 366, 367, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 373, 374,
	0, 375, 376, 378, 380, 377, 379, 384, 381, 382,
	383, 386, 0, 385, 0, 387, 388, 389, 392, 393,
	391, 0, 390, 0, 246, 0, 394, 0, 556, 395,
	557, 397, 398, 0, 0, 399, 0, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 558, 0, 406, 0,
	559, 407, 408, 400, 409, 410, 411, 412, 413, 414,
	415, 416, 0, 417, 418, 560, 561, 562, 419, 563,
	420, 421, 0, 422, 0, 423, 424, 425, 426, 427,
	428, 429, 564, 431, 430, 432, 0, 433, 0, 0,
	0, 0, 0, 434, 0, 436, 437, 438, 435, 439,
	440, 441, 442, 0, 443, 444, 445, 0, 446, 447,
	448, 449, 565, 450, 0, 451, 452, 458, 459, 453,
	454, 460, 461, 462, 463, 464, 0, 466, 467, 465,
	468, 469, 470, 0, 471, 455, 456, 472, 473, 0,
	474, 475, 476, 477, 478, 479, 566, 0, 480, 0,
	481, 482, 483, 484, 457, 485, 490, 567, 486, 487,
	488, 489, 568, 0, 492, 493, 0, 491, 0, 494,
	495, 496, 497, 498, 499, 318, 500, 0, 501, 569,
	570, 571, 572, 0, 508, 0, 502, 503, 573, 504,
	574, 0, 505, 506, 507, 0, 509, 510, 0, 0,
	511, 512, 513, 515, 516, 514, 517, 0, 518, 0,
	0, 519, 520, 521, 575, 576, 577, 0, 523, 522,
	578, 0, 241, 2643, 0, 524, 525, 579, 526, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 1383, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 241, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 4152,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 3064, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 1383, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	241, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 2616, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 241, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 3218, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 0, 780,
	0, 664, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 2046, 529, 0, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 530, 531, 0, 262, 532, 263,
	533, 0, 264, 265, 266, 267, 268, 0, 0, 0,
	269, 534, 535, 536, 0, 270, 271, 537, 0, 0,
	0, 272, 273, 274, 275, 276, 277, 278, 0, 0,
	280, 281, 282, 279, 0, 283, 0, 284, 285, 286,
	0, 287, 0, 288, 289, 0, 0, 0, 0, 0,
	0, 0, 290, 291, 671, 293, 0, 294, 538, 539,
	0, 298, 295, 296, 0, 299, 297, 0, 300, 301,
	302, 0, 0, 303, 304, 305, 0, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 540, 313, 314, 315,
	317, 319, 316, 320, 321, 322, 323, 541, 542, 0,
	244, 0, 0, 0, 0, 0, 324, 325, 326, 543,
	0, 0, 0, 327, 0, 328, 0, 778, 0, 329,
	330, 544, 545, 331, 332, 0, 333, 546, 0, 547,
	334, 0, 335, 336, 337, 338, 339, 548, 549, 550,
	396, 0, 340, 341, 0, 342, 343, 344, 345, 0,
	0, 0, 245, 346, 347, 349, 0, 0, 348, 551,
	552, 0, 553, 0, 350, 351, 0, 554, 0, 352,
	353, 354, 0, 355, 0, 0, 0, 356, 357, 358,
	359, 360, 361, 0, 362, 364, 363, 0, 365, 555,
	0, 366, 367, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 373, 374, 0, 375, 376, 378, 380, 377,
	379, 384, 381, 382, 383, 386, 0, 385, 0, 387,
	388, 389, 392, 393, 391, 0, 390, 0, 246, 0,
	394, 0, 556, 395, 557, 397, 398, 0, 0, 399,
	0, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	558, 0, 406, 0, 559, 407, 408, 400, 409, 410,
	411, 412, 413, 414, 415, 416, 0, 417, 418, 560,
	561, 562, 419, 563, 420, 421, 0, 422, 0, 423,
	424, 425, 426, 427, 428, 429, 564, 431, 430, 432,
	0, 433, 0, 0, 0, 0, 0, 434, 0, 436,
	437, 438, 435, 439, 440, 441, 442, 0, 443, 444,
	445, 0, 446, 447, 448, 449, 565, 450, 0, 451,
	452, 458, 459, 453, 454, 460, 461, 462, 463, 464,
	0, 466, 467, 465, 468, 469, 470, 0, 471, 455,
	456, 472, 473, 0, 474, 475, 476, 477, 478, 479,
	566, 0, 480, 0, 481, 482, 483, 484, 457, 485,
	490, 567, 486, 487, 488, 489, 568, 0, 492, 493,
	0, 491, 669, 494, 495, 496, 497, 670, 499, 318,
	500, 0, 501, 569, 570, 571, 572, 0, 508, 0,
	502, 503, 573, 504, 574, 0, 505, 506, 507, 0,
	509, 510, 0, 0, 511, 512, 513, 515, 516, 514,
	517, 0, 518, 0, 0, 519, 520, 521, 575, 576,
	577, 0, 523, 522, 578, 0, 662, 0, 664, 524,
	525, 579, 526, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 674, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 671, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 669,
	494, 495, 496, 497, 670, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 664, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 674, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 671, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 669,
	494, 495, 496, 497, 670, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 664, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 674, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 671, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 2083,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 669,
	494, 495, 496, 497, 670, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 1813, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 674, 0,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 0, 1819, 0, 262, 1809, 263, 1825, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 1834, 1835,
	0, 0, 270, 271, 0, 0, 1255, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1047,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 1031, 294, 1823, 1822, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 1016, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 0, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 1821, 0, 0, 0,
	327, 0, 328, 0, 0, 1048, 329, 330, 1830, 1831,
	331, 332, 0, 333, 0, 0, 0, 334, 0, 335,
	336, 337, 338, 339, 0, 0, 0, 396, 1050, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1049, 348, 1816, 1817, 0, 1812,
	0, 350, 351, 1051, 0, 1052, 352, 353, 354, 1053,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 0, 1054, 366, 367,
	1055, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1056, 387, 388, 389, 392,
	393, 391, 1057, 390, 0, 0, 1058, 394, 0, 0,
	395, 1824, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 0, 1059, 406,
	1060, 0, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 1806, 1807, 0, 419,
	0, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 1820, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1061, 446,
	447, 448, 449, 0, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1062, 474, 475, 476, 477, 478, 479, 1818, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 1833, 486,
	487, 488, 489, 0, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	1826, 1827, 1828, 1829, 0, 508, 0, 502, 503, 0,
	504, 0, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 0, 1810, 1832, 0, 523,
	522, 0, 0, 0, 0, 0, 524, 525, 0, 526,
	527, 528, 1289, 1288, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 1800,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 3381, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 1289, 1288, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 1255, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1047, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 1048, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 1050, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1049, 348, 551, 552, 0, 553, 0, 350,
	351, 1051, 554, 1052, 352, 353, 354, 1053, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 1054, 366, 367, 1055, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1056, 387, 388, 389, 392, 393, 391,
	1057, 390, 0, 0, 1058, 394, 3040, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 1059, 406, 1060, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1061, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 1062, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	1289, 1288, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 1255, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1047, 288, 289, 0, 0, 0, 0, 0, 0,
	3029, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 1048, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	1050, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 1049, 348, 551, 552,
	0, 553, 0, 350, 351, 1051, 554, 1052, 352, 353,
	354, 1053, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 1054,
	366, 367, 1055, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1056, 387, 388,
	389, 392, 393, 391, 1057, 390, 0, 0, 1058, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	1059, 406, 1060, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1061, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 3030, 471, 455, 456,
	472, 473, 1062, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	241, 523, 522, 578, 0, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 0, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 1487, 0, 1289, 1288, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 1255, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 1047, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 1486, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 1048, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 1050, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 1049, 348, 551, 552, 0, 553, 0, 350,
	351, 1051, 554, 1052, 352, 353, 354, 1053, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 1054, 366, 367, 1055, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 1056, 387, 388, 389, 392, 393, 391,
	1057, 390, 0, 0, 1058, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 1059, 406, 1060, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 1485,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 1061, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 1484, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 1062, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	1428, 0, 1289, 1288, 0, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 1427, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 1358, 0, 1289, 1288,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 1255, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1047,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 1048, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 1357, 549, 550, 396, 1050, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1049, 348, 551, 552, 0, 553,
	0, 350, 351, 1051, 554, 1052, 352, 353, 354, 1053,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 1054, 366, 367,
	1055, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1056, 387, 388, 389, 392,
	393, 391, 1057, 390, 0, 0, 1058, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 1059, 406,
	1060, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1061, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1062, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 1323, 0, 1289, 1288, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 1255, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1047, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 1048, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 1050, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1049, 348, 551, 552, 0, 553, 0, 350, 351, 1051,
	554, 1052, 352, 353, 354, 1053, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 1054, 366, 367, 1055, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1056, 387, 388, 389, 392, 393, 391, 1057, 390,
	0, 0, 1058, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 1059, 406, 1060, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1061, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1062, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 0, 0,
	0, 0, 524, 525, 579, 526, 527, 528, 1284, 0,
	1289, 1288, 0, 0, 0, 0, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 1255, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 1047, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 1048, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1283, 549, 550, 396,
	1050, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 1049, 348, 551, 552,
	0, 553, 0, 350, 351, 1051, 554, 1052, 352, 353,
	354, 1053, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 1054,
	366, 367, 1055, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 1056, 387, 388,
	389, 392, 393, 391, 1057, 390, 0, 0, 1058, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	1059, 406, 1060, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	1061, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 1062, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 0, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 1289, 1288, 0, 0, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 1255, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 1047, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 1048, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 1050, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	1049, 348, 551, 552, 0, 553, 0, 350, 351, 1051,
	554, 1052, 352, 353, 354, 1053, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 1054, 366, 367, 1055, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 1056, 387, 388, 389, 392, 393, 391, 1057, 390,
	0, 0, 1058, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 1059, 406, 1060, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 1061, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 1062, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 1289, 1288,
	0, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 1255, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 1047,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 1846, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 1048, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 1050, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 1049, 348, 551, 552, 0, 553,
	0, 350, 351, 1051, 554, 1052, 352, 353, 354, 1053,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 1054, 366, 367,
	1055, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 1056, 387, 388, 389, 392,
	393, 391, 1057, 390, 0, 0, 1058, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 1059, 406,
	1060, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 1061, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	1062, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 1289, 1288, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 1289, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	1255, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 1047, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 1048,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 1050, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 1049, 348,
	551, 552, 0, 553, 0, 350, 351, 1051, 554, 1052,
	352, 353, 354, 1053, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 1054, 366, 367, 1055, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 1056,
	387, 388, 389, 392, 393, 391, 1057, 390, 0, 0,
	1058, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 1059, 406, 1060, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 1061, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 1062, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 241, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 2475, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 2472, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 2479, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 2656, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 2478, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 2653, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 2655, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 2652, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 2477, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 2654, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 241, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 2475, 270, 271, 537, 0,
	0, 2469, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 2472, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 2479, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 2478, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 2468, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 2477, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 2476, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 1552, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 1555, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 1553,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 1554,
	522, 578, 1259, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	1261, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 1096, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 1256, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1258, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 1096, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 1162, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1164, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 1096, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	611, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 610, 251, 252, 600, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 603, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 604, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 605, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 599, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 600, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 603, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 604, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 605, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 241, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 3002, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 241, 523,
	522, 578, 0, 0, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 1096,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 2588, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	2587, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 2059, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	241, 523, 522, 578, 0, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 1980, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 1985, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1984, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	1973, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 1975, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 1420, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 1419, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 1411, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	1410, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 1408, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1407, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 1404, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1403, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	1361, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 244, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 245, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 246,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 1277, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 244, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 245,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 246, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 1270, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 244, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	1272, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 245, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 246, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 581, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 244,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 245, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 246, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 232, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 603, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	604, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 605, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 2090,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 2088,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 2086,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 244, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 2024, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 245, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 246, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	767, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 766, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 765, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 241, 523, 522, 578, 0, 0, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 2656, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 3627, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 590, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 589, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 588, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 241, 2643, 0, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 241, 3637, 0, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 3356, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 2395,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	241, 2643, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 2640, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	241, 523, 522, 578, 0, 0, 0, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 2067, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 2057, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	633, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	1136, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 1134, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 634, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 630, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 1137, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 629, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 633, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 623, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 634, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 630, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 1443, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	629, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 1424, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	1423, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 1417, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 1416, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 1367, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1366, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	1352, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 271, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 283, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 1351, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 385, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 565, 450, 0,
	451, 452, 458, 459, 453, 454, 460, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 469, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 569, 570, 571, 572, 0, 508,
	0, 502, 503, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 1347, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 458, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 1280, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 1264, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 633, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 1136, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 1134, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 634, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	630, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	1137, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 629, 570,
	571, 572, 0, 508, 0, 502, 1135, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 1117,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 639,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	633, 0, 241, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 530, 531, 0, 262, 532,
	263, 533, 0, 264, 265, 266, 267, 268, 0, 0,
	0, 269, 534, 535, 536, 0, 270, 623, 537, 0,
	0, 0, 272, 273, 274, 275, 276, 277, 278, 0,
	0, 280, 281, 282, 279, 0, 621, 0, 284, 285,
	286, 0, 287, 0, 288, 289, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 293, 0, 294, 538,
	539, 0, 298, 295, 296, 0, 299, 297, 0, 300,
	301, 302, 0, 0, 303, 304, 305, 0, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 540, 313, 314,
	315, 317, 319, 316, 320, 321, 322, 323, 541, 542,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	543, 0, 0, 0, 327, 0, 328, 0, 0, 0,
	329, 330, 544, 545, 331, 332, 0, 333, 546, 0,
	547, 334, 0, 335, 336, 337, 338, 339, 548, 549,
	550, 396, 0, 340, 341, 0, 342, 343, 344, 345,
	0, 0, 0, 0, 346, 347, 349, 0, 0, 348,
	551, 552, 0, 553, 0, 350, 351, 0, 554, 0,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 357,
	358, 359, 360, 361, 0, 362, 364, 363, 0, 365,
	555, 0, 366, 367, 0, 0, 368, 369, 622, 0,
	0, 371, 372, 373, 374, 0, 375, 376, 378, 380,
	377, 379, 384, 381, 382, 383, 386, 0, 634, 0,
	387, 388, 389, 392, 393, 391, 0, 390, 0, 0,
	0, 394, 0, 556, 395, 557, 397, 398, 0, 0,
	399, 0, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 558, 0, 406, 0, 559, 407, 408, 400, 409,
	410, 411, 412, 413, 414, 415, 416, 0, 417, 418,
	560, 561, 562, 419, 563, 420, 421, 0, 422, 0,
	423, 424, 425, 426, 427, 428, 429, 564, 431, 430,
	432, 0, 433, 0, 0, 0, 0, 0, 434, 0,
	436, 437, 438, 435, 439, 440, 441, 442, 0, 443,
	444, 445, 0, 446, 447, 448, 449, 624, 450, 0,
	451, 452, 458, 459, 453, 454, 630, 461, 462, 463,
	464, 0, 466, 467, 465, 468, 625, 470, 0, 471,
	455, 456, 472, 473, 0, 474, 475, 476, 477, 478,
	479, 566, 0, 480, 0, 481, 482, 483, 484, 457,
	485, 490, 567, 486, 487, 488, 489, 568, 0, 492,
	493, 0, 491, 0, 494, 495, 496, 497, 498, 499,
	318, 500, 0, 501, 629, 570, 571, 572, 0, 508,
	0, 502, 627, 573, 504, 574, 0, 505, 506, 507,
	0, 509, 510, 0, 0, 511, 512, 513, 515, 516,
	514, 517, 0, 518, 0, 0, 519, 520, 521, 575,
	576, 577, 0, 523, 522, 578, 615, 0, 241, 0,
	524, 525, 579, 526, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 530, 531, 0, 262, 532, 263, 533, 0, 264,
	265, 266, 267, 268, 0, 0, 0, 269, 534, 535,
	536, 0, 270, 271, 537, 0, 0, 0, 272, 273,
	274, 275, 276, 277, 278, 0, 0, 280, 281, 282,
	279, 0, 283, 0, 284, 285, 286, 0, 287, 0,
	288, 289, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 292, 293, 0, 294, 538, 539, 0, 298, 295,
	296, 0, 299, 297, 0, 300, 301, 302, 0, 0,
	303, 304, 305, 0, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 540, 313, 314, 315, 317, 319, 316,
	320, 321, 322, 323, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 543, 0, 0, 0,
	327, 0, 328, 0, 0, 0, 329, 330, 544, 545,
	331, 332, 0, 333, 546, 0, 547, 334, 0, 335,
	336, 337, 338, 339, 548, 549, 550, 396, 0, 340,
	341, 0, 342, 343, 344, 345, 0, 0, 0, 0,
	346, 347, 349, 0, 0, 348, 551, 552, 0, 553,
	0, 350, 351, 0, 554, 0, 352, 353, 354, 0,
	355, 0, 0, 0, 356, 357, 358, 359, 360, 361,
	0, 362, 364, 363, 0, 365, 555, 0, 366, 367,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 373,
	374, 0, 375, 376, 378, 380, 377, 379, 384, 381,
	382, 383, 386, 0, 385, 0, 387, 388, 389, 392,
	393, 391, 0, 390, 0, 0, 0, 394, 0, 556,
	395, 557, 397, 398, 0, 0, 399, 0, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 558, 0, 406,
	0, 559, 407, 408, 400, 409, 410, 411, 412, 413,
	414, 415, 416, 0, 417, 418, 560, 561, 562, 419,
	563, 420, 421, 0, 422, 0, 423, 424, 425, 426,
	427, 428, 429, 564, 431, 430, 432, 0, 433, 0,
	0, 0, 0, 0, 434, 0, 436, 437, 438, 435,
	439, 440, 441, 442, 0, 443, 444, 445, 0, 446,
	447, 448, 449, 565, 450, 0, 451, 452, 616, 459,
	453, 454, 460, 461, 462, 463, 464, 0, 466, 467,
	465, 468, 469, 470, 0, 471, 455, 456, 472, 473,
	0, 474, 475, 476, 477, 478, 479, 566, 0, 480,
	0, 481, 482, 483, 484, 457, 485, 490, 567, 486,
	487, 488, 489, 568, 0, 492, 493, 0, 491, 0,
	494, 495, 496, 497, 498, 499, 318, 500, 0, 501,
	569, 570, 571, 572, 0, 508, 0, 502, 503, 573,
	504, 574, 0, 505, 506, 507, 0, 509, 510, 0,
	0, 511, 512, 513, 515, 516, 514, 517, 0, 518,
	0, 0, 519, 520, 521, 575, 576, 577, 0, 523,
	522, 578, 613, 0, 241, 0, 524, 525, 579, 526,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 530, 531, 0,
	262, 532, 263, 533, 0, 264, 265, 266, 267, 268,
	0, 0, 0, 269, 534, 535, 536, 0, 270, 271,
	537, 0, 0, 0, 272, 273, 274, 275, 276, 277,
	278, 0, 0, 280, 281, 282, 279, 0, 283, 0,
	284, 285, 286, 0, 287, 0, 288, 289, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 292, 293, 0,
	294, 538, 539, 0, 298, 295, 296, 0, 299, 297,
	0, 300, 301, 302, 0, 0, 303, 304, 305, 0,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 540,
	313, 314, 315, 317, 319, 316, 320, 321, 322, 323,
	541, 542, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 543, 0, 0, 0, 327, 0, 328, 0,
	0, 0, 329, 330, 544, 545, 331, 332, 0, 333,
	546, 0, 547, 334, 0, 335, 336, 337, 338, 339,
	548, 549, 550, 396, 0, 340, 341, 0, 342, 343,
	344, 345, 0, 0, 0, 0, 346, 347, 349, 0,
	0, 348, 551, 552, 0, 553, 0, 350, 351, 0,
	554, 0, 352, 353, 354, 0, 355, 0, 0, 0,
	356, 357, 358, 359, 360, 361, 0, 362, 364, 363,
	0, 365, 555, 0, 366, 367, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 373, 374, 0, 375, 376,
	378, 380, 377, 379, 384, 381, 382, 383, 386, 0,
	385, 0, 387, 388, 389, 392, 393, 391, 0, 390,
	0, 0, 0, 394, 0, 556, 395, 557, 397, 398,
	0, 0, 399, 0, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 558, 0, 406, 0, 559, 407, 408,
	400, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	417, 418, 560, 561, 562, 419, 563, 420, 421, 0,
	422, 0, 423, 424, 425, 426, 427, 428, 429, 564,
	431, 430, 432, 0, 433, 0, 0, 0, 0, 0,
	434, 0, 436, 437, 438, 435, 439, 440, 441, 442,
	0, 443, 444, 445, 0, 446, 447, 448, 449, 565,
	450, 0, 451, 452, 458, 459, 453, 454, 460, 461,
	462, 463, 464, 0, 466, 467, 465, 468, 469, 470,
	0, 471, 455, 456, 472, 473, 0, 474, 475, 476,
	477, 478, 479, 566, 0, 480, 0, 481, 482, 483,
	484, 457, 485, 490, 567, 486, 487, 488, 489, 568,
	0, 492, 493, 0, 491, 0, 494, 495, 496, 497,
	498, 499, 318, 500, 0, 501, 569, 570, 571, 572,
	0, 508, 0, 502, 503, 573, 504, 574, 0, 505,
	506, 507, 0, 509, 510, 0, 0, 511, 512, 513,
	515, 516, 514, 517, 0, 518, 0, 0, 519, 520,
	521, 575, 576, 577, 0, 523, 522, 578, 607, 0,
	241, 0, 524, 525, 579, 526, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 530, 531, 0, 262, 532, 263, 533,
	0, 264, 265, 266, 267, 268, 0, 0, 0, 269,
	534, 535, 536, 0, 270, 271, 537, 0, 0, 0,
	272, 273, 274, 275, 276, 277, 278, 0, 0, 280,
	281, 282, 279, 0, 283, 0, 284, 285, 286, 0,
	287, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 292, 293, 0, 294, 538, 539, 0,
	298, 295, 296, 0, 299, 297, 0, 300, 301, 302,
	0, 0, 303, 304, 305, 0, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 540, 313, 314, 315, 317,
	319, 316, 320, 321, 322, 323, 541, 542, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 543, 0,
	0, 0, 327, 0, 328, 0, 0, 0, 329, 330,
	544, 545, 331, 332, 0, 333, 546, 0, 547, 334,
	0, 335, 336, 337, 338, 339, 548, 549, 550, 396,
	0, 340, 341, 0, 342, 343, 344, 345, 0, 0,
	0, 0, 346, 347, 349, 0, 0, 348, 551, 552,
	0, 553, 0, 350, 351, 0, 554, 0, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 357, 358, 359,
	360, 361, 0, 362, 364, 363, 0, 365, 555, 0,
	366, 367, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 373, 374, 0, 375, 376, 378, 380, 377, 379,
	384, 381, 382, 383, 386, 0, 385, 0, 387, 388,
	389, 392, 393, 391, 0, 390, 0, 0, 0, 394,
	0, 556, 395, 557, 397, 398, 0, 0, 399, 0,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 558,
	0, 406, 0, 559, 407, 408, 400, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 417, 418, 560, 561,
	562, 419, 563, 420, 421, 0, 422, 0, 423, 424,
	425, 426, 427, 428, 429, 564, 431, 430, 432, 0,
	433, 0, 0, 0, 0, 0, 434, 0, 436, 437,
	438, 435, 439, 440, 441, 442, 0, 443, 444, 445,
	0, 446, 447, 448, 449, 565, 450, 0, 451, 452,
	458, 459, 453, 454, 460, 461, 462, 463, 464, 0,
	466, 467, 465, 468, 469, 470, 0, 471, 455, 456,
	472, 473, 0, 474, 475, 476, 477, 478, 479, 566,
	0, 480, 0, 481, 482, 483, 484, 457, 485, 490,
	567, 486, 487, 488, 489, 568, 0, 492, 493, 0,
	491, 0, 494, 495, 496, 497, 498, 499, 318, 500,
	0, 501, 569, 570, 571, 572, 0, 508, 0, 502,
	503, 573, 504, 574, 0, 505, 506, 507, 0, 509,
	510, 0, 0, 511, 512, 513, 515, 516, 514, 517,
	0, 518, 0, 0, 519, 520, 521, 575, 576, 577,
	0, 523, 522, 578, 585, 0, 241, 0, 524, 525,
	579, 526, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 3080, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 3034, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 2975, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 2973, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 2959, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 2596, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 616, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 2006,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 0, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1389, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 1330, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 334, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 427, 428,
	429, 564, 1069, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 450, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 241, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 530,
	531, 0, 262, 532, 263, 533, 0, 264, 265, 266,
	267, 268, 0, 0, 0, 269, 534, 535, 536, 0,
	270, 271, 537, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 0, 0, 280, 281, 282, 279, 0,
	283, 0, 284, 285, 286, 0, 287, 0, 288, 289,
	0, 0, 0, 0, 0, 0, 0, 290, 291, 292,
	293, 0, 294, 538, 539, 0, 298, 295, 296, 0,
	299, 297, 0, 300, 301, 302, 0, 0, 303, 304,
	305, 0, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 540, 313, 314, 315, 317, 319, 316, 320, 321,
	322, 323, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 543, 0, 0, 0, 327, 0,
	328, 0, 0, 0, 329, 330, 544, 545, 331, 332,
	0, 333, 546, 0, 547, 0, 0, 335, 336, 337,
	338, 339, 548, 549, 550, 396, 0, 340, 341, 0,
	342, 343, 344, 345, 0, 0, 0, 0, 346, 347,
	349, 0, 0, 348, 551, 552, 0, 553, 0, 350,
	351, 0, 554, 0, 352, 353, 354, 0, 355, 0,
	0, 0, 356, 357, 358, 359, 360, 361, 0, 362,
	364, 363, 0, 365, 555, 0, 366, 367, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 373, 374, 0,
	375, 376, 378, 380, 377, 379, 384, 381, 382, 383,
	386, 0, 385, 0, 387, 388, 389, 392, 393, 391,
	0, 390, 0, 0, 0, 394, 0, 556, 395, 557,
	397, 398, 0, 0, 399, 0, 0, 0, 401, 402,
	403, 0, 0, 404, 405, 558, 0, 406, 0, 559,
	407, 408, 400, 409, 410, 0, 412, 413, 414, 415,
	416, 0, 417, 418, 560, 561, 562, 419, 563, 420,
	421, 0, 422, 0, 423, 424, 425, 426, 0, 428,
	429, 564, 431, 430, 432, 0, 433, 0, 0, 0,
	0, 0, 434, 0, 436, 437, 438, 435, 439, 440,
	441, 442, 0, 443, 444, 445, 0, 446, 447, 448,
	449, 565, 0, 0, 451, 452, 458, 459, 453, 454,
	460, 461, 462, 463, 464, 0, 466, 467, 465, 468,
	469, 470, 0, 471, 455, 456, 472, 473, 0, 474,
	475, 476, 477, 478, 479, 566, 0, 480, 0, 481,
	482, 483, 484, 457, 485, 490, 567, 486, 487, 488,
	489, 568, 0, 492, 493, 0, 491, 0, 494, 495,
	496, 497, 498, 499, 318, 500, 0, 501, 569, 570,
	571, 572, 0, 508, 0, 502, 503, 573, 504, 574,
	0, 505, 506, 507, 0, 509, 510, 0, 0, 511,
	512, 513, 515, 516, 514, 517, 0, 518, 0, 0,
	519, 520, 521, 575, 576, 577, 0, 523, 522, 578,
	0, 0, 0, 0, 524, 525, 579, 526, 527, 528,
	1597, 1598, 0, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 1633, 1628, 0, 0, 0,
	1619, 0, 0, 1600, 0, 0, 0, 0, 1616, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 1623, 1624, 1625, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1647, 0, 1622, 1623,
	1624, 1625, 1627, 1629, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	1647, 0, 0, 0, 0, 1635, 1627, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 1598,
	1621, 1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1628, 0, 0, 0, 1626, 1638, 0, 1600, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641,
	1642, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 1633, 1628, 0, 0, 0, 1619, 1638,
	0, 1600, 0, 0, 0, 0, 1616, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 1636, 0, 0,
	1616, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	0, 3945, 1622, 1623, 1624, 1625, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 1637, 0, 0, 1647, 3941, 1622, 1623, 1624, 1625,
	1627, 1629, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 1644, 0,
	0, 0, 0, 0, 0, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 1647, 0,
	0, 0, 0, 1635, 1627, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	1643, 0, 1644, 0, 0, 0, 0, 0, 0, 1614,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 1598, 1621, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1628, 0,
	0, 0, 1626, 1638, 0, 1600, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 1619, 1638, 0, 1600,
	0, 0, 0, 0, 1616, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 1636, 0, 0, 1616, 1611,
	1612, 1618, 1639, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 0, 0, 0, 0, 3852,
	1622, 1623, 1624, 1625, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613, 0,
	1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607, 1637,
	0, 0, 1647, 3851, 1622, 1623, 1624, 1625, 1627, 1629,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 1644, 0, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1647, 0, 0, 0,
	0, 1635, 1627, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 1621, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1628, 0, 0, 0,
	1626, 1638, 0, 1600, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 1597, 1598,
	1621, 1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 1633,
	1628, 0, 0, 0, 1619, 1638, 0, 1600, 0, 0,
	0, 0, 1616, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 1636, 0, 0, 1616, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 0, 0, 3703, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 0,
	0, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 1637, 0, 0,
	1647, 3569, 1622, 1623, 1624, 1625, 1627, 1629, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 1647, 0, 0, 0, 0, 1635,
	1627, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 1643, 0, 1644, 0,
	0, 0, 0, 0, 0, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641,
	1642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 1628, 0, 0, 0, 1626, 1638,
	0, 1600, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 1597, 1598, 1621, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 1633, 1628, 0,
	0, 0, 1619, 1638, 0, 1600, 0, 0, 0, 0,
	1616, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 1636, 0, 0, 1616, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 0, 0, 0, 0, 3513, 1622, 1623, 1624, 1625,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 1611,
	1612, 1618, 1639, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 1637, 0, 0, 1647, 3512,
	1622, 1623, 1624, 1625, 1627, 1629, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 1644, 0, 0, 0, 0, 0, 0, 1614,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 1647, 0, 0, 0, 0, 1635, 1627, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 1643, 0, 1644, 0, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 1626, 1638, 0, 1600,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 1621, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 1633, 1628, 0, 0, 0,
	1619, 1638, 0, 1600, 0, 0, 0, 0, 1616, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 1636,
	0, 0, 1616, 1611, 1612, 1618, 1639, 1617, 1613, 0,
	1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607, 0,
	0, 0, 0, 3511, 1622, 1623, 1624, 1625, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 1637, 0, 0, 1647, 3223, 1622, 1623,
	1624, 1625, 1627, 1629, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	1647, 0, 0, 0, 0, 1635, 1627, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 1598,
	1621, 1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1628, 0, 0, 0, 1626, 1638, 0, 1600, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641,
	1642, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 1633, 1628, 0, 0, 0, 1619, 1638,
	0, 1600, 0, 0, 0, 0, 1616, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 1636, 0, 0,
	1616, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	0, 2799, 1622, 1623, 1624, 1625, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 1637, 0, 0, 1647, 2798, 1622, 1623, 1624, 1625,
	1627, 1629, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 1644, 0,
	0, 0, 0, 0, 0, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 1647, 0,
	0, 0, 0, 1635, 1627, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	1643, 0, 1644, 0, 0, 0, 0, 0, 0, 1614,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 1598, 1621, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1628, 0,
	0, 0, 1626, 1638, 0, 1600, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	1597, 1598, 1621, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 1619, 1638, 0, 1600,
	0, 0, 0, 0, 1616, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 1636, 0, 0, 1616, 1611,
	1612, 1618, 1639, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 0, 0, 0, 0, 2797,
	1622, 1623, 1624, 1625, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613, 0,
	1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607, 1637,
	0, 0, 1647, 2796, 1622, 1623, 1624, 1625, 1627, 1629,
	0, 0, 0, 0, 1605, 4065, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 1644, 0, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1647, 0, 0, 0,
	0, 1635, 1627, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4064, 0, 1621, 1597, 1598, 0,
	1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 1628,
	1626, 1638, 0, 0, 2734, 0, 1600, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1599, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 1616, 0, 0, 0, 0,
	1597, 1598, 0, 1630, 1631, 1632, 1640, 1641, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1628, 0, 0, 0, 2735, 0, 0, 1600,
	0, 0, 0, 1636, 0, 0, 1646, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 2763, 0, 0, 0, 0,
	1599, 1622, 1623, 1624, 1625, 0, 0, 0, 0, 0,
	1619, 1605, 0, 0, 0, 0, 0, 1636, 1616, 0,
	0, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	1637, 0, 0, 1647, 0, 0, 0, 0, 0, 1627,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 1644, 0, 0,
	0, 0, 0, 0, 1614, 1615, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 1623, 1624, 1625, 0, 0,
	0, 0, 1635, 0, 1605, 0, 2859, 0, 0, 2858,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 1647, 0, 1645, 0,
	0, 0, 1627, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 1643, 0,
	1644, 0, 0, 0, 0, 0, 0, 1614, 1615, 0,
	0, 0, 0, 0, 0, 0, 2369, 0, 0, 0,
	0, 0, 0, 1597, 1598, 1635, 1630, 1631, 1632, 1640,
	1641, 1642, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 1633, 1628, 0, 1626, 0, 2368,
	0, 0, 1600, 0, 0, 0, 0, 0, 0, 1646,
	0, 1645, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 1619, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 1598, 0, 1630,
	1631, 1632, 1640, 1641, 1642, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 1633, 1628, 0,
	0, 0, 0, 0, 0, 1600, 0, 0, 0, 0,
	1621, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 1623, 1624,
	1625, 0, 0, 0, 0, 1638, 1599, 1605, 0, 0,
	0, 0, 0, 0, 1636, 0, 1619, 0, 1611, 1612,
	1618, 1639, 1617, 1613, 1616, 1610, 1608, 1609, 1601, 1602,
	1603, 1604, 1606, 1607, 0, 0, 1637, 0, 0, 1647,
	0, 0, 0, 0, 0, 1627, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 1644, 0, 0, 0, 0, 0, 0,
	1614, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	1622, 1623, 1624, 1625, 0, 0, 0, 1636, 0, 1620,
	1605, 1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608,
	1609, 1601, 1602, 1603, 1604, 1606, 1607, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 1637,
	0, 0, 1647, 0, 0, 0, 0, 0, 1627, 1629,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 1644, 0, 0, 0,
	0, 0, 0, 1614, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	1598, 1635, 1630, 1631, 1632, 1640, 1641, 1642, 0, 0,
	0, 0, 1620, 1626, 0, 0, 0, 0, 0, 0,
	1633, 1628, 0, 0, 0, 0, 0, 0, 1600, 0,
	0, 0, 0, 1621, 0, 1646, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 927, 0, 0, 1638, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 1623, 1624, 1625, 0, 0, 0,
	1636, 1638, 0, 1605, 1611, 1612, 1618, 1639, 1617, 1613,
	0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 1647, 0, 0, 0, 0,
	0, 1627, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 1644,
	0, 0, 0, 0, 0, 0, 1614, 1615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 1620, 0, 1611, 1612, 1618,
	1639, 1617, 1613, 0, 1610, 1608, 1609, 1601, 1602, 1603,
	1604, 1606, 1607, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632, 1640,
	1641, 1642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 1628, 0, 0, 0, 1626,
	0, 0, 1600, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632,
	1640, 1641, 1642, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 1638, 1633, 1628, 0, 0, 0,
	2860, 1616, 0, 1600, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3204, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 1623, 1624,
	1625, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 2865, 0, 0, 0, 1636, 0, 0, 0,
	1611, 1612, 1618, 1639, 1617, 1613, 0, 1610, 1608, 1609,
	1601, 1602, 1603, 1604, 1606, 1607, 1637, 0, 0, 1647,
	0, 0, 0, 0, 0, 1627, 1629, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 1643, 0, 1644, 0, 0, 0, 0, 0, 0,
	1614, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 1635, 0,
	1647, 0, 0, 0, 0, 0, 1627, 1629, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 1597, 1598,
	0, 1630, 1631, 1632, 1640, 1641, 1642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 1633,
	1628, 0, 0, 0, 1626, 0, 0, 1600, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 1638,
	0, 0, 0, 0, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617, 1613,
	0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 1623, 1624, 1625, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 1637, 0, 0, 1647, 0, 0, 0, 0, 0,
	1627, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 1644, 0,
	0, 0, 0, 0, 0, 1614, 1615, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 0, 1630, 1631, 1632,
	1640, 1641, 1642, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 1633, 1628, 0, 0, 0,
	2800, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 2827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 1638, 1597, 1598, 0, 1630, 1631, 1632,
	1640, 1641, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1628, 1637, 0, 0,
	1647, 0, 0, 1600, 0, 0, 1627, 1629, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 1635,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 1636, 0, 0, 0, 1611,
	1612, 1618, 1639, 1617, 1613, 0, 1610, 1608, 1609, 1601,
	1602, 1603, 1604, 1606, 1607, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 1637, 0, 0,
	1647, 0, 0, 0, 0, 0, 1627, 1629, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 1644, 0, 0, 0, 0, 0,
	0, 1614, 1615, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607, 0, 0, 0, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 1611, 1612, 1618, 1639, 1617,
	1613, 0, 1610, 1608, 1609, 1601, 1602, 1603, 1604, 1606,
	1607,
}
var sqlPact = [...]int{

	4849, -1000, -1000, -1000, -1000, 250, -1000, -1000, 248, 244,
	240, 237, 234, 228, 226, 225, 223, -1000, -1000, -1000,
	-1000, -1000, -1000, 222, -1000, -1000, 219, -1000, 217, 216,
	212, -1000, -1000, 208, -1000, 195, -1000, -1000, -1000, -1000,
	194, 190, 189, 74122, 73646, 74592, 2082, 89752, 78364, 1882,
	66524, 89276, 66048, 88800, 88324, 2445, 188, -1000, 87848, 187,
	186, 183, -1000, 87372, -1000, 1653, -1000, 182, 1676, 55074,
	181, 179, 178, 1967, 177, -1000, 172, 168, -1000, 8923,
	1564, -1000, 166, 164, -1000, 9085, 953, 77418, 163, 161,
	2124, 160, 158, 54597, 154, 149, 2002, 2639, -1000, -1000,
	1886, -1000, -1000, 148, 147, 145, 143, 142, 134, 133,
	131, 130, 128, -1000, 127, 126, 125, 124, 123, 119,
	115, 110, -1000, 109, 106, 103, 102, 101, 100, 99,
	98, 97, 96, 95, 94, -1000, 12412, 92, 1695, 1541,
	1533, 1529, 1528, 1526, 968, 88, 79, 74, 73, 72,
	70, 69, 65, 63, -1000, 62, 61, 59, 58, 57,
	56, 49, 48, 165, 44, 43, 39, 38, 33, 32,
	31, 3148, -1000, 1597, 751, 25899, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 95392, 90222, 29, -27, 27, -1000, 2989, 1010,
	45521, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 325, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 528, 1887, 761, -1000, -1000, -1000, 86902, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2080, -113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 760, -1000, 2071, 136,
	2001, -1000, -1000, -1000, -1000, -1000, 90222, -1000, 1007, -1000,
	-1000, 3426, 3425, 1844, 759, 86432, -1000, 1517, -1000, 930,
	27399, -1000, 1228, -1000, 27399, 324, -1000, -1000, -1000, -1000,
	-1000, -1000, 3424, 3421, 3420, 3418, -1000, -1000, 65572, 19845,
	65096, 64620, 85956, 19359, 73170, 72694, 85480, 60826, -1000, -1000,
	-1000, 1318, -1000, -1000, -1000, -1000, -1000, -1000, 4, 58396,
	3256, 90222, -1000, 311, -1000, -1000, -1000, -1000, -1000, -1000,
	39115, 596, 38603, 497, 38091, 352, -1000, -1000, -1000, 60340,
	-1000, 3414, 3413, 1080, 3412, 2943, 94922, 1612, 3411, 1688,
	1189, 3407, 3406, 3405, 3399, 3392, 3387, 1296, 85004, 2686,
	84528, 1538, 59854, 1006, 72218, 74592, 2421, 84052, 1283, 1262,
	-1000, -1000, -1000, -1000, 2795, 2638, 2597, 51283, -1000, -1000,
	3383, 3378, 3377, 3376, 3374, 94452, 1601, 3370, 2261, 3369,
	3368, 3366, 3365, 3364, 3363, 3362, -1000, 71742, 71266, 70790,
	3071, 83576, 70314, 83100, 59368, 37579, 745, -1000, -1000, -1000,
	47439, 5342, 5271, 82624, 49382, 74592, 74592, -1000, -1000, -1000,
	-1000, -1000, 37067, 506, 36555, 664, -1000, -1000, 47930, 2614,
	-1000, -1000, -1000, -1000, 36043, 355, 35531, 649, 90222, -1000,
	2659, 1745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2315, 1505, 3271, 58882, 1803, 1335,
	3025, 2794, 2778, 1426, 3361, 2328, 2776, 2768, 2767, 2759,
	2727, 1536, 2329, 263, 25387, 2651, 1610, 35019, 1411, 1424,
	2726, 2714, 3283, 1756, 1755, 1864, 64144, 3359, 3358, 2964,
	2711, 2699, 2612, -1000, -1000, -1000, -1000, 1403, -1000, -1000,
	-1000, -1000, -1000, 67464, -1000, -1000, 1179, -1000, -1000, 1179,
	-1000, -1000, -1000, -1000, -1000, 1216, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1597, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2107, -1000,
	1795, -1000, -1000, 2240, 2978, 2978, 2978, 3069, 512, 503,
	-1000, 165, -1000, -1000, 100913, -1000, -1000, 39615, 39615, 39615,
	39615, 39615, 39615, 39615, 1941, -1000, 757, -1000, -1000, 809,
	-1000, 756, 633, -1000, -1000, -1000, -1000, -1000, -1000, 755,
	-1000, -1000, -1000, -1000, -1000, -1000, 3256, -1000, 22327, -1000,
	-1000, -1000, 487, 752, 39615, -1000, -1000, 3299, 3298, 602,
	-1000, 309, 941, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2658, 750, 749, -1000, 747,
	746, 744, 743, 740, -1000, -1000, -1000, 738, 736, 734,
	733, 728, 727, 726, 724, -1000, 1781, -1000, -1000, -1000,
	-1000, -1000, -1000, 675, 674, 674, 674, -1000, 1000, -1000,
	-1000, -1000, 375, 673, 368, 672, 671, 669, 722, 719,
	714, 713, 708, 701, 700, 695, 694, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 997, -1000, -1000, -1000, -1000, -3, 90222,
	-1000, 528, -3, -1000, -1000, 693, -1000, 29411, 29411, 29411,
	-1000, -1000, 2069, 39615, -1000, 2218, -1000, 13, 13, 911,
	46471, -1000, 44553, 911, 239, 821, 50806, -1000, 2609, -1000,
	-1000, 691, 308, -1000, -1000, -1000, -1000, 20329, 2606, 90222,
	90222, 74592, 74592, 74592, 2877, 39615, -1000, -1000, 55544, 90222,
	75062, 3199, 56484, 55544, 90222, 2656, -1000, 74592, -1000, -1000,
	90222, -1000, 39615, -1000, 3190, 1501, 61784, 3116, -12, -1000,
	-1000, -1000, -1000, -1000, -1000, 2238, 2258, 1152, 2114, 1312,
	-1000, 27399, 2934, -1000, -1000, -1000, 307, 20329, -1000, -1000,
	-1000, -1000, -1000, 2048, 2848, 1336, -1000, 2108, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1540, 2843, -1000,
	1808, 2841, 1508, -1000, -1000, 1989, -1000, -1000, 2955, -1000,
	-1000, 1983, 2837, 14, -1000, -1000, 2343, -1000, -1000, 1806,
	-1000, -1000, 967, 2835, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 48898, 47930, 58396, -9, -1000, -1000, -1000,
	-1000, -23, -1000, 18873, 100913, -1000, -1000, -1000, -1000, 1580,
	100913, 881, -1000, -1000, 2834, -1000, 100913, 880, -1000, -1000,
	2833, -1000, 2655, -1000, -1000, -1000, -1000, 3357, -1000, 3356,
	2183, 3353, 3351, 3350, -1000, 1537, 1771, 3349, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 69838, 2068, -1000, -1000, 68886,
	-1000, 2179, -1000, 69362, 1005, -1000, 967, 2173, -1000, 74592,
	981, -1000, 3348, 3054, 2409, 967, 2172, -1000, -1000, -1000,
	-1000, -1000, 52702, -1000, 52702, -1000, 52702, -1000, 1435, -1000,
	93982, 13, 13, 3256, -1000, -1000, -1000, -1000, -1000, 2832,
	3347, 3346, 3345, -1000, 90222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 202, 2831, -1000, -1000, 202, 2830, -1000, 202,
	2829, -1000, 76942, -1000, -1000, 2066, 2822, -1000, 201, 2819,
	-1000, -1000, 198, 2818, -1000, -1000, -82, 2812, -1000, -1000,
	100913, -1000, -1000, -1000, -31, -1000, -1000, -1000, 1010, -1000,
	46948, -1000, 46948, 82148, 61310, 954, 737, 54120, 100913, -1000,
	-1000, -1000, -1000, 100913, -1000, -1000, -1000, -117, -1000, -1000,
	61310, 47930, 100913, -1000, -1000, -1000, -1000, 100913, -1000, -1000,
	-1000, 61310, 68886, -1000, 81672, 68416, -1000, -1000, 1291, 2321,
	-1000, -1000, -1000, 954, 61310, 61310, 61310, -1000, 81196, -1000,
	-1000, 1826, 1504, 2965, 1796, 74592, -1000, 1656, -1000, -1000,
	-1000, 2999, -1000, 2653, -1000, 56014, 76472, -1000, 76002, -1000,
	75532, -1000, 74592, -1000, 74592, -1000, 3344, 3343, 3342, -1000,
	3341, 2988, -1000, 100913, 2980, -1000, 3339, 3110, 2651, 100913,
	-1000, 2723, 1543, 1535, 90222, -1000, -1000, 90222, -1000, 90222,
	-1000, -1000, -1000, 1349, -1000, -1000, 2224, -1000, -1000, -1000,
	-1000, 74592, -1000, -1000, -1000, -1000, -1000, -1000, 2633, -1000,
	1559, -1000, 1637, -1000, 1289, -1000, -1000, 211, -1000, -1000,
	-12, -1000, 93512, -1000, 2240, -1000, 90222, -1000, 2244, 2622,
	2632, 1539, 2070, 2323, -1000, 34507, 2306, 42115, 2103, 165,
	-1000, -1000, 165, 165, 26899, -1000, -1000, 56484, 56484, 20329,
	1248, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615,
	39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615,
	39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615, 39615,
	39615, 39615, 39615, 39615, 39615, 39615, 2037, 39615, 1212, 39615,
	39615, 39615, 39615, 1876, -1000, -1000, 1711, 557, 1862, -1000,
	3255, 3255, 3255, 1071, 1071, 7002, 7002, 640, 3338, 809,
	-1000, 39615, -1000, 114, 39615, 20815, -1000, 503, 6805, 2134,
	-1000, 502, 21327, -1000, -1000, -1000, 22327, 633, 33995, 39615,
	992, 100913, -1000, -1000, 1482, 3266, 18389, 2696, 2508, 689,
	833, 774, 24875, 24363, 23851, 23339, 730, 39615, 39615, 39615,
	39615, 39615, 39615, 39615, 39615, -1000, -1000, 3275, -1000, 3266,
	-1000, -1000, -1000, -1000, 3266, 1239, 1223, 3266, -1000, 3266,
	3266, 2787, 2787, 33495, 32983, 32471, 42615, 31959, 39615, 22827,
	31447, 30935, -1000, 90222, -3, 3187, 39615, 116, -1000, 99522,
	-1000, 116, 116, 688, -32, 100913, 2291, 2291, 45996, 2211,
	1954, 1954, 1954, -1000, 911, 14488, 911, 80252, 1968, 911,
	911, 303, 322, 498, 44078, 2218, 80252, 781, 687, 26,
	24, 22, -1000, -1000, 21, 20, -1000, -1000, 74592, 684,
	20815, 20329, 302, 1323, -33, 2367, 2365, 2357, -1000, 2346,
	1636, -38, 1150, -30, -1000, 235, -39, -1000, 1253, 299,
	3266, -1000, -1000, -1000, -1000, -1000, 3337, 3336, -1000, 995,
	679, 676, 773, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 675, 674, 674, 674, -1000, 375, 673, 368, 672,
	671, 669, -1000, -1000, -1000, -1000, 2605, -23, 75062, -1000,
	-1000, 893, -41, 1085, -12, -1000, -1000, -1000, 61784, 1179,
	-1000, 1792, -1000, -1000, -1000, -1000, -1000, -1000, 1298, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 602, -1000, -1000, -1000,
	-1000, -1000, -1000, 3262, 3260, -6, -1000, -1000, 20329, -1000,
	-16, 1480, 1575, -1000, 63668, 2227, 2982, 2952, 1419, -1000,
	1328, 3068, 67464, 3141, 3191, 218, -1000, 2603, -1000, -1000,
	928, 1556, 1568, 1149, 67464, 1808, -1000, 56484, -1000, 2374,
	3060, 1275, 1333, 1275, 1275, 1327, -1000, 67464, 1502, 1147,
	-1000, 1144, -1000, -18, 3127, 3138, 93, -1000, 2602, 1142,
	-1000, -1000, 74592, 20329, 1449, 1442, 1496, 1132, -7, -1000,
	3121, 3120, 1131, 1130, -1000, 1587, -1000, 61310, 885, 2465,
	885, -9, 58396, 90222, 296, -1000, 114, 39615, 39615, 114,
	39615, 114, 3090, -1000, -1000, 2810, -1000, -1000, -1000, 3335,
	1739, 2256, -1000, -1000, 668, 2171, 2596, 90222, 2378, -10,
	74592, -1000, 2806, 1808, 2169, -1000, -1000, 67940, -1000, 2803,
	528, 592, 3334, -1000, 93042, -1000, 2984, 1257, 2793, 1039,
	542, 3183, -1000, 542, 53172, -1000, 90222, -1000, -1000, 90222,
	-1000, -1000, -1000, 3332, -1000, 74592, -1000, -1000, 74592, -1000,
	74592, -1000, 74592, 196, 2791, -1000, -1000, 90222, -1000, 74592,
	74592, -1000, 90222, 90222, 61310, 61310, 4886, 62728, -46, -47,
	479, -1000, 80726, 90222, 1038, 63198, 90222, 2922, 963, 47930,
	-1000, -52, -117, 2462, 954, 954, 885, -1000, 885, -1000,
	74592, 2628, -1000, 954, 954, 954, -1000, -1000, -1000, -1000,
	3330, 3329, -1000, -1000, -1000, 965, 74592, 90222, 74592, -1000,
	-1000, 90222, -1000, 90222, -1000, 965, 90222, 965, 90222, 965,
	90222, -1000, -1000, -1000, -1000, -1000, -1000, 114, 39615, -1000,
	-1000, 3328, 1456, -1000, 2627, -1000, 2625, -1000, 52, -1000,
	-1000, -1000, -1000, -1000, 2010, 74592, 74592, 74592, 74592, 90222,
	74592, -1000, 67464, -1000, 2244, 2622, -1000, -1000, -1000, -1000,
	-1000, -1000, 1282, 2015, -1000, 2314, -1000, 1372, -1000, -1000,
	-1000, 100913, 43099, -1000, -1000, 100913, 1627, -1000, 41615, 41115,
	-1000, -1000, 1488, 74592, 2377, -1000, 2377, -173, -1000, 99206,
	2311, 74592, -1000, -1000, -1000, -1000, -1000, 927, 864, 864,
	1206, 1206, 1206, 1206, 3095, 2216, 4202, 556, 7525, 7525,
	6824, 6824, 6824, 6824, 6824, 7525, 396, 1071, 1071, 396,
	396, 396, 396, 396, 1071, 1071, 1071, 7525, 7525, 7525,
	7002, 4331, 8397, 39615, 39615, 1128, 1709, 557, 7442, 39615,
	8433, 8433, 8433, 8433, -1000, 1879, -1000, -1000, -1000, -1000,
	2588, 667, 42615, 42615, -1000, -1000, -1000, -1000, 21827, 39615,
	-1000, -1000, -1000, -1000, 30423, -1000, -1000, 98845, -273, 478,
	-166, 5, -1000, 39615, 39615, 39615, 477, -1000, 276, 39615,
	90222, -1000, 13902, 778, -90, -1000, -54, 1345, -1000, 39615,
	-1000, -1000, 1126, -1000, 1124, 1123, 1120, -1000, 666, 476,
	-1000, 268, -1000, 1943, 662, 660, 39615, -1000, -1000, -1000,
	-1000, -1000, 98531, -1000, -1000, 98487, -1000, -1000, 98173, -1000,
	-1000, 98129, -1000, -1000, -1000, 100753, 13463, 13381, 12685, 5849,
	12036, 11239, -55, 473, -64, 470, 926, 924, 464, 462,
	461, -66, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-69, 460, -1000, 2568, -166, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 459, -1000, 458, -1000, 100527, -166, 454,
	7360, -1000, 42615, 42615, 42615, -1000, 450, -1000, 99289, -1000,
	100213, 29923, 29923, 29923, 447, 100162, 39615, -166, -71, -1000,
	-72, -1000, -1000, 537, -77, 970, 29411, 45044, 20329, -1000,
	970, 970, 39615, -1000, 39615, 2338, -1000, -1000, -1000, 2336,
	2028, 2291, 45996, -1000, -1000, -1000, -1000, 80252, -1000, 3256,
	2820, -1000, 80252, -1000, -1000, 90222, 528, -1000, 80252, 80252,
	20329, 911, -1000, 911, 80252, 620, -1000, -1000, -1000, -1000,
	-1000, 446, 49856, 5, 265, 20329, 967, -1000, 2400, 2400,
	2400, 2400, -1000, -1000, 90222, 3223, -1000, 1798, -1000, 56484,
	-1000, 806, 1164, 20329, -1000, -1000, -1000, 658, -1000, 3266,
	3266, -1000, 3266, 90222, 105, 27399, -1000, 1179, -1000, -1000,
	1444, -1000, 1742, -1000, 1221, -1000, -1000, -1000, -1000, 27399,
	-1000, 1860, 90222, 90222, 74592, -1000, 90222, -1000, 2165, 92572,
	2158, 56484, 90222, -1000, -1000, 657, 656, 2299, 2288, 1033,
	90222, 90222, 2279, 92102, 91632, 90222, 1848, 39615, 1959, 1809,
	114, 114, -1000, -1000, 114, 653, 1242, 74592, 74592, 90222,
	74592, 1452, -1000, -1000, -1000, -1000, -1000, 66994, -1000, -1000,
	3272, 3268, -1000, 1275, -1000, -1000, -1000, 1275, 1808, 1434,
	90222, 74592, 90222, 1811, 114, 114, -1000, -1000, 114, 645,
	20329, 1731, -1000, 2637, 90222, 3296, 90222, 90222, 90222, 57926,
	2973, 91162, 90222, 90222, 57926, 1587, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 57452, 1046, 967, 959, 47930, 2428, -1000,
	-1000, 17905, -1000, 100913, 100913, -1000, 100913, -1000, 55544, 90222,
	-1000, 1004, 90222, 63198, 937, 2789, 52232, -23, 954, 61310,
	74592, -10, 90222, -1000, 1808, 2784, 528, 2157, -1000, 61310,
	3179, 643, 3327, 3326, -1000, 2065, 2151, -1000, -1000, 90692,
	2859, 855, 90222, 970, 45996, 1746, -1000, 50332, 1018, 90222,
	1674, 89, -1000, -1000, -1000, 36, 90222, -1000, 3325, -1000,
	-1000, 202, 202, 202, -1000, 74592, 74592, 2066, -1000, 201,
	-1000, 198, -1000, -82, -1000, -1000, 4886, 4886, 954, -190,
	639, -1000, 903, 902, 48414, 61310, -79, -1000, -1000, -1000,
	-1000, -1000, 74592, 90222, 703, 2405, 90222, -84, -1000, 258,
	635, -1000, 2743, -1000, -1000, 963, 47930, 2567, -1000, -1000,
	985, -1000, 1261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10, -23, -23, -1000, 965, -1000, 965, -1000,
	965, -1000, 100913, -1000, -1000, 1446, 1439, 90222, -1000, 20329,
	90222, 74592, 20329, 74592, 2621, 2620, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1056, -1000, 1627, 2011, -1000, 633,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2221,
	-1000, -11, 26899, 2109, -1000, -1000, 74592, 9, 39615, 39615,
	6417, 5959, 39615, 42615, 42615, -1000, 39615, 4639, -1000, -1000,
	-1000, -1000, -1000, 2566, 628, 39615, 56484, 5902, 5763, -1000,
	444, 10733, 396, -1000, 39615, -1000, 441, 28911, -1000, 99615,
	-44, -93, -1000, 14985, -166, -94, -1000, -1000, 805, -1000,
	2827, -1000, 39615, 99848, 2201, 2074, 1585, 1468, 3266, 3295,
	17421, -1000, 53646, 989, 1974, 97815, -1000, -1000, -1000, -1000,
	56484, 56484, 39615, 39615, -1000, 39615, 39615, 39615, -1000, -1000,
	-1000, 3266, 920, -1000, -1000, -1000, 920, -1000, -1000, 1275,
	-1000, 1275, -1000, 39615, -1000, -1000, 2565, 39615, -1000, 56484,
	56484, 42615, 42615, 42615, 42615, 42615, 42615, 42615, 42615, 42615,
	42615, 42615, 42615, 42615, 42615, 42615, 42615, 42615, 42615, 42615,
	2375, 42615, 3245, 3245, 3245, -1000, 2618, 2565, 39615, 39615,
	56484, 439, 438, 437, -1000, 39615, -166, -1000, -1000, 4886,
	615, -1000, 2209, -1000, 2507, -1000, 39615, -1000, -78, -1000,
	2218, -1000, -1000, 2507, 2507, -99, 100913, 45996, 45996, -1000,
	610, 39615, 2327, -1000, -1000, 777, -266, -1000, 901, -1000,
	-1000, -1000, -1000, -1000, 528, -1000, -1000, -1000, 256, 80252,
	80252, 772, -1000, -101, -1000, -1000, -106, -1000, 3167, 436,
	20329, -1000, -1000, 2954, -1000, -1000, -1000, -1000, -1000, -1000,
	-23, 1994, 3294, -1000, 3267, 796, 768, 236, 3266, 435,
	434, 433, -23, 90222, -1000, -12, -1000, -1000, -1000, 39615,
	-1000, -1000, 2971, 1117, 1114, -1000, -1000, 2783, -1000, 2149,
	-1000, 1023, -1000, 1766, -1000, 39615, 39615, 607, 604, 3324,
	1681, 3323, 1035, 2756, 2066, 2755, 2066, -1000, -1000, 922,
	-1000, 100913, 601, 599, -1000, -16, 1460, 1495, 979, -1000,
	-1000, 39615, 39615, 79782, -1000, 418, 2955, 8, -1000, -1000,
	1494, 1112, -1000, -1000, -1000, -1000, 1808, 1489, 1111, -1000,
	-1000, -1000, -1000, 969, -1000, -1000, 39615, -1000, -18, 1110,
	3124, 2147, 74592, 1109, -1000, 1108, -1000, -1000, -1000, -1000,
	-1000, -1000, 3118, 2066, 2752, 1129, -1000, -1000, -1000, -1000,
	-1000, 56968, -1000, -1000, 2266, 885, 959, 2562, -1000, 2373,
	3320, 74592, 3319, 420, -107, -20, 56484, 3165, -1000, 2013,
	632, 74592, 918, -1000, 3256, -1000, -1000, -1000, -1000, 74592,
	3164, 2748, 967, 114, 3293, -1000, -1000, 74592, 2747, 2055,
	2146, 2245, 855, 62258, -1000, 967, 1973, -48, -1000, 1674,
	28399, 2960, -112, -1000, -1000, -1000, 970, 53172, 45996, 39615,
	3318, -114, -1000, -1000, -1000, -1000, -1000, 196, -1000, -1000,
	-1000, -1000, -1000, -1000, 78838, 78838, 61310, 61310, 61310, 954,
	90222, 90222, 63198, -1000, 598, 90222, 90222, 595, -1000, 90222,
	90222, 3315, 61310, -22, 594, -1000, 900, 899, 896, -1000,
	-1000, -1000, -1000, -1000, -1000, -117, 114, -1000, 1986, 74592,
	16937, -1000, -1000, -1000, -1000, -1000, 965, -1000, -1000, 1820,
	2097, 1820, 1663, 1660, -1000, 2009, -1000, -1000, -1000, -1000,
	2331, 2985, 20329, 3109, 8433, 39615, 39615, 4234, 4680, 500,
	8433, 39615, 39615, 56484, 7726, -115, 39615, 39615, -1000, 39615,
	765, 100913, 3291, 39615, 411, 397, -1000, -1000, -1000, 3264,
	-1000, -1000, -1000, 100913, 39615, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 394, -1000, 53, -1000, -1000, -1000, 95862, -1000,
	39615, 393, 3058, -1000, 382, 381, 9639, 298, 97771, 97457,
	97413, 373, -1000, -1000, 372, 370, 100913, 2618, 100913, -1000,
	-1000, 925, 925, 1295, 1295, 1295, 1295, 3245, 879, 952,
	413, 3483, 3483, 3483, 857, 795, 795, 3483, 3483, 3483,
	2560, 2260, 593, 7405, -1000, -1000, 100913, 100913, 361, -1000,
	-1000, -1000, -166, 358, 4886, -1000, 2501, 3052, 100913, -1000,
	45996, 2501, 2501, -1000, -1000, 2028, 90222, 100913, 45996, -1000,
	2820, -1000, 15480, -1000, 20329, -1000, -1000, -1000, -1000, 3256,
	-1000, 49856, -1000, 591, -1000, 37, 2954, -1000, 894, -1000,
	-1000, -1000, 763, 3313, 784, 20329, 349, -1000, -1000, -1000,
	-23, 100913, 90222, 90222, 90222, 2746, -1000, 2919, -1000, 1033,
	97099, -120, -1000, 99206, 39615, 90222, -1000, -1000, 1683, 2344,
	1073, -1000, 3002, 90222, -1000, 90222, -1000, -1000, 90222, 90222,
	74592, 90222, 2717, -121, 100913, -25, -1000, 883, -1000, 1320,
	-1000, 16453, 90222, 74592, 90222, 74592, 2716, -122, 20329, -1000,
	3289, 3287, 2734, 3006, 3285, 90222, -1000, 90222, 74592, 2921,
	-1000, -1000, -26, 588, -1000, 878, -1000, -1000, 872, 959,
	-1000, 61310, 47930, -1000, 528, -1000, 2395, -1000, 77888, 2021,
	114, -1000, 3312, 79312, 586, -1000, 1982, -1000, 731, 1808,
	114, 74592, -1000, -1000, 347, -28, -1000, 1029, 20329, 74592,
	2729, 2248, 855, 62258, -1000, 1257, 2323, -1000, -34, -1000,
	559, 114, 1973, -1000, -48, 100913, -1000, 861, -1000, -1000,
	-123, -1000, -1000, 338, -1000, 2920, 2913, -1000, 2492, 39615,
	585, 583, 90222, 2912, -1000, -1000, -128, 2813, 2813, 61310,
	47930, 61310, 963, -1000, 2167, -1000, -1000, -1000, -1000, -1000,
	20329, 1514, -1000, 581, 577, -1000, -1000, -1000, -1000, 2985,
	8433, 8433, 39615, 39615, 39615, 8433, 7726, -131, -1000, 8433,
	8433, -166, -1000, -1000, 99615, -1000, -1000, -1000, 100913, -1000,
	15969, 1823, -1000, 97055, -1000, 26899, -1000, -1000, 39615, 39615,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42615, 2544,
	576, 56484, -1000, -1000, 335, 987, 39615, 39615, 2218, 987,
	987, -1000, -136, -1000, -1000, -1000, 3256, 37, -1000, -1000,
	3309, 20329, -1000, 61310, 783, -1000, 3308, -1000, -1000, -1000,
	-1000, -1000, 90222, -1000, 90222, -1000, 20329, 90222, 2519, 2141,
	-1000, -1000, 2278, 565, 42615, 74592, 863, -1000, 3211, 2481,
	1678, 39615, 2109, -138, -144, 2122, -1000, -1000, 2120, 39615,
	-1000, 56484, 564, 2066, 2066, -145, -146, -1000, -1000, 39615,
	1106, 90222, 27899, -1000, 3307, 2955, -1000, -1000, -1000, -1000,
	39615, 1104, -1000, -1000, -1000, 3281, 2066, 20329, -1000, 2066,
	2066, 3006, 1072, 2148, 2148, 61310, 47930, -1000, -82, 959,
	3161, 1811, 2456, -1000, -1000, -1000, -1000, 2277, -1000, -1000,
	90222, 2272, 955, -1000, -154, -1000, 858, 856, 63198, 937,
	932, -1000, -1000, -1000, 528, -1000, 3279, 561, 90222, 2046,
	560, 20329, -1000, 855, 62258, -1000, 2859, 1674, -1000, 2869,
	90222, 2950, -1000, 2323, 557, -1000, 954, 555, 554, 2145,
	2145, -156, 39615, 39615, -161, 553, 954, -1000, -163, -1000,
	-1000, -1000, -1000, -89, -1000, 828, 827, -1000, -1000, 74592,
	74592, 39615, 39615, -1000, 8433, 8433, 8433, -1000, 334, -1000,
	-1000, 1973, 3047, -1000, -95, 96741, 96697, 6885, 42615, 56484,
	-164, -1000, -1000, 90222, 100913, -166, -1000, -1000, -1000, 621,
	-1000, -1000, 3306, -1000, -1000, 1908, -1000, -1000, -1000, 90222,
	2128, -1000, 1031, 39615, 7405, 544, 39615, -1000, 3159, -1000,
	2386, 2555, 2395, 541, -1000, -1000, -1000, -1000, -1000, 1028,
	1702, -1000, -1000, 100913, 3006, 39615, -1000, -1000, 540, 538,
	100913, 534, 853, 2541, -1000, -1000, -1000, 100913, 532, 3124,
	-1000, -1000, -1000, -1000, 2066, 74592, -1000, -170, -1000, -1000,
	1712, 114, 937, -1000, 1869, 2021, 531, -1000, -1000, 2032,
	2360, -1000, 79312, 27399, 27399, 328, 3158, 932, -1000, 3252,
	-1000, 3156, -1000, 39615, -1000, 74592, 39615, 2045, 62258, -1000,
	2245, -1000, 1230, -172, 90222, 1674, -1000, -1000, 61310, 61310,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1028, -175, -177, -1000, 61310, -1000, -1000, 2167, -1000,
	90222, -1000, 90222, -1000, -1000, -180, -187, -1000, 1812, 39615,
	26899, -1000, -1000, 6885, -192, -1000, -141, -1000, 3155, -1000,
	-1000, -1000, -1000, 2728, 2495, 96383, 2217, 90222, 96339, -1000,
	2547, -1000, -1000, 1811, 90222, 2395, 2489, 74592, 1030, -193,
	1820, 1820, 39615, 26399, 1831, 39615, -1000, -1000, 3006, -1000,
	2525, 3248, -1000, 2032, 74592, 90222, -1000, 2994, -1000, 2909,
	-1000, -1000, -1000, 2395, 114, -1000, -1000, 114, -194, 1029,
	-205, 74592, -1000, 2248, 1383, -1000, 970, -1000, -1000, -208,
	-213, 1678, 1028, 970, -214, -1000, -215, -216, -1000, -1000,
	167, 40615, 40615, 40615, -166, -173, -1000, 90222, 529, 2704,
	958, -1000, 2034, 1650, 107, 1016, -1000, -1000, 2481, -221,
	-1000, 957, 528, -1000, 39615, 1028, -224, -1000, 1017, -227,
	-1000, 1013, -229, -1000, 2538, -1000, -232, 2066, 956, 3088,
	-1000, -1000, -1000, -1000, 527, -234, -1000, -1000, 2113, -1000,
	1811, 955, -1000, 1028, 523, 1678, 522, -1000, 53172, -1000,
	954, 954, 2395, 1678, -1000, 954, -1000, -1000, -1000, 2796,
	-1000, 43583, 1972, 1642, 98889, 2796, 2796, -1000, -1000, 90222,
	3078, -1000, 2044, 2038, 1391, -1000, -1000, -1000, -1000, -1000,
	-1000, 970, -1000, 3075, 2217, 100913, 2395, -1000, 1820, 2447,
	-1000, 1820, 2537, -1000, 1830, -1000, -1000, -1000, 2722, 3249,
	90222, -1000, 90222, 1632, 1544, 3304, 937, 2032, 1678, 39615,
	2395, 39615, -226, -1000, -1000, 1811, 2395, -1000, -1000, 1595,
	3196, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 852,
	-1000, 2888, -1000, 1053, 1924, 1924, -1000, 848, 2034, -1000,
	-1000, 519, -1000, 516, -1000, 1614, -1000, -1000, -235, -1000,
	-1000, 3303, -1000, 2032, -1000, 2395, -240, 1811, -243, -1000,
	970, 1811, 1641, -1000, -1000, 1962, 40115, 39615, -1000, 3228,
	-1000, -1000, 2290, -1000, 39615, 2481, 39615, 39615, 1978, 2035,
	-1000, -1000, 1811, 1028, 946, 1678, -1000, 970, -1000, -1000,
	-1000, 100913, -1000, -1000, -1000, 100913, -1000, -245, -248, 51758,
	-1000, -1000, -1000, 946, 1678, 970, 515, 2395, -1000, 1811,
	1101, -190, 78838, 970, 2395, -1000, 1811, -1000, 514, -250,
	-1000, 1811, 946, 39615, -1000, 946, 970, -258, 970, -1000,
	1811, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4064, 4063, 4062, 4061, 4059, 4058, 4048, 4046, 4038,
	4036, 4035, 4031, 4029, 4025, 4024, 4022, 4021, 4020, 4019,
	4016, 4015, 4014, 4013, 4012, 4009, 4008, 4006, 4001, 3999,
	3998, 3997, 3995, 3993, 3981, 3980, 3978, 3977, 3976, 3975,
	3974, 3972, 3971, 3970, 3969, 3965, 3962, 3960, 3959, 3957,
	3956, 3953, 35, 3951, 3950, 3949, 3947, 3945, 3944, 3942,
	3941, 3940, 3936, 3931, 3929, 3927, 3926, 3924, 3921, 3919,
	3918, 40, 3917, 236, 3915, 3914, 3913, 3907, 3906, 3905,
	3904, 3902, 3901, 3900, 3899, 3897, 235, 3896, 125, 3893,
	3892, 3888, 3887, 3885, 234, 3881, 3879, 3871, 3870, 242,
	3869, 3867, 3864, 3862, 3857, 3856, 3853, 3852, 3848, 59,
	131, 3847, 3846, 86, 3845, 3841, 3839, 3837, 3834, 3828,
	3825, 3824, 3822, 3821, 216, 3816, 233, 3815, 3814, 3812,
	3811, 3810, 3808, 3806, 3805, 3803, 3799, 3797, 3796, 3793,
	3792, 3791, 3785, 3781, 3780, 3779, 3776, 3774, 3773, 3772,
	3769, 3766, 3764, 3763, 3760, 3759, 3758, 3757, 244, 151,
	3754, 3748, 232, 231, 3747, 3744, 3741, 3739, 3738, 104,
	10, 48, 3736, 3733, 64, 56, 73, 82, 88, 84,
	3732, 90, 3730, 121, 42, 3729, 7, 5, 274, 197,
	8610, 195, 3724, 3723, 3722, 217, 166, 3721, 203, 3720,
	3711, 3707, 3703, 72, 71, 158, 148, 146, 144, 248,
	3701, 3700, 85, 51, 38, 32, 3699, 3694, 3682, 3034,
	102, 3681, 230, 199, 135, 3679, 3675, 3672, 929, 3667,
	34, 3666, 174, 61, 106, 58, 99, 3665, 124, 23,
	3663, 161, 50, 3662, 129, 78, 69, 8411, 6890, 3661,
	109, 67, 105, 537, 157, 155, 170, 210, 177, 182,
	179, 152, 110, 3659, 224, 3658, 3155, 60, 140, 3657,
	3656, 3645, 63, 167, 87, 3643, 3642, 46, 1, 18,
	24, 147, 28, 98, 14, 3641, 9, 3640, 3639, 3638,
	3636, 26, 138, 3635, 240, 3634, 44, 39, 22, 3632,
	37, 184, 3630, 201, 107, 3628, 3627, 222, 173, 162,
	3625, 75, 189, 3624, 3622, 3619, 3618, 3615, 117, 21,
	113, 3614, 3613, 118, 198, 168, 3612, 47, 3606, 145,
	89, 108, 239, 130, 188, 91, 186, 156, 191, 3604,
	3602, 3600, 159, 3599, 3598, 185, 139, 3596, 3595, 172,
	243, 33, 62, 196, 52, 164, 134, 3594, 171, 3592,
	3591, 3588, 245, 160, 183, 12, 6, 80, 103, 31,
	15, 193, 128, 214, 97, 3587, 4908, 1794, 66, 3586,
	3581, 120, 95, 49, 101, 141, 229, 55, 3579, 3578,
	1910, 3574, 3571, 3570, 3569, 154, 3567, 3566, 3563, 119,
	127, 219, 3561, 83, 81, 13, 122, 206, 241, 96,
	187, 180, 218, 3559, 149, 3558, 77, 100, 3556, 169,
	207, 3555, 3554, 153, 3553, 123, 1410, 43, 126, 3551,
	194, 3550, 3548, 3547, 3541, 3540, 3537, 3535, 819, 192,
	3533, 3532, 3531, 114, 165, 3530, 226, 208, 143, 74,
	36, 3529, 76, 2669, 3526, 220, 204, 57, 3525, 53,
	41, 0, 10685, 9558, 6690, 9904, 3524, 2155, 3523, 3521,
	3516, 181, 132, 3514, 3512, 3508, 92, 3507, 54, 3505,
	3504, 45, 3503, 17, 4, 8, 19, 16, 839, 136,
	3502, 3500, 93, 111, 115, 3498, 238, 190, 3496, 3493,
	3486, 3482, 79, 3479, 29, 3478, 27, 3476, 3474, 30,
	2, 20, 3473, 3470, 200, 3468, 215, 3467, 133, 3466,
	3138, 112, 3465, 3464, 228, 68, 3463, 223, 3458, 3043,
	3458, 3456, 3455, 11, 3453, 3451, 205, 150, 178, 3449,
	137, 3448, 142, 3447, 3443, 3442, 221, 3441, 3440, 25,
	3439, 3, 3437, 3435, 175, 2919, 3432, 3431, 65, 3429,
	163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 524, 524, 21, 33, 22, 34, 15, 525, 525,
	525, 525, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 523, 523, 208, 208, 207, 202, 202, 526,
	526, 209, 209, 209, 211, 211, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 427, 427, 427, 540, 540,
	540, 541, 541, 542, 542, 542, 542, 542, 112, 112,
	41, 41, 41, 41, 518, 518, 174, 174, 174, 176,
	176, 175, 175, 175, 175, 62, 62, 532, 532, 533,
	533, 531, 530, 530, 534, 534, 534, 173, 173, 173,
	108, 108, 108, 108, 109, 109, 110, 110, 177, 177,
	177, 179, 179, 178, 178, 178, 178, 178, 178, 178,
	178, 183, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 90, 90, 459, 459, 460, 460, 168, 168, 169,
	169, 169, 169, 170, 170, 171, 171, 171, 55, 180,
	180, 182, 182, 181, 181, 43, 43, 43, 43, 43,
	43, 43, 44, 44, 44, 44, 44, 45, 45, 45,
	45, 45, 45, 46, 46, 46, 46, 46, 46, 53,
	53, 53, 53, 159, 159, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 544, 544, 545, 545, 546, 546, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 68, 68, 293, 293, 265,
	265, 69, 69, 69, 70, 70, 71, 71, 57, 57,
	516, 516, 308, 308, 418, 418, 73, 73, 328, 328,
	74, 74, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 75, 75, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 83, 83, 83,
	84, 84, 84, 81, 81, 81, 78, 78, 78, 77,
	77, 77, 82, 82, 82, 256, 256, 80, 80, 80,
	258, 258, 79, 79, 79, 309, 309, 85, 85, 85,
	85, 266, 86, 86, 86, 86, 86, 86, 86, 86,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 420, 420, 87, 87, 87, 388, 388,
	91, 91, 91, 343, 343, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 111, 111, 111, 111, 520, 520,
	301, 301, 222, 222, 222, 222, 101, 101, 101, 101,
	102, 102, 102, 103, 103, 164, 164, 118, 118, 118,
	118, 118, 117, 117, 117, 117, 117, 117, 47, 47,
	47, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 52, 52, 52, 120, 120, 537, 537, 122, 119,
	119, 119, 121, 121, 121, 121, 123, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 452, 452, 317,
	317, 450, 450, 468, 468, 451, 451, 270, 270, 270,
	270, 270, 271, 271, 271, 458, 458, 458, 458, 458,
	458, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 165, 165, 166, 167, 167, 167, 167, 146, 146,
	146, 158, 158, 158, 158, 158, 158, 158, 149, 149,
	149, 136, 136, 127, 127, 127, 127, 127, 131, 131,
	131, 131, 131, 131, 131, 131, 128, 128, 138, 138,
	138, 138, 138, 132, 132, 133, 133, 135, 135, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 129, 129,
	129, 129, 140, 140, 140, 140, 350, 350, 350, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	157, 157, 157, 157, 157, 157, 535, 535, 536, 536,
	153, 153, 153, 153, 153, 153, 402, 402, 147, 147,
	147, 147, 152, 152, 152, 152, 333, 333, 144, 144,
	144, 145, 145, 145, 150, 150, 151, 148, 148, 154,
	154, 154, 154, 130, 130, 130, 548, 548, 548, 155,
	155, 143, 143, 156, 156, 156, 156, 156, 156, 156,
	156, 142, 142, 142, 141, 141, 141, 141, 134, 517,
	517, 514, 514, 514, 514, 514, 514, 514, 514, 515,
	515, 519, 519, 96, 96, 96, 96, 96, 104, 104,
	104, 104, 104, 97, 97, 97, 97, 97, 99, 99,
	98, 98, 98, 98, 63, 63, 63, 14, 14, 14,
	64, 64, 186, 186, 186, 187, 187, 278, 278, 278,
	278, 184, 184, 185, 185, 65, 65, 549, 549, 549,
	527, 527, 527, 528, 528, 528, 528, 528, 528, 272,
	272, 273, 273, 368, 368, 368, 368, 368, 276, 276,
	276, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	279, 279, 210, 210, 210, 282, 283, 283, 280, 280,
	281, 281, 281, 285, 285, 284, 287, 287, 286, 367,
	477, 477, 479, 479, 479, 479, 479, 479, 479, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	550, 550, 475, 475, 475, 476, 471, 471, 472, 472,
	472, 472, 472, 274, 274, 275, 275, 275, 275, 473,
	474, 299, 299, 405, 478, 478, 480, 480, 482, 551,
	551, 551, 551, 551, 551, 552, 552, 552, 366, 366,
	365, 365, 291, 291, 483, 483, 483, 483, 484, 484,
	484, 484, 484, 487, 486, 485, 485, 485, 485, 485,
	67, 67, 67, 330, 330, 329, 329, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 161, 161, 225, 225, 61, 61, 61, 12,
	12, 12, 529, 529, 529, 66, 66, 66, 66, 66,
	224, 224, 224, 224, 224, 224, 522, 522, 521, 521,
	226, 226, 554, 554, 72, 72, 72, 72, 72, 72,
	72, 421, 421, 422, 422, 60, 60, 60, 60, 60,
	351, 351, 349, 349, 348, 348, 298, 298, 404, 230,
	230, 203, 203, 203, 26, 19, 19, 24, 24, 37,
	37, 40, 40, 36, 36, 38, 38, 32, 32, 538,
	538, 539, 539, 100, 100, 105, 105, 105, 105, 105,
	106, 106, 106, 106, 107, 107, 107, 107, 116, 116,
	160, 160, 160, 160, 160, 160, 160, 42, 42, 42,
	42, 54, 54, 54, 54, 114, 556, 556, 556, 115,
	115, 115, 555, 555, 223, 223, 362, 362, 363, 363,
	557, 557, 364, 364, 364, 364, 217, 216, 218, 218,
	59, 59, 59, 212, 212, 213, 213, 214, 214, 215,
	215, 558, 558, 94, 94, 94, 163, 163, 264, 264,
	264, 358, 358, 358, 292, 292, 236, 236, 361, 361,
	359, 359, 359, 359, 327, 327, 327, 162, 162, 306,
	306, 319, 319, 320, 320, 415, 415, 321, 113, 113,
	190, 190, 188, 188, 188, 188, 188, 188, 188, 188,
	195, 195, 196, 196, 197, 197, 198, 199, 199, 199,
	199, 310, 310, 200, 200, 200, 189, 189, 189, 191,
	191, 191, 191, 191, 191, 191, 194, 194, 194, 194,
	201, 201, 201, 193, 193, 494, 494, 494, 496, 496,
	498, 498, 497, 497, 493, 493, 495, 495, 553, 553,
	332, 332, 332, 289, 290, 288, 288, 296, 296, 294,
	295, 295, 297, 297, 403, 403, 403, 204, 204, 204,
	324, 324, 324, 324, 325, 325, 354, 354, 352, 352,
	352, 352, 353, 353, 355, 355, 355, 356, 356, 357,
	357, 323, 323, 384, 384, 192, 192, 192, 303, 303,
	303, 304, 304, 374, 374, 374, 374, 374, 374, 375,
	375, 373, 373, 373, 373, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 407, 408, 408, 305, 305, 409,
	360, 360, 512, 512, 512, 513, 513, 401, 401, 410,
	410, 410, 410, 410, 410, 399, 399, 400, 400, 416,
	417, 417, 336, 336, 336, 336, 334, 334, 337, 337,
	337, 337, 335, 335, 411, 411, 411, 411, 326, 326,
	412, 412, 412, 412, 413, 369, 370, 370, 423, 423,
	423, 423, 425, 302, 302, 302, 302, 302, 470, 469,
	469, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	439, 439, 439, 439, 439, 439, 439, 439, 440, 440,
	440, 440, 440, 440, 426, 426, 426, 426, 426, 430,
	430, 430, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 431, 431, 436, 436, 437, 437, 437,
	432, 433, 438, 438, 438, 438, 559, 559, 442, 442,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 428,
	428, 428, 435, 435, 435, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 344, 344,
	346, 346, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 378,
	378, 378, 378, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 488, 488,
	488, 488, 488, 488, 488, 488, 380, 380, 491, 491,
	492, 492, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 499, 499, 500, 500, 502, 502, 503, 503, 504,
	505, 505, 505, 506, 507, 507, 501, 501, 508, 508,
	508, 508, 509, 509, 510, 510, 510, 510, 510, 511,
	511, 511, 511, 511, 390, 390, 391, 391, 397, 397,
	397, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 227, 227, 227,
	227, 227, 315, 315, 313, 313, 313, 316, 316, 314,
	314, 312, 312, 311, 311, 387, 387, 385, 385, 389,
	389, 338, 338, 441, 441, 441, 441, 441, 441, 441,
	441, 339, 339, 339, 347, 340, 340, 341, 341, 341,
	341, 341, 381, 382, 342, 342, 342, 383, 383, 392,
	396, 396, 395, 394, 394, 393, 393, 371, 371, 372,
	372, 322, 322, 560, 560, 318, 318, 414, 414, 414,
	414, 268, 268, 307, 307, 267, 267, 259, 259, 260,
	260, 260, 260, 300, 300, 398, 398, 443, 443, 444,
	444, 445, 445, 446, 446, 447, 448, 449, 386, 386,
	246, 245, 233, 234, 244, 243, 242, 232, 235, 239,
	240, 241, 237, 238, 252, 251, 250, 257, 248, 249,
	419, 231, 261, 261, 262, 262, 262, 263, 263, 263,
	263, 228, 228, 229, 229, 253, 253, 254, 255, 255,
	247, 247, 247, 219, 219, 219, 220, 220, 221, 221,
	457, 457, 454, 454, 454, 455, 455, 455, 456, 456,
	456, 456, 453, 453, 453, 453, 453, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	462, 462, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 464,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	467, 467,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 2, 1, 1, 3, 1, 3, 2, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 8, 6,
	6, 6, 9, 4, 3, 2, 2, 0, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 4, 2,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 12, 3, 1, 0, 1,
	1, 2, 2, 1, 3, 3, 0, 5, 7, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 6, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 3, 4, 6, 3,
	1, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 2, 6, 4, 7, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 2, 1, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 10, 11, 7, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 6, 8, 6, 8, 6, 8, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	8, 11, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 8, 5,
	3, 4, 3, 0, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 514, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 91, 75, 140, 115, 123,
	178, 327, 363, 374, 355, 344, -121, -122, 391, -42,
	-54, -115, -114, 68, 116, 350, -4, -12, 28, 44,
	-44, -45, -46, 58, -61, -58, -68, -62, -543, 93,
	-495, -76, -79, -107, -547, 128, 147, 196, -97, -98,
	316, -102, -103, 357, -105, -106, 359, 148, -49, -48,
	142, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 395, -151, 449, 46,
	409, 77, 132, 367, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -494, -77, -78, -81, -83, -84, -80,
	-82, 356, -191, -189, 511, 463, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 481, 489, -194, -192, -193, -201, 383, 471,
	425, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, -266, 2, -248, -253, -254, -255, -247, -219, -464,
	-467, 4, -461, -465, 153, 205, 281, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 50, 52, 55, 56, 57, 58, 59, 63,
	68, 69, 74, 75, 76, 77, 78, 79, 80, 86,
	83, 84, 85, 88, 90, 91, 92, 94, 96, 97,
	105, 106, 107, 108, 110, 115, 116, 119, 114, 118,
	121, 122, 123, 126, 127, 128, 130, 131, 133, 134,
	135, 137, 138, 140, 141, 142, 145, 143, 432, 144,
	146, 147, 148, 149, 159, 160, 161, 166, 168, 172,
	173, 176, 177, 179, 183, 185, 186, 187, 188, 189,
	195, 196, 198, 199, 200, 201, 206, 207, 211, 208,
	217, 218, 222, 223, 224, 226, 230, 231, 232, 233,
	234, 235, 237, 239, 238, 241, 244, 245, 248, 249,
	250, 253, 254, 255, 256, 258, 259, 262, 260, 263,
	261, 265, 266, 267, 264, 270, 268, 272, 273, 274,
	279, 277, 275, 276, 283, 286, 193, 288, 289, 292,
	310, 296, 297, 298, 301, 302, 305, 308, 309, 311,
	312, 313, 314, 315, 316, 317, 318, 320, 321, 325,
	327, 328, 330, 332, 333, 334, 335, 336, 337, 338,
	341, 340, 342, 344, 350, 355, 352, 353, 354, 356,
	357, 358, 359, 361, 362, 363, 365, 366, 367, 368,
	370, 372, 373, 376, 377, 392, 393, 411, 374, 375,
	378, 379, 380, 381, 382, 386, 384, 385, 387, 388,
	389, 391, 394, 395, 397, 398, 399, 400, 401, 402,
	405, 407, 408, 409, 410, 412, 415, 416, 417, 418,
	413, 424, 421, 422, 426, 427, 428, 429, 430, 431,
	433, 435, 443, 444, 446, 449, 450, 451, 441, 453,
	454, 457, 458, 459, 462, 460, 461, 463, 465, 468,
	469, 470, 476, 475, 482, 483, 485, 486, 487, 35,
	47, 48, 51, 53, 64, 65, 66, 70, 111, 112,
	139, 150, 151, 162, 174, 175, 180, 182, 190, 191,
	192, 212, 213, 215, 220, 242, 285, 287, 303, 307,
	322, 323, 324, 326, 339, 369, 403, 414, 419, 436,
	437, 438, 439, 445, 447, 471, 472, 473, 477, 484,
	-266, 2, -248, 294, -241, 2, -219, -219, 327, 27,
	2, 27, 321, 385, 427, 429, 2, -520, -301, 2,
	27, -222, -219, 93, 178, 383, -241, 2, -520, -301,
	24, 2, -219, 2, -223, 2, 374, -219, 259, 2,
	514, 88, 250, 69, 369, 388, -124, 444, -123, 436,
	378, -125, -452, 2, 270, -219, 514, 514, 514, 27,
	-231, -219, 425, 205, 107, 422, 514, 2, 425, 313,
	475, 384, 107, 336, 205, 451, 378, -529, 365, 181,
	464, -518, 2, -514, 4, -465, -461, -260, -259, 425,
	430, 107, -255, -247, 504, -254, 514, 514, 514, 2,
	223, 224, 335, 334, 388, 389, 514, 514, 514, 376,
	2, 26, 61, 87, 90, 113, 149, 169, 172, 299,
	-544, 310, 333, 387, 424, 433, 446, -528, 410, 63,
	378, -527, -529, 259, 451, 126, -348, 107, 250, 177,
	458, 429, 427, 456, 119, 211, 461, 460, 514, 514,
	26, 61, 72, 90, 126, 149, 169, 172, -546, 310,
	333, 372, 387, 424, 433, 446, 2, 475, 384, 425,
	205, 107, 451, 378, -529, 376, 377, 331, -88, 2,
	511, 31, 30, 391, -183, 425, 216, 2, -219, 514,
	514, 2, 223, 224, 376, 377, 514, 514, 170, -514,
	2, 514, 514, 2, 223, 224, 376, 377, 216, 2,
	63, 380, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 2, -158, 388, 410, 187, 44, 69, 27,
	332, 74, 314, 108, 134, 179, 205, 206, 231, 87,
	88, -350, 43, 224, 223, 377, -535, 376, -402, 426,
	379, 385, 421, 235, 374, 444, 93, 465, 366, 487,
	336, 337, 143, 4, 107, 270, 390, 436, 250, 373,
	317, 79, 514, -553, 2, 425, -555, 2, 444, 444,
	2, -555, 2, -555, 2, -555, 2, -556, 444, 484,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, -189, -191, -190,
	514, 514, 514, 514, 514, 514, 514, -158, 388, 2,
	69, 27, -294, -296, 455, 214, 136, 300, -188, -190,
	2, -494, -450, 2, -376, -468, -378, 502, 503, 495,
	423, 62, 280, 488, -390, 113, 456, 294, -467, -379,
	-392, 139, 369, -316, 8, 9, 5, 6, 7, -228,
	-380, -386, 448, 152, 284, -263, 515, 10, 511, -491,
	-190, -391, 36, 182, 60, -454, -262, -229, -426, 215,
	-261, -247, -488, -489, 4, -461, -462, -455, -429, -437,
	-433, -434, -440, -219, -464, 72, 99, 100, 98, 103,
	102, 252, 251, 104, 101, 390, 464, 61, 35, 190,
	191, 220, 285, 192, 70, -490, 127, -463, 212, 213,
	403, 48, 339, 162, 112, 111, 287, 53, 51, 472,
	-438, 109, 436, 437, 438, 439, 174, 175, 150, 151,
	307, 324, 419, 445, 447, 180, 242, 95, 171, 210,
	194, 219, 221, 225, 243, 246, 271, 278, 282, 304,
	306, 364, 396, -559, 473, 414, 64, 65, -496, 340,
	-497, -241, -496, 514, 514, 516, 514, -288, -289, -290,
	2, 27, 124, 511, 2, -406, 2, -407, -411, -190,
	236, -410, 511, -408, 509, -248, 295, -492, 370, -488,
	-489, -228, -247, -262, 4, -461, -463, 513, -291, 511,
	107, 425, 73, 205, -343, 511, -219, 27, 294, 440,
	516, -388, 511, 294, 170, 297, -219, 475, 2, 2,
	392, 2, 511, -124, 66, 444, 42, 388, -363, 2,
	-364, -216, -217, -218, -416, 222, 330, 338, 490, 487,
	-450, -537, 170, 494, 440, -450, -317, 513, 2, 2,
	2, 2, 2, -411, 190, -248, 2, -245, -453, 4,
	-461, -465, -462, -466, -464, 27, 30, 31, 32, 34,
	36, 37, 38, 39, 54, 60, 61, 67, 71, 73,
	82, 87, 93, 98, 99, 101, 100, 102, 103, 104,
	113, 117, 120, 124, 125, 129, 132, 136, 152, 154,
	167, 169, 170, 178, 181, 184, 197, 209, 214, 216,
	236, 240, 247, 251, 252, 280, 284, 290, 294, 295,
	299, 300, 319, 329, 343, 360, 383, 390, 406, 420,
	425, 434, 440, 442, 448, 455, 456, 464, 466, 474,
	478, 479, 480, 481, -467, 72, 2, -411, 190, 2,
	-250, 190, -411, -253, 2, -232, -219, 2, -244, -453,
	2, -267, 190, -248, -249, -253, -251, 2, -253, -257,
	2, -219, -459, 190, 2, -457, 10, -456, 5, 4,
	-461, -465, -462, 216, 440, 516, -307, -259, -260, -449,
	8, -300, -219, 513, -376, 2, -113, -99, 2, 167,
	-376, 190, 2, -113, 190, 2, -376, 190, 2, -113,
	190, 2, -532, 2, -459, 2, 2, 446, 2, 90,
	190, -219, 425, 106, 2, 354, -545, 372, 450, 2,
	2, 2, 2, 2, 2, 425, -237, 2, -219, 167,
	-257, 190, 2, 384, -554, 340, -459, 190, 2, 475,
	-251, 2, -251, 205, 218, -232, 190, 2, 429, 427,
	429, 427, 170, 2, 216, 2, 216, 2, -412, 2,
	-413, -407, -248, 509, 2, 2, 2, 2, 2, 190,
	-219, 425, 106, 2, 234, 2, 2, 2, 2, 2,
	2, 2, -309, 190, 2, -248, -309, 190, 2, -309,
	190, 2, -349, 2, 82, -232, 190, 2, -256, 190,
	2, -251, -258, 190, 2, -257, -460, 190, 2, -459,
	-376, 2, -113, 2, -420, 2, -419, -456, 471, -88,
	511, -88, 511, 388, 511, -459, -248, -248, -376, 2,
	-113, -99, 2, -376, 2, -113, 2, -110, -109, -459,
	511, 170, -376, 2, -113, -99, 2, -376, 2, -113,
	2, -183, 167, 2, 107, 425, -158, 2, 167, 466,
	2, 8, 2, -459, 379, 337, 159, 2, 392, 2,
	393, 69, -350, 487, 69, 170, 2, 170, 2, -333,
	2, 481, 2, -517, 2, 294, 170, 2, 170, 2,
	170, 2, 170, 2, 170, 2, 334, 389, 224, 2,
	-113, 478, -99, -376, 478, 2, -536, 167, 377, -376,
	2, 443, 233, 144, 170, -333, 2, 170, 2, 170,
	2, 5, 2, 335, 411, 2, 222, 330, 411, 2,
	-248, -548, 2, 425, 475, 384, 2, 2, 83, 84,
	170, 2, 170, 2, 170, 487, 2, -326, -411, -362,
	-363, -362, 440, -294, -296, -158, 392, 2, -195, -324,
	-197, 167, -352, -353, -198, 247, 154, 290, -199, -332,
	27, 124, -332, -332, 56, 512, 512, 11, 12, 71,
	40, 502, 503, 504, 505, 165, 506, 507, 500, 501,
	499, 492, 493, 497, 228, 229, 89, 496, 494, 81,
	257, 371, 155, 156, 157, 158, 351, 203, 33, 204,
	14, 15, 16, 32, 299, 246, 488, 194, 396, 495,
	17, 18, 19, 219, 221, 282, 47, 197, -227, -269,
	-376, -376, -376, -376, -376, -376, -376, 306, 511, -322,
	-371, 509, -190, 511, 511, 511, -449, -190, -376, -390,
	512, -314, 511, -190, -390, -385, 511, 369, 509, 511,
	-393, -376, 5, 5, 5, 511, 513, -499, 482, 167,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 326, -431, 511, -430, 511,
	-430, -430, 476, -428, 511, 489, 483, 511, -428, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 476, 516, -496, -291, 511, -318, -414, -376,
	504, -318, -318, 294, -311, -376, 95, -336, 225, 271,
	171, 243, 364, 210, -373, 515, -373, -401, 489, -190,
	-408, -247, -190, -410, 511, -406, -401, -89, -449, -73,
	-86, -94, -113, -126, -162, -163, 504, -248, 511, 170,
	511, 513, -453, 170, -300, -232, -248, -261, -262, -267,
	123, -311, -514, -300, -222, 37, -387, -423, -424, -470,
	515, -469, -426, -436, -432, -435, 322, 323, -455, 51,
	472, -438, 215, 4, -461, -463, 212, 213, 403, 48,
	339, 162, 112, 111, 287, 53, 436, 437, 438, 439,
	174, 175, 473, 414, 64, 65, -514, -300, 167, -252,
	-248, -452, -311, 37, -363, 2, 113, -457, 42, -557,
	516, 245, -271, 256, 279, 186, 295, 485, 288, -458,
	5, 4, -386, -398, 113, 250, 215, -443, -445, 8,
	-444, 9, -446, 502, 503, -451, -450, 97, 513, -453,
	-206, 352, 391, -205, 23, 28, 128, 469, 145, -281,
	207, 313, 139, 407, 459, -524, -525, 375, 431, 432,
	85, 288, 391, 352, 139, -329, -331, 37, 105, 274,
	308, 57, 200, 261, 262, 409, 477, 139, 391, 352,
	-525, 352, -525, -208, 407, 459, -524, -525, 375, 352,
	-207, -281, 139, 515, 23, 352, 391, 309, -541, -542,
	128, 28, 352, 309, -521, -493, 481, 139, -109, 237,
	-109, -307, 516, 516, -453, 504, 377, 376, 139, 139,
	139, 139, 167, 2, 2, 280, 2, 2, 2, 172,
	-527, -546, 2, 2, -248, 190, -293, 294, -516, -308,
	425, -248, 280, -250, 190, 2, -253, 475, -521, 280,
	-252, 37, 511, 2, -349, 2, 205, -493, 280, -412,
	-264, -248, -407, -264, 391, -241, 37, -373, -373, 139,
	2, 2, 2, -219, -209, 516, 59, 358, 139, -209,
	139, -209, 139, -268, 190, -267, -209, 139, -209, 516,
	139, -209, 516, 139, 516, 139, 512, 516, -420, -420,
	-459, -171, 481, 170, 93, 511, 511, -183, -417, 516,
	-416, -460, -110, -459, -459, -516, -232, 2, -248, 2,
	425, 226, -171, -459, -459, -459, -452, 27, 393, 2,
	334, 389, 84, 393, 2, -248, 425, 107, 205, 75,
	-519, 167, -515, 365, -514, -248, 107, -248, 107, -248,
	107, -248, -248, 2, 2, 2, 2, 80, 80, 2,
	44, -536, 167, 2, 443, 2, 443, 2, -219, -219,
	-219, 410, 245, -248, 167, 425, 205, 425, 205, 107,
	425, -209, 516, -223, -195, -324, -452, -325, -324, -196,
	-195, -198, 167, 338, 460, 274, 394, 230, -353, -352,
	27, -376, -357, 161, 273, -376, -355, -378, 502, 503,
	-444, -446, -310, 288, -189, -189, -189, -297, -403, -376,
	329, 205, -425, -423, -423, -246, -453, 436, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, 246, 194, 396, 47, 197, -376, 440,
	-376, -376, -376, -376, 268, 280, 284, 448, 152, 457,
	124, 288, -560, 420, 39, -383, -190, -315, 511, -397,
	34, 406, 27, -390, 511, 2, -371, -376, -372, -312,
	-311, -311, 512, 474, 27, 124, 504, 2, 512, 516,
	37, 512, -376, -312, -389, -385, -311, -396, -395, 478,
	-344, -345, 486, 264, 110, 188, 263, -346, 382, -447,
	8, -453, 504, -500, 160, 181, 511, 512, 2, 512,
	2, 512, -376, 2, 512, -376, 2, 512, -376, 2,
	512, -376, 2, 512, 2, -376, -376, -376, -376, -376,
	-376, -376, -311, 8, -447, -447, 436, 436, -447, -447,
	-447, -439, 322, 248, 323, 176, 267, 265, 266, 175,
	-439, -338, 2, -441, -311, 4, 486, 264, 110, 188,
	263, 382, 5, -338, 2, -339, 2, -376, -311, -340,
	-377, -378, 502, 503, 495, -390, -341, 2, -376, -312,
	-376, 54, 240, 442, -342, -376, 170, -311, -311, 2,
	-311, 2, -497, 37, -311, -303, 516, 170, 37, 4,
	-303, -303, 511, 512, 516, -337, 185, 260, 255, -337,
	-406, -336, 225, -334, 304, -334, -334, -401, -233, 509,
	517, -453, -401, -400, -399, 37, -241, 301, -401, -401,
	513, 512, -400, 510, -512, 511, 514, 514, 514, 514,
	514, -248, 511, -311, -453, 513, 412, 512, 219, 219,
	219, 219, 370, 512, 440, 481, -88, 296, 512, 516,
	-302, 36, 509, 513, -447, 2, 2, -442, 476, 511,
	511, -345, 511, 170, -301, -537, 512, 444, -364, -270,
	338, 405, 353, 386, 422, 8, 9, 8, 9, 516,
	-453, 516, -538, 87, 440, 73, 378, -367, 190, 73,
	-471, -235, 87, -472, -219, 67, 456, 329, 169, 137,
	-538, 87, 329, -538, 87, 87, 391, 410, 56, -411,
	40, 40, 27, -113, 241, 170, 487, 425, 205, 378,
	440, -411, -331, -423, 105, 261, 262, 56, -448, -443,
	502, 503, -448, 56, -448, -448, -448, 481, -250, -411,
	378, 440, 440, 516, 40, 40, 27, -113, 241, 170,
	440, -267, -233, 470, 41, 470, 440, 41, 378, 440,
	516, 41, 41, 440, 440, -522, -224, 94, 275, 254,
	276, -225, -226, 315, 468, -459, -417, 197, -417, -259,
	-219, 513, -113, -376, -376, -113, -376, -113, 44, 139,
	2, -554, 234, 511, -274, 280, 170, -300, -418, 216,
	516, -308, 139, -330, -329, 280, -252, 190, 2, 139,
	-291, 133, 511, 336, 2, -234, 190, -220, -219, -349,
	-212, 428, 139, -328, 466, -358, -113, 511, 113, 37,
	-358, -319, -320, -415, -321, -235, 511, -241, -219, 2,
	-248, -309, -309, -309, -209, 516, 139, -232, -251, -256,
	-257, -258, -459, -460, -88, -419, 512, 512, 512, -170,
	298, -169, -219, 5, -183, 466, -273, -368, -367, -475,
	-476, -471, 246, 205, 456, 218, 153, -292, -236, -235,
	106, -177, 481, -109, 512, -417, 197, -171, -171, -417,
	-417, -248, 167, -171, -171, -171, 2, 2, -333, -248,
	-232, -267, -248, -300, -300, -333, -232, -333, -232, -333,
	-232, -113, -376, 2, 388, 167, 167, 513, -333, 336,
	107, 425, 313, 205, -248, -267, -248, -267, -232, -248,
	-411, -325, -196, 295, 230, 394, -355, -356, -378, 369,
	370, -356, 369, 370, 8, 9, 8, 9, -200, 398,
	283, -309, 516, -203, 38, 120, 230, -248, 487, 135,
	-376, -376, 440, -560, 420, -383, 135, -376, 268, 284,
	448, 152, 457, 124, 288, 170, 511, -377, -377, 512,
	-313, -376, -376, 510, 519, 512, -296, 516, -294, -376,
	-311, -311, 512, 513, -311, -300, 510, 510, 516, 512,
	-394, -395, 129, -376, 440, 440, 440, 440, 511, 512,
	513, -505, 305, 511, 511, -376, 512, 512, 512, 512,
	37, 516, 516, 516, 512, 516, 516, 516, 512, 512,
	512, 516, 512, 487, 487, 512, 512, 512, 512, 516,
	512, 516, 512, 170, 512, 512, -347, 319, 512, 11,
	12, 502, 503, 504, 505, 165, 506, 507, 500, 501,
	499, 492, 493, 494, 81, 257, 371, 14, 15, 16,
	219, 197, -377, -377, -377, 512, -381, -382, 170, 167,
	37, -342, -342, -342, 512, 170, -311, 512, 512, 511,
	-498, 259, 280, 512, -370, -369, 479, -414, -304, 2,
	-406, -243, -453, -370, -370, -311, -376, 225, 225, -335,
	466, 294, -337, -406, -400, -449, -375, -374, 168, 38,
	120, 277, 193, -400, -241, -291, -400, -400, -453, -401,
	-401, -399, 512, -513, -449, 512, -305, -409, -492, -296,
	513, -453, -180, -493, -159, 5, 284, -159, -159, -159,
	-300, 24, 320, -423, 509, 510, 8, -453, 511, -447,
	-447, -447, -300, 170, -450, -363, 454, 78, 338, 436,
	-450, -205, 352, -235, -235, -248, -257, 280, -367, 190,
	-211, 280, -423, -242, -219, 511, 511, 230, 230, 466,
	-235, -242, 230, 190, -235, 190, -242, -242, -523, 338,
	289, -376, 249, 336, 281, -206, 352, 391, -113, -113,
	-113, 511, -537, 466, 123, -248, -267, -248, -257, -252,
	391, 352, 278, -261, -448, -448, -329, 391, 352, -257,
	-250, -232, -207, -113, -113, -113, 511, -233, -208, 352,
	5, 190, -235, 5, -219, -235, -257, -540, -457, 104,
	390, -542, 23, -235, 190, -235, -257, -540, -224, -459,
	284, 462, -521, -174, 481, -109, -168, 201, 504, -518,
	-219, 475, -219, -272, -275, -273, -235, -186, -187, 483,
	481, 139, -265, -248, 509, -171, -459, -248, -257, 139,
	-291, 280, -459, 37, 511, 2, 2, 294, 280, -234,
	190, -213, 130, -558, 494, -232, -370, -304, -327, -361,
	360, 294, -292, 471, -241, -327, -306, 516, 170, 494,
	513, -292, 2, -209, -209, -209, -267, -268, -209, -209,
	-209, -88, -88, -171, 516, 511, 494, 494, 511, -459,
	-459, 512, 516, -248, -234, 205, 205, -240, -220, 512,
	516, 513, 511, -179, 298, -178, 131, 232, 217, 399,
	400, 401, 402, 122, -177, -110, 170, -50, 481, 425,
	515, -333, -333, -333, 388, 388, -219, -244, -232, -248,
	-245, -267, 167, 167, 460, -356, 295, 253, -403, -204,
	286, -248, 515, -376, -376, 135, 135, -376, -377, -377,
	-376, 135, 170, 511, -376, -387, 32, 32, 512, 516,
	-372, -376, 512, 474, -296, -296, 512, 504, -453, 515,
	512, -385, 132, -376, 434, 264, 188, 263, -346, 263,
	-346, -346, -447, 5, -453, 504, -506, -238, 511, -219,
	479, -295, 300, 512, -425, -423, -376, -376, -376, -376,
	-376, -447, -428, -428, -443, -443, -376, -381, -376, -425,
	-423, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	124, 280, 288, -377, -382, -381, -376, -376, -423, 512,
	512, 512, -311, -88, 511, 259, -323, 181, -376, -417,
	516, -323, -323, 512, -406, -406, 511, -376, 225, 510,
	516, 518, 494, -291, 513, -399, -400, 510, 512, 516,
	512, 516, -360, 37, 512, -453, -182, -181, 121, 50,
	297, 5, 8, 509, 510, 513, -447, 512, 512, 512,
	-300, -376, 440, 440, 139, 280, 468, -477, -472, 137,
	-376, -298, -404, -376, 511, 511, 2, -202, 128, 391,
	-539, 2, 466, 139, -209, 139, -209, 485, 511, 511,
	440, 378, 481, -311, -376, -172, 113, -452, -525, 515,
	-525, 515, 378, 440, 378, 440, 481, -311, 440, -427,
	45, 25, 280, -251, 440, 440, -209, 139, 451, 391,
	-459, 284, -176, 298, -175, 131, 362, 122, 232, -417,
	-174, 170, 216, 2, -252, 2, 512, 512, 516, -478,
	37, 292, 292, 511, -248, -69, 481, -416, -449, -250,
	37, 139, -521, -113, -421, -422, 5, -248, 139, 294,
	280, -214, 239, -558, -457, -493, -296, -327, -318, 281,
	86, 512, -370, -320, -304, -376, 2, 512, -209, -169,
	-170, -459, -459, -459, -171, -183, -183, -368, -276, 511,
	-234, -220, 511, -183, -236, 2, -460, 516, 511, 494,
	494, 494, -417, -113, 298, -248, 504, -333, -283, -282,
	313, 288, -283, 369, 369, 295, 161, 235, -203, -233,
	-376, -376, 135, 32, 32, -376, -376, -387, 512, -376,
	-376, -311, 510, 5, -376, 512, 512, 8, -376, 512,
	513, -507, -219, -376, 512, 56, 512, 512, 516, 516,
	512, 512, 512, 512, 512, 512, 512, -382, 170, 124,
	288, 511, 512, 512, -88, -384, 184, 56, -406, -384,
	-384, -335, -300, -406, -374, -233, 509, -453, -449, -409,
	511, 513, -181, 494, 510, 2, 509, -453, 512, -235,
	-235, -367, 139, -479, 87, -481, 71, 153, 93, 280,
	284, 456, 329, 67, 113, 343, -550, 37, 491, 512,
	512, 516, -203, -298, -300, 280, 417, 113, 280, 113,
	106, 451, 74, -235, -242, -300, -300, -248, -257, 146,
	512, 516, 494, 2, 504, 504, -257, -252, -257, -250,
	146, 512, -233, 5, 5, 139, -230, 71, 5, -235,
	-235, -251, 106, 516, 511, 494, 494, -174, -460, -109,
	-291, -279, 208, -235, -476, -473, -474, 329, -480, -482,
	153, 329, -113, 2, -185, -184, -219, 5, 511, -274,
	298, 510, -330, -113, -252, 512, 516, -351, 466, -233,
	-248, 139, -215, 238, -558, -457, -212, -354, -352, -359,
	511, 294, -113, -296, 494, 512, 512, 106, 106, 199,
	138, -298, 511, 511, -300, 106, 512, -178, -179, -459,
	-109, -459, -177, -51, -52, 205, 87, 318, -245, 425,
	205, 511, 511, -203, -376, -376, -376, 512, -296, -453,
	504, -501, 313, 512, -403, -376, -376, -377, 170, 511,
	-387, 512, -502, 480, -376, -311, -502, -502, 512, -449,
	2, -459, 509, 2, -367, -242, -246, -239, -219, 153,
	190, 284, 230, 511, -377, -248, 511, 2, 29, -551,
	117, 209, -366, -552, 92, 418, 198, -404, -204, 512,
	512, 284, 284, -376, -423, 511, -209, -209, 512, 512,
	-376, 440, -452, 91, -450, 2, -525, -376, 440, 5,
	-209, -246, -209, -209, -230, 451, -175, -176, -459, -109,
	-174, 37, -280, -281, 197, -478, 230, -239, 230, -549,
	481, 512, 516, 494, 494, -272, -186, -70, -71, 441,
	-416, -291, 5, 511, -219, 294, 511, -233, -558, -457,
	-213, -327, 125, -300, 87, -354, -383, -171, 511, 511,
	-277, 76, 88, 114, 189, 173, 206, 410, 415, 27,
	-277, 512, -298, -298, 512, 511, -171, 512, 516, 27,
	511, 27, 511, -248, -267, -311, -311, 512, -296, 56,
	516, 512, 512, -377, -387, 512, -503, -504, -238, 510,
	2, -481, -239, 280, 466, -376, -221, 511, -376, 37,
	209, 118, 195, -279, 511, -365, 466, 343, -230, -298,
	511, 511, 511, 494, 170, 511, -427, -209, -251, 512,
	-531, 341, -113, -186, 311, 511, -278, 294, 106, 274,
	-184, -450, -450, 512, 37, -71, 9, 37, -298, -248,
	-298, 294, -457, -214, 460, 281, 512, -242, -327, -460,
	-460, -365, 512, 512, -460, -52, -300, -300, 512, 512,
	-508, 336, 370, 183, -311, -297, 512, 516, 37, 139,
	185, 512, -483, 258, -219, 512, 118, 195, -280, -300,
	-279, 185, -248, -526, 466, 512, -285, -284, -282, -287,
	-286, -282, -311, -450, 91, 311, -311, -230, -534, 171,
	-533, 5, 10, -278, -248, -299, -405, -235, 77, 106,
	-279, -113, -113, 512, -351, 512, -248, -215, 391, -369,
	512, 512, -366, -365, -370, 512, 512, 512, 512, -509,
	-510, 47, 453, 97, -376, -509, -509, -504, -506, 153,
	481, -484, -487, -486, 294, 397, 171, 312, 512, 417,
	477, -551, 512, 481, -291, -376, -365, 512, 516, 471,
	512, 516, 471, 512, 170, 512, -209, -173, 481, 44,
	511, 512, 516, 328, 119, 128, -280, -549, -365, 511,
	-366, 511, -319, -171, -171, -279, -366, -171, -511, 137,
	-510, 325, 166, 369, 325, 166, -511, -511, -239, 52,
	-486, 294, -487, 294, 460, 119, -370, 52, -483, -279,
	-284, 197, -286, 170, 311, 142, -533, 29, -300, -405,
	370, 370, 2, -186, -278, -366, -298, -279, -298, -370,
	-280, -279, 97, 181, 435, 274, 32, 494, -485, 274,
	358, 59, 391, -485, 494, -484, 511, 511, 376, 512,
	2, -278, -279, 512, -280, 512, -370, -280, 369, 302,
	-510, -376, 22, 284, 113, -376, -551, -311, -311, 298,
	-210, 59, 358, -280, -365, -187, 481, -366, -370, 512,
	512, -170, 511, -187, -366, -370, -279, -280, 440, -170,
	-370, -279, -280, 511, 512, -280, -187, -311, -187, -370,
	512, -370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 470, 471, 473, 474, 475, 477, 478, 480,
	482, 484, 485, 486, 488, 489, 491, 492, 493, 494,
	495, 497, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 559, 0, 1150,
	1152, 1154, 1156, 0, 693, 0, 32, 33, 0, -2,
	275, 277, 279, 0, 305, 307, 308, 310, 312, -2,
	0, 406, 407, 409, 411, -2, -2, 0, 853, 855,
	0, 546, 548, 0, 858, 860, 0, 0, 568, 569,
	0, 1238, -2, 562, 564, 566, 631, 633, 635, 637,
	639, 641, 643, 645, 646, 648, 650, 652, 654, 656,
	658, 660, 662, 663, 665, 667, 669, 671, 673, 675,
	677, 679, 681, 683, 685, 687, -2, 689, -2, -2,
	0, -2, -2, -2, 1168, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 357, 358, 360, 362, 364, 366,
	369, 371, 373, 1296, 413, 415, 417, 419, 421, 423,
	425, 0, -2, 1308, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1269, 1271, 1273, 1275, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 472, 476, 479, 481, 483, 487, 490, 496, 498,
	500, 457, 458, 461, 1928, 1945, 1946, 1947, 1950, 1951,
	1952, 1953, 1954, 1955, 2329, 2410, 2411, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	459, 460, 1013, 0, 524, 522, 1921, 525, 2150, 527,
	529, 400, 401, 402, 403, 404, 405, 0, 539, 533,
	538, 540, 542, 543, 544, 545, 519, 517, 0, 539,
	1980, 537, 1148, 1149, 1133, 1134, 2188, 1175, 0, 189,
	558, -2, -2, -2, 2295, -2, 590, -2, 597, 2299,
	2190, 602, 0, 604, -2, 607, 1151, 1153, 1155, 691,
	692, 1931, 0, 0, 0, 0, 34, 35, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1062, 1063,
	1064, 0, 193, 195, -2, -2, -2, -2, 0, 0,
	2228, 2022, 1889, 1947, 1892, 1887, 276, 278, 280, 281,
	0, 0, 0, 0, 0, 0, 306, 309, 311, -2,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	908, 900, 901, 1104, 0, 0, 0, 0, 408, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 337, 462, 463,
	0, 1297, 1297, 0, 0, 0, 0, 250, 241, 854,
	856, 857, 0, 0, 0, 0, 547, 549, 0, 0,
	223, 859, 861, 862, 0, 0, 0, 0, 0, 252,
	0, 0, 563, 565, 567, 632, 634, 636, 638, 640,
	642, 644, 647, 649, 651, 653, 655, 657, 659, 661,
	664, 666, 668, 670, 672, 674, 676, 678, 680, 682,
	684, 686, 688, 698, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 778, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 701, 703, 704, 705, 0, 758, 776,
	777, 786, 690, 0, 1053, 1298, 1177, 1158, 1172, 1177,
	1160, 1161, 1162, 1163, 1164, 1169, 1171, 1165, 1166, 1167,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 359,
	361, 363, 365, 367, 370, 372, 374, -2, 1267, 1268,
	414, 416, 418, 420, 422, 424, 426, 550, 0, 552,
	0, 702, -2, 0, 1302, 1302, 1302, 0, 0, 1268,
	1266, 0, 555, 556, 611, 612, 1532, 0, 0, 0,
	0, 0, 0, 0, 1786, 1618, 0, 613, -2, 1649,
	1651, 2270, 2295, 1785, 1653, 1654, 1655, 1656, 1657, 0,
	1659, 1660, 1661, 1662, 1663, 1664, 0, 1666, 0, 1671,
	1672, 1673, 0, 2277, 1866, 1941, -2, 0, 0, 2283,
	1937, 0, 1752, 1689, -2, -2, 1964, 1943, 1464, 1465,
	1466, 1467, 1468, -2, -2, 2312, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 0, 2259, 2278,
	2279, 2284, 2286, 2280, 2267, 1714, 2034, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1491, 1500, -2, -2, -2, -2, -2, -2, 2271, 2272,
	2289, 2292, 2298, 2303, 2304, 2276, 2285, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 1492, -2, -2, -2, -2, 1285, 2161,
	1288, 1013, 1286, 1270, 1272, 0, 1274, 0, 0, 0,
	1279, 1305, 1303, 0, 1346, 1283, 1284, 1364, 1364, 1388,
	0, 1369, 0, 1388, 1297, 1414, 0, 1375, 2180, 1690,
	1691, 0, 1947, 1942, -2, -2, 2310, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 526, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 560, 561,
	0, 585, 0, 589, 2266, -2, 1988, 2199, -2, 593,
	1178, 1182, 1183, 1184, 1185, 0, 0, 0, 0, 0,
	599, 0, 0, 586, 587, 605, 608, 0, 694, 695,
	696, 697, 63, 0, 2278, 1414, 65, 0, 1911, 1972,
	1973, 1974, 1975, 1976, 2311, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2312, 68, 0, 2278, 72,
	0, 2278, 0, -2, 77, 0, 1917, 79, 0, 1914,
	88, 0, 2278, 0, 1886, -2, 0, 174, 1925, 0,
	879, 1927, -2, 2278, 1061, 253, 254, 1960, 1961, 1968,
	1969, 1970, 1971, 0, 0, 0, 846, 1883, 1888, 847,
	1907, 848, 1893, 0, 282, 283, 284, 285, 286, 0,
	287, 2278, 289, 290, 0, 292, 293, 2278, 295, 296,
	0, 298, 0, 206, 207, 314, 315, 0, 317, 0,
	2278, 0, 0, 0, 323, -2, 338, 0, 335, 326,
	327, 329, 330, 331, 332, 0, 378, 376, 1922, 0,
	874, 2278, 876, 0, 0, 1083, -2, 2278, 1058, 0,
	1089, 1085, 0, -2, 0, 1295, 2278, 1192, 904, 905,
	906, 907, 0, 397, 0, 1205, 0, 1207, 0, 1228,
	1420, 1364, 1364, 0, 339, 340, 341, 342, 343, 2278,
	0, 0, 0, 348, 0, 350, 351, 352, 353, 354,
	355, 356, 163, 2278, 429, 455, 163, 2278, 432, 163,
	2278, 435, 0, 438, 1102, 163, 2278, 441, 163, 2278,
	444, 445, 163, 2278, 449, 450, 452, 2278, 454, 255,
	1144, 1145, 1146, 1147, 0, -2, 513, 1930, -2, 465,
	0, 466, 0, -2, 0, 267, 0, 0, 863, 864,
	865, 866, 867, 870, 871, 872, 873, 1401, 226, 224,
	0, 0, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 0, 0, 570, 0, 0, 699, 700, 0, 0,
	710, 711, 712, 267, 2191, 2158, 2054, 717, 0, 720,
	723, -2, 0, 0, 0, 0, 727, 0, 732, 733,
	734, 0, 736, 852, 738, 0, 0, 740, 0, 744,
	0, 747, 0, 749, 0, 751, -2, -2, -2, 762,
	-2, 0, 765, 767, 0, 769, -2, 0, 778, 774,
	775, 0, 0, 0, 0, 794, 795, 0, 800, 0,
	803, 804, 805, 0, 807, 808, 0, 810, 811, 812,
	813, 0, 815, 816, -2, -2, 820, 822, 0, 829,
	0, 833, 0, 837, 0, 706, 707, 163, 1418, 1157,
	-2, 1159, 0, -2, 0, 551, 0, 554, 1325, 1253,
	1250, 0, 1322, 1323, 1254, 0, 0, 0, 1261, 0,
	1300, 1301, 0, 0, 0, 1240, 1241, 0, 0, 0,
	0, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1800, 1797,
	1798, 1801, 1802, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1805, 1806, 0, 0, 1808, 0, 1810, 0, 0,
	0, 0, 0, 0, 1597, 1599, 1874, 0, 0, 1807,
	1537, 1538, 1539, 1540, 1541, 1576, 1577, 0, 0, 1650,
	1871, 1870, 1652, 0, 1822, 0, 1665, -2, 0, 1786,
	1817, 0, 0, 1674, 1675, 1676, 0, 0, 1822, 0,
	0, 1865, 1686, 1687, 1529, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1478, 1477, 0, 1479, 0,
	1480, 1481, 1488, 1501, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 1846, -2, 0, 0,
	0, 0, 1493, 0, 1287, 0, 0, 1350, 1875, 1879,
	1880, 1350, 1350, 0, 0, 1823, 1411, 1411, 0, 0,
	1407, 1407, 1407, 1405, 1388, 0, 1388, 1398, 0, 1388,
	1388, 0, -2, 1369, 0, 0, 1398, 0, 1382, 501,
	503, 505, 507, 508, 509, 511, 1415, 1416, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 531, 541, 1297, 0, 1825, 1437, 1441,
	0, 1443, 1444, 1445, 1446, 1447, 0, 0, 1438, -2,
	1489, 1491, 1512, 1965, 1966, 1967, 1472, 1473, 1474, 1475,
	1476, 1484, 1471, 1471, 1471, 1482, 1511, 1503, 1511, 1507,
	1458, 1459, 1494, 1495, 1496, 1497, 0, 535, 0, 188,
	1924, 0, 0, 0, -2, 595, 600, 601, 0, 0,
	1180, 0, 1186, 622, 623, 624, 1188, 1189, 0, 598,
	625, 626, 627, 628, 629, 630, 0, 1895, 1896, 1897,
	1898, 1901, 1902, 0, 0, 596, 615, 603, 0, 609,
	89, 1130, 0, 128, 0, 1130, 1130, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 113, 124, 101, 102,
	0, 0, 0, 0, 0, 73, 1035, 0, 1038, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	112, 0, 107, 91, 0, 0, 0, 114, 126, 0,
	154, 156, 0, 0, 0, 0, 0, 0, 173, 181,
	0, 0, 0, 0, 1059, 0, 1294, 0, 1401, 2092,
	1401, 845, 0, 0, 1948, 1891, 0, 0, 0, 0,
	0, 0, 0, 316, 318, 0, 320, 321, 322, 0,
	1082, 0, 328, 368, 984, 2278, 0, 0, 395, 390,
	0, 392, 0, 1034, 2278, 1032, 1926, 0, 1056, 0,
	1013, 0, 0, 1090, 1957, 1099, 1103, 1194, 0, 399,
	0, 1208, 1210, 0, 0, 1421, 0, 1423, 1424, 0,
	345, 346, 347, 0, 427, 0, 161, 162, 0, 430,
	0, 433, 0, 163, 2278, 1881, 439, 0, 442, 0,
	0, 447, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 230, 0,
	1400, 0, 1401, 224, 267, 267, 1401, 572, 1401, 574,
	0, 0, 713, 267, 267, 267, 718, 719, 721, 722,
	-2, -2, 830, 724, 725, 797, 0, 0, 0, 796,
	737, 0, 839, 2176, 850, 797, 2022, 797, 2022, 797,
	2022, 748, 750, 753, 789, 761, 766, 0, 0, 771,
	779, -2, 0, 781, 0, 783, 0, 785, 797, 798,
	801, 806, 809, 814, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 1170, 1325, 1253, 553, 1244, 1324, 1245,
	1252, 1255, 0, 0, 1257, 0, 1259, 0, 1320, 1321,
	1328, 1329, 0, 1339, 1340, 1332, 0, -2, 0, 0,
	1335, 1336, 1263, 0, 1280, 1281, 1282, 1309, 1312, 1113,
	0, 2410, 1533, 1432, 1534, 1535, 1910, 0, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, -2, -2,
	-2, -2, -2, -2, -2, -2, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, -2, -2, -2,
	1574, 1575, -2, 1809, 1811, 0, 1874, 0, -2, 0,
	-2, -2, -2, -2, 1594, 0, 1596, 1601, 1603, 1605,
	0, 0, 0, 0, 1873, 1615, 1857, 1858, 0, 0,
	1788, 1789, 1790, 1600, 0, 1619, 1872, 1869, 0, 0,
	1821, 1308, 1678, 0, 0, 0, 0, 1685, 1670, 1819,
	0, 1818, 0, 0, 0, 1829, 0, 1864, 1860, 0,
	1908, 1528, 1515, 1516, 1517, 1518, 1519, 1520, 1530, 0,
	1905, 1934, 1940, 1762, 0, 0, 0, 1715, 1716, 1717,
	1718, 1719, 0, 1721, 1722, 0, 1724, 1725, 0, 1727,
	1728, 0, 1730, 1731, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	0, 0, 1734, 0, 1832, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1736, 0, 1738, 1823, 1843, 0,
	0, 1620, 0, 0, 0, 1786, 0, 1741, 1823, 1851,
	0, 0, 0, 0, 0, 1823, 0, 1856, 0, 1748,
	0, 1750, 1289, 0, 0, 1427, 0, 0, 0, 1878,
	1427, 1427, 0, 1345, 0, 0, 1408, 1409, 1410, 0,
	0, 1411, 0, 1402, 1406, 1403, 1404, 1398, 1361, 0,
	0, 1912, 1398, 1367, 1397, 0, 1013, 1387, 1398, 1398,
	0, -2, 1371, 1388, 0, 0, 502, 504, 506, 510,
	512, 0, 0, 1308, -2, 0, -2, 1012, 0, 0,
	0, 0, 521, 523, 0, 0, 515, 0, 518, 0,
	1428, 1431, 0, 0, 1442, 1448, 1449, 0, -2, 0,
	0, 1513, 0, 0, 0, 0, 588, 0, 1179, 1187,
	0, 619, 0, 621, 0, 1899, 1903, 1900, 1904, 0,
	610, 0, 0, 0, 0, 1129, 0, 132, 2278, 0,
	165, 0, 0, 977, 1918, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 1036, 1037, 1039, 1046, 1048, 0, 1042, 1906,
	0, 0, 1043, 0, 1045, 1047, 1049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 104, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 1076, 1070, 1071, 1072,
	1073, 1074, 1075, 0, 0, -2, 198, 0, 258, 1884,
	1894, 0, 868, 869, 288, 291, 294, 297, 194, 0,
	324, 0, 0, 910, 885, 0, 0, 377, 267, 0,
	0, 391, 0, 1030, 1033, 0, 1013, 2278, 1069, 0,
	0, 0, 0, 0, 1088, 0, 2278, 1913, 1956, 1957,
	1196, 1202, 0, 1427, 0, 1226, 1211, 0, 0, 0,
	1226, 1230, 1231, 1233, 1234, 0, 0, 1422, 0, 349,
	456, 163, 163, 163, 436, 0, 0, 163, 446, 163,
	451, 163, 256, 453, 464, 514, 1297, 1297, 267, 265,
	2133, 263, 260, 262, 0, 0, 0, 911, 913, 914,
	915, 916, 0, 1957, 0, 2081, 1957, 0, 1214, 1216,
	0, 220, 0, 227, 225, 230, 0, 0, 389, 571,
	576, 708, 0, 714, 715, 716, 755, 791, 726, 728,
	729, 730, 0, 851, 849, 739, 797, 742, 797, 745,
	797, 764, 768, 773, 780, 0, 0, 0, 793, 0,
	0, 0, 0, 0, 0, 0, 834, 835, 836, 838,
	1419, 1248, 1249, 1251, 0, 1260, 0, 0, 1334, -2,
	-2, 1333, 1337, 1338, -2, -2, -2, -2, 1256, 0,
	1265, 1262, 0, 1319, 1111, 1112, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1616, 0, -2, 1595, 1598,
	1602, 1604, 1606, 0, 0, 0, 0, 0, 0, 1812,
	0, 1814, 1617, 1867, 1870, 1784, 0, 0, 1307, 1308,
	1308, 0, 1684, 0, 1820, 0, 1827, 1828, 0, 1677,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 1720, 1723, 1726, 1729,
	0, 0, 0, 0, 1709, 0, 0, 0, 1713, 1483,
	1469, 0, 1511, 1509, 1510, 1504, 1511, 1508, 1461, 0,
	1460, 0, 1733, 0, 1735, 1737, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 1624, 1625, 1740, 1849, 1850, 0, 0,
	0, 0, 0, 0, 1746, 0, 1855, 1747, 1749, 1297,
	0, 1290, 0, 1347, 1342, 1426, 0, 1876, 1401, 1349,
	1351, 1877, 1915, 1342, 1342, 0, 1824, 0, 0, 1392,
	0, 0, 0, 1394, 1365, 0, 0, 1359, 0, 1355,
	1356, 1357, 1358, 1366, 1013, 1396, 1368, 1372, 1934, 0,
	1398, 0, 1383, 0, 1385, 1417, 0, 1377, 1380, 0,
	0, 1949, 268, 0, 299, 303, 304, 300, 301, 302,
	530, 0, 0, 1826, 0, 1433, 0, 1439, 0, 0,
	0, 0, 534, 0, 584, -2, 617, 618, 620, 0,
	616, 129, 1130, 0, 0, 1115, 1117, 0, 134, 2278,
	143, 0, 951, 0, 1916, 0, 0, 0, 0, 0,
	1132, 0, 0, 2278, 163, 2278, 163, 146, 149, 0,
	153, 151, 0, 0, 942, 90, 1130, 0, 93, 97,
	105, 0, 0, 0, 111, 0, 0, 0, 1119, 1123,
	0, 0, 1040, 1041, 1044, 1050, 74, 0, 0, 1121,
	1125, 1114, 155, 95, 99, 106, 0, 1127, 92, 0,
	177, 0, 0, 0, 169, 0, 170, 171, 178, 179,
	180, 182, 0, 163, 2278, 0, 877, 878, 1077, 1054,
	1055, 0, 1060, 190, 0, 1401, 198, 0, 1890, 0,
	0, 0, 0, 0, 0, 909, 995, 0, 882, 0,
	0, 0, 383, 379, 0, 388, 394, 393, 875, 0,
	0, 0, -2, 0, 1092, 1086, 1087, 0, 0, 0,
	2278, 1198, 1202, 0, 1201, 1295, 1308, 398, 1203, 1226,
	0, 0, 0, 1213, 1209, 1206, 1427, 0, 0, 0,
	0, 0, 344, 428, 431, 434, 1882, 163, 440, 443,
	448, 467, 468, 242, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 920, 0, 1957, 1957, 0, 1920, 0,
	0, 0, 0, 228, 0, 231, 0, 0, 0, 236,
	237, 238, 239, 240, 221, 1401, 0, 573, 0, 0,
	0, 741, 743, 746, 782, 784, 797, 823, 824, 937,
	0, 937, 0, 0, 1258, 0, 1331, 1264, 1313, 1314,
	0, 1113, 0, 1536, 1579, 0, 0, -2, 0, 0,
	1583, 0, 0, 0, -2, 0, 0, 0, 1813, 1815,
	0, 1869, 1679, 0, 0, 0, 1683, 1667, 1668, 0,
	1787, 1830, 1859, 1863, 0, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 0, 1909, 1935, 1939, 1760, 1761, 1765, 1923,
	0, 0, 0, 1692, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 1506, 0, 0, 1831, 1842, 1844, 1621,
	1622, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, -2, -2, -2, 1639, 1640, 1641, -2, -2, -2,
	0, 0, 0, 1845, 1847, 1848, 1852, 1853, 0, 1743,
	1744, 1745, 1854, 0, 1297, 1291, 1344, 0, 1425, 1348,
	0, 1344, 1344, 1304, 1390, 0, 0, 1413, 0, 1362,
	0, 1363, 0, 1395, 0, 1370, 1373, 1374, 1384, 0,
	1376, 0, 1379, 0, 1679, -2, 269, 271, 0, 274,
	532, 516, 0, 0, 1435, 0, 0, 1486, 1490, 1514,
	536, 1399, 0, 0, 0, 0, 164, 949, 976, 0,
	0, 0, 1106, 1113, 0, 0, 982, 136, 0, 0,
	0, 144, 0, 0, 141, 0, 148, 152, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 115, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 1110, 0, 0, 184, 0, 0, 0,
	1080, 1081, 196, 0, 199, 0, 202, 203, 0, 198,
	192, 0, 0, 319, 1013, 325, 931, 983, 0, 985,
	0, 883, 0, 0, 984, 375, 0, 382, 0, 1034,
	0, 0, 1057, 1068, 0, 1091, 1093, 1101, 0, 0,
	0, 1200, 1202, 0, 1193, 1194, 1327, 1204, 1224, -2,
	1223, 0, 1308, 1232, 1229, 1235, 1236, 0, 437, 264,
	0, 259, 261, 0, 245, 0, 0, 912, 917, 0,
	0, 0, 0, 0, 1215, 1217, 0, 0, 0, 0,
	0, 0, 230, 251, 0, 709, 731, 792, 825, 936,
	0, 0, 827, 0, 0, 1330, 1317, 1318, 1315, 1113,
	1581, 1585, 0, 0, 0, 1587, -2, 0, 1609, -2,
	-2, 1816, 1868, 1658, 1308, 1680, 1682, 1669, 1862, 1531,
	0, 1767, 1764, 0, 1751, 0, 1704, 1705, 0, 0,
	1708, 1710, 1711, 1712, 1470, 1463, 1462, 1841, 0, 0,
	0, 0, 1742, 1292, 0, 1756, 0, 0, 1352, 1756,
	1756, 1391, 0, 1393, 1360, 1353, 0, 1935, 1386, 1378,
	0, 0, 272, 0, 1429, 1434, 0, 1440, 1485, 130,
	131, 133, 0, 950, 0, 953, 0, 0, 0, 0,
	960, 961, 0, 0, 0, 0, 0, 970, 0, 999,
	1009, 0, 1319, 0, 0, 0, 138, 158, 0, 0,
	1131, 0, 0, 163, 163, 0, 0, 1116, 1118, 0,
	0, 0, 0, 118, 0, 0, 1120, 1124, 1122, 1126,
	0, 0, 1128, 175, 176, 0, 163, 0, 168, 163,
	163, 1110, 0, 0, 0, 0, 0, 191, 257, 198,
	0, 939, 0, 995, 987, 988, 989, 0, 994, 996,
	0, 0, 897, 884, 0, 893, 0, 0, 910, 885,
	0, 380, 1031, 1065, 1013, 1084, 0, 0, 0, 0,
	0, 0, 1190, 1202, 0, 1195, 1196, 1226, 1326, 0,
	0, 0, 1212, 1327, 0, 266, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 232, 0, 233,
	234, 235, 222, 575, 577, 0, 0, 583, 935, 0,
	0, 0, 0, 1316, 1589, -2, -2, 1610, 0, 1936,
	1938, 1308, 0, 1753, 1310, 0, 0, -2, 0, 0,
	0, 1293, 1276, 0, 1343, 1341, 1277, 1278, 1412, 0,
	1381, 273, 0, 1436, 135, 0, 954, 955, 1919, 957,
	0, 959, 962, 0, 965, 1959, 0, 969, 0, 978,
	1000, 0, 931, 0, 1005, 1006, 1007, 1107, 1108, 1011,
	0, 137, 139, 157, 1110, 0, 140, 147, 0, 0,
	94, 0, 0, 2015, 121, 119, 117, 96, 0, 177,
	183, 1109, 172, 185, 163, 0, 200, 0, 201, 204,
	0, 0, 885, 938, 0, 986, 0, 997, 998, 887,
	0, 886, 0, 0, 0, 0, 0, 381, 384, 0,
	387, 0, 1094, 0, 1100, 0, 0, 0, 0, 1197,
	1198, 396, 0, 0, 0, 1226, 1237, 244, 0, 0,
	918, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	919, 1011, 0, 0, 975, 0, 249, 229, 0, 579,
	0, 581, 0, 826, 828, 0, 0, 1681, 1771, 0,
	0, 1706, 1707, -2, 0, 1647, 1755, 1757, 0, 1354,
	1430, 952, 956, 0, 0, 0, 1017, 0, 0, 971,
	0, 1003, 1004, 939, 0, 931, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 167, 186, 1110, 197,
	216, 0, 1066, 887, 0, 0, 895, 0, 898, 0,
	894, 891, 892, 931, 0, 385, 386, 0, 0, 1101,
	0, 0, 1199, 1200, 0, 1219, 1220, 1222, 1227, 0,
	0, 1009, 1011, 1427, 0, 578, 0, 0, 831, 832,
	0, 0, 0, 0, 1766, 1311, 1648, 0, 0, 0,
	0, 964, 1022, 0, 0, 0, 1001, 1002, 999, 0,
	980, 0, 1013, 142, 0, 1011, 0, 943, 0, 0,
	946, 0, 0, 122, 2015, 120, 0, 163, 219, 0,
	211, 209, 210, 880, 0, 0, 991, 993, 0, 899,
	939, 897, 1067, 1011, 0, 1009, 0, 1191, 0, 1221,
	267, 267, 931, 1009, 974, 267, 580, 582, 1763, 1783,
	1772, -2, 2239, 2019, 0, 1783, 1783, 1758, 1759, 0,
	0, 966, 1018, 1019, 0, 1014, 1015, 1016, 1958, 967,
	968, 1427, 1008, 0, 1017, 159, 931, 940, 0, 0,
	941, 0, 0, 125, 0, 127, 187, 205, 0, 0,
	0, 990, 0, 0, 0, 0, 885, 887, 1009, 0,
	931, 0, 1427, 246, 247, 939, 931, 248, 1768, 0,
	0, 1774, 1775, 1776, 1777, 1778, 1769, 1770, 958, 0,
	1020, 0, 1021, 0, 0, 0, 979, 0, 1022, 145,
	944, 0, 947, 0, 123, 0, 214, 215, 0, 992,
	888, 0, 890, 887, 896, 931, 0, 939, 0, 1218,
	1427, 939, 0, 1780, 1781, 0, 0, 0, 1023, 0,
	1026, 1027, 0, 1024, 0, 999, 0, 0, 0, 934,
	889, 881, 939, 1011, 885, 1009, 972, 1427, 1779, 1782,
	1773, 963, 1025, 1028, 1029, 1010, 981, 0, 0, 0,
	930, 932, 933, 885, 1009, 1427, 0, 931, 973, 939,
	0, 217, 0, 1427, 931, 1097, 939, 945, 0, 0,
	1095, 939, 885, 0, 218, 885, 1427, 0, 1427, 1098,
	939, 1096, 948,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 500, 3, 506, 501, 3,
	511, 512, 504, 502, 516, 503, 513, 505, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 519, 3,
	492, 494, 493, 497, 515, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 509, 3, 510, 507, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 517, 499, 518, 495,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 496,
	57835, 498, 57836, 508, 57837, 514, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1208
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1233
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1370
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1374
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1388
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1443
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1453
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1463
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1472
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1501
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1525
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1536
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1543
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1562
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1570
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1579
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1590
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1619
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1638
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1649
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1655
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1686
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1806
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1855
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = nil
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2000
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2004
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2011
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2058
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2115
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2123
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = nil
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2385
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2429
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2518
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2524
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2539
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2544
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2567
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2575
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2651
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2677
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2835
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2851
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2852
		{
			return helpWith(sqllex, "CREATE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return unimplemented(sqllex, "create cast")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2857
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2859
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2860
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2861
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2862
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create operator")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create publication")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create rule")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create server")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2877
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2880
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2881
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop server")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3025
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3060
		{

			sqlVAL.union.val = nil
		}
	case 396:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3088
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "DROP")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3365
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3389
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "DELETE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "INSERT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "DELETE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "INSERT")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3474
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "GRANT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "RESET")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "RESET")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "USE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3695
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "USE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			return unimplemented(sqllex, "set from current")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = tree.Low
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = tree.Normal
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.High
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "SHOW")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.str = "client_encoding"
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.str = "timezone"
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4169
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4217
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4226
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4333
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = false
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4535
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = true
		}
	case 787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = false
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4730
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4738
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4798
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4814
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "RESUME")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5168
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5210
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5225
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{

			sqlVAL.union.val = nil
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = nil
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5275
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5280
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 895:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5307
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5321
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5336
		{
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5424
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5434
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.str = ""
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 948:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5658
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5670
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5765
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5883
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5884
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5888
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6044
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6053
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6087
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6092
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = true
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{

			sqlVAL.union.val = true
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = false
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6180
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6194
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6206
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6218
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6280
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6299
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6301
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6305
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6307
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6345
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6363
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6382
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6399
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = false
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = true
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = false
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.str = ""
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6521
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6527
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6577
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6583
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6591
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6597
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6614
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6619
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6657
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6678
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6686
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6730
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6774
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6806
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6849
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.str = ""
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = ""
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.str = ""
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.str = ""
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6962
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7085
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7086
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = false
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7526
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = nil
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7540
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = false
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = false
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = true
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7570
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7611
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7637
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7814
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7851
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7861
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7903
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7942
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7952
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7998
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8028
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8061
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = nil
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = false
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.str = tree.AstFull
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.str = tree.AstRight
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.str = tree.AstInner
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8181
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.str = tree.AstHash
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.str = ""
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8243
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8266
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8272
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8330
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8338
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8357
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8367
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8387
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = types.Geography
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8473
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8481
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8515
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = nil
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = types.Int2
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = types.Int
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = types.Float4
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = types.Float
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8558
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = types.Bool
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8588
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = types.Float
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8607
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8613
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8635
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = types.String
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = types.Date
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8692
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8706
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8715
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8740
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = true
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = false
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = false
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = types.Interval
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8764
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = nil
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8893
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9271
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9492
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9518
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9542
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9572
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9583
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9584
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9674
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9855
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9870
		{
			return unimplemented(sqllex, "treat")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.str = ""
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10142
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = tree.Any
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = tree.Some
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = tree.All
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = tree.Div
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = tree.LT
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.GT
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.LE
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.GE
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.NE
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = tree.Like
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10504
		{
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10673
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10710
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10722
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10920
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.str = ""
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
