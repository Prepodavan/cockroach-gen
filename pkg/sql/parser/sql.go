// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11933

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1347,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	231, 202,
	481, 202,
	-2, 0,
	-1, 79,
	220, 1147,
	233, 1147,
	249, 340,
	372, 340,
	381, 929,
	413, 340,
	425, 929,
	466, 929,
	492, 340,
	518, 929,
	-2, 0,
	-1, 85,
	249, 344,
	-2, 0,
	-1, 86,
	128, 1347,
	226, 1347,
	503, 1347,
	504, 1347,
	-2, 0,
	-1, 102,
	145, 1318,
	163, 1318,
	176, 1318,
	229, 1318,
	262, 1318,
	325, 1318,
	335, 1318,
	498, 1318,
	-2, 1289,
	-1, 138,
	153, 808,
	248, 808,
	375, 777,
	430, 777,
	484, 808,
	486, 777,
	-2, 0,
	-1, 140,
	4, 1349,
	21, 1349,
	22, 1349,
	23, 1349,
	24, 1349,
	25, 1349,
	26, 1349,
	28, 1349,
	29, 1349,
	35, 1349,
	40, 1349,
	41, 1349,
	43, 1349,
	44, 1349,
	45, 1349,
	46, 1349,
	47, 1349,
	48, 1349,
	49, 1349,
	51, 1349,
	52, 1349,
	53, 1349,
	54, 1349,
	56, 1349,
	57, 1349,
	58, 1349,
	59, 1349,
	60, 1349,
	61, 1349,
	62, 1349,
	66, 1349,
	67, 1349,
	68, 1349,
	69, 1349,
	71, 1349,
	72, 1349,
	73, 1349,
	77, 1349,
	78, 1349,
	79, 1349,
	80, 1349,
	81, 1349,
	82, 1349,
	83, 1349,
	86, 1349,
	87, 1349,
	88, 1349,
	89, 1349,
	90, 1349,
	92, 1349,
	94, 1349,
	95, 1349,
	96, 1349,
	97, 1349,
	98, 1349,
	99, 1349,
	101, 1349,
	102, 1349,
	103, 1349,
	105, 1349,
	106, 1349,
	114, 1349,
	115, 1349,
	116, 1349,
	117, 1349,
	119, 1349,
	120, 1349,
	121, 1349,
	123, 1349,
	124, 1349,
	125, 1349,
	127, 1349,
	128, 1349,
	130, 1349,
	131, 1349,
	132, 1349,
	135, 1349,
	136, 1349,
	137, 1349,
	139, 1349,
	140, 1349,
	142, 1349,
	143, 1349,
	144, 1349,
	146, 1349,
	147, 1349,
	148, 1349,
	149, 1349,
	150, 1349,
	151, 1349,
	152, 1349,
	153, 1349,
	154, 1349,
	155, 1349,
	156, 1349,
	157, 1349,
	158, 1349,
	159, 1349,
	160, 1349,
	162, 1349,
	168, 1349,
	169, 1349,
	170, 1349,
	171, 1349,
	175, 1349,
	177, 1349,
	181, 1349,
	182, 1349,
	183, 1349,
	184, 1349,
	185, 1349,
	186, 1349,
	187, 1349,
	188, 1349,
	189, 1349,
	190, 1349,
	191, 1349,
	192, 1349,
	194, 1349,
	195, 1349,
	197, 1349,
	198, 1349,
	200, 1349,
	201, 1349,
	202, 1349,
	203, 1349,
	204, 1349,
	205, 1349,
	206, 1349,
	207, 1349,
	208, 1349,
	210, 1349,
	211, 1349,
	213, 1349,
	214, 1349,
	215, 1349,
	216, 1349,
	220, 1349,
	221, 1349,
	222, 1349,
	223, 1349,
	226, 1349,
	227, 1349,
	228, 1349,
	230, 1349,
	232, 1349,
	233, 1349,
	235, 1349,
	237, 1349,
	238, 1349,
	239, 1349,
	241, 1349,
	245, 1349,
	246, 1349,
	247, 1349,
	248, 1349,
	249, 1349,
	250, 1349,
	252, 1349,
	253, 1349,
	254, 1349,
	256, 1349,
	257, 1349,
	259, 1349,
	260, 1349,
	263, 1349,
	267, 1349,
	268, 1349,
	271, 1349,
	272, 1349,
	273, 1349,
	274, 1349,
	276, 1349,
	277, 1349,
	278, 1349,
	279, 1349,
	280, 1349,
	281, 1349,
	282, 1349,
	283, 1349,
	284, 1349,
	285, 1349,
	286, 1349,
	287, 1349,
	288, 1349,
	289, 1349,
	290, 1349,
	291, 1349,
	292, 1349,
	293, 1349,
	294, 1349,
	295, 1349,
	296, 1349,
	298, 1349,
	300, 1349,
	301, 1349,
	302, 1349,
	303, 1349,
	304, 1349,
	305, 1349,
	306, 1349,
	307, 1349,
	308, 1349,
	309, 1349,
	310, 1349,
	311, 1349,
	313, 1349,
	315, 1349,
	317, 1349,
	318, 1349,
	320, 1349,
	321, 1349,
	322, 1349,
	323, 1349,
	324, 1349,
	327, 1349,
	330, 1349,
	331, 1349,
	332, 1349,
	333, 1349,
	336, 1349,
	337, 1349,
	338, 1349,
	340, 1349,
	342, 1349,
	343, 1349,
	344, 1349,
	345, 1349,
	346, 1349,
	347, 1349,
	348, 1349,
	349, 1349,
	350, 1349,
	351, 1349,
	352, 1349,
	353, 1349,
	355, 1349,
	356, 1349,
	357, 1349,
	358, 1349,
	359, 1349,
	360, 1349,
	361, 1349,
	362, 1349,
	363, 1349,
	364, 1349,
	365, 1349,
	366, 1349,
	367, 1349,
	368, 1349,
	369, 1349,
	371, 1349,
	373, 1349,
	374, 1349,
	375, 1349,
	376, 1349,
	377, 1349,
	378, 1349,
	379, 1349,
	380, 1349,
	381, 1349,
	382, 1349,
	383, 1349,
	385, 1349,
	391, 1349,
	393, 1349,
	394, 1349,
	395, 1349,
	396, 1349,
	397, 1349,
	398, 1349,
	399, 1349,
	400, 1349,
	402, 1349,
	403, 1349,
	404, 1349,
	406, 1349,
	407, 1349,
	408, 1349,
	409, 1349,
	410, 1349,
	411, 1349,
	413, 1349,
	414, 1349,
	415, 1349,
	416, 1349,
	417, 1349,
	418, 1349,
	419, 1349,
	420, 1349,
	421, 1349,
	422, 1349,
	423, 1349,
	425, 1349,
	426, 1349,
	427, 1349,
	428, 1349,
	429, 1349,
	430, 1349,
	432, 1349,
	433, 1349,
	434, 1349,
	435, 1349,
	436, 1349,
	438, 1349,
	439, 1349,
	440, 1349,
	441, 1349,
	442, 1349,
	443, 1349,
	444, 1349,
	446, 1349,
	448, 1349,
	449, 1349,
	450, 1349,
	451, 1349,
	452, 1349,
	453, 1349,
	454, 1349,
	455, 1349,
	456, 1349,
	457, 1349,
	458, 1349,
	459, 1349,
	460, 1349,
	462, 1349,
	463, 1349,
	465, 1349,
	467, 1349,
	468, 1349,
	469, 1349,
	470, 1349,
	471, 1349,
	472, 1349,
	473, 1349,
	474, 1349,
	476, 1349,
	477, 1349,
	478, 1349,
	479, 1349,
	480, 1349,
	482, 1349,
	484, 1349,
	485, 1349,
	486, 1349,
	487, 1349,
	488, 1349,
	489, 1349,
	491, 1349,
	492, 1349,
	493, 1349,
	494, 1349,
	496, 1349,
	497, 1349,
	500, 1349,
	501, 1349,
	502, 1349,
	503, 1349,
	504, 1349,
	505, 1349,
	506, 1349,
	508, 1349,
	511, 1349,
	512, 1349,
	513, 1349,
	514, 1349,
	515, 1349,
	516, 1349,
	518, 1349,
	519, 1349,
	520, 1349,
	521, 1349,
	526, 1349,
	527, 1349,
	528, 1349,
	529, 1349,
	530, 1349,
	531, 1349,
	-2, 0,
	-1, 141,
	1, 1220,
	126, 1220,
	237, 1220,
	314, 1220,
	371, 1220,
	379, 1220,
	534, 1220,
	558, 1220,
	-2, 0,
	-1, 143,
	1, 1220,
	558, 1220,
	-2, 0,
	-1, 144,
	1, 1220,
	558, 1220,
	-2, 0,
	-1, 145,
	1, 1220,
	481, 1220,
	558, 1220,
	-2, 0,
	-1, 174,
	145, 1317,
	163, 1317,
	176, 1317,
	229, 1317,
	262, 1317,
	325, 1317,
	335, 1317,
	498, 1317,
	-2, 1292,
	-1, 212,
	4, 1356,
	5, 1356,
	6, 1356,
	7, 1356,
	8, 1356,
	9, 1356,
	10, 1356,
	21, 1356,
	22, 1356,
	23, 1356,
	24, 1356,
	25, 1356,
	26, 1356,
	28, 1356,
	29, 1356,
	35, 1356,
	36, 1356,
	40, 1356,
	41, 1356,
	42, 1356,
	43, 1356,
	44, 1356,
	45, 1356,
	46, 1356,
	47, 1356,
	48, 1356,
	49, 1356,
	51, 1356,
	52, 1356,
	53, 1356,
	54, 1356,
	56, 1356,
	57, 1356,
	58, 1356,
	59, 1356,
	60, 1356,
	61, 1356,
	62, 1356,
	63, 1356,
	64, 1356,
	65, 1356,
	66, 1356,
	67, 1356,
	68, 1356,
	69, 1356,
	71, 1356,
	72, 1356,
	73, 1356,
	75, 1356,
	77, 1356,
	78, 1356,
	79, 1356,
	80, 1356,
	81, 1356,
	82, 1356,
	83, 1356,
	86, 1356,
	87, 1356,
	88, 1356,
	89, 1356,
	90, 1356,
	92, 1356,
	94, 1356,
	95, 1356,
	96, 1356,
	97, 1356,
	98, 1356,
	99, 1356,
	101, 1356,
	102, 1356,
	103, 1356,
	104, 1356,
	105, 1356,
	106, 1356,
	107, 1356,
	108, 1356,
	109, 1356,
	110, 1356,
	111, 1356,
	112, 1356,
	113, 1356,
	114, 1356,
	115, 1356,
	116, 1356,
	117, 1356,
	118, 1356,
	119, 1356,
	120, 1356,
	121, 1356,
	122, 1356,
	123, 1356,
	124, 1356,
	125, 1356,
	127, 1356,
	128, 1356,
	130, 1356,
	131, 1356,
	132, 1356,
	135, 1356,
	136, 1356,
	137, 1356,
	139, 1356,
	140, 1356,
	142, 1356,
	143, 1356,
	144, 1356,
	146, 1356,
	147, 1356,
	148, 1356,
	149, 1356,
	150, 1356,
	151, 1356,
	152, 1356,
	153, 1356,
	154, 1356,
	155, 1356,
	156, 1356,
	157, 1356,
	158, 1356,
	159, 1356,
	160, 1356,
	161, 1356,
	162, 1356,
	168, 1356,
	169, 1356,
	170, 1356,
	171, 1356,
	175, 1356,
	177, 1356,
	180, 1356,
	181, 1356,
	182, 1356,
	183, 1356,
	184, 1356,
	185, 1356,
	186, 1356,
	187, 1356,
	188, 1356,
	189, 1356,
	190, 1356,
	191, 1356,
	192, 1356,
	194, 1356,
	195, 1356,
	197, 1356,
	198, 1356,
	200, 1356,
	201, 1356,
	202, 1356,
	203, 1356,
	204, 1356,
	205, 1356,
	206, 1356,
	207, 1356,
	208, 1356,
	209, 1356,
	210, 1356,
	211, 1356,
	213, 1356,
	214, 1356,
	215, 1356,
	216, 1356,
	220, 1356,
	221, 1356,
	222, 1356,
	223, 1356,
	225, 1356,
	226, 1356,
	227, 1356,
	228, 1356,
	230, 1356,
	232, 1356,
	233, 1356,
	234, 1356,
	235, 1356,
	236, 1356,
	237, 1356,
	238, 1356,
	239, 1356,
	240, 1356,
	241, 1356,
	245, 1356,
	246, 1356,
	247, 1356,
	248, 1356,
	249, 1356,
	250, 1356,
	252, 1356,
	253, 1356,
	254, 1356,
	256, 1356,
	257, 1356,
	258, 1356,
	259, 1356,
	260, 1356,
	261, 1356,
	263, 1356,
	267, 1356,
	268, 1356,
	269, 1356,
	270, 1356,
	271, 1356,
	272, 1356,
	273, 1356,
	274, 1356,
	276, 1356,
	277, 1356,
	278, 1356,
	279, 1356,
	280, 1356,
	281, 1356,
	282, 1356,
	283, 1356,
	284, 1356,
	285, 1356,
	286, 1356,
	287, 1356,
	288, 1356,
	289, 1356,
	290, 1356,
	291, 1356,
	292, 1356,
	293, 1356,
	294, 1356,
	295, 1356,
	296, 1356,
	298, 1356,
	299, 1356,
	300, 1356,
	301, 1356,
	302, 1356,
	303, 1356,
	304, 1356,
	305, 1356,
	306, 1356,
	307, 1356,
	308, 1356,
	309, 1356,
	310, 1356,
	311, 1356,
	312, 1356,
	313, 1356,
	314, 1356,
	315, 1356,
	316, 1356,
	317, 1356,
	318, 1356,
	319, 1356,
	320, 1356,
	321, 1356,
	322, 1356,
	323, 1356,
	324, 1356,
	327, 1356,
	331, 1356,
	332, 1356,
	333, 1356,
	336, 1356,
	337, 1356,
	338, 1356,
	339, 1356,
	340, 1356,
	341, 1356,
	342, 1356,
	343, 1356,
	344, 1356,
	345, 1356,
	346, 1356,
	347, 1356,
	348, 1356,
	349, 1356,
	350, 1356,
	351, 1356,
	352, 1356,
	353, 1356,
	355, 1356,
	356, 1356,
	357, 1356,
	358, 1356,
	359, 1356,
	360, 1356,
	361, 1356,
	362, 1356,
	363, 1356,
	364, 1356,
	365, 1356,
	366, 1356,
	367, 1356,
	368, 1356,
	369, 1356,
	371, 1356,
	373, 1356,
	374, 1356,
	375, 1356,
	376, 1356,
	377, 1356,
	378, 1356,
	379, 1356,
	380, 1356,
	381, 1356,
	382, 1356,
	383, 1356,
	385, 1356,
	391, 1356,
	393, 1356,
	394, 1356,
	395, 1356,
	396, 1356,
	397, 1356,
	398, 1356,
	399, 1356,
	400, 1356,
	402, 1356,
	403, 1356,
	404, 1356,
	405, 1356,
	406, 1356,
	407, 1356,
	408, 1356,
	409, 1356,
	410, 1356,
	411, 1356,
	413, 1356,
	414, 1356,
	415, 1356,
	416, 1356,
	417, 1356,
	418, 1356,
	419, 1356,
	420, 1356,
	421, 1356,
	422, 1356,
	423, 1356,
	425, 1356,
	426, 1356,
	427, 1356,
	428, 1356,
	429, 1356,
	430, 1356,
	431, 1356,
	432, 1356,
	433, 1356,
	434, 1356,
	435, 1356,
	436, 1356,
	437, 1356,
	438, 1356,
	439, 1356,
	440, 1356,
	441, 1356,
	442, 1356,
	443, 1356,
	444, 1356,
	446, 1356,
	448, 1356,
	449, 1356,
	450, 1356,
	451, 1356,
	452, 1356,
	453, 1356,
	454, 1356,
	455, 1356,
	456, 1356,
	457, 1356,
	458, 1356,
	459, 1356,
	460, 1356,
	462, 1356,
	463, 1356,
	464, 1356,
	465, 1356,
	467, 1356,
	468, 1356,
	469, 1356,
	470, 1356,
	471, 1356,
	472, 1356,
	473, 1356,
	474, 1356,
	476, 1356,
	477, 1356,
	478, 1356,
	479, 1356,
	480, 1356,
	482, 1356,
	484, 1356,
	485, 1356,
	486, 1356,
	487, 1356,
	488, 1356,
	489, 1356,
	490, 1356,
	491, 1356,
	492, 1356,
	493, 1356,
	494, 1356,
	496, 1356,
	497, 1356,
	499, 1356,
	500, 1356,
	501, 1356,
	502, 1356,
	503, 1356,
	504, 1356,
	505, 1356,
	506, 1356,
	507, 1356,
	508, 1356,
	511, 1356,
	512, 1356,
	513, 1356,
	514, 1356,
	515, 1356,
	516, 1356,
	518, 1356,
	519, 1356,
	520, 1356,
	521, 1356,
	526, 1356,
	527, 1356,
	528, 1356,
	529, 1356,
	530, 1356,
	531, 1356,
	532, 1356,
	539, 1356,
	546, 1356,
	547, 1356,
	548, 1356,
	555, 1356,
	559, 1356,
	-2, 0,
	-1, 665,
	179, 2095,
	481, 2095,
	538, 2095,
	557, 2095,
	-2, 0,
	-1, 666,
	179, 2193,
	481, 2193,
	538, 2193,
	557, 2193,
	-2, 0,
	-1, 667,
	179, 2082,
	481, 2082,
	538, 2082,
	557, 2082,
	-2, 0,
	-1, 669,
	179, 2315,
	481, 2315,
	538, 2315,
	557, 2315,
	-2, 0,
	-1, 671,
	179, 2349,
	481, 2349,
	538, 2349,
	557, 2349,
	-2, 0,
	-1, 678,
	179, 2218,
	481, 2218,
	538, 2218,
	557, 2218,
	-2, 619,
	-1, 709,
	557, 2033,
	560, 2033,
	-2, 866,
	-1, 710,
	557, 2035,
	560, 2035,
	-2, 867,
	-1, 711,
	557, 2034,
	560, 2034,
	-2, 868,
	-1, 712,
	560, 1967,
	-2, 869,
	-1, 734,
	176, 216,
	-2, 0,
	-1, 755,
	42, 2037,
	-2, 0,
	-1, 756,
	518, 1124,
	-2, 930,
	-1, 772,
	4, 1476,
	21, 1476,
	22, 1476,
	23, 1476,
	24, 1476,
	25, 1476,
	26, 1476,
	28, 1476,
	29, 1476,
	35, 1476,
	40, 1476,
	41, 1476,
	43, 1476,
	44, 1476,
	45, 1476,
	46, 1476,
	47, 1476,
	48, 1476,
	49, 1476,
	51, 1476,
	52, 1476,
	53, 1476,
	54, 1476,
	56, 1476,
	57, 1476,
	58, 1476,
	59, 1476,
	60, 1476,
	61, 1476,
	62, 1476,
	66, 1476,
	67, 1476,
	68, 1476,
	69, 1476,
	71, 1476,
	72, 1476,
	73, 1476,
	77, 1476,
	78, 1476,
	79, 1476,
	80, 1476,
	81, 1476,
	82, 1476,
	83, 1476,
	86, 1476,
	87, 1476,
	88, 1476,
	89, 1476,
	90, 1476,
	92, 1476,
	94, 1476,
	95, 1476,
	96, 1476,
	97, 1476,
	98, 1476,
	99, 1476,
	101, 1476,
	102, 1476,
	103, 1476,
	105, 1476,
	106, 1476,
	114, 1476,
	115, 1476,
	116, 1476,
	117, 1476,
	119, 1476,
	120, 1476,
	121, 1476,
	123, 1476,
	124, 1476,
	125, 1476,
	127, 1476,
	128, 1476,
	130, 1476,
	131, 1476,
	132, 1476,
	135, 1476,
	136, 1476,
	137, 1476,
	139, 1476,
	140, 1476,
	142, 1476,
	143, 1476,
	144, 1476,
	146, 1476,
	147, 1476,
	148, 1476,
	149, 1476,
	150, 1476,
	151, 1476,
	152, 1476,
	153, 1476,
	154, 1476,
	155, 1476,
	156, 1476,
	157, 1476,
	158, 1476,
	159, 1476,
	160, 1476,
	162, 1476,
	168, 1476,
	169, 1476,
	170, 1476,
	171, 1476,
	175, 1476,
	177, 1476,
	181, 1476,
	182, 1476,
	183, 1476,
	184, 1476,
	185, 1476,
	186, 1476,
	187, 1476,
	188, 1476,
	189, 1476,
	190, 1476,
	191, 1476,
	192, 1476,
	194, 1476,
	195, 1476,
	197, 1476,
	198, 1476,
	200, 1476,
	201, 1476,
	202, 1476,
	203, 1476,
	204, 1476,
	205, 1476,
	206, 1476,
	207, 1476,
	208, 1476,
	210, 1476,
	211, 1476,
	213, 1476,
	214, 1476,
	215, 1476,
	216, 1476,
	220, 1476,
	221, 1476,
	222, 1476,
	223, 1476,
	226, 1476,
	227, 1476,
	228, 1476,
	230, 1476,
	232, 1476,
	233, 1476,
	235, 1476,
	237, 1476,
	238, 1476,
	239, 1476,
	241, 1476,
	245, 1476,
	246, 1476,
	247, 1476,
	248, 1476,
	249, 1476,
	250, 1476,
	252, 1476,
	253, 1476,
	254, 1476,
	256, 1476,
	257, 1476,
	259, 1476,
	260, 1476,
	263, 1476,
	267, 1476,
	268, 1476,
	271, 1476,
	272, 1476,
	273, 1476,
	274, 1476,
	276, 1476,
	277, 1476,
	278, 1476,
	279, 1476,
	280, 1476,
	281, 1476,
	282, 1476,
	283, 1476,
	284, 1476,
	285, 1476,
	286, 1476,
	287, 1476,
	288, 1476,
	289, 1476,
	290, 1476,
	291, 1476,
	292, 1476,
	293, 1476,
	294, 1476,
	295, 1476,
	296, 1476,
	298, 1476,
	300, 1476,
	301, 1476,
	302, 1476,
	303, 1476,
	304, 1476,
	305, 1476,
	306, 1476,
	307, 1476,
	308, 1476,
	309, 1476,
	310, 1476,
	311, 1476,
	313, 1476,
	315, 1476,
	317, 1476,
	318, 1476,
	320, 1476,
	321, 1476,
	322, 1476,
	323, 1476,
	324, 1476,
	327, 1476,
	331, 1476,
	332, 1476,
	333, 1476,
	336, 1476,
	337, 1476,
	338, 1476,
	340, 1476,
	342, 1476,
	343, 1476,
	344, 1476,
	345, 1476,
	346, 1476,
	347, 1476,
	348, 1476,
	349, 1476,
	350, 1476,
	351, 1476,
	352, 1476,
	353, 1476,
	355, 1476,
	356, 1476,
	357, 1476,
	358, 1476,
	359, 1476,
	360, 1476,
	361, 1476,
	362, 1476,
	363, 1476,
	364, 1476,
	365, 1476,
	366, 1476,
	367, 1476,
	368, 1476,
	369, 1476,
	371, 1476,
	373, 1476,
	374, 1476,
	375, 1476,
	376, 1476,
	377, 1476,
	378, 1476,
	379, 1476,
	380, 1476,
	381, 1476,
	382, 1476,
	383, 1476,
	385, 1476,
	391, 1476,
	393, 1476,
	394, 1476,
	395, 1476,
	396, 1476,
	397, 1476,
	398, 1476,
	399, 1476,
	400, 1476,
	402, 1476,
	403, 1476,
	404, 1476,
	406, 1476,
	407, 1476,
	408, 1476,
	409, 1476,
	410, 1476,
	411, 1476,
	413, 1476,
	414, 1476,
	415, 1476,
	416, 1476,
	417, 1476,
	418, 1476,
	419, 1476,
	420, 1476,
	421, 1476,
	422, 1476,
	423, 1476,
	425, 1476,
	426, 1476,
	427, 1476,
	428, 1476,
	429, 1476,
	430, 1476,
	432, 1476,
	433, 1476,
	434, 1476,
	435, 1476,
	436, 1476,
	438, 1476,
	439, 1476,
	440, 1476,
	441, 1476,
	442, 1476,
	443, 1476,
	444, 1476,
	446, 1476,
	448, 1476,
	449, 1476,
	450, 1476,
	451, 1476,
	452, 1476,
	453, 1476,
	454, 1476,
	455, 1476,
	456, 1476,
	457, 1476,
	458, 1476,
	459, 1476,
	460, 1476,
	462, 1476,
	463, 1476,
	465, 1476,
	467, 1476,
	468, 1476,
	469, 1476,
	470, 1476,
	471, 1476,
	472, 1476,
	473, 1476,
	474, 1476,
	476, 1476,
	477, 1476,
	478, 1476,
	479, 1476,
	480, 1476,
	482, 1476,
	484, 1476,
	485, 1476,
	486, 1476,
	487, 1476,
	488, 1476,
	489, 1476,
	491, 1476,
	492, 1476,
	493, 1476,
	494, 1476,
	496, 1476,
	497, 1476,
	500, 1476,
	501, 1476,
	502, 1476,
	503, 1476,
	504, 1476,
	505, 1476,
	506, 1476,
	508, 1476,
	511, 1476,
	512, 1476,
	513, 1476,
	514, 1476,
	515, 1476,
	516, 1476,
	518, 1476,
	519, 1476,
	520, 1476,
	521, 1476,
	526, 1476,
	527, 1476,
	528, 1476,
	529, 1476,
	530, 1476,
	531, 1476,
	-2, 0,
	-1, 796,
	4, 1145,
	21, 1145,
	22, 1145,
	23, 1145,
	24, 1145,
	25, 1145,
	26, 1145,
	28, 1145,
	29, 1145,
	35, 1145,
	40, 1145,
	41, 1145,
	43, 1145,
	44, 1145,
	45, 1145,
	46, 1145,
	47, 1145,
	48, 1145,
	49, 1145,
	51, 1145,
	52, 1145,
	53, 1145,
	54, 1145,
	56, 1145,
	57, 1145,
	58, 1145,
	59, 1145,
	60, 1145,
	61, 1145,
	62, 1145,
	66, 1145,
	67, 1145,
	68, 1145,
	69, 1145,
	71, 1145,
	72, 1145,
	73, 1145,
	77, 1145,
	78, 1145,
	79, 1145,
	80, 1145,
	81, 1145,
	82, 1145,
	83, 1145,
	86, 1145,
	87, 1145,
	88, 1145,
	89, 1145,
	90, 1145,
	92, 1145,
	94, 1145,
	95, 1145,
	96, 1145,
	97, 1145,
	98, 1145,
	99, 1145,
	101, 1145,
	102, 1145,
	103, 1145,
	105, 1145,
	106, 1145,
	114, 1145,
	115, 1145,
	116, 1145,
	117, 1145,
	119, 1145,
	120, 1145,
	121, 1145,
	123, 1145,
	124, 1145,
	125, 1145,
	127, 1145,
	128, 1145,
	130, 1145,
	131, 1145,
	132, 1145,
	135, 1145,
	136, 1145,
	137, 1145,
	139, 1145,
	140, 1145,
	142, 1145,
	143, 1145,
	144, 1145,
	146, 1145,
	147, 1145,
	148, 1145,
	149, 1145,
	150, 1145,
	151, 1145,
	152, 1145,
	153, 1145,
	154, 1145,
	155, 1145,
	156, 1145,
	157, 1145,
	158, 1145,
	159, 1145,
	160, 1145,
	162, 1145,
	168, 1145,
	169, 1145,
	170, 1145,
	171, 1145,
	175, 1145,
	177, 1145,
	181, 1145,
	182, 1145,
	183, 1145,
	184, 1145,
	185, 1145,
	186, 1145,
	187, 1145,
	188, 1145,
	189, 1145,
	190, 1145,
	191, 1145,
	192, 1145,
	194, 1145,
	195, 1145,
	197, 1145,
	198, 1145,
	200, 1145,
	201, 1145,
	202, 1145,
	203, 1145,
	204, 1145,
	205, 1145,
	206, 1145,
	207, 1145,
	208, 1145,
	210, 1145,
	211, 1145,
	213, 1145,
	214, 1145,
	215, 1145,
	216, 1145,
	220, 1145,
	221, 1145,
	222, 1145,
	223, 1145,
	226, 1145,
	227, 1145,
	228, 1145,
	230, 1145,
	232, 1145,
	233, 1145,
	235, 1145,
	237, 1145,
	238, 1145,
	239, 1145,
	241, 1145,
	245, 1145,
	246, 1145,
	247, 1145,
	248, 1145,
	249, 1145,
	250, 1145,
	252, 1145,
	253, 1145,
	254, 1145,
	256, 1145,
	257, 1145,
	259, 1145,
	260, 1145,
	263, 1145,
	267, 1145,
	268, 1145,
	271, 1145,
	272, 1145,
	273, 1145,
	274, 1145,
	276, 1145,
	277, 1145,
	278, 1145,
	279, 1145,
	280, 1145,
	281, 1145,
	282, 1145,
	283, 1145,
	284, 1145,
	285, 1145,
	286, 1145,
	287, 1145,
	288, 1145,
	289, 1145,
	290, 1145,
	291, 1145,
	292, 1145,
	293, 1145,
	294, 1145,
	295, 1145,
	296, 1145,
	298, 1145,
	300, 1145,
	301, 1145,
	302, 1145,
	303, 1145,
	304, 1145,
	305, 1145,
	306, 1145,
	307, 1145,
	308, 1145,
	309, 1145,
	310, 1145,
	311, 1145,
	313, 1145,
	315, 1145,
	317, 1145,
	318, 1145,
	320, 1145,
	321, 1145,
	322, 1145,
	323, 1145,
	324, 1145,
	327, 1145,
	331, 1145,
	332, 1145,
	333, 1145,
	336, 1145,
	337, 1145,
	338, 1145,
	340, 1145,
	342, 1145,
	343, 1145,
	344, 1145,
	345, 1145,
	346, 1145,
	347, 1145,
	348, 1145,
	349, 1145,
	350, 1145,
	351, 1145,
	352, 1145,
	353, 1145,
	355, 1145,
	356, 1145,
	357, 1145,
	358, 1145,
	359, 1145,
	360, 1145,
	361, 1145,
	362, 1145,
	363, 1145,
	364, 1145,
	365, 1145,
	366, 1145,
	367, 1145,
	368, 1145,
	369, 1145,
	371, 1145,
	373, 1145,
	374, 1145,
	375, 1145,
	376, 1145,
	377, 1145,
	378, 1145,
	379, 1145,
	380, 1145,
	381, 1145,
	382, 1145,
	383, 1145,
	385, 1145,
	391, 1145,
	393, 1145,
	394, 1145,
	395, 1145,
	396, 1145,
	397, 1145,
	398, 1145,
	399, 1145,
	400, 1145,
	402, 1145,
	403, 1145,
	404, 1145,
	406, 1145,
	407, 1145,
	408, 1145,
	409, 1145,
	410, 1145,
	411, 1145,
	413, 1145,
	414, 1145,
	415, 1145,
	416, 1145,
	417, 1145,
	418, 1145,
	419, 1145,
	420, 1145,
	421, 1145,
	422, 1145,
	423, 1145,
	425, 1145,
	426, 1145,
	427, 1145,
	428, 1145,
	429, 1145,
	430, 1145,
	432, 1145,
	433, 1145,
	434, 1145,
	435, 1145,
	436, 1145,
	438, 1145,
	439, 1145,
	440, 1145,
	441, 1145,
	442, 1145,
	443, 1145,
	444, 1145,
	446, 1145,
	448, 1145,
	449, 1145,
	450, 1145,
	451, 1145,
	452, 1145,
	453, 1145,
	454, 1145,
	455, 1145,
	456, 1145,
	457, 1145,
	458, 1145,
	459, 1145,
	460, 1145,
	462, 1145,
	463, 1145,
	465, 1145,
	467, 1145,
	468, 1145,
	469, 1145,
	470, 1145,
	471, 1145,
	472, 1145,
	473, 1145,
	474, 1145,
	476, 1145,
	477, 1145,
	478, 1145,
	479, 1145,
	480, 1145,
	482, 1145,
	484, 1145,
	485, 1145,
	486, 1145,
	487, 1145,
	488, 1145,
	489, 1145,
	491, 1145,
	492, 1145,
	493, 1145,
	494, 1145,
	496, 1145,
	497, 1145,
	500, 1145,
	501, 1145,
	502, 1145,
	503, 1145,
	504, 1145,
	505, 1145,
	506, 1145,
	508, 1145,
	511, 1145,
	512, 1145,
	513, 1145,
	514, 1145,
	515, 1145,
	516, 1145,
	518, 1145,
	519, 1145,
	520, 1145,
	521, 1145,
	526, 1145,
	527, 1145,
	528, 1145,
	529, 1145,
	530, 1145,
	531, 1145,
	-2, 0,
	-1, 877,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 878,
	375, 777,
	430, 777,
	486, 777,
	-2, 719,
	-1, 882,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 883,
	1, 754,
	554, 754,
	556, 754,
	558, 754,
	-2, 0,
	-1, 884,
	1, 756,
	554, 756,
	556, 756,
	558, 756,
	-2, 0,
	-1, 885,
	1, 865,
	176, 865,
	554, 865,
	556, 865,
	558, 865,
	-2, 0,
	-1, 893,
	1, 781,
	554, 781,
	556, 781,
	558, 781,
	-2, 0,
	-1, 899,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 900,
	1, 824,
	554, 824,
	556, 824,
	558, 824,
	-2, 0,
	-1, 901,
	1, 827,
	554, 827,
	556, 827,
	558, 827,
	-2, 0,
	-1, 907,
	1, 844,
	554, 844,
	556, 844,
	558, 844,
	-2, 0,
	-1, 908,
	1, 846,
	554, 846,
	556, 846,
	558, 846,
	-2, 0,
	-1, 957,
	163, 1358,
	176, 1358,
	262, 1358,
	325, 1358,
	-2, 1296,
	-1, 972,
	163, 1357,
	176, 1357,
	262, 1357,
	325, 1357,
	-2, 1293,
	-1, 998,
	557, 2032,
	-2, 627,
	-1, 1026,
	5, 2024,
	555, 2022,
	-2, 2013,
	-1, 1034,
	5, 2045,
	555, 2042,
	-2, 2033,
	-1, 1035,
	5, 2046,
	555, 2043,
	-2, 2034,
	-1, 1043,
	557, 2030,
	-2, 2012,
	-1, 1044,
	555, 2431,
	-2, 2031,
	-1, 1067,
	555, 2430,
	-2, 2047,
	-1, 1068,
	5, 1551,
	-2, 2401,
	-1, 1069,
	5, 1552,
	-2, 2402,
	-1, 1070,
	5, 1553,
	-2, 2416,
	-1, 1071,
	5, 1554,
	-2, 2380,
	-1, 1072,
	5, 1555,
	-2, 2414,
	-1, 1073,
	5, 1563,
	-2, 2393,
	-1, 1074,
	5, 1550,
	-2, 2389,
	-1, 1075,
	5, 1550,
	-2, 2388,
	-1, 1076,
	5, 1550,
	-2, 2407,
	-1, 1077,
	5, 1561,
	-2, 2382,
	-1, 1078,
	5, 1566,
	-2, 2381,
	-1, 1079,
	5, 1568,
	-2, 2426,
	-1, 1082,
	5, 1590,
	-2, 2419,
	-1, 1083,
	5, 1582,
	-2, 2420,
	-1, 1084,
	5, 1590,
	-2, 2421,
	-1, 1085,
	5, 1586,
	-2, 2422,
	-1, 1086,
	5, 1536,
	-2, 2394,
	-1, 1087,
	5, 1537,
	-2, 2395,
	-1, 1088,
	5, 1538,
	-2, 2383,
	-1, 1116,
	5, 1573,
	-2, 2427,
	-1, 1117,
	5, 1574,
	-2, 2417,
	-1, 1118,
	5, 1575,
	519, 1575,
	-2, 2384,
	-1, 1119,
	5, 1576,
	519, 1576,
	-2, 2385,
	-1, 1156,
	555, 2042,
	-2, 2033,
	-1, 1157,
	555, 2043,
	-2, 2034,
	-1, 1187,
	179, 2349,
	481, 2349,
	538, 2349,
	557, 2349,
	-2, 0,
	-1, 1190,
	1, 605,
	558, 605,
	-2, 1228,
	-1, 1318,
	393, 2008,
	432, 2008,
	548, 2008,
	-2, 2005,
	-1, 1330,
	559, 2008,
	-2, 2009,
	-1, 1337,
	1, 1121,
	554, 1121,
	556, 1121,
	558, 1121,
	-2, 1345,
	-1, 1391,
	381, 929,
	518, 929,
	-2, 339,
	-1, 1410,
	42, 2036,
	-2, 2006,
	-1, 1415,
	1, 1121,
	554, 1121,
	556, 1121,
	558, 1121,
	-2, 1345,
	-1, 1422,
	4, 1145,
	21, 1145,
	22, 1145,
	23, 1145,
	24, 1145,
	25, 1145,
	26, 1145,
	28, 1145,
	29, 1145,
	35, 1145,
	40, 1145,
	41, 1145,
	43, 1145,
	44, 1145,
	45, 1145,
	46, 1145,
	47, 1145,
	48, 1145,
	49, 1145,
	51, 1145,
	52, 1145,
	53, 1145,
	54, 1145,
	56, 1145,
	57, 1145,
	58, 1145,
	59, 1145,
	60, 1145,
	61, 1145,
	62, 1145,
	66, 1145,
	67, 1145,
	68, 1145,
	69, 1145,
	71, 1145,
	72, 1145,
	73, 1145,
	77, 1145,
	78, 1145,
	79, 1145,
	80, 1145,
	81, 1145,
	82, 1145,
	83, 1145,
	86, 1145,
	87, 1145,
	88, 1145,
	89, 1145,
	90, 1145,
	92, 1145,
	94, 1145,
	95, 1145,
	96, 1145,
	97, 1145,
	98, 1145,
	99, 1145,
	101, 1145,
	102, 1145,
	103, 1145,
	105, 1145,
	106, 1145,
	114, 1145,
	115, 1145,
	116, 1145,
	117, 1145,
	119, 1145,
	120, 1145,
	121, 1145,
	123, 1145,
	124, 1145,
	125, 1145,
	127, 1145,
	128, 1145,
	130, 1145,
	131, 1145,
	132, 1145,
	135, 1145,
	136, 1145,
	137, 1145,
	139, 1145,
	140, 1145,
	142, 1145,
	143, 1145,
	144, 1145,
	146, 1145,
	147, 1145,
	148, 1145,
	149, 1145,
	150, 1145,
	151, 1145,
	152, 1145,
	153, 1145,
	154, 1145,
	155, 1145,
	156, 1145,
	157, 1145,
	158, 1145,
	159, 1145,
	160, 1145,
	168, 1145,
	169, 1145,
	170, 1145,
	171, 1145,
	175, 1145,
	177, 1145,
	181, 1145,
	182, 1145,
	183, 1145,
	184, 1145,
	185, 1145,
	186, 1145,
	187, 1145,
	188, 1145,
	189, 1145,
	190, 1145,
	191, 1145,
	192, 1145,
	194, 1145,
	195, 1145,
	197, 1145,
	198, 1145,
	200, 1145,
	201, 1145,
	202, 1145,
	203, 1145,
	204, 1145,
	205, 1145,
	206, 1145,
	207, 1145,
	208, 1145,
	210, 1145,
	211, 1145,
	213, 1145,
	214, 1145,
	215, 1145,
	216, 1145,
	221, 1145,
	222, 1145,
	223, 1145,
	226, 1145,
	227, 1145,
	228, 1145,
	230, 1145,
	232, 1145,
	233, 1145,
	235, 1145,
	237, 1145,
	238, 1145,
	239, 1145,
	241, 1145,
	245, 1145,
	246, 1145,
	247, 1145,
	248, 1145,
	249, 1145,
	250, 1145,
	252, 1145,
	253, 1145,
	254, 1145,
	256, 1145,
	257, 1145,
	259, 1145,
	260, 1145,
	263, 1145,
	267, 1145,
	268, 1145,
	271, 1145,
	272, 1145,
	273, 1145,
	274, 1145,
	276, 1145,
	277, 1145,
	278, 1145,
	279, 1145,
	280, 1145,
	281, 1145,
	282, 1145,
	283, 1145,
	284, 1145,
	285, 1145,
	286, 1145,
	287, 1145,
	288, 1145,
	289, 1145,
	290, 1145,
	291, 1145,
	292, 1145,
	293, 1145,
	294, 1145,
	295, 1145,
	296, 1145,
	298, 1145,
	300, 1145,
	301, 1145,
	302, 1145,
	303, 1145,
	304, 1145,
	305, 1145,
	306, 1145,
	307, 1145,
	308, 1145,
	309, 1145,
	310, 1145,
	311, 1145,
	313, 1145,
	317, 1145,
	318, 1145,
	320, 1145,
	321, 1145,
	322, 1145,
	323, 1145,
	324, 1145,
	327, 1145,
	329, 1145,
	331, 1145,
	332, 1145,
	333, 1145,
	336, 1145,
	337, 1145,
	338, 1145,
	340, 1145,
	342, 1145,
	343, 1145,
	344, 1145,
	345, 1145,
	346, 1145,
	347, 1145,
	348, 1145,
	349, 1145,
	350, 1145,
	351, 1145,
	352, 1145,
	353, 1145,
	355, 1145,
	356, 1145,
	357, 1145,
	358, 1145,
	359, 1145,
	360, 1145,
	361, 1145,
	362, 1145,
	363, 1145,
	364, 1145,
	365, 1145,
	366, 1145,
	367, 1145,
	368, 1145,
	369, 1145,
	371, 1145,
	373, 1145,
	374, 1145,
	375, 1145,
	376, 1145,
	377, 1145,
	378, 1145,
	379, 1145,
	380, 1145,
	381, 1145,
	382, 1145,
	383, 1145,
	385, 1145,
	391, 1145,
	393, 1145,
	394, 1145,
	395, 1145,
	396, 1145,
	397, 1145,
	398, 1145,
	399, 1145,
	400, 1145,
	402, 1145,
	403, 1145,
	404, 1145,
	406, 1145,
	407, 1145,
	408, 1145,
	409, 1145,
	410, 1145,
	411, 1145,
	413, 1145,
	414, 1145,
	415, 1145,
	416, 1145,
	417, 1145,
	418, 1145,
	419, 1145,
	420, 1145,
	421, 1145,
	422, 1145,
	423, 1145,
	425, 1145,
	426, 1145,
	427, 1145,
	428, 1145,
	429, 1145,
	430, 1145,
	432, 1145,
	433, 1145,
	434, 1145,
	435, 1145,
	436, 1145,
	438, 1145,
	439, 1145,
	440, 1145,
	441, 1145,
	442, 1145,
	443, 1145,
	444, 1145,
	446, 1145,
	448, 1145,
	449, 1145,
	450, 1145,
	451, 1145,
	452, 1145,
	453, 1145,
	454, 1145,
	455, 1145,
	456, 1145,
	457, 1145,
	458, 1145,
	459, 1145,
	460, 1145,
	462, 1145,
	463, 1145,
	465, 1145,
	467, 1145,
	468, 1145,
	469, 1145,
	470, 1145,
	471, 1145,
	472, 1145,
	473, 1145,
	474, 1145,
	476, 1145,
	477, 1145,
	478, 1145,
	479, 1145,
	480, 1145,
	482, 1145,
	484, 1145,
	485, 1145,
	486, 1145,
	487, 1145,
	488, 1145,
	489, 1145,
	491, 1145,
	492, 1145,
	493, 1145,
	494, 1145,
	496, 1145,
	497, 1145,
	500, 1145,
	501, 1145,
	502, 1145,
	503, 1145,
	504, 1145,
	505, 1145,
	506, 1145,
	508, 1145,
	511, 1145,
	512, 1145,
	513, 1145,
	514, 1145,
	515, 1145,
	516, 1145,
	518, 1145,
	519, 1145,
	520, 1145,
	521, 1145,
	526, 1145,
	527, 1145,
	528, 1145,
	529, 1145,
	530, 1145,
	531, 1145,
	-2, 0,
	-1, 1496,
	1, 478,
	554, 478,
	556, 478,
	558, 478,
	-2, 1316,
	-1, 1499,
	4, 2425,
	11, 2425,
	12, 2425,
	14, 2425,
	15, 2425,
	16, 2425,
	17, 2425,
	18, 2425,
	19, 2425,
	21, 2425,
	22, 2425,
	23, 2425,
	24, 2425,
	25, 2425,
	26, 2425,
	28, 2425,
	29, 2425,
	32, 2425,
	33, 2425,
	35, 2425,
	37, 2425,
	40, 2425,
	41, 2425,
	43, 2425,
	44, 2425,
	45, 2425,
	46, 2425,
	47, 2425,
	48, 2425,
	49, 2425,
	51, 2425,
	52, 2425,
	53, 2425,
	54, 2425,
	56, 2425,
	57, 2425,
	58, 2425,
	59, 2425,
	60, 2425,
	61, 2425,
	62, 2425,
	66, 2425,
	67, 2425,
	68, 2425,
	69, 2425,
	71, 2425,
	72, 2425,
	73, 2425,
	74, 2425,
	77, 2425,
	78, 2425,
	79, 2425,
	80, 2425,
	81, 2425,
	82, 2425,
	83, 2425,
	84, 2425,
	86, 2425,
	87, 2425,
	88, 2425,
	89, 2425,
	90, 2425,
	92, 2425,
	93, 2425,
	94, 2425,
	95, 2425,
	96, 2425,
	97, 2425,
	98, 2425,
	99, 2425,
	101, 2425,
	102, 2425,
	103, 2425,
	104, 2425,
	105, 2425,
	106, 2425,
	114, 2425,
	115, 2425,
	116, 2425,
	117, 2425,
	119, 2425,
	120, 2425,
	121, 2425,
	123, 2425,
	124, 2425,
	125, 2425,
	127, 2425,
	128, 2425,
	130, 2425,
	131, 2425,
	132, 2425,
	135, 2425,
	136, 2425,
	137, 2425,
	139, 2425,
	140, 2425,
	142, 2425,
	143, 2425,
	144, 2425,
	146, 2425,
	147, 2425,
	148, 2425,
	149, 2425,
	150, 2425,
	151, 2425,
	152, 2425,
	153, 2425,
	154, 2425,
	155, 2425,
	156, 2425,
	157, 2425,
	158, 2425,
	159, 2425,
	160, 2425,
	164, 2425,
	165, 2425,
	166, 2425,
	167, 2425,
	168, 2425,
	169, 2425,
	170, 2425,
	171, 2425,
	174, 2425,
	175, 2425,
	177, 2425,
	180, 2425,
	181, 2425,
	182, 2425,
	183, 2425,
	184, 2425,
	185, 2425,
	186, 2425,
	187, 2425,
	188, 2425,
	189, 2425,
	190, 2425,
	191, 2425,
	192, 2425,
	194, 2425,
	195, 2425,
	197, 2425,
	198, 2425,
	200, 2425,
	201, 2425,
	202, 2425,
	203, 2425,
	204, 2425,
	205, 2425,
	206, 2425,
	207, 2425,
	208, 2425,
	209, 2425,
	210, 2425,
	211, 2425,
	212, 2425,
	213, 2425,
	214, 2425,
	215, 2425,
	216, 2425,
	218, 2425,
	219, 2425,
	221, 2425,
	222, 2425,
	223, 2425,
	225, 2425,
	226, 2425,
	227, 2425,
	228, 2425,
	230, 2425,
	232, 2425,
	233, 2425,
	234, 2425,
	235, 2425,
	236, 2425,
	237, 2425,
	238, 2425,
	239, 2425,
	240, 2425,
	241, 2425,
	243, 2425,
	244, 2425,
	245, 2425,
	246, 2425,
	247, 2425,
	248, 2425,
	249, 2425,
	250, 2425,
	252, 2425,
	253, 2425,
	254, 2425,
	256, 2425,
	257, 2425,
	258, 2425,
	259, 2425,
	260, 2425,
	261, 2425,
	263, 2425,
	267, 2425,
	268, 2425,
	271, 2425,
	272, 2425,
	273, 2425,
	274, 2425,
	275, 2425,
	276, 2425,
	277, 2425,
	278, 2425,
	279, 2425,
	280, 2425,
	281, 2425,
	282, 2425,
	283, 2425,
	284, 2425,
	285, 2425,
	286, 2425,
	287, 2425,
	288, 2425,
	289, 2425,
	290, 2425,
	291, 2425,
	292, 2425,
	293, 2425,
	294, 2425,
	295, 2425,
	296, 2425,
	298, 2425,
	299, 2425,
	300, 2425,
	301, 2425,
	302, 2425,
	303, 2425,
	304, 2425,
	305, 2425,
	306, 2425,
	307, 2425,
	308, 2425,
	309, 2425,
	310, 2425,
	311, 2425,
	313, 2425,
	316, 2425,
	317, 2425,
	318, 2425,
	320, 2425,
	321, 2425,
	322, 2425,
	323, 2425,
	324, 2425,
	327, 2425,
	331, 2425,
	332, 2425,
	333, 2425,
	334, 2425,
	336, 2425,
	337, 2425,
	338, 2425,
	340, 2425,
	342, 2425,
	343, 2425,
	344, 2425,
	345, 2425,
	346, 2425,
	347, 2425,
	348, 2425,
	349, 2425,
	350, 2425,
	351, 2425,
	352, 2425,
	353, 2425,
	355, 2425,
	356, 2425,
	357, 2425,
	358, 2425,
	359, 2425,
	360, 2425,
	361, 2425,
	362, 2425,
	363, 2425,
	364, 2425,
	365, 2425,
	366, 2425,
	367, 2425,
	368, 2425,
	369, 2425,
	371, 2425,
	373, 2425,
	374, 2425,
	375, 2425,
	376, 2425,
	377, 2425,
	378, 2425,
	379, 2425,
	380, 2425,
	381, 2425,
	382, 2425,
	383, 2425,
	385, 2425,
	391, 2425,
	392, 2425,
	393, 2425,
	394, 2425,
	395, 2425,
	396, 2425,
	397, 2425,
	398, 2425,
	399, 2425,
	400, 2425,
	402, 2425,
	403, 2425,
	404, 2425,
	405, 2425,
	406, 2425,
	407, 2425,
	408, 2425,
	409, 2425,
	410, 2425,
	411, 2425,
	412, 2425,
	413, 2425,
	414, 2425,
	415, 2425,
	416, 2425,
	417, 2425,
	418, 2425,
	419, 2425,
	420, 2425,
	421, 2425,
	422, 2425,
	423, 2425,
	425, 2425,
	426, 2425,
	427, 2425,
	428, 2425,
	429, 2425,
	430, 2425,
	432, 2425,
	433, 2425,
	434, 2425,
	435, 2425,
	436, 2425,
	437, 2425,
	438, 2425,
	439, 2425,
	440, 2425,
	441, 2425,
	442, 2425,
	443, 2425,
	444, 2425,
	446, 2425,
	448, 2425,
	449, 2425,
	450, 2425,
	451, 2425,
	452, 2425,
	453, 2425,
	454, 2425,
	455, 2425,
	456, 2425,
	457, 2425,
	458, 2425,
	459, 2425,
	460, 2425,
	462, 2425,
	463, 2425,
	465, 2425,
	467, 2425,
	468, 2425,
	469, 2425,
	470, 2425,
	471, 2425,
	472, 2425,
	473, 2425,
	474, 2425,
	476, 2425,
	477, 2425,
	478, 2425,
	479, 2425,
	480, 2425,
	482, 2425,
	484, 2425,
	485, 2425,
	486, 2425,
	487, 2425,
	488, 2425,
	489, 2425,
	491, 2425,
	492, 2425,
	493, 2425,
	494, 2425,
	496, 2425,
	497, 2425,
	500, 2425,
	501, 2425,
	502, 2425,
	503, 2425,
	504, 2425,
	505, 2425,
	506, 2425,
	508, 2425,
	511, 2425,
	512, 2425,
	513, 2425,
	514, 2425,
	515, 2425,
	516, 2425,
	518, 2425,
	519, 2425,
	520, 2425,
	521, 2425,
	526, 2425,
	527, 2425,
	528, 2425,
	529, 2425,
	530, 2425,
	531, 2425,
	532, 2425,
	533, 2425,
	536, 2425,
	537, 2425,
	538, 2425,
	539, 2425,
	540, 2425,
	541, 2425,
	543, 2425,
	544, 2425,
	545, 2425,
	546, 2425,
	547, 2425,
	548, 2425,
	549, 2425,
	550, 2425,
	551, 2425,
	553, 2425,
	556, 2425,
	557, 2425,
	559, 2425,
	560, 2425,
	-2, 0,
	-1, 1504,
	179, 2315,
	481, 2315,
	538, 2315,
	557, 2315,
	-2, 0,
	-1, 1553,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 1579,
	1, 773,
	554, 773,
	556, 773,
	558, 773,
	-2, 0,
	-1, 1580,
	1, 809,
	554, 809,
	556, 809,
	558, 809,
	-2, 0,
	-1, 1581,
	1, 817,
	554, 817,
	556, 817,
	558, 817,
	-2, 0,
	-1, 1582,
	1, 780,
	554, 780,
	556, 780,
	558, 780,
	-2, 0,
	-1, 1584,
	1, 784,
	554, 784,
	556, 784,
	558, 784,
	-2, 0,
	-1, 1590,
	1, 791,
	554, 791,
	556, 791,
	558, 791,
	-2, 0,
	-1, 1618,
	1, 2371,
	554, 2371,
	556, 2371,
	557, 2371,
	558, 2371,
	-2, 842,
	-1, 1619,
	1, 2312,
	554, 2312,
	556, 2312,
	557, 2312,
	558, 2312,
	-2, 843,
	-1, 1634,
	1, 1223,
	558, 1223,
	-2, 1228,
	-1, 1637,
	163, 1357,
	176, 1357,
	262, 1357,
	325, 1357,
	-2, 1297,
	-1, 1731,
	145, 1318,
	163, 1318,
	176, 1318,
	229, 1318,
	262, 1318,
	325, 1318,
	335, 1318,
	498, 1318,
	-2, 1751,
	-1, 1791,
	556, 1901,
	-2, 0,
	-1, 1826,
	145, 1318,
	163, 1318,
	176, 1318,
	229, 1318,
	262, 1318,
	325, 1318,
	335, 1318,
	498, 1318,
	-2, 1438,
	-1, 1875,
	555, 1578,
	-2, 1566,
	-1, 1912,
	1, 607,
	558, 607,
	-2, 1228,
	-1, 2024,
	212, 217,
	-2, 2041,
	-1, 2025,
	212, 218,
	-2, 260,
	-1, 2153,
	1, 775,
	554, 775,
	556, 775,
	558, 775,
	-2, 0,
	-1, 2154,
	1, 811,
	554, 811,
	556, 811,
	558, 811,
	-2, 0,
	-1, 2155,
	1, 819,
	554, 819,
	556, 819,
	558, 819,
	-2, 0,
	-1, 2186,
	1, 793,
	554, 793,
	556, 793,
	558, 793,
	-2, 0,
	-1, 2232,
	410, 1384,
	411, 1384,
	-2, 1611,
	-1, 2263,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1631,
	-1, 2264,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1632,
	-1, 2265,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1633,
	-1, 2266,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1634,
	-1, 2267,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1635,
	-1, 2268,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1636,
	-1, 2269,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1637,
	-1, 2270,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1638,
	-1, 2282,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1650,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1651,
	-1, 2284,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1652,
	-1, 2287,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1657,
	-1, 2293,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1661,
	-1, 2295,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1669,
	-1, 2296,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1670,
	-1, 2297,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1671,
	-1, 2298,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1672,
	-1, 2434,
	5, 2045,
	179, 1912,
	555, 2042,
	-2, 2033,
	-1, 2435,
	179, 1913,
	-2, 2376,
	-1, 2436,
	179, 1914,
	-2, 2217,
	-1, 2437,
	179, 1915,
	-2, 2111,
	-1, 2438,
	179, 1916,
	-2, 2161,
	-1, 2439,
	179, 1917,
	-2, 2202,
	-1, 2440,
	179, 1918,
	-2, 2310,
	-1, 2441,
	179, 1919,
	-2, 1734,
	-1, 2510,
	1, 1439,
	2, 1439,
	104, 1439,
	145, 1439,
	163, 1439,
	176, 1439,
	180, 1439,
	196, 1439,
	199, 1439,
	225, 1439,
	229, 1439,
	240, 1439,
	258, 1439,
	262, 1439,
	299, 1439,
	325, 1439,
	329, 1439,
	335, 1439,
	401, 1439,
	405, 1439,
	498, 1439,
	509, 1439,
	523, 1439,
	524, 1439,
	525, 1439,
	534, 1439,
	554, 1439,
	556, 1439,
	558, 1439,
	560, 1439,
	-2, 1438,
	-1, 2523,
	555, 2014,
	-2, 2028,
	-1, 2525,
	1, 276,
	-2, 1345,
	-1, 2550,
	555, 1577,
	-2, 1567,
	-1, 2687,
	1, 1121,
	554, 1121,
	556, 1121,
	558, 1121,
	-2, 1345,
	-1, 2865,
	330, 1387,
	-2, 2415,
	-1, 2866,
	330, 1388,
	-2, 2296,
	-1, 2870,
	410, 1978,
	411, 1978,
	-2, 1732,
	-1, 2871,
	410, 1982,
	411, 1982,
	-2, 1733,
	-1, 2872,
	410, 1979,
	411, 1979,
	-2, 1732,
	-1, 2873,
	410, 1983,
	411, 1983,
	-2, 1733,
	-1, 2886,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1659,
	-1, 2887,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1663,
	-1, 2893,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1665,
	-1, 3121,
	1, 604,
	554, 604,
	556, 604,
	558, 604,
	-2, 1228,
	-1, 3253,
	1, 1121,
	554, 1121,
	556, 1121,
	558, 1121,
	-2, 1345,
	-1, 3363,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1667,
	-1, 3370,
	234, 0,
	236, 0,
	316, 0,
	-2, 1686,
	-1, 3437,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1715,
	-1, 3438,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1716,
	-1, 3439,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1717,
	-1, 3443,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1721,
	-1, 3444,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1722,
	-1, 3445,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1723,
	-1, 3491,
	555, 2015,
	-2, 2029,
	-1, 3629,
	557, 2532,
	-2, 1275,
	-1, 3687,
	234, 0,
	236, 0,
	316, 0,
	-2, 1687,
	-1, 3690,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1690,
	-1, 3691,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1692,
	-1, 3903,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1691,
	-1, 3904,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1693,
	-1, 3915,
	234, 0,
	-2, 1724,
	-1, 4067,
	234, 0,
	-2, 1725,
	-1, 4216,
	48, 0,
	209, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 2379,
}

const sqlPrivate = 57344

const sqlLast = 111522

var sqlAct = [...]int{

	246, 4089, 2752, 3947, 4215, 4110, 3950, 4226, 4327, 3237,
	3044, 4190, 3670, 4174, 2783, 3827, 2586, 2021, 4171, 4227,
	2122, 4156, 4228, 3238, 4276, 4020, 3402, 3935, 2093, 4071,
	4214, 2625, 3860, 1160, 3993, 37, 4000, 2242, 3523, 3855,
	3139, 3892, 3265, 1487, 1340, 3621, 4009, 3841, 3562, 3757,
	3809, 4034, 3223, 1482, 1862, 1357, 3270, 982, 2310, 3597,
	1646, 3263, 3580, 3865, 3233, 994, 3582, 3920, 2250, 3355,
	711, 3524, 2243, 2879, 2106, 973, 2650, 1222, 2805, 3318,
	2719, 1320, 3320, 2723, 2794, 1519, 3059, 2131, 2466, 1965,
	2741, 2710, 1149, 1832, 711, 2792, 1315, 3669, 3087, 3493,
	3067, 3050, 3027, 3726, 810, 676, 2791, 1026, 2785, 1561,
	2802, 1801, 2503, 3048, 981, 165, 2753, 2738, 2016, 2736,
	2588, 2015, 1975, 3462, 3026, 2129, 2502, 4, 1739, 1777,
	2323, 2352, 2863, 2505, 1323, 2104, 1408, 706, 1462, 2247,
	2010, 2664, 2001, 2801, 1030, 2724, 240, 1994, 1206, 1821,
	2067, 4072, 1948, 1033, 1634, 1951, 2343, 1486, 2354, 2307,
	2484, 2231, 1863, 239, 1938, 2214, 3094, 1140, 2212, 3235,
	3994, 1802, 1497, 1483, 2746, 2535, 2055, 1473, 1035, 1818,
	1413, 628, 712, 2795, 713, 650, 1192, 2534, 1518, 1811,
	642, 2463, 1143, 2346, 1772, 2577, 2492, 1122, 2324, 1342,
	1037, 165, 2474, 2430, 2396, 1724, 1647, 1648, 708, 2213,
	174, 1590, 175, 658, 804, 1157, 717, 670, 2624, 2215,
	2054, 1495, 2079, 1437, 756, 783, 1352, 1964, 2236, 1011,
	645, 42, 1120, 720, 41, 39, 30, 1145, 28, 26,
	717, 871, 1653, 653, 2914, 1363, 891, 1633, 3476, 2910,
	3477, 2095, 3046, 3280, 2095, 1661, 1662, 720, 1694, 1695,
	1696, 1704, 1705, 1706, 4392, 2095, 4382, 2095, 2483, 2095,
	3299, 4372, 1201, 2749, 3117, 2483, 1697, 1692, 1139, 4371,
	3116, 4344, 4342, 2483, 1664, 3773, 3773, 4338, 1201, 3279,
	4256, 2029, 1710, 1356, 4257, 4250, 4248, 4245, 2130, 2483,
	2483, 4246, 825, 4242, 977, 4237, 4212, 4243, 101, 2029,
	2029, 4211, 977, 4210, 3466, 2029, 1137, 2115, 1663, 4205,
	4204, 4199, 1155, 2115, 2115, 3773, 4197, 4169, 1683, 4150,
	3773, 3773, 4143, 2541, 4142, 4137, 2483, 1680, 2483, 3773,
	1123, 1123, 4136, 4130, 4103, 4069, 3773, 2029, 3819, 2541,
	2476, 3299, 4051, 4048, 2999, 3000, 3658, 2029, 1032, 4045,
	4002, 3967, 3966, 3773, 4003, 2029, 2029, 3958, 1152, 1661,
	1662, 2029, 3102, 3957, 2878, 3926, 958, 3773, 957, 2029,
	3905, 3884, 3873, 3804, 2541, 2115, 3299, 2483, 1176, 3792,
	3772, 1692, 1080, 2483, 3773, 3689, 3637, 3631, 1664, 2541,
	3315, 3315, 3595, 3486, 1171, 2483, 3596, 3487, 1686, 1687,
	1688, 1689, 4151, 4064, 2537, 967, 1661, 1662, 1669, 3484,
	972, 3469, 4052, 3485, 3386, 2483, 2999, 3000, 2029, 3382,
	3314, 3306, 1663, 2483, 3315, 3307, 2115, 3466, 1692, 3043,
	1124, 86, 1683, 2483, 3038, 1664, 1661, 1662, 2483, 2029,
	3037, 2113, 2923, 1701, 2483, 2990, 1711, 2964, 2924, 2991,
	2956, 2965, 1691, 1693, 2957, 2999, 3000, 2954, 1692, 2925,
	2808, 2483, 2781, 2483, 2115, 1664, 2118, 2780, 1707, 1663,
	1708, 2118, 2561, 1172, 2475, 978, 2483, 1678, 1679, 1683,
	2540, 2532, 2526, 2482, 2541, 2483, 2029, 2483, 1680, 3014,
	2117, 3854, 3819, 1583, 2118, 1699, 3793, 2029, 1527, 1663,
	2999, 3000, 3658, 3017, 3018, 3019, 1126, 3005, 1127, 1684,
	3307, 2641, 1686, 1687, 1688, 1689, 2576, 1917, 2094, 2483,
	2716, 986, 1669, 2110, 2028, 2658, 1969, 2913, 2574, 1797,
	1351, 3553, 3358, 3336, 1819, 2004, 3281, 2646, 1513, 3683,
	2519, 2518, 1563, 2517, 2516, 2515, 212, 1128, 1125, 966,
	1709, 212, 965, 1028, 964, 3282, 3867, 963, 962, 1686,
	1687, 1688, 1689, 1151, 1377, 212, 1691, 1693, 1698, 1669,
	961, 1661, 1662, 3014, 2843, 1356, 960, 956, 2096, 3005,
	955, 2096, 954, 953, 952, 951, 950, 949, 214, 948,
	947, 946, 2096, 214, 2096, 945, 2096, 944, 943, 1669,
	1664, 942, 941, 940, 922, 2999, 3000, 214, 3015, 869,
	868, 867, 866, 1691, 1693, 865, 864, 863, 3005, 862,
	861, 860, 3742, 1684, 3279, 1531, 1690, 859, 858, 857,
	856, 855, 854, 853, 1663, 852, 213, 1371, 1678, 1679,
	851, 213, 850, 1691, 1693, 1172, 1685, 849, 848, 4233,
	847, 2113, 206, 846, 845, 213, 844, 843, 842, 841,
	207, 840, 839, 3005, 838, 1035, 206, 1365, 828, 1035,
	1684, 1702, 1365, 827, 207, 823, 822, 176, 816, 815,
	3015, 774, 176, 773, 1225, 2379, 733, 732, 1225, 731,
	1364, 723, 1345, 722, 721, 690, 2748, 682, 681, 212,
	1684, 3021, 680, 664, 234, 212, 233, 232, 231, 238,
	230, 138, 1365, 229, 228, 227, 1035, 226, 1035, 3015,
	1035, 2475, 1205, 3020, 225, 1345, 1210, 224, 223, 222,
	221, 220, 219, 218, 1669, 217, 216, 2999, 3000, 2769,
	1690, 214, 2094, 1331, 215, 3016, 3701, 214, 1345, 1196,
	2732, 3869, 1362, 2113, 1369, 2110, 1375, 2207, 3503, 1172,
	1685, 3480, 3316, 1326, 3015, 3090, 1700, 1376, 3005, 2936,
	1675, 1676, 1682, 1703, 1681, 1677, 3041, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 2919, 1690, 2697, 213,
	3711, 1345, 1035, 2545, 3710, 213, 2524, 1345, 2509, 1355,
	206, 1345, 1517, 1419, 1421, 2365, 206, 1685, 207, 1035,
	1822, 1035, 2363, 3042, 207, 1345, 1190, 3016, 1780, 1946,
	1845, 1035, 1750, 1035, 1779, 2125, 1780, 1359, 1493, 1212,
	176, 1494, 1779, 1660, 1424, 1159, 176, 1685, 4213, 4117,
	1370, 4061, 3945, 1661, 1662, 1511, 1783, 1516, 1334, 4055,
	1218, 717, 1312, 1317, 1778, 3600, 3016, 1525, 4053, 1530,
	3919, 3874, 3853, 1411, 1365, 3749, 3724, 1345, 720, 1476,
	3723, 3717, 1664, 3716, 1741, 3715, 3708, 1185, 3009, 3001,
	3002, 3003, 3004, 3006, 3007, 1035, 3707, 1354, 1035, 1353,
	3705, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	3005, 3016, 3700, 1406, 2124, 3697, 1663, 244, 3696, 3594,
	2999, 3000, 165, 165, 3507, 212, 3506, 3505, 3490, 1584,
	212, 3457, 3456, 1467, 1470, 1500, 1502, 2999, 3000, 1532,
	3017, 3018, 3019, 3455, 3378, 1681, 1677, 3374, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 3310, 3010, 3008,
	3009, 3001, 3002, 3003, 3004, 3006, 3007, 214, 3085, 3034,
	212, 1748, 214, 3025, 1479, 2998, 2995, 2994, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 3868, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 2734, 212, 3010, 3008, 3009,
	3001, 3002, 3003, 3004, 3006, 3007, 1498, 3551, 2992, 1599,
	3014, 3015, 214, 2963, 1196, 213, 1669, 1196, 2962, 1035,
	213, 2961, 2958, 1585, 2955, 1035, 206, 1742, 980, 1740,
	1136, 206, 2935, 1638, 207, 3011, 3012, 3013, 214, 207,
	2918, 2610, 3010, 3008, 3009, 3001, 3002, 3003, 3004, 3006,
	3007, 1440, 2911, 2782, 2510, 4386, 176, 212, 2336, 1660,
	213, 176, 2070, 1741, 3039, 1512, 1659, 4336, 4335, 212,
	3601, 206, 4266, 4264, 4255, 2036, 2034, 1526, 1161, 207,
	3404, 4109, 4099, 3005, 1733, 4096, 213, 4095, 1738, 4094,
	4088, 1632, 4081, 3601, 4049, 998, 4033, 206, 4032, 214,
	3005, 176, 2313, 2349, 4018, 207, 1661, 1662, 4015, 3963,
	1730, 214, 3941, 3917, 1537, 978, 1665, 1666, 1667, 1668,
	1670, 1671, 212, 3900, 3899, 1554, 3881, 176, 1692, 3880,
	1035, 1035, 1035, 3082, 3844, 1664, 1035, 3820, 3741, 1586,
	3722, 3659, 3653, 1157, 3650, 1157, 3541, 213, 3016, 3540,
	3001, 3002, 3003, 3004, 3006, 3007, 3527, 1799, 206, 213,
	1225, 3526, 3472, 3460, 214, 3369, 207, 1728, 1035, 1663,
	206, 711, 3317, 2733, 3300, 1880, 711, 1635, 207, 3256,
	3195, 3168, 1836, 1643, 3015, 1035, 3142, 2350, 176, 1345,
	3141, 3110, 958, 1642, 957, 2940, 2999, 3000, 2939, 3108,
	176, 3015, 1637, 2934, 2902, 2709, 1786, 1035, 2319, 212,
	1639, 1785, 213, 1225, 1782, 1784, 1781, 1848, 1656, 1657,
	1773, 1771, 2552, 206, 1808, 2551, 2521, 1859, 2514, 2481,
	2361, 207, 1906, 1915, 212, 1844, 1935, 1800, 1795, 1794,
	1853, 1793, 1805, 1806, 1849, 1792, 1829, 1791, 1438, 2378,
	1155, 214, 1155, 176, 1790, 1123, 1855, 1789, 1788, 1787,
	1768, 165, 1767, 212, 1944, 2351, 1766, 2348, 1765, 1669,
	1774, 1775, 1852, 1910, 1764, 1196, 214, 1763, 1762, 1761,
	3008, 3009, 3001, 3002, 3003, 3004, 3006, 3007, 1909, 1760,
	2126, 2543, 3142, 1759, 1758, 1830, 1152, 1757, 1152, 213,
	1661, 1662, 1756, 1755, 1754, 214, 1743, 1729, 1727, 1851,
	206, 1722, 1184, 1691, 1693, 1174, 1167, 717, 207, 4073,
	1820, 3016, 717, 3847, 213, 3745, 3693, 978, 3502, 1664,
	3483, 3475, 2922, 2512, 720, 206, 3930, 1827, 3016, 720,
	176, 1443, 1912, 207, 3747, 3501, 2999, 3000, 1742, 3106,
	1345, 1345, 1725, 213, 1798, 1937, 3795, 1908, 1201, 3005,
	1225, 4333, 3285, 1663, 206, 176, 1840, 1937, 1209, 2364,
	1684, 1937, 207, 4326, 3266, 1874, 2362, 4010, 1839, 1856,
	1824, 1838, 1837, 1835, 1903, 1834, 1833, 4056, 1822, 1957,
	1667, 1668, 1670, 1671, 176, 4097, 4054, 4005, 4004, 3171,
	3872, 3822, 3821, 1860, 3794, 3944, 3744, 2353, 3662, 3661,
	1990, 1207, 3660, 1993, 3478, 1318, 1998, 2629, 1330, 1333,
	3302, 3301, 1969, 3604, 1780, 1208, 1630, 2960, 1553, 1201,
	1779, 2959, 1201, 1940, 1930, 2022, 2026, 2884, 2612, 1204,
	3539, 938, 3240, 2145, 3239, 1752, 1600, 4209, 1923, 2123,
	212, 2550, 1562, 978, 4001, 3001, 3002, 3003, 3004, 3006,
	3007, 1974, 3011, 3012, 3013, 4253, 4238, 4225, 2349, 3010,
	3008, 3009, 3001, 3002, 3003, 3004, 3006, 3007, 3224, 1333,
	1333, 3921, 1763, 1763, 939, 2806, 1563, 2017, 3559, 3558,
	3544, 2928, 214, 3333, 3119, 3046, 2100, 2002, 717, 2102,
	3406, 1151, 1345, 1151, 1345, 2107, 1345, 1685, 2109, 2060,
	2344, 4234, 2112, 1796, 2347, 720, 2019, 1776, 1333, 3231,
	2064, 1749, 1345, 1345, 1466, 1418, 1348, 1179, 4247, 4244,
	3275, 3518, 4090, 1345, 1354, 2652, 1353, 2065, 2655, 2554,
	213, 3856, 4168, 2076, 1541, 1345, 4078, 1345, 1345, 1345,
	3145, 206, 2350, 3534, 1997, 2789, 2745, 2222, 3572, 207,
	3217, 4292, 3350, 769, 1442, 2132, 2144, 1877, 2449, 711,
	4293, 3123, 3984, 2084, 4235, 3783, 1443, 1383, 2027, 2562,
	2071, 176, 936, 1135, 4381, 4317, 1393, 2192, 2580, 2580,
	3977, 934, 998, 932, 3969, 3817, 998, 930, 2153, 927,
	2073, 1349, 3568, 2578, 2578, 2098, 2190, 1009, 3567, 3561,
	3557, 1309, 3555, 2128, 2220, 1309, 2046, 2137, 2047, 3571,
	2086, 3515, 3514, 1598, 918, 3220, 3101, 2933, 2932, 2931,
	2351, 2930, 2348, 1597, 2888, 2662, 2661, 2657, 2648, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 1924, 2640, 2639,
	1035, 2638, 1035, 2154, 3125, 2078, 2149, 2637, 2082, 1035,
	2206, 770, 1880, 1880, 1225, 1394, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1498, 1035, 1498, 1035, 1035, 1035, 1035, 2224, 2155,
	1440, 2133, 2081, 1209, 2081, 717, 1579, 1913, 1539, 2616,
	2603, 2222, 1185, 2119, 2533, 2120, 1035, 2045, 1596, 1035,
	1035, 2294, 720, 3003, 3004, 3006, 3007, 1035, 1868, 1636,
	2392, 1035, 2391, 1035, 1035, 3107, 2211, 2221, 1209, 2252,
	1966, 1225, 2742, 1430, 2136, 1429, 2123, 1035, 1035, 1035,
	1035, 688, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1208, 1580, 2353, 4318, 1452, 1389, 3170, 2168, 2220, 1428,
	3898, 1427, 1962, 1164, 1534, 3334, 2205, 2318, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 2614, 2201, 1442,
	4321, 1035, 1733, 2141, 2186, 1208, 1967, 1968, 2544, 1538,
	978, 913, 978, 1157, 1401, 2219, 2235, 2325, 2326, 2309,
	1225, 924, 1153, 1162, 2248, 2249, 2525, 1581, 976, 1157,
	2569, 2325, 2341, 2309, 971, 1191, 1963, 2602, 1929, 1928,
	1671, 1202, 1937, 1939, 1609, 1035, 1225, 2196, 2210, 3952,
	2208, 1350, 2216, 2223, 2861, 2218, 2454, 2387, 2209, 1661,
	1662, 1613, 1874, 1874, 958, 687, 2239, 958, 958, 2240,
	2241, 2340, 2633, 1551, 2158, 2344, 2433, 2433, 2447, 2347,
	2325, 1692, 1840, 2467, 2469, 1330, 3007, 1555, 1664, 2473,
	4322, 2152, 4345, 2626, 2627, 3779, 2497, 2204, 1535, 1661,
	1662, 1641, 3796, 1183, 2601, 2626, 2627, 2590, 2317, 2626,
	2627, 2221, 975, 2083, 2489, 2315, 2161, 3769, 2876, 2565,
	1155, 1692, 1663, 914, 4231, 3341, 3578, 1165, 1664, 2321,
	1829, 1123, 2389, 2522, 2567, 3340, 1155, 2390, 772, 771,
	2393, 2338, 2394, 2395, 2840, 4292, 3185, 1225, 3395, 3530,
	3765, 2353, 1198, 3816, 3758, 1629, 1932, 2511, 3178, 1202,
	3556, 1592, 1663, 3954, 1595, 3577, 1152, 2568, 2496, 1563,
	2501, 3756, 2488, 2507, 2508, 1563, 165, 1880, 2654, 2219,
	3760, 3554, 1152, 3521, 1414, 3184, 2566, 3122, 836, 2538,
	2458, 2429, 2442, 3542, 2579, 2471, 4324, 3177, 3543, 2305,
	2609, 2203, 3766, 2490, 1196, 1225, 640, 2651, 2479, 2480,
	2653, 2689, 2494, 2495, 767, 2593, 766, 1202, 977, 1345,
	2162, 1827, 1669, 913, 1782, 2546, 3897, 2303, 1412, 1203,
	3219, 635, 2536, 2645, 1035, 1035, 978, 1035, 3189, 2875,
	2656, 2636, 3759, 2613, 2200, 978, 971, 1952, 2582, 978,
	2688, 1540, 1953, 2615, 1877, 1877, 1969, 2581, 2560, 2559,
	1345, 4303, 1669, 4309, 1934, 928, 1691, 1693, 2698, 2191,
	1198, 2701, 2553, 2703, 928, 4308, 928, 1309, 2649, 2557,
	929, 3769, 928, 2634, 1774, 1775, 1199, 3777, 2189, 2531,
	2353, 4232, 2556, 2846, 1200, 1988, 1610, 2618, 2558, 1972,
	2756, 2730, 1933, 2563, 2720, 915, 1691, 1693, 689, 2713,
	4348, 686, 2899, 829, 3765, 2747, 1345, 1345, 2747, 1345,
	3392, 2033, 2032, 1684, 998, 1451, 1388, 2764, 1198, 2605,
	1309, 1345, 2063, 2768, 1987, 914, 2585, 978, 1971, 2619,
	2897, 2617, 4281, 1976, 2803, 3675, 1345, 1203, 2692, 2595,
	2598, 817, 2694, 3674, 2635, 3272, 2811, 2812, 4147, 1391,
	2777, 1954, 2299, 1684, 2772, 1980, 3766, 2818, 2819, 2820,
	4323, 1151, 4362, 1163, 2095, 717, 4091, 1874, 1956, 3273,
	2300, 974, 4230, 2232, 1035, 2301, 4105, 1151, 3124, 2306,
	2771, 2291, 720, 1330, 3761, 2868, 2869, 2849, 3393, 3762,
	2628, 2630, 2631, 2632, 1199, 1203, 1414, 2592, 4330, 3953,
	4280, 1354, 1200, 2695, 1607, 2726, 2807, 3156, 2837, 2758,
	1977, 2829, 1769, 2830, 803, 1868, 1868, 2707, 1035, 2788,
	1611, 3778, 165, 2717, 1035, 1035, 2763, 2827, 916, 3104,
	2766, 2890, 2767, 2826, 3531, 2778, 1958, 2202, 1536, 1201,
	3764, 3272, 2832, 2740, 2834, 2308, 2836, 2751, 2014, 2809,
	1685, 3894, 1199, 2813, 3767, 2814, 2160, 2759, 1960, 2824,
	1200, 2774, 3155, 1960, 3671, 2894, 2851, 1309, 2853, 2831,
	3836, 2833, 2580, 2835, 917, 925, 2854, 2773, 2775, 1035,
	1035, 2779, 1969, 2454, 1608, 1035, 2790, 2596, 2895, 3159,
	1685, 1991, 2900, 2844, 1550, 1552, 2157, 2013, 1035, 1035,
	3585, 1612, 3910, 3198, 1035, 1035, 1960, 915, 1498, 3583,
	1035, 1981, 2450, 2151, 4302, 2848, 724, 4179, 2316, 1035,
	1035, 1035, 1640, 4259, 1182, 1035, 2591, 4145, 4108, 3802,
	2353, 1721, 4260, 837, 2493, 1035, 2938, 3161, 3585, 830,
	831, 2891, 2289, 2335, 2845, 2292, 2302, 3583, 3761, 4349,
	636, 2000, 1035, 3762, 2867, 2506, 2304, 1201, 1959, 1877,
	4337, 4146, 1960, 2454, 2454, 2856, 2858, 2877, 2857, 3763,
	1941, 1942, 1814, 977, 1999, 1982, 1983, 818, 819, 2862,
	3893, 2921, 2235, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	3408, 4279, 2912, 3846, 2288, 3665, 3498, 1177, 1978, 3160,
	3676, 1810, 3352, 2859, 3764, 3770, 1995, 3163, 2916, 2917,
	4111, 1567, 4229, 2920, 4291, 1201, 3586, 1817, 3767, 4289,
	637, 4126, 4017, 3619, 1665, 1666, 1667, 1668, 1670, 1671,
	1967, 1968, 2491, 2847, 3259, 2053, 1807, 2500, 4328, 1979,
	916, 2889, 1035, 1035, 1035, 1175, 3164, 1170, 627, 3599,
	1815, 1035, 1035, 1035, 3586, 1651, 1035, 3672, 2238, 2896,
	1996, 1970, 638, 1925, 639, 3356, 1035, 1157, 1225, 2898,
	3446, 3720, 1035, 3960, 1035, 3959, 3939, 1814, 3837, 4026,
	3053, 3054, 1157, 4354, 4077, 3620, 917, 1650, 1922, 2927,
	3565, 3095, 3517, 2005, 3260, 3252, 3137, 3133, 2012, 4363,
	1225, 2096, 3581, 2731, 2725, 2711, 4112, 2454, 2454, 2454,
	3391, 2077, 1157, 3895, 2066, 1225, 2058, 2041, 832, 833,
	3782, 3511, 1817, 3461, 4157, 2228, 1955, 3781, 663, 3075,
	1868, 3353, 1880, 3763, 4127, 4329, 1225, 1812, 1989, 2620,
	2197, 1918, 3622, 3861, 3036, 2708, 1984, 1650, 1454, 3999,
	3997, 1035, 725, 726, 3940, 1815, 820, 821, 3148, 3474,
	3055, 1920, 3144, 3143, 4258, 1035, 2597, 1333, 4331, 3770,
	2290, 1309, 3584, 2882, 1155, 2860, 2142, 1880, 1582, 3100,
	3058, 3057, 3065, 3063, 3129, 3130, 1649, 1992, 3089, 1155,
	2530, 3677, 3069, 1035, 1345, 1436, 1813, 1816, 3084, 2529,
	1921, 3114, 3146, 2528, 3088, 3150, 2527, 2011, 3120, 3590,
	3584, 2715, 978, 3064, 1333, 1434, 3081, 1985, 3073, 1155,
	1152, 975, 3126, 835, 3076, 3077, 3061, 3147, 3074, 1345,
	3152, 3153, 3165, 3166, 3093, 1152, 3167, 3047, 2720, 1225,
	1196, 3062, 3031, 3032, 3033, 3328, 1649, 1721, 1345, 1651,
	3079, 3447, 3080, 1345, 3321, 3328, 2229, 2485, 1309, 3201,
	3448, 3721, 3204, 4084, 3321, 1152, 3209, 3211, 3192, 3193,
	3134, 3678, 3194, 2720, 3158, 3948, 1345, 3828, 1422, 3173,
	4353, 3311, 1345, 3070, 1345, 3097, 3098, 3099, 1225, 728,
	727, 1423, 2720, 4113, 3105, 711, 1318, 2720, 1650, 2075,
	3111, 3112, 1816, 3113, 2621, 2622, 1345, 3121, 3512, 3188,
	3227, 1645, 3190, 1330, 3878, 3196, 3236, 4299, 3995, 3780,
	1345, 1852, 3127, 2810, 3187, 3245, 3199, 1309, 3206, 3132,
	2487, 3068, 1874, 3213, 2693, 2486, 1157, 1957, 1568, 3138,
	1153, 2691, 1153, 729, 730, 3268, 3323, 4165, 3162, 2864,
	3251, 3169, 1544, 1309, 3727, 2803, 3323, 3176, 3180, 4154,
	3463, 3322, 3072, 3175, 2803, 3937, 1957, 3222, 4160, 3225,
	3183, 3322, 4085, 3949, 3191, 2360, 4183, 1874, 4301, 1345,
	1345, 3877, 3287, 1627, 3186, 3289, 3290, 3197, 4249, 3207,
	3293, 1625, 3294, 3298, 3295, 3214, 4098, 1649, 3277, 3218,
	1604, 1345, 2002, 662, 3205, 3096, 3060, 3916, 3938, 3212,
	2002, 3719, 3589, 3028, 2008, 3267, 3368, 3331, 3115, 2993,
	1333, 1333, 2901, 2712, 1435, 1151, 1411, 2647, 3335, 2450,
	2450, 2611, 3229, 2555, 3291, 1847, 1225, 2618, 3181, 1225,
	1151, 717, 3182, 1155, 1433, 3249, 1602, 3319, 3221, 3269,
	3261, 4161, 834, 1578, 1309, 4086, 1576, 1574, 720, 1572,
	1651, 1570, 1843, 2006, 1560, 3071, 3248, 1558, 1432, 1035,
	1151, 1628, 1330, 1522, 3276, 1035, 1035, 2188, 3329, 1035,
	1035, 1035, 3274, 1035, 3029, 165, 165, 3349, 3348, 1152,
	1645, 3283, 1035, 1880, 3288, 2842, 3292, 2359, 3296, 3297,
	2841, 1035, 2007, 2816, 1035, 2217, 2199, 3309, 3313, 1591,
	1225, 1330, 1309, 1330, 3347, 2165, 3346, 2038, 3344, 1035,
	1907, 1753, 1533, 1405, 1877, 4224, 3200, 1225, 3803, 3791,
	4153, 3859, 3337, 3808, 3338, 3754, 3339, 1880, 1880, 1035,
	1035, 3354, 1035, 1035, 1035, 2454, 2454, 3371, 3618, 3610,
	3570, 3537, 3535, 3516, 3324, 3325, 3326, 3327, 3255, 3250,
	1626, 3241, 2770, 2765, 3324, 3325, 3326, 3327, 1624, 1877,
	3343, 2743, 2729, 2450, 2450, 2450, 2718, 1603, 1952, 2705,
	2690, 3380, 3381, 1953, 1035, 3351, 2116, 3420, 1035, 3330,
	1880, 1880, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 2114, 1035, 3421, 969, 2111, 913, 2108, 2103, 1035,
	1035, 1880, 2101, 1601, 2097, 2088, 1035, 2037, 2035, 2018,
	1577, 3376, 2003, 1575, 1573, 1986, 1571, 1035, 1569, 971,
	1973, 1559, 1961, 3387, 1557, 1431, 4277, 978, 1157, 1157,
	926, 2187, 1035, 3394, 3396, 3397, 3388, 2454, 2454, 2454,
	2454, 2454, 2454, 2454, 2454, 2454, 2454, 2454, 2454, 2454,
	2454, 2454, 2454, 2454, 2454, 2454, 3410, 2454, 3418, 3264,
	3403, 1225, 3419, 3398, 970, 3208, 4269, 1132, 1854, 1810,
	2012, 3495, 1954, 1874, 1151, 1868, 4293, 1654, 3479, 2248,
	3411, 2880, 1926, 4193, 3883, 3876, 3417, 3875, 3815, 1956,
	3750, 3423, 1133, 2804, 3458, 1945, 1035, 1385, 4028, 3450,
	2600, 2580, 4021, 3630, 2580, 1969, 2156, 701, 914, 3425,
	2183, 1223, 1035, 1035, 2074, 1324, 2578, 1874, 1874, 2599,
	1868, 1474, 3451, 1475, 165, 1622, 1623, 3496, 3497, 3470,
	3471, 2182, 2248, 3426, 4192, 1155, 1155, 3459, 2163, 1035,
	1035, 3508, 3509, 3510, 3465, 1814, 3784, 3467, 3468, 3536,
	3494, 3538, 3810, 1556, 1661, 1662, 4063, 1958, 3728, 3706,
	2623, 2604, 3481, 3454, 1658, 235, 1035, 1043, 4295, 4287,
	1874, 1874, 2881, 3564, 931, 933, 935, 3482, 4254, 2011,
	2704, 1152, 1152, 1655, 2185, 1661, 1662, 757, 1345, 641,
	1817, 3607, 2059, 800, 3563, 1188, 2652, 1475, 1134, 2660,
	2659, 1874, 2642, 2606, 1475, 1812, 4152, 1880, 3569, 4121,
	624, 242, 242, 242, 1664, 630, 631, 1663, 646, 630,
	646, 656, 661, 1815, 4118, 3566, 679, 3545, 2644, 4083,
	3520, 685, 3550, 3552, 2608, 4013, 1345, 242, 4325, 3504,
	3992, 2643, 652, 1035, 3946, 3609, 3549, 2607, 1663, 3588,
	3598, 1157, 1035, 3489, 3560, 814, 3254, 2750, 2472, 3632,
	3612, 242, 1911, 1861, 1813, 1877, 2756, 3103, 4352, 2999,
	3000, 4120, 1345, 1345, 1345, 1356, 2618, 3623, 3698, 1959,
	3624, 4185, 2355, 1960, 4185, 3641, 4186, 3638, 1345, 4186,
	915, 3639, 1661, 1662, 1520, 3645, 2572, 2573, 3627, 3500,
	3605, 2572, 2803, 2570, 1330, 4305, 2388, 1225, 3606, 1877,
	1877, 2570, 2571, 1543, 3626, 4014, 4339, 3608, 3579, 1542,
	1606, 3587, 3978, 1605, 3811, 3807, 3806, 2063, 1949, 1225,
	3694, 3657, 1035, 1035, 3616, 3499, 3399, 3664, 1035, 1035,
	1880, 3576, 3202, 1035, 1035, 3611, 1035, 3575, 1747, 1746,
	1035, 4310, 3592, 4074, 3628, 3973, 3625, 3931, 1155, 3928,
	3839, 1035, 1877, 1877, 3634, 1309, 3633, 1950, 3746, 3138,
	1816, 3656, 3636, 3593, 630, 630, 3613, 1035, 3640, 3591,
	3646, 3647, 242, 3533, 3648, 3528, 1151, 1151, 3286, 3654,
	1153, 2450, 2450, 1877, 3688, 3258, 3655, 1309, 3257, 3652,
	3651, 3679, 2989, 2988, 1152, 3680, 1153, 1874, 2987, 2986,
	2985, 2984, 1309, 2983, 2982, 3673, 2981, 2980, 2979, 2978,
	2977, 968, 3668, 916, 2976, 2975, 3663, 2974, 2973, 2972,
	2971, 2970, 2969, 1309, 3692, 2968, 1868, 1157, 2967, 2966,
	2839, 2823, 2822, 2821, 2761, 1157, 2735, 1955, 998, 1225,
	2706, 1225, 2548, 2547, 2320, 2184, 2181, 2180, 1157, 1330,
	1330, 2179, 998, 2178, 2177, 2091, 2090, 2089, 2072, 917,
	2048, 2044, 2043, 2042, 1225, 2040, 2039, 1621, 1620, 1565,
	1868, 1868, 1564, 1461, 1460, 1459, 1458, 1457, 1456, 1455,
	1453, 1448, 1447, 1446, 1445, 1444, 3718, 1035, 3733, 1400,
	1399, 3751, 3752, 2450, 2450, 2450, 2450, 2450, 2450, 2450,
	2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450,
	2450, 2450, 3785, 2450, 1225, 3736, 1398, 1397, 3732, 1396,
	1395, 1390, 1225, 1868, 1868, 3775, 1309, 1384, 3729, 1330,
	1874, 3730, 3731, 1382, 1155, 165, 3734, 3735, 3786, 3739,
	3088, 1381, 1155, 3776, 1216, 3812, 3740, 3813, 3725, 1215,
	1345, 1345, 3743, 1214, 1868, 1155, 3787, 3788, 1213, 3774,
	1181, 1180, 1115, 1916, 937, 923, 3951, 1846, 1345, 3768,
	1615, 84, 3753, 3829, 1392, 1309, 745, 78, 2009, 1225,
	1152, 3532, 896, 4182, 1345, 3814, 3826, 1378, 1152, 1877,
	4104, 752, 3818, 3824, 3838, 4167, 3154, 2663, 3805, 1151,
	3823, 1152, 2164, 1566, 2166, 3850, 3083, 3852, 2513, 4144,
	3702, 1035, 2720, 2937, 3801, 4070, 3909, 2358, 1751, 3040,
	1947, 1345, 1345, 1345, 80, 3862, 1019, 3870, 3863, 1065,
	3835, 3834, 1225, 3755, 3519, 2793, 3825, 3832, 3831, 1865,
	1867, 3830, 985, 1228, 1035, 1035, 1035, 3866, 3848, 3879,
	1927, 1025, 3849, 1943, 3845, 3857, 1936, 2549, 2432, 1042,
	1039, 3790, 1225, 1869, 1871, 1041, 3799, 1035, 3871, 3882,
	1035, 1035, 3798, 1040, 3800, 1870, 3864, 1770, 1038, 1864,
	1035, 3615, 3614, 1880, 2714, 2754, 3284, 1441, 1035, 1035,
	1439, 898, 1931, 2314, 2342, 2926, 1744, 1000, 1021, 3886,
	2339, 3885, 3890, 1225, 1173, 1345, 1010, 3888, 999, 3896,
	3066, 3045, 3271, 3488, 3901, 2227, 761, 2996, 2345, 1225,
	1952, 3851, 1877, 1309, 1166, 1953, 1309, 1035, 2455, 2448,
	2444, 3906, 3118, 2744, 1035, 1631, 1723, 3918, 2755, 3912,
	1211, 1003, 1035, 2312, 1880, 2454, 1735, 2906, 2237, 3278,
	3086, 2542, 1035, 4189, 3407, 1035, 2052, 3933, 3924, 3925,
	1868, 1131, 1130, 1129, 1035, 4173, 4170, 2030, 3649, 3234,
	1919, 1225, 2564, 1713, 3964, 3965, 3242, 3923, 1015, 1329,
	3051, 3312, 1345, 1345, 1402, 1151, 684, 3934, 1027, 1712,
	1168, 3927, 2454, 1151, 2684, 2683, 4080, 1309, 3979, 1197,
	1195, 3981, 3982, 1194, 3956, 3955, 1151, 1193, 3136, 4361,
	3932, 3529, 3972, 211, 1309, 4007, 2874, 1652, 1178, 1644,
	1225, 3236, 208, 1345, 3998, 3983, 210, 679, 209, 3840,
	3492, 3092, 4252, 3547, 1954, 3226, 2903, 2904, 3991, 3980,
	21, 1035, 1035, 3988, 3975, 4012, 3987, 3974, 20, 3996,
	242, 1956, 242, 242, 1321, 4031, 242, 242, 1336, 3970,
	1035, 1035, 19, 105, 4022, 4050, 40, 4023, 3990, 4006,
	18, 120, 242, 137, 1358, 136, 113, 1035, 1880, 4046,
	4047, 1333, 4025, 1874, 4027, 135, 4024, 134, 133, 132,
	4044, 4030, 3866, 1868, 4011, 4029, 4019, 139, 131, 1387,
	130, 125, 1035, 129, 128, 1035, 3962, 127, 126, 124,
	123, 1404, 122, 1410, 121, 119, 118, 242, 242, 1958,
	1321, 117, 116, 115, 1035, 4076, 4087, 114, 3986, 112,
	2063, 111, 4068, 4058, 3985, 110, 109, 108, 1450, 4043,
	107, 106, 2454, 4075, 1874, 4062, 675, 672, 4059, 4060,
	242, 57, 242, 242, 56, 1321, 242, 1336, 104, 103,
	17, 38, 4093, 4107, 14, 1035, 1035, 679, 1309, 242,
	242, 61, 4101, 4092, 62, 16, 1035, 13, 33, 1035,
	3022, 3023, 3024, 1345, 83, 95, 1337, 4100, 4106, 94,
	34, 4035, 814, 1345, 1345, 92, 91, 32, 4102, 15,
	89, 88, 31, 29, 4036, 11, 9, 4135, 8, 4122,
	1345, 4114, 35, 1831, 4123, 4119, 12, 4125, 5, 1380,
	170, 169, 4115, 4116, 1035, 1035, 172, 4128, 168, 4131,
	4129, 171, 82, 167, 166, 4037, 4133, 4134, 81, 27,
	10, 1959, 1415, 162, 1153, 1960, 4132, 4008, 3603, 76,
	164, 163, 161, 4138, 4139, 160, 4011, 1035, 1035, 1153,
	1035, 159, 4149, 77, 242, 4164, 74, 4172, 4175, 158,
	4140, 2251, 4141, 4187, 157, 1877, 75, 156, 1874, 25,
	6, 242, 4162, 4184, 60, 1490, 4191, 7, 3891, 1153,
	3128, 3332, 98, 4194, 4039, 1506, 99, 36, 4207, 72,
	71, 4203, 4206, 70, 4163, 24, 1035, 1035, 1035, 59,
	23, 199, 4148, 4181, 4195, 4177, 4038, 4196, 198, 197,
	196, 4208, 4202, 195, 4198, 194, 4236, 189, 188, 1035,
	4201, 4241, 193, 4040, 191, 190, 1877, 4220, 4221, 4223,
	192, 4222, 187, 202, 201, 4176, 203, 200, 4180, 205,
	186, 184, 180, 179, 183, 185, 182, 181, 2356, 4263,
	4239, 1545, 178, 204, 154, 155, 4265, 67, 153, 152,
	4251, 151, 150, 149, 4273, 148, 147, 1035, 66, 4274,
	22, 4278, 4272, 2, 1, 4270, 4271, 0, 4268, 4261,
	0, 4275, 4262, 4267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4284, 4285, 4294, 4290, 1955,
	4288, 2450, 4286, 0, 1309, 0, 4172, 4297, 0, 4175,
	4300, 4296, 4298, 0, 0, 1035, 0, 1035, 4312, 4307,
	4313, 4311, 4304, 0, 4191, 0, 1309, 2063, 0, 0,
	0, 4315, 0, 0, 0, 0, 1868, 0, 691, 4320,
	0, 1333, 0, 2523, 0, 0, 0, 0, 2450, 0,
	0, 0, 4332, 4314, 4334, 4316, 0, 4319, 0, 0,
	1877, 4306, 0, 0, 0, 0, 0, 4340, 0, 630,
	0, 0, 0, 0, 0, 0, 1035, 1035, 0, 4341,
	4350, 0, 0, 0, 1035, 0, 1035, 1035, 4356, 0,
	242, 0, 242, 4346, 4365, 0, 242, 1868, 4368, 0,
	4343, 4367, 4359, 1153, 0, 4347, 0, 4369, 0, 1358,
	1321, 242, 2756, 242, 0, 0, 0, 4366, 242, 1358,
	646, 4370, 4375, 242, 1358, 4373, 4364, 4376, 0, 4378,
	679, 4379, 0, 4377, 0, 4383, 0, 1035, 4374, 0,
	0, 4384, 0, 0, 2575, 0, 1309, 0, 1309, 4391,
	0, 4393, 696, 4041, 0, 0, 4380, 0, 4042, 4388,
	0, 4390, 4385, 0, 0, 0, 0, 0, 0, 4387,
	0, 1309, 0, 0, 4357, 4358, 0, 4394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2450, 0,
	0, 1661, 1662, 0, 0, 0, 0, 0, 3364, 3365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 1692, 0, 4389, 0, 0, 0, 1309,
	1664, 1868, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 0, 0, 0,
	3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436,
	3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 1309,
	3449, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 1686, 1687, 1688, 1689, 0, 0,
	242, 0, 0, 0, 1669, 0, 242, 0, 1330, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 242, 693, 0, 0, 630, 0, 242,
	2999, 3000, 0, 3017, 3018, 3019, 0, 0, 0, 0,
	0, 0, 2092, 1661, 1662, 0, 0, 0, 1691, 1693,
	1309, 3685, 0, 697, 242, 1153, 1153, 0, 0, 0,
	0, 242, 0, 0, 0, 1692, 1309, 0, 0, 0,
	0, 0, 1664, 1678, 1679, 0, 0, 0, 0, 0,
	0, 0, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 1333, 700, 814, 0, 0, 0,
	0, 695, 998, 3014, 0, 1684, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 1309, 0,
	0, 242, 0, 1321, 242, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 692, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 242, 0, 242,
	0, 242, 0, 242, 0, 242, 0, 1309, 0, 699,
	0, 0, 0, 0, 0, 0, 3367, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 2193, 0, 0, 2194,
	0, 2195, 0, 3005, 694, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 242, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 1690, 0, 661, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 1490, 2134, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 2135, 0, 0,
	1691, 1693, 0, 3020, 0, 0, 0, 0, 0, 2143,
	0, 2146, 2147, 2148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 1153, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 3015, 0, 0, 0, 0, 0,
	1697, 1692, 0, 0, 0, 0, 0, 1684, 1664, 0,
	0, 0, 998, 998, 0, 3052, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 3078, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 3091, 0, 0, 0, 0, 0, 0, 0,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 3109, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 998, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 242, 0, 630, 0,
	0, 2679, 0, 0, 1690, 0, 0, 0, 0, 0,
	242, 3016, 1686, 1687, 1688, 1689, 2999, 3000, 0, 3017,
	3018, 3019, 1669, 0, 1685, 242, 1336, 0, 0, 0,
	0, 0, 0, 0, 2671, 2669, 0, 3684, 0, 0,
	0, 2673, 2675, 2665, 1153, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 1153, 1691, 1693, 0, 0,
	0, 0, 242, 1336, 0, 646, 242, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 3014,
	0, 1678, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 3091, 0, 0, 0, 0,
	2589, 0, 0, 1684, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 3011, 3012, 3013, 0, 0,
	0, 242, 3010, 3008, 3009, 3001, 3002, 3003, 3004, 3006,
	3007, 0, 1681, 1677, 242, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 1709, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 1809, 0, 0, 0, 0, 3005,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 2696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2667, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 2681, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 3020,
	1690, 2739, 0, 2680, 2672, 2670, 2674, 2676, 2666, 2668,
	2682, 2589, 0, 630, 0, 0, 2760, 2678, 3915, 0,
	1685, 0, 242, 1324, 0, 242, 1223, 0, 0, 242,
	0, 242, 0, 0, 0, 0, 1321, 0, 242, 242,
	3015, 1336, 1336, 0, 0, 1702, 0, 0, 0, 0,
	2685, 2786, 814, 0, 2589, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3942, 0, 0, 0, 242,
	0, 0, 0, 2687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 1321,
	242, 0, 0, 1358, 0, 1358, 0, 3384, 1321, 0,
	1321, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 3400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 242,
	242, 242, 1321, 242, 0, 242, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 2950, 0, 242, 0, 2951, 0,
	2776, 1490, 0, 0, 242, 0, 0, 3016, 0, 0,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2817, 1697, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 2686, 0, 0, 0, 4067, 0, 1710, 0, 0,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 1358, 0, 0, 0, 0, 3491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2425,
	2426, 2427, 2428, 2421, 2422, 2423, 2424, 0, 0, 0,
	0, 3011, 3012, 3013, 0, 0, 0, 0, 3010, 3008,
	3009, 3001, 3002, 3003, 3004, 3006, 3007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 2999, 3000, 0, 3017, 3018,
	3019, 0, 73, 0, 0, 0, 0, 0, 2401, 2402,
	2403, 2404, 0, 0, 0, 0, 3373, 0, 1701, 0,
	0, 1711, 0, 0, 0, 0, 0, 1691, 1693, 2413,
	2414, 2415, 2416, 2409, 2410, 2411, 2412, 2417, 2418, 2419,
	2420, 0, 79, 1707, 242, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 630, 0, 0, 0, 3014, 630,
	1699, 0, 630, 0, 0, 630, 630, 0, 0, 85,
	0, 630, 0, 0, 1684, 0, 0, 0, 0, 242,
	0, 0, 0, 100, 0, 0, 0, 0, 86, 97,
	0, 1358, 2397, 2398, 2399, 2400, 2405, 2406, 2407, 2408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 2589, 2589, 242, 0, 1336,
	0, 0, 2589, 87, 0, 3140, 0, 0, 3005, 0,
	0, 0, 0, 2589, 3140, 0, 2589, 3140, 3140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 242, 1336, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 1336, 242, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3020, 0,
	2589, 1685, 3203, 2589, 1336, 0, 0, 2589, 2589, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2999,
	3000, 0, 3017, 3018, 3019, 0, 1702, 0, 0, 984,
	0, 0, 0, 984, 0, 0, 0, 0, 242, 3015,
	3372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 3230, 0, 0, 3232, 2589, 0, 0,
	242, 0, 0, 0, 242, 0, 1410, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 0, 3738, 0,
	1360, 0, 1366, 0, 1372, 0, 0, 0, 2739, 0,
	0, 1321, 3014, 242, 0, 0, 2589, 0, 630, 0,
	0, 3748, 0, 0, 0, 2589, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 242, 242, 173,
	93, 1700, 96, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 242, 2739, 212, 0, 2739, 3709,
	0, 0, 0, 0, 809, 0, 1491, 0, 138, 0,
	3215, 2999, 3000, 0, 3017, 3018, 3019, 0, 0, 0,
	0, 0, 0, 1509, 0, 1514, 3016, 0, 0, 0,
	0, 0, 3005, 0, 0, 1523, 0, 1528, 214, 0,
	3246, 3342, 0, 0, 1321, 242, 0, 242, 0, 0,
	0, 0, 0, 0, 3253, 0, 0, 0, 0, 0,
	0, 1661, 1662, 140, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	242, 0, 1697, 1692, 3014, 0, 213, 0, 0, 0,
	1664, 0, 3020, 0, 0, 0, 0, 206, 1710, 1587,
	0, 0, 1593, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 3304, 3305, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 1663, 0, 0, 176, 0, 0,
	0, 0, 0, 3015, 1683, 0, 3405, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 3907,
	3011, 3012, 3013, 0, 0, 0, 0, 3010, 3008, 3009,
	3001, 3002, 3003, 3004, 3006, 3007, 0, 0, 0, 0,
	0, 0, 0, 0, 3005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3907, 0, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 0,
	0, 0, 0, 0, 0, 0, 2251, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 1732, 1669, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 3020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 242, 0, 2251, 1701,
	0, 0, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	3016, 0, 0, 0, 0, 3015, 0, 630, 630, 0,
	0, 805, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 0, 0, 1358,
	1358, 0, 0, 0, 0, 0, 0, 68, 0, 808,
	807, 1699, 0, 1358, 1358, 1358, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 1803, 1803, 0, 68, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 679, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3011, 3012, 3013, 0, 0, 242,
	0, 3010, 3008, 3009, 3001, 3002, 3003, 3004, 3006, 3007,
	79, 984, 3016, 0, 0, 0, 85, 1336, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	100, 0, 0, 0, 0, 86, 97, 0, 0, 242,
	0, 0, 1690, 0, 0, 0, 0, 85, 242, 0,
	0, 0, 0, 242, 0, 0, 0, 242, 0, 0,
	0, 100, 1685, 0, 0, 0, 86, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2589, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 2786, 2786, 0,
	0, 0, 0, 814, 814, 2589, 0, 0, 2739, 2739,
	0, 0, 814, 2589, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 3011, 3012, 3013, 0,
	0, 0, 3573, 3010, 3008, 3009, 3001, 3002, 3003, 3004,
	3006, 3007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 3703, 0, 0, 0, 2333, 0, 0, 0,
	2334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3642, 3643, 3644, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2539, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 242, 0, 0, 0, 0, 0,
	1358, 0, 242, 0, 0, 0, 173, 93, 0, 96,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 173, 93, 0,
	96, 809, 2589, 2589, 2589, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 2589, 212, 3140, 0, 0, 1358, 1358,
	242, 1336, 809, 0, 0, 214, 138, 0, 0, 0,
	0, 0, 1336, 242, 1336, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2589, 0, 2589, 242,
	140, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 213, 2589, 0, 0, 0, 0, 3842,
	0, 140, 0, 0, 206, 0, 0, 0, 242, 0,
	0, 0, 207, 0, 0, 0, 177, 242, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 206, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 2226, 0, 2230, 0, 0, 0,
	0, 0, 0, 2244, 0, 176, 0, 0, 0, 0,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 0, 2293, 0, 2295, 2296,
	2297, 2298, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 2337, 0, 0, 0, 0,
	0, 0, 2589, 0, 3140, 0, 0, 3936, 0, 0,
	0, 2367, 2370, 2373, 2376, 242, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3887, 0, 3889, 0, 0,
	0, 679, 0, 0, 2446, 0, 2457, 2459, 2464, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3936, 0, 0, 0, 0, 0,
	0, 0, 2589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4016, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 1358, 0, 0, 3929,
	0, 0, 0, 0, 0, 0, 1697, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 242, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 3405,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 1044,
	0, 0, 0, 0, 0, 3936, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 3989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 243, 243, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 3842, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 242, 0, 0, 1669, 0,
	0, 0, 0, 243, 0, 0, 3140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2699, 2700,
	0, 2702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 1701, 1358, 0, 1711, 0, 0, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 4158,
	1708, 0, 0, 68, 0, 0, 1358, 1678, 1679, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 1699, 242, 2589, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 1684,
	0, 0, 1661, 1662, 242, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 3405,
	0, 1664, 0, 0, 0, 79, 0, 1490, 1490, 1710,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 2838, 0,
	0, 0, 85, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 100, 0, 0, 0,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 1714, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 2589, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 1702, 0, 0, 0, 1669, 0, 1661, 1662, 0,
	0, 0, 0, 2886, 2887, 0, 0, 0, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 2907, 2908,
	1701, 0, 0, 1711, 2337, 0, 0, 0, 0, 1691,
	1693, 0, 0, 2915, 0, 2786, 0, 0, 0, 0,
	0, 0, 0, 2589, 0, 1707, 0, 1708, 0, 2929,
	1663, 0, 0, 0, 1678, 1679, 0, 0, 2786, 0,
	1683, 0, 0, 0, 0, 0, 2941, 0, 0, 1680,
	0, 0, 1699, 0, 0, 0, 1700, 0, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 1684, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 3375, 0, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3362, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 1698, 0, 0, 0, 0,
	1669, 0, 173, 93, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2464, 2464, 2464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	1803, 0, 0, 0, 0, 0, 0, 809, 3056, 0,
	0, 138, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	1679, 214, 0, 1685, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 140, 0, 1702, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 984, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	206, 79, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3157, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 243, 1229, 243, 243, 0, 1229, 243, 243,
	0, 1229, 100, 0, 0, 0, 0, 86, 97, 0,
	0, 0, 0, 1700, 243, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 1229, 0, 0, 0, 1690, 0,
	0, 2953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 1685, 243,
	243, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 243, 243, 0, 0, 243, 0,
	1229, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	1229, 243, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	1663, 0, 90, 0, 0, 0, 243, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 93,
	0, 96, 0, 2244, 0, 0, 0, 0, 0, 3359,
	3360, 0, 0, 3363, 0, 0, 0, 3366, 0, 0,
	0, 0, 0, 0, 0, 212, 3370, 0, 0, 0,
	0, 0, 0, 809, 0, 3377, 0, 138, 3056, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 3389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 3412, 3413, 0, 3414, 3415, 3416, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 140, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	1707, 0, 1708, 0, 0, 213, 0, 0, 3422, 1678,
	1679, 0, 3424, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 3452, 3453, 0, 1501, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3473, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 241, 241, 241, 0, 0, 1229,
	1698, 0, 0, 243, 243, 243, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3513, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 3522, 3525, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 3546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 1702, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 1803, 243, 1229,
	1229, 243, 0, 0, 0, 0, 3635, 0, 1700, 1229,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 0, 0, 0, 0, 2952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 243, 0, 1686, 1687, 1688, 1689, 243, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 243, 3681, 3682, 0, 0,
	0, 243, 3686, 3687, 0, 0, 0, 3690, 3691, 0,
	0, 0, 0, 0, 3695, 0, 0, 0, 0, 1701,
	0, 0, 1711, 0, 0, 3699, 243, 0, 1691, 1693,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 3704, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 0, 0, 0,
	0, 1229, 0, 1229, 0, 1229, 0, 0, 0, 0,
	0, 1699, 0, 1661, 1662, 0, 0, 0, 0, 0,
	0, 1229, 1229, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 1229, 243, 0, 1692, 243, 0, 0, 0,
	0, 0, 1664, 0, 1229, 0, 1229, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 243, 243,
	0, 243, 0, 243, 0, 243, 1663, 243, 0, 0,
	0, 0, 0, 0, 1698, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 3525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 3361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 1229, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 3525, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 237, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 3902, 3903,
	3904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 2244, 1700, 0, 3913, 3914, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 3922, 241, 2909, 241, 241, 0, 0, 241,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 1229, 0, 0, 3525, 0,
	0, 0, 0, 0, 0, 0, 3961, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 3968, 0, 0, 984,
	241, 241, 0, 0, 0, 0, 0, 0, 3976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 243, 241, 241, 0, 243, 241,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 3525, 3525, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 4079, 241, 1229, 4082,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 1661, 1662, 241, 0, 0, 0, 3525, 775,
	0, 0, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 1692, 0, 243, 0, 0, 1229,
	0, 1664, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 0, 984,
	984, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	3525, 0, 0, 3525, 243, 1663, 0, 243, 0, 0,
	0, 243, 0, 243, 0, 1683, 0, 0, 0, 778,
	243, 243, 0, 0, 1680, 1229, 1229, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 797,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 2244,
	0, 243, 0, 0, 0, 1229, 0, 0, 779, 1020,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 243, 0, 0, 2892, 0, 0, 0, 0,
	0, 780, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 781, 0, 0, 782, 1669, 0, 0, 0, 0,
	243, 243, 243, 243, 0, 243, 0, 243, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 4219, 4219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 796, 0, 0, 102, 0, 243, 1691,
	1693, 0, 0, 4240, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 1825, 0, 1154, 0, 0, 0, 241,
	0, 0, 0, 0, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 1825, 241, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 718, 0, 0, 0,
	793, 4219, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3525,
	0, 3525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 1141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 803, 0, 785, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 4351, 0, 0, 0, 0, 0, 0, 4355, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	801, 802, 799, 1685, 0, 0, 0, 0, 794, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 788, 795,
	0, 0, 0, 1465, 0, 1465, 1465, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 790, 1507, 1508, 0, 0, 798, 0, 0, 1229,
	0, 0, 241, 0, 0, 0, 241, 0, 0, 0,
	705, 0, 0, 241, 1229, 0, 0, 0, 0, 241,
	0, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 1229, 241, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 241, 0, 243,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 243, 0, 243, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1229, 0,
	0, 0, 0, 0, 241, 0, 0, 241, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	241, 0, 241, 0, 241, 1229, 241, 0, 241, 0,
	243, 1229, 0, 1229, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 1229, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 243,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 1229,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 1229, 0, 243, 1229, 243,
	0, 0, 0, 0, 1850, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 102, 0,
	102, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 241, 0, 0, 979, 102, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 241, 0, 0, 0, 241,
	0, 68, 0, 44, 43, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	141, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	0, 46, 241, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	1229, 45, 2050, 79, 0, 0, 2057, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 241, 0, 0, 48, 64, 0,
	0, 0, 0, 0, 2080, 49, 2080, 0, 0, 0,
	85, 959, 2087, 0, 144, 0, 0, 0, 0, 718,
	0, 0, 47, 0, 100, 0, 0, 0, 0, 86,
	97, 1726, 0, 0, 0, 0, 0, 1465, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 241, 1731, 0,
	0, 0, 1737, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 87, 241, 0, 0, 241, 0,
	0, 0, 241, 0, 241, 0, 0, 1229, 0, 0,
	243, 241, 241, 0, 2057, 0, 0, 2139, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 2159, 0,
	243, 0, 241, 0, 0, 243, 0, 0, 0, 243,
	2169, 0, 2171, 0, 2173, 1229, 2175, 0, 2176, 0,
	0, 241, 0, 241, 0, 0, 0, 0, 1067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 1826, 0, 102, 0, 0, 0,
	0, 1229, 1229, 1229, 0, 0, 2198, 0, 0, 0,
	0, 241, 241, 241, 241, 0, 241, 1229, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 241, 1229, 0,
	0, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 54,
	173, 93, 0, 96, 0, 0, 0, 52, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	1229, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 1229, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 2520, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 176, 0,
	0, 3, 0, 1229, 0, 243, 0, 243, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 0, 1154, 0, 1229,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 1154, 0, 0, 0, 0, 1229, 0, 710,
	243, 0, 0, 0, 0, 0, 0, 0, 1229, 243,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 979, 0, 979, 0, 0, 0, 0, 0, 0,
	1229, 1229, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1328, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 1229, 0, 0, 2057, 241, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 1229, 0,
	0, 0, 1661, 1662, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 2762, 0, 0, 1465, 0,
	0, 1664, 1465, 0, 1465, 0, 0, 0, 0, 0,
	0, 241, 0, 959, 0, 0, 959, 959, 0, 0,
	1229, 0, 0, 0, 0, 718, 0, 243, 0, 0,
	0, 1229, 1229, 241, 0, 1663, 0, 241, 0, 0,
	0, 0, 2815, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 2825, 0, 2828, 0, 0, 1154, 0, 0, 1229,
	0, 2311, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 979, 0, 0,
	241, 241, 0, 0, 0, 0, 1731, 0, 0, 0,
	1731, 2850, 1328, 2852, 1328, 2885, 2855, 243, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 1465,
	0, 0, 0, 0, 0, 0, 0, 2883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	241, 0, 1141, 0, 0, 0, 0, 0, 0, 1691,
	1693, 0, 1158, 0, 0, 0, 1158, 0, 1826, 0,
	1158, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 1158, 0, 0, 0, 243, 0, 0,
	0, 0, 1229, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 1229, 1229, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 1158,
	0, 243, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 102, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 737, 1158, 754, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 1154, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 102, 0, 0, 102, 739, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 0, 1226,
	0, 0, 740, 1226, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 742, 0,
	3131, 743, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 0, 0, 704, 0, 0, 0,
	0, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 3172, 3174, 0, 2069, 0, 0,
	0, 0, 241, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 1346, 0, 0, 0,
	0, 241, 102, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 763, 0,
	0, 241, 0, 0, 0, 0, 241, 758, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1154, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3243, 0, 0, 0, 3247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 1158, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 1158, 0,
	0, 0, 2311, 0, 0, 241, 0, 0, 0, 0,
	0, 1661, 1662, 1881, 0, 0, 1465, 1704, 1705, 1706,
	1328, 1328, 0, 1731, 747, 0, 0, 1158, 0, 0,
	0, 0, 0, 1692, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 3308, 1710, 0,
	0, 1158, 0, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 0, 755,
	0, 0, 0, 0, 1663, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 3345, 0,
	1328, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 749, 0, 0, 767, 0,
	766, 0, 0, 0, 750, 0, 0, 0, 0, 0,
	0, 0, 0, 3357, 0, 0, 0, 1154, 751, 0,
	0, 0, 0, 759, 0, 1154, 0, 0, 0, 768,
	0, 765, 0, 0, 0, 0, 0, 705, 1825, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1141, 0, 1158, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 1141, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1711, 241, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 241, 0, 241, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 241, 1678, 1679, 0, 710, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 1226, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 102, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 1158, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 102, 102, 0, 0, 102, 0, 0, 0,
	1158, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 1158, 1158, 1158, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 1346, 1346, 0, 0, 0,
	0, 1664, 0, 0, 0, 1226, 0, 1702, 241, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1141, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 2069, 0, 1680, 0, 0, 0, 241, 0,
	102, 102, 3602, 0, 0, 0, 0, 0, 0, 0,
	1881, 1881, 1158, 0, 0, 0, 2069, 0, 0, 0,
	3617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 241, 241,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 1346,
	0, 1346, 0, 0, 0, 3666, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 1346, 1691,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 1346, 1346, 1346, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 1158, 1699, 0, 0, 241, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 1684, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 1141, 1141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 1690, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 3789, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 1685, 0, 0, 2069, 0, 0, 0,
	0, 870, 0, 913, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 892, 876, 875, 0, 0, 1158, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	3858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 0, 0, 880, 0, 0, 0,
	0, 921, 0, 0, 0, 1226, 0, 0, 1158, 0,
	889, 890, 0, 0, 0, 0, 0, 0, 0, 906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 1700, 0, 914, 882, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 2949, 883, 0, 1158, 1158, 0, 1158, 0, 0,
	0, 912, 0, 0, 102, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	1141, 0, 0, 0, 0, 0, 1227, 0, 0, 0,
	1227, 0, 0, 885, 1347, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 3943, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 886,
	887, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 894, 893, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 903,
	1347, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 918, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 915, 0, 1347,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4057, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 1141, 0, 0, 1347,
	0, 0, 879, 0, 1141, 0, 910, 911, 0, 0,
	0, 1346, 1346, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 0, 0, 0,
	0, 1346, 0, 919, 904, 0, 897, 895, 0, 900,
	0, 0, 0, 0, 0, 901, 0, 0, 872, 0,
	916, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 4124, 0,
	0, 902, 0, 0, 0, 0, 899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0, 0, 0,
	0, 0, 0, 0, 905, 0, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 1158, 1158, 907, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 102, 4166, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4188,
	1158, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4200, 0, 0,
	1881, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 1662, 0, 1694,
	1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1697, 1692, 0,
	0, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 1158, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 1158, 1680, 0,
	0, 1347, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	1158, 0, 1158, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 1158, 0, 0, 0, 0, 1686,
	1687, 1688, 1689, 0, 0, 0, 0, 0, 1158, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2311, 0, 1158, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 1701, 0, 0, 1711, 0, 0,
	0, 0, 0, 1691, 1693, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 1158, 1158, 1707,
	0, 1708, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 1347, 1347, 0, 0, 1699, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 1158, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 1226, 0, 0, 0, 0, 1698,
	0, 0, 0, 1346, 0, 0, 0, 0, 1346, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 1346, 0, 0, 0, 0, 0, 1346, 0, 1346,
	0, 0, 0, 1226, 0, 1158, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 1881, 1881, 1690, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 1346, 1347, 1685, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 1347, 0, 0, 102, 0,
	0, 102, 1702, 0, 0, 1347, 0, 0, 1881, 1881,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 1347,
	1347, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 1346, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 1226, 0, 0, 1700, 0, 1158,
	0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 0, 0, 0, 0, 2948, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 1158,
	1669, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1158, 1158, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 1701, 1158, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 1227, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 1158, 0, 1158,
	0, 1347, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 1346, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 1346,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 1346, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 1347, 1347,
	0, 1347, 0, 0, 0, 0, 0, 0, 1158, 1158,
	0, 0, 0, 1347, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 1158,
	1158, 1158, 0, 0, 0, 0, 2947, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 1697, 1692, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 1226, 0, 1226, 0, 1710, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 1158, 0, 1158, 1663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 1158, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1158, 0, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 1346, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 1158, 1346,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 1707, 0, 1708, 1226, 0, 0,
	0, 0, 0, 1678, 1679, 0, 1881, 0, 0, 0,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	0, 1699, 0, 0, 0, 0, 0, 1226, 0, 0,
	1227, 1697, 1692, 0, 0, 1684, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 1226, 0,
	1346, 0, 0, 1663, 0, 0, 1709, 1227, 0, 0,
	0, 0, 0, 1683, 1226, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 1698, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 1690, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 1685, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 1346, 0,
	0, 1347, 0, 0, 0, 0, 0, 1702, 0, 1661,
	1662, 1227, 1694, 1695, 1696, 1704, 1705, 1706, 1701, 0,
	1347, 1711, 0, 0, 0, 1347, 0, 1691, 1693, 0,
	1697, 1692, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 1707, 0, 1708, 1710, 0, 1347, 0,
	0, 0, 1678, 1679, 1347, 0, 1347, 0, 0, 0,
	1227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 1663, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 1683, 0, 1684, 0, 0, 0, 0, 0,
	0, 1680, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 1709, 0, 0, 0, 0,
	2334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 1347, 1347, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 1346, 1346,
	0, 0, 1669, 1347, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1692, 0, 0,
	0, 1690, 0, 0, 1664, 0, 0, 1701, 1227, 0,
	1711, 1227, 1710, 0, 0, 0, 1691, 1693, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 1663, 0,
	0, 1678, 1679, 0, 0, 0, 1702, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 1698, 0, 0, 0, 0, 0, 1669, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 4159, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 1711, 0, 0, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	1708, 0, 0, 0, 0, 0, 0, 1678, 1679, 0,
	1685, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 1702, 0, 0, 0, 1684,
	1664, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 4155, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 1685, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 1347, 1347, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 1227,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 1709, 0, 0, 0,
	4066, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 1690, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 1702, 0, 1680,
	0, 1227, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 1227, 0, 0, 0,
	1669, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 1347, 1347, 0, 1701, 4065, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1227, 1708, 0, 0, 0, 1347, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 1347, 1347, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 1347, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 3911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 1347, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 1230, 257, 258, 1231,
	1232, 1233, 1347, 1234, 572, 1235, 1236, 1237, 1238, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 1239, 577, 268, 269, 270, 271,
	272, 273, 1240, 1241, 0, 274, 578, 579, 580, 1242,
	275, 276, 581, 1243, 1310, 1244, 277, 278, 279, 280,
	281, 282, 283, 0, 1245, 285, 286, 287, 284, 288,
	1246, 289, 0, 290, 291, 292, 293, 294, 295, 1247,
	296, 297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250,
	1252, 1253, 1254, 301, 302, 303, 304, 0, 305, 582,
	583, 1255, 309, 306, 307, 1256, 310, 308, 1257, 311,
	312, 313, 1258, 1259, 314, 315, 316, 1260, 317, 318,
	1261, 319, 320, 321, 1262, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	1263, 248, 1264, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 1265, 339, 1266, 1267, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 1268, 350, 590, 1269, 591, 351, 1270, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 1271, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 1272, 1101, 365, 595, 596, 1273, 597,
	1274, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1275, 379, 381, 380, 1276, 382, 599, 1106, 383, 384,
	1107, 1277, 385, 0, 0, 0, 386, 387, 1278, 1279,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 1280, 250, 1110, 427, 428, 1281, 600,
	429, 601, 431, 432, 1282, 0, 433, 0, 1283, 1284,
	435, 436, 437, 1285, 1286, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 1287, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 1288,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 1289, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	1290, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 1291, 506, 507, 505, 508, 509, 510,
	1292, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 1293, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	1294, 532, 533, 0, 531, 1295, 534, 535, 536, 537,
	538, 539, 329, 540, 1296, 541, 613, 614, 615, 616,
	1297, 550, 1298, 542, 543, 544, 617, 545, 618, 1299,
	546, 547, 548, 549, 0, 551, 552, 1300, 1301, 553,
	554, 555, 557, 558, 556, 559, 1302, 560, 1303, 0,
	561, 562, 563, 619, 620, 621, 1304, 565, 564, 566,
	622, 1305, 1306, 1307, 1308, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 2498, 0, 0, 0, 0, 0, 0, 0,
	2499, 251, 252, 253, 254, 255, 256, 1230, 257, 258,
	1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 1239, 577, 268, 269, 270,
	271, 272, 273, 1240, 1241, 0, 274, 578, 579, 580,
	1242, 275, 276, 581, 1243, 1310, 1244, 277, 278, 279,
	280, 281, 282, 283, 0, 1245, 285, 286, 287, 284,
	288, 1246, 289, 0, 290, 291, 292, 293, 294, 295,
	1247, 296, 297, 298, 1099, 299, 300, 1248, 1249, 1251,
	1250, 1252, 1253, 1254, 301, 302, 303, 304, 0, 305,
	582, 583, 1255, 309, 306, 307, 1256, 310, 308, 1257,
	311, 312, 313, 1258, 1259, 314, 315, 316, 1260, 317,
	318, 1261, 319, 320, 321, 1262, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 1263, 248, 1264, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 1265, 339, 1266, 1267,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 1268, 350, 590, 1269, 591, 351, 1270,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 1271, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 1272, 1101, 365, 595, 596, 1273,
	597, 1274, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1275, 379, 381, 380, 1276, 382, 599, 1106, 383,
	384, 1107, 1277, 385, 0, 0, 0, 386, 387, 1278,
	1279, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 1280, 250, 1110, 427, 428, 1281,
	600, 429, 601, 431, 432, 1282, 0, 433, 0, 1283,
	1284, 435, 436, 437, 1285, 1286, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 1287, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	1288, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 1289, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 1290, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 1291, 506, 507, 505, 508, 509,
	510, 1292, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 1293, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 1294, 532, 533, 0, 531, 1295, 534, 535, 536,
	537, 538, 539, 329, 540, 1296, 541, 613, 614, 615,
	616, 1297, 550, 1298, 542, 543, 544, 617, 545, 618,
	1299, 546, 547, 548, 549, 0, 551, 552, 1300, 1301,
	553, 554, 555, 557, 558, 556, 559, 1302, 560, 1303,
	0, 561, 562, 563, 619, 620, 621, 1304, 565, 564,
	566, 622, 1305, 1306, 1307, 1308, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 3383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3385,
	251, 252, 253, 254, 255, 256, 1230, 257, 258, 1231,
	1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 1239, 577, 268, 269, 270, 271,
	272, 273, 1240, 1241, 0, 274, 578, 579, 580, 1242,
	275, 276, 581, 1243, 1310, 1244, 277, 278, 279, 280,
	281, 282, 283, 0, 1245, 285, 286, 287, 284, 288,
	1246, 289, 0, 290, 291, 292, 293, 294, 295, 1247,
	296, 297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250,
	1252, 1253, 1254, 301, 302, 303, 304, 0, 305, 582,
	583, 1255, 309, 306, 307, 1256, 310, 308, 1257, 311,
	312, 313, 1258, 1259, 314, 315, 316, 1260, 317, 318,
	1261, 319, 320, 321, 1262, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	1263, 248, 1264, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 1265, 339, 1266, 1267, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 1268, 350, 590, 1269, 591, 351, 1270, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 1271, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 1272, 1101, 365, 595, 596, 1273, 597,
	1274, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1275, 379, 381, 380, 1276, 382, 599, 1106, 383, 384,
	1107, 1277, 385, 0, 0, 0, 386, 387, 1278, 1279,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 1280, 250, 1110, 427, 428, 1281, 600,
	429, 601, 431, 432, 1282, 0, 433, 0, 1283, 1284,
	435, 436, 437, 1285, 1286, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 1287, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 1288,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 1289, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	1290, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 1291, 506, 507, 505, 508, 509, 510,
	1292, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 1293, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	1294, 532, 533, 0, 531, 1295, 534, 535, 536, 537,
	538, 539, 329, 540, 1296, 541, 613, 614, 615, 616,
	1297, 550, 1298, 542, 543, 544, 617, 545, 618, 1299,
	546, 547, 548, 549, 0, 551, 552, 1300, 1301, 553,
	554, 555, 557, 558, 556, 559, 1302, 560, 1303, 0,
	561, 562, 563, 619, 620, 621, 1304, 565, 564, 566,
	622, 1305, 1306, 1307, 1308, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3737, 251, 252, 253, 254, 255, 256, 1230,
	257, 258, 1231, 1232, 1233, 0, 1234, 572, 1235, 1236,
	1237, 1238, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 1239, 577, 268,
	269, 270, 271, 272, 273, 1240, 1241, 0, 274, 578,
	579, 580, 1242, 275, 276, 581, 1243, 1310, 1244, 277,
	278, 279, 280, 281, 282, 283, 0, 1245, 285, 286,
	287, 284, 288, 1246, 289, 0, 290, 291, 292, 293,
	294, 295, 1247, 296, 297, 298, 1099, 299, 300, 1248,
	1249, 1251, 1250, 1252, 1253, 1254, 301, 302, 303, 304,
	0, 305, 582, 583, 1255, 309, 306, 307, 1256, 310,
	308, 1257, 311, 312, 313, 1258, 1259, 314, 315, 316,
	1260, 317, 318, 1261, 319, 320, 321, 1262, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 1263, 248, 1264, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 1265, 339,
	1266, 1267, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 1268, 350, 590, 1269, 591,
	351, 1270, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 1271, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 1272, 1101, 365, 595,
	596, 1273, 597, 1274, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 1275, 379, 381, 380, 1276, 382, 599,
	1106, 383, 384, 1107, 1277, 385, 0, 0, 0, 386,
	387, 1278, 1279, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 1280, 250, 1110, 427,
	428, 1281, 600, 429, 601, 431, 432, 1282, 0, 433,
	0, 1283, 1284, 435, 436, 437, 1285, 1286, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 1287, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 1288, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 1289, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 1290, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 1291, 506, 507, 505,
	508, 509, 510, 1292, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 1293,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 1294, 532, 533, 0, 531, 1295, 534,
	535, 536, 537, 538, 539, 329, 540, 1296, 541, 613,
	614, 615, 616, 1297, 550, 1298, 542, 543, 544, 617,
	545, 618, 1299, 546, 547, 548, 549, 0, 551, 552,
	1300, 1301, 553, 554, 555, 557, 558, 556, 559, 1302,
	560, 1303, 0, 561, 562, 563, 619, 620, 621, 1304,
	565, 564, 566, 622, 1305, 1306, 1307, 1308, 567, 568,
	623, 569, 570, 571, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3908, 251, 252, 253, 254, 255, 256, 1230, 257, 258,
	1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 1239, 577, 268, 269, 270,
	271, 272, 273, 1240, 1241, 0, 274, 578, 579, 580,
	1242, 275, 276, 581, 1243, 1310, 1244, 277, 278, 279,
	280, 281, 282, 283, 0, 1245, 285, 286, 287, 284,
	288, 1246, 289, 0, 290, 291, 292, 293, 294, 295,
	1247, 296, 297, 298, 1099, 299, 300, 1248, 1249, 1251,
	1250, 1252, 1253, 1254, 301, 302, 303, 304, 0, 305,
	582, 583, 1255, 309, 306, 307, 1256, 310, 308, 1257,
	311, 312, 313, 1258, 1259, 314, 315, 316, 1260, 317,
	318, 1261, 319, 320, 321, 1262, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 1263, 248, 1264, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 1265, 339, 1266, 1267,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 1268, 350, 590, 1269, 591, 351, 1270,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 1271, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 1272, 1101, 365, 595, 596, 1273,
	597, 1274, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1275, 379, 381, 380, 1276, 382, 599, 1106, 383,
	384, 1107, 1277, 385, 0, 0, 0, 386, 387, 1278,
	1279, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 1280, 250, 1110, 427, 428, 1281,
	600, 429, 601, 431, 432, 1282, 0, 433, 0, 1283,
	1284, 435, 436, 437, 1285, 1286, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 1287, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	1288, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 1289, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 1290, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 1291, 506, 507, 505, 508, 509,
	510, 1292, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 1293, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 1294, 532, 533, 0, 531, 1295, 534, 535, 536,
	537, 538, 539, 329, 540, 1296, 541, 613, 614, 615,
	616, 1297, 550, 1298, 542, 543, 544, 617, 545, 618,
	1299, 546, 547, 548, 549, 0, 551, 552, 1300, 1301,
	553, 554, 555, 557, 558, 556, 559, 1302, 560, 1303,
	0, 561, 562, 563, 619, 620, 621, 1304, 565, 564,
	566, 622, 1305, 1306, 1307, 1308, 567, 568, 623, 569,
	570, 571, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3797, 251,
	252, 253, 254, 255, 256, 1230, 257, 258, 1231, 1232,
	1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 1239, 577, 268, 269, 270, 271, 272,
	273, 1240, 1241, 0, 274, 578, 579, 580, 1242, 275,
	276, 581, 1243, 1310, 1244, 277, 278, 279, 280, 281,
	282, 283, 0, 1245, 285, 286, 287, 284, 288, 1246,
	289, 0, 290, 291, 292, 293, 294, 295, 1247, 296,
	297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252,
	1253, 1254, 301, 302, 303, 304, 0, 305, 582, 583,
	1255, 309, 306, 307, 1256, 310, 308, 1257, 311, 312,
	313, 1258, 1259, 314, 315, 316, 1260, 317, 318, 1261,
	319, 320, 321, 1262, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 1263,
	248, 1264, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 1265, 339, 1266, 1267, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 1268, 350, 590, 1269, 591, 351, 1270, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 1102, 357, 358,
	1271, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 1272, 1101, 365, 595, 596, 1273, 597, 1274,
	367, 368, 1103, 598, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 1275,
	379, 381, 380, 1276, 382, 599, 1106, 383, 384, 1107,
	1277, 385, 0, 0, 0, 386, 387, 1278, 1279, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 1280, 250, 1110, 427, 428, 1281, 600, 429,
	601, 431, 432, 1282, 0, 433, 0, 1283, 1284, 435,
	436, 437, 1285, 1286, 438, 439, 602, 1111, 440, 1112,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 1287, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 1288, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 1289, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 1290,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 1291, 506, 507, 505, 508, 509, 510, 1292,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 1293, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 1294,
	532, 533, 0, 531, 1295, 534, 535, 536, 537, 538,
	539, 329, 540, 1296, 541, 613, 614, 615, 616, 1297,
	550, 1298, 542, 543, 544, 617, 545, 618, 1299, 546,
	547, 548, 549, 0, 551, 552, 1300, 1301, 553, 554,
	555, 557, 558, 556, 559, 1302, 560, 1303, 0, 561,
	562, 563, 619, 620, 621, 1304, 565, 564, 566, 622,
	1305, 1306, 1307, 1308, 567, 568, 623, 569, 570, 571,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3667, 251, 252, 253,
	254, 255, 256, 1230, 257, 258, 1231, 1232, 1233, 0,
	1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 1239, 577, 268, 269, 270, 271, 272, 273, 1240,
	1241, 0, 274, 578, 579, 580, 1242, 275, 276, 581,
	1243, 1310, 1244, 277, 278, 279, 280, 281, 282, 283,
	0, 1245, 285, 286, 287, 284, 288, 1246, 289, 0,
	290, 291, 292, 293, 294, 295, 1247, 296, 297, 298,
	1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254,
	301, 302, 303, 304, 0, 305, 582, 583, 1255, 309,
	306, 307, 1256, 310, 308, 1257, 311, 312, 313, 1258,
	1259, 314, 315, 316, 1260, 317, 318, 1261, 319, 320,
	321, 1262, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 1263, 248, 1264,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 1265, 339, 1266, 1267, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 1268,
	350, 590, 1269, 591, 351, 1270, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 1271, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	1272, 1101, 365, 595, 596, 1273, 597, 1274, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 1275, 379, 381,
	380, 1276, 382, 599, 1106, 383, 384, 1107, 1277, 385,
	0, 0, 0, 386, 387, 1278, 1279, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	1280, 250, 1110, 427, 428, 1281, 600, 429, 601, 431,
	432, 1282, 0, 433, 0, 1283, 1284, 435, 436, 437,
	1285, 1286, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	1287, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 1288, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	1289, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 1290, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	1291, 506, 507, 505, 508, 509, 510, 1292, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 1293, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 1294, 532, 533,
	0, 531, 1295, 534, 535, 536, 537, 538, 539, 329,
	540, 1296, 541, 613, 614, 615, 616, 1297, 550, 1298,
	542, 543, 544, 617, 545, 618, 1299, 546, 547, 548,
	549, 0, 551, 552, 1300, 1301, 553, 554, 555, 557,
	558, 556, 559, 1302, 560, 1303, 0, 561, 562, 563,
	619, 620, 621, 1304, 565, 564, 566, 622, 1305, 1306,
	1307, 1308, 567, 568, 623, 569, 570, 571, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3401, 251, 252, 253, 254, 255,
	256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234, 572,
	1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 1239,
	577, 268, 269, 270, 271, 272, 273, 1240, 1241, 0,
	274, 578, 579, 580, 1242, 275, 276, 581, 1243, 1310,
	1244, 277, 278, 279, 280, 281, 282, 283, 0, 1245,
	285, 286, 287, 284, 288, 1246, 289, 0, 290, 291,
	292, 293, 294, 295, 1247, 296, 297, 298, 1099, 299,
	300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302,
	303, 304, 0, 305, 582, 583, 1255, 309, 306, 307,
	1256, 310, 308, 1257, 311, 312, 313, 1258, 1259, 314,
	315, 316, 1260, 317, 318, 1261, 319, 320, 321, 1262,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 1263, 248, 1264, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	1265, 339, 1266, 1267, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 1268, 350, 590,
	1269, 591, 351, 1270, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 1271, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 1272, 1101,
	365, 595, 596, 1273, 597, 1274, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1275, 379, 381, 380, 1276,
	382, 599, 1106, 383, 384, 1107, 1277, 385, 0, 0,
	0, 386, 387, 1278, 1279, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 1280, 250,
	1110, 427, 428, 1281, 600, 429, 601, 431, 432, 1282,
	0, 433, 0, 1283, 1284, 435, 436, 437, 1285, 1286,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 1287, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 1288, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 1289, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 1290, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 1291, 506,
	507, 505, 508, 509, 510, 1292, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 1293, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 1294, 532, 533, 0, 531,
	1295, 534, 535, 536, 537, 538, 539, 329, 540, 1296,
	541, 613, 614, 615, 616, 1297, 550, 1298, 542, 543,
	544, 617, 545, 618, 1299, 546, 547, 548, 549, 0,
	551, 552, 1300, 1301, 553, 554, 555, 557, 558, 556,
	559, 1302, 560, 1303, 0, 561, 562, 563, 619, 620,
	621, 1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308,
	567, 568, 623, 569, 570, 571, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3228, 251, 252, 253, 254, 255, 256, 1230,
	257, 258, 1231, 1232, 1233, 0, 1234, 572, 1235, 1236,
	1237, 1238, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 1239, 577, 268,
	269, 270, 271, 272, 273, 1240, 1241, 0, 274, 578,
	579, 580, 1242, 275, 276, 581, 1243, 1310, 1244, 277,
	278, 279, 280, 281, 282, 283, 0, 1245, 285, 286,
	287, 284, 288, 1246, 289, 0, 290, 291, 292, 293,
	294, 295, 1247, 296, 297, 298, 1099, 299, 300, 1248,
	1249, 1251, 1250, 1252, 1253, 1254, 301, 302, 303, 304,
	0, 305, 582, 583, 1255, 309, 306, 307, 1256, 310,
	308, 1257, 311, 312, 313, 1258, 1259, 314, 315, 316,
	1260, 317, 318, 1261, 319, 320, 321, 1262, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 1263, 248, 1264, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 1265, 339,
	1266, 1267, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 1268, 350, 590, 1269, 591,
	351, 1270, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 1271, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 1272, 1101, 365, 595,
	596, 1273, 597, 1274, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 1275, 379, 381, 380, 1276, 382, 599,
	1106, 383, 384, 1107, 1277, 385, 0, 0, 0, 386,
	387, 1278, 1279, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 1280, 250, 1110, 427,
	428, 1281, 600, 429, 601, 431, 432, 1282, 0, 433,
	0, 1283, 1284, 435, 436, 437, 1285, 1286, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 1287, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 1288, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 1289, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 1290, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 1291, 506, 507, 505,
	508, 509, 510, 1292, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 1293,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 1294, 532, 533, 0, 531, 1295, 534,
	535, 536, 537, 538, 539, 329, 540, 1296, 541, 613,
	614, 615, 616, 1297, 550, 1298, 542, 543, 544, 617,
	545, 618, 1299, 546, 547, 548, 549, 0, 551, 552,
	1300, 1301, 553, 554, 555, 557, 558, 556, 559, 1302,
	560, 1303, 0, 561, 562, 563, 619, 620, 621, 1304,
	565, 564, 566, 622, 1305, 1306, 1307, 1308, 567, 568,
	623, 569, 570, 571, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2357, 251, 252, 253, 254, 255, 256, 1230, 257, 258,
	1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 1239, 577, 268, 269, 270,
	271, 272, 273, 1240, 1241, 0, 274, 578, 579, 580,
	1242, 275, 276, 581, 1243, 1310, 1244, 277, 278, 279,
	280, 281, 282, 283, 0, 1245, 285, 286, 287, 284,
	288, 1246, 289, 0, 290, 291, 292, 293, 294, 295,
	1247, 296, 297, 298, 1099, 299, 300, 1248, 1249, 1251,
	1250, 1252, 1253, 1254, 301, 302, 303, 304, 0, 305,
	582, 583, 1255, 309, 306, 307, 1256, 310, 308, 1257,
	311, 312, 313, 1258, 1259, 314, 315, 316, 1260, 317,
	318, 1261, 319, 320, 321, 1262, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 1263, 248, 1264, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 1265, 339, 1266, 1267,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 1268, 350, 590, 1269, 591, 351, 1270,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 1271, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 1272, 1101, 365, 595, 596, 1273,
	597, 1274, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1275, 379, 381, 380, 1276, 382, 599, 1106, 383,
	384, 1107, 1277, 385, 0, 0, 0, 386, 387, 1278,
	1279, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 1280, 250, 1110, 427, 428, 1281,
	600, 429, 601, 431, 432, 1282, 0, 433, 0, 1283,
	1284, 435, 436, 437, 1285, 1286, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 1287, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	1288, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 1289, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 1290, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 1291, 506, 507, 505, 508, 509,
	510, 1292, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 1293, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 1294, 532, 533, 0, 531, 1295, 534, 535, 536,
	537, 538, 539, 329, 540, 1296, 541, 613, 614, 615,
	616, 1297, 550, 1298, 542, 543, 544, 617, 545, 618,
	1299, 546, 547, 548, 549, 0, 551, 552, 1300, 1301,
	553, 554, 555, 557, 558, 556, 559, 1302, 560, 1303,
	0, 561, 562, 563, 619, 620, 621, 1304, 565, 564,
	566, 622, 1305, 1306, 1307, 1308, 567, 568, 623, 569,
	570, 571, 1322, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 251, 252, 253, 254, 255, 256, 1230, 257, 258,
	1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 1239, 577, 268, 269, 270,
	271, 272, 273, 1240, 1241, 0, 274, 578, 579, 580,
	1242, 275, 276, 581, 1243, 1310, 1244, 277, 278, 279,
	280, 281, 282, 283, 0, 1245, 285, 286, 287, 284,
	288, 1246, 289, 0, 290, 291, 292, 293, 294, 295,
	1247, 296, 297, 298, 1099, 299, 300, 1248, 1249, 1251,
	1250, 1252, 1253, 1254, 301, 302, 303, 304, 0, 305,
	582, 583, 1255, 309, 306, 307, 1256, 310, 308, 1257,
	311, 312, 313, 1258, 1259, 314, 315, 316, 1260, 317,
	318, 1261, 319, 320, 321, 1262, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 1263, 248, 1264, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 1265, 339, 1266, 1267,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 1268, 350, 590, 1269, 591, 351, 1270,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 1271, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 1272, 1101, 365, 595, 596, 1273,
	597, 1274, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1275, 379, 381, 380, 1276, 382, 599, 1106, 383,
	384, 1107, 1277, 385, 0, 0, 0, 386, 387, 1278,
	1279, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 1280, 250, 1110, 427, 428, 1281,
	600, 429, 601, 431, 432, 1282, 0, 433, 0, 1283,
	1284, 435, 436, 437, 1285, 1286, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 1287, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	1288, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 1289, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 1290, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 1291, 506, 507, 505, 508, 509,
	510, 1292, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 1293, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 1294, 532, 533, 0, 531, 1295, 534, 535, 536,
	537, 538, 539, 329, 540, 1296, 541, 613, 614, 615,
	616, 1297, 550, 1298, 542, 543, 544, 617, 545, 618,
	1299, 546, 547, 548, 549, 0, 551, 552, 1300, 1301,
	553, 554, 555, 557, 558, 556, 559, 1302, 560, 1303,
	0, 561, 562, 563, 619, 620, 621, 1304, 565, 564,
	566, 622, 1305, 1306, 1307, 1308, 567, 568, 623, 569,
	570, 571, 1221, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1230, 257, 258,
	1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 1239, 577, 268, 269, 270,
	271, 272, 273, 1240, 1241, 0, 274, 578, 579, 580,
	1242, 275, 276, 581, 1243, 1310, 1244, 277, 278, 279,
	280, 281, 282, 283, 0, 1245, 285, 286, 287, 284,
	288, 1246, 289, 0, 290, 291, 292, 293, 294, 295,
	1247, 296, 297, 298, 1099, 299, 300, 1248, 1249, 1251,
	1250, 1252, 1253, 1254, 301, 302, 303, 304, 0, 305,
	582, 583, 1255, 309, 306, 307, 1256, 310, 308, 1257,
	311, 312, 313, 1258, 1259, 314, 315, 316, 1260, 317,
	318, 1261, 319, 320, 321, 1262, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 1263, 248, 1264, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 1265, 339, 1266, 1267,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 1268, 350, 590, 1269, 591, 351, 1270,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 1271, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 1272, 1101, 365, 595, 596, 1273,
	597, 1274, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1275, 379, 381, 380, 1276, 382, 599, 1106, 383,
	384, 1107, 1277, 385, 0, 0, 0, 386, 387, 1278,
	1279, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 1280, 250, 1110, 427, 428, 1281,
	600, 429, 601, 431, 432, 1282, 0, 433, 0, 1283,
	1284, 435, 436, 437, 1285, 1286, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 1287, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	1288, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 1289, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 1290, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 1291, 506, 507, 505, 508, 509,
	510, 1292, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 1293, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 1294, 532, 533, 0, 531, 1295, 534, 535, 536,
	537, 538, 539, 329, 540, 1296, 541, 613, 614, 615,
	616, 1297, 550, 1298, 542, 543, 544, 617, 545, 618,
	1299, 546, 547, 548, 549, 0, 551, 552, 1300, 1301,
	553, 554, 555, 557, 558, 556, 559, 1302, 560, 1303,
	0, 561, 562, 563, 619, 620, 621, 1304, 565, 564,
	566, 622, 1305, 1306, 1307, 1308, 567, 568, 623, 569,
	570, 571, 1224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 1230, 257, 258, 1231, 1232,
	1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 1239, 577, 268, 269, 270, 271, 272,
	273, 1240, 1241, 0, 274, 578, 579, 580, 1242, 275,
	276, 581, 1243, 1310, 1244, 277, 278, 279, 280, 281,
	282, 283, 0, 1245, 285, 286, 287, 284, 288, 1246,
	289, 0, 290, 291, 292, 293, 294, 295, 1247, 296,
	297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252,
	1253, 1254, 301, 302, 303, 304, 0, 305, 582, 583,
	1255, 309, 306, 307, 1256, 310, 308, 1257, 311, 312,
	313, 1258, 1259, 314, 315, 316, 1260, 317, 318, 1261,
	319, 320, 321, 1262, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 1263,
	248, 1264, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 1265, 339, 1266, 1267, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 1268, 350, 590, 1269, 591, 351, 1270, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 1102, 357, 358,
	1271, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 1272, 1101, 365, 595, 596, 1273, 597, 1274,
	367, 368, 1103, 598, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 1275,
	379, 381, 380, 1276, 382, 599, 1106, 383, 384, 1107,
	1277, 385, 0, 0, 0, 386, 387, 1278, 1279, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 1280, 250, 1110, 427, 428, 1281, 600, 429,
	601, 431, 432, 1282, 0, 433, 0, 1283, 1284, 435,
	436, 437, 1285, 1286, 438, 439, 602, 1111, 440, 1112,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 1287, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 1288, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 1289, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 1290,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 1291, 506, 507, 505, 508, 509, 510, 1292,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 1293, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 1294,
	532, 533, 0, 531, 1295, 534, 535, 536, 537, 538,
	539, 329, 540, 1296, 541, 613, 614, 615, 616, 1297,
	550, 1298, 542, 543, 544, 617, 545, 618, 1299, 546,
	547, 548, 549, 0, 551, 552, 1300, 1301, 553, 554,
	555, 557, 558, 556, 559, 1302, 560, 1303, 0, 561,
	562, 563, 619, 620, 621, 1304, 565, 564, 566, 622,
	1305, 1306, 1307, 1308, 567, 568, 623, 569, 570, 571,
	2332, 0, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 2329, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 2330, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 2328, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 2331, 0, 0, 0,
	0, 0, 0, 1018, 2327, 0, 980, 1016, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 212, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	214, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 1499, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 206,
	567, 568, 623, 569, 570, 571, 993, 207, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1736,
	1734, 0, 0, 1016, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 212, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 214, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 1499, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 206, 567, 568, 623, 569, 570, 571,
	993, 207, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 1736, 2905, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 212, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 214, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 1499, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 206, 567, 568,
	623, 569, 570, 571, 993, 207, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 1736, 1734, 0,
	0, 1016, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 2460, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 2465, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 2461, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 2462,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 2377, 1016, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	0, 0, 0, 0, 0, 0, 0, 1018, 2375, 0,
	2374, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	0, 0, 0, 1018, 2372, 0, 2371, 1016, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 0, 0, 0, 0, 0, 0, 0, 1018,
	2369, 0, 2368, 1016, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 1018, 2366, 0, 1589, 1016,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 1588, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 983, 1016, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 997, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0,
	0, 1016, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 4178, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 997, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 1018, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	2246, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	2245, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 997, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018,
	0, 0, 0, 1016, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 3971, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 997, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 3629, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1804, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	0, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 3379, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1804, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	0, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 2465, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	0, 0, 0, 0, 0, 0, 0, 1018, 1734, 0,
	2470, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	0, 0, 0, 1018, 0, 0, 2468, 1016, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 0, 0, 0, 0, 0, 0, 0, 1018,
	0, 0, 2456, 1016, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 1018, 0, 0, 2445, 1016,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 2443, 1016, 2434, 2441, 1007, 1008,
	1004, 1005, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 2437, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 2438, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 2439, 398, 2436, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 2440, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 2435, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	0, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	2431, 1016, 2434, 2441, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 2437, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 2438, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 2439,
	398, 2436, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 2440, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 2435, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	0, 0, 0, 0, 0, 1742, 0, 1018, 0, 0,
	0, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 2225, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	0, 0, 0, 1018, 0, 0, 1594, 1016, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 0, 0, 0, 0, 0, 0, 0, 1018,
	0, 0, 1529, 1016, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 1018, 0, 0, 1524, 1016,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 1515, 1016, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	0, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	1510, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	0, 0, 0, 1018, 0, 0, 1492, 1016, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	551, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 0, 0, 0, 0, 0, 0, 0, 1018,
	0, 0, 1374, 1016, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1373, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 1018, 0, 0, 1368, 1016,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1367, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 1361, 1016, 1034, 1006, 1007, 1008,
	1004, 1005, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0,
	0, 1016, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 1018, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 991, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 4218, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 995, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 992, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 990, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 4217, 552, 0, 996,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 993, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 0, 0, 0, 987, 988, 1034, 1006,
	1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1058,
	1022, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 4216, 1071, 0, 266, 1078, 267, 1077, 0,
	1088, 268, 269, 270, 271, 272, 273, 1024, 1057, 991,
	274, 1118, 1119, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	4218, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 1081, 305, 1075, 1074, 995, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 1001, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 1013, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1073, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1086, 1087, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 1023, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 992, 250,
	1110, 427, 428, 1014, 1062, 429, 1076, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1072, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 1002, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1070, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1117,
	526, 527, 528, 529, 1093, 0, 532, 533, 990, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1082, 1083, 1084, 1085, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 1012, 546, 547, 548, 549, 0,
	4217, 552, 0, 996, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 619, 1079,
	1116, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 993, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	987, 988, 1034, 1006, 1007, 1008, 2872, 2873, 1017, 1018,
	0, 0, 0, 1016, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 991, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	995, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 992, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 1002, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 990, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 996, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	993, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 987, 988, 1034, 1006, 1007, 1008,
	2870, 2871, 1017, 1018, 0, 0, 0, 1016, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 1022, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 1071, 0, 266, 1078, 267, 1077, 0, 1088, 268,
	269, 270, 271, 272, 273, 1024, 1057, 991, 274, 1118,
	1119, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	1081, 305, 1075, 1074, 995, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1066, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	1001, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 1013, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1073, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 1086, 1087, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 1023,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 1068,
	1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 992, 250, 1110, 427,
	428, 1014, 1062, 429, 1076, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 1072, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 1002, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 1070, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 1117, 526, 527,
	528, 529, 1093, 0, 532, 533, 990, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 1082,
	1083, 1084, 1085, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 1012, 546, 547, 548, 549, 0, 551, 552,
	0, 996, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 619, 1079, 1116, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 993, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 987, 988,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0,
	0, 1016, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 1110, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 551, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 993, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 2233, 2234, 1034, 1006, 1007, 1008, 1004, 1005,
	1017, 1018, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1058, 1022, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 1071,
	0, 266, 1078, 267, 1077, 0, 1088, 268, 269, 270,
	271, 272, 273, 1024, 1057, 0, 274, 1118, 1119, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081, 305,
	1075, 1074, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1066, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 1001, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 1013, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1073, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 1086, 1087, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 1023, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 1068, 1069, 0,
	1029, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 250, 1110, 427, 428, 1014,
	1062, 429, 1076, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	1072, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	1002, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 1070, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 1117, 526, 527, 528, 529,
	1093, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 1082, 1083, 1084,
	1085, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	1012, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 1079, 1116, 0, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 2453,
	0, 0, 0, 0, 0, 0, 2451, 2452, 0, 251,
	252, 253, 254, 255, 256, 1018, 257, 258, 0, 1016,
	0, 0, 0, 1058, 1022, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 1071, 0, 266,
	1078, 267, 1077, 0, 1088, 268, 269, 270, 271, 272,
	273, 1024, 1057, 0, 274, 1118, 1119, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 1081, 305, 1075, 1074,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1066, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 1001, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 1013,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1073,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 1086, 1087, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 1023, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 1068, 1069, 0, 1029, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 250, 1110, 427, 428, 1014, 1062, 429,
	1076, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 1072, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 2865, 2866,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 1070, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 1117, 526, 527, 528, 529, 1093, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 1082, 1083, 1084, 1085, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 1012, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 1079, 1116, 0, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0,
	0, 0, 0, 0, 1941, 1942, 0, 251, 252, 253,
	254, 255, 256, 1018, 257, 258, 0, 1016, 0, 0,
	0, 1058, 1022, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 0, 1071, 0, 266, 1078, 267,
	1077, 0, 1088, 268, 269, 270, 271, 272, 273, 1024,
	1057, 991, 274, 1118, 1119, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 4218, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 1081, 305, 1075, 1074, 995, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1066, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 1001, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 1013, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1073, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 1086,
	1087, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 1023, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 1068, 1069, 0, 1029, 0, 367, 368,
	0, 1061, 0, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	992, 250, 0, 427, 428, 1014, 1062, 429, 1076, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 1072, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 1002, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	1070, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 1117, 526, 527, 528, 529, 1093, 0, 532, 533,
	990, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 1082, 1083, 1084, 1085, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 1012, 546, 547, 548,
	549, 0, 4217, 552, 0, 996, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 1079, 1116, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 980, 0, 1156,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 0, 1016, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 1057,
	0, 274, 578, 579, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 595, 596, 0, 597, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1142, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	250, 1110, 427, 428, 0, 1062, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 1150, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 212,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 1093, 0, 532, 533, 0,
	531, 214, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 1499,
	620, 621, 0, 565, 564, 566, 622, 0, 1156, 0,
	206, 567, 568, 623, 569, 570, 571, 0, 207, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 1146, 1058,
	1828, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 1057, 0,
	274, 578, 579, 580, 0, 275, 276, 1064, 0, 1045,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1089, 1090, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 1096,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 1059,
	1060, 1063, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 1061,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 1142, 379, 381, 380, 0,
	382, 1097, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 1052, 1051, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 250,
	1110, 427, 428, 0, 1062, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 1148, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 1091, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 1092,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 1150, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 212, 506,
	507, 505, 508, 509, 510, 1055, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 1093, 0, 532, 533, 0, 531,
	214, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 1094, 545, 1095, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 1056, 560, 0, 0, 561, 562, 563, 1499, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 206,
	567, 568, 623, 569, 570, 571, 0, 207, 0, 0,
	0, 3049, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1146, 0, 1828,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 1057, 0, 274, 578, 579, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1142, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 250, 1110, 427, 428, 0, 1062,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 1148,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	1150, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 1093,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 1138, 0, 1156, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 1146, 0, 1144, 1058, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 1057, 0, 274, 578, 579, 580,
	0, 275, 276, 1064, 0, 1045, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 1048, 1046, 1047,
	1054, 1050, 1049, 1053, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1089,
	1090, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 1096, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1059, 1060, 1063, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 1061, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 1142, 379, 381, 380, 0, 382, 1097, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 1052,
	1051, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 250, 1110, 427, 428, 0,
	1062, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	1148, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 1091, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 1092, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 1150, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 1055, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	1093, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 1094, 545, 1095,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 1056, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 1156, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 1146, 1058, 1144, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 1057, 0, 274, 578, 579, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1142, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 250, 1110, 427, 428, 0, 1062,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 1148,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	1150, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 1093,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 1156, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 1146, 1058, 1144, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 1057, 0, 274, 578, 579, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 595, 596, 0, 597, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 250, 1110, 427, 428, 0, 1062, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 1150,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 1093, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	0, 980, 0, 1344, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 1727, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 212, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 214, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 1499, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 206, 567, 568, 623, 569, 570,
	571, 0, 207, 0, 0, 0, 1496, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 212, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	214, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 1499, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 206,
	567, 568, 623, 569, 570, 571, 0, 207, 0, 0,
	0, 0, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1521, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1344,
	2024, 0, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 3303, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	1310, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	1101, 365, 595, 596, 0, 597, 0, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 2023, 381, 380,
	0, 382, 599, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	0, 1110, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 1344, 1343, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	1521, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 1310, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 1101, 365,
	595, 596, 0, 597, 0, 367, 368, 1103, 598, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 0, 0, 1110,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 1156, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 0, 1505, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 1057, 0, 274, 578, 579,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 595, 596,
	0, 597, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 250, 1110, 427, 428,
	0, 1062, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 1093, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 980, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 212, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 214, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 1499, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 206, 567, 568, 623,
	569, 570, 571, 0, 207, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 176, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 245, 2787, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 1842,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 4360, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 245, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 3244, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 245, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 1442, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 2757, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 3404, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 826, 0, 709, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 2127, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 716, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 824,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 714, 534, 535, 536,
	537, 715, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 0, 707, 0, 709, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 719, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 716, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 714, 534, 535,
	536, 537, 715, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 1879, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 0, 1885, 0, 266, 1875, 267, 1891, 0,
	1898, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 1901, 1902, 0, 0, 275, 276, 0, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 1081, 305, 1889, 1888, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1066, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 1887, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 1896, 1897, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 0,
	0, 0, 351, 0, 352, 353, 354, 355, 356, 0,
	0, 0, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 1882, 1883, 0, 1878, 0, 367, 368, 1103, 0,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 0, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 0, 429, 1890, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 0, 1111, 440, 1112, 0, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 1872, 453, 454, 455, 1873, 456, 457, 458, 0,
	459, 0, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 1886, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 0, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 1884, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 1900,
	526, 527, 528, 529, 0, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 1892, 1893, 1894, 1895, 0, 550, 0, 542, 543,
	544, 0, 545, 0, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 0, 1876,
	1899, 0, 565, 564, 566, 0, 0, 0, 1344, 1343,
	567, 568, 0, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 1866, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 2721, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 2722, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 3574, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 709,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 716, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 714, 534, 535, 536, 537, 715, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 1344, 1343, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 1310, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 1101, 365,
	595, 596, 0, 597, 0, 367, 368, 1103, 598, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 0, 0, 1110,
	427, 428, 3216, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	709, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 716, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 250, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 2167, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 714, 534, 535, 536, 537, 715, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 709, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 719, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	716, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 1905, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	714, 534, 535, 536, 537, 715, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 1904, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 709, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 719, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 716, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 1858, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 714, 534,
	535, 536, 537, 715, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 1857, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1549, 0, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	1548, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	1547, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 1546, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1489, 0, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 1488, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1417, 0, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 1416, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1379, 0, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1339, 0, 1344, 1343, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 1338, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1344, 1343, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 1310, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 0, 1110, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 1344, 1343, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 719, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 1310, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 1914, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 1101, 365, 595, 596,
	0, 597, 0, 367, 368, 1103, 598, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 0, 1110, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 1344, 1343, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 1344, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 2590, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 2587, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 2594, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 2800, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 2593, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 2797, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 2799, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 2796, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 2592, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 2798, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 2590, 275,
	276, 581, 0, 0, 2584, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 2587,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 2594, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 2593, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 2583, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 2592, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 2591, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1616, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 1619, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 1617, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 1618, 564, 566, 622,
	1314, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 1316, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 1148, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1311, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 1313, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 1148, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1217, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 1219, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 1148, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	655, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 654, 255, 256, 644, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 647, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 648, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 649, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	643, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 644, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 647, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 648, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 649, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 1148, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 3179, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 2728, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 2727,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 2140, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 2056, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 2062,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 2061, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 2049,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 2051, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 2020, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	1148, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1481, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1480, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1472, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1471, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1469, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1468, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1464, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1463, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1420, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1332, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1325, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1327, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 625, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 236, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 647, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 648,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	649, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 2174, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 2172, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 2170, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 2105, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 2099, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 2068,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 813, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 812, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	811, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 2800,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 3833, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 677,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1188,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 1186, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 678, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 674, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 1189, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 673, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 677,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1188,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 1186, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 678, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 674, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 1189, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 673, 614, 615, 616, 0, 550,
	0, 542, 1187, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 634,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 633, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 632, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 245,
	2787, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 245, 3843, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 3548, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 2504, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 245, 2787, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	2784, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 2150, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 2138, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 677, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 667, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 678, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 674,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 1504,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 673, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1485, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1484, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1478, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1477, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1426, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1425, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1409, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 1407, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1403, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1335, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1319, 0, 245, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	1169, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 683, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 677, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 667, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 665, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 666, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 678, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 668, 490, 0, 491,
	492, 498, 499, 493, 494, 674, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 669, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 673, 614, 615, 616, 0, 550, 0,
	542, 671, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 659, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 660, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 657, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 651, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 629, 0,
	245, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 3262, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	3210, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 3151, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 3149, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 3135,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 2737, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 660, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	2085, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 0, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 1449, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1386, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 1121, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 0, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 0, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 0, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 0, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	1663, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	1683, 0, 0, 0, 1710, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 1701, 0, 0, 1711, 0,
	1669, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1684, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 1684, 1709, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	1698, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1701, 0, 0, 1711,
	0, 0, 0, 0, 0, 1691, 1693, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 1707, 0, 1708, 1710, 0, 0, 0, 1700, 0,
	1678, 1679, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 1699, 0,
	1663, 0, 3771, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 1684, 0, 0, 0, 0, 0, 1700, 1680,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 3714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 0, 1690,
	0, 1664, 0, 0, 0, 1701, 0, 0, 1711, 1710,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 1663, 0, 0, 0, 1678,
	1679, 0, 0, 0, 1702, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 1699, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	1698, 1683, 0, 0, 0, 1669, 0, 0, 0, 1700,
	1680, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 0, 3713, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 0, 1685, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 1669, 1699, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 1702, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 1701, 0, 0, 1711,
	1710, 0, 0, 0, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 1707, 0, 1708, 0, 0, 1663, 0, 0, 0,
	1678, 1679, 0, 0, 0, 1698, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 3712, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1686, 1687, 1688, 1689,
	0, 1698, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 1697, 1692, 0, 0, 0,
	1691, 1693, 0, 1664, 0, 0, 0, 0, 0, 1690,
	0, 1710, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 1702, 0, 1680, 1684, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 3409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 1701, 2945, 1690, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 1702,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 1697, 1692, 0, 0, 0, 0, 0, 1684, 1664,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 2944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 1685, 1661, 1662, 0, 1694,
	1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 1692, 0,
	1702, 0, 0, 2880, 0, 1664, 0, 0, 1701, 0,
	0, 1711, 0, 1710, 0, 0, 0, 1691, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 1663,
	0, 0, 1678, 1679, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	1699, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 1697, 1692, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 0, 2881, 1700, 0, 0, 1710, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 1709, 0, 0, 0, 2943,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 1686,
	1687, 1688, 1689, 1698, 1683, 0, 0, 0, 0, 1669,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 1711, 0, 0,
	0, 0, 0, 1691, 1693, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 1708, 0, 0, 0, 0, 0, 0, 1678, 1679,
	0, 1685, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 4283, 1699, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1702, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 1701,
	0, 0, 1711, 0, 1710, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 1707, 0, 1708, 0, 0, 0,
	1663, 0, 0, 1678, 1679, 0, 0, 0, 0, 1698,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 2942, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	1686, 1687, 1688, 1689, 1698, 0, 0, 0, 0, 0,
	1669, 0, 3029, 0, 0, 3028, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4282, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 2478, 0, 0, 1678,
	1679, 0, 1685, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 1702, 0, 2477,
	0, 1684, 1664, 0, 0, 0, 0, 1700, 0, 0,
	1710, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 1685, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1692, 0, 1702, 0, 0, 0, 0, 1664, 0,
	0, 1701, 0, 0, 1711, 0, 1710, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 1663, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 1700, 0,
	0, 1710, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 1698, 1683, 0, 0,
	0, 0, 1669, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 1685, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 1698, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 3390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 3035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 3030,
	0, 1684, 1664, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 1685, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1692, 0, 1702, 0, 0, 0, 0, 1664, 0,
	0, 1701, 0, 0, 1711, 0, 1710, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 1663, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	2946, 0, 0, 1664, 0, 0, 0, 0, 1700, 0,
	0, 1710, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 1698, 1683, 0, 0,
	0, 0, 1669, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 1685, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 1699,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 1702,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 1697, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 1701, 0, 0, 1711, 0, 1710, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 1707, 0, 1708,
	0, 0, 0, 1663, 0, 0, 1678, 1679, 0, 0,
	0, 0, 1698, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 2997, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 1686, 1687, 1688, 1689, 1698, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 1711, 1697, 1692, 0, 0, 0, 1691, 1693, 0,
	1664, 0, 0, 0, 0, 1690, 0, 0, 1710, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	1702, 0, 0, 1680, 1684, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 1701,
	0, 1690, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	0, 1685, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 1692, 1678, 1679, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 1702, 1710, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 1685, 0, 0, 0, 0, 0, 1701, 0,
	0, 1711, 0, 1692, 0, 0, 0, 1691, 1693, 0,
	1664, 0, 0, 0, 0, 0, 0, 1702, 1710, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 1690, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671,
}
var sqlPact = [...]int{

	10123, -1000, -1000, -1000, -1000, 196, -1000, -1000, 188, 187,
	185, 184, 183, 182, 181, 180, 179, -1000, -1000, -1000,
	-1000, -1000, -1000, 176, -1000, -1000, 169, -1000, 167, 166,
	165, -1000, -1000, 162, -1000, 160, -1000, -1000, -1000, -1000,
	159, 158, 156, 81900, 81380, 82413, 2129, 99996, 88597, 2004,
	73088, 99476, 72568, 98956, 98436, 2536, 155, -1000, 97916, 154,
	150, 149, -1000, 97396, -1000, 1645, -1000, 147, 4286, 59551,
	146, 145, 143, 2324, 141, -1000, 139, 138, -1000, 11220,
	1435, -1000, 135, 133, -1000, 9143, 6279, 86524, 131, 130,
	2149, 128, 127, 59030, 125, 120, 2111, 2631, -1000, -1000,
	1922, -1000, -1000, 116, 114, 113, 111, 110, 109, 108,
	106, 105, 102, 100, -1000, 99, 94, 92, 87, 85,
	84, 83, 82, -1000, 81, 80, 79, 73, 72, 71,
	69, 68, 67, 64, 63, 62, 61, -1000, 12379, 56,
	1819, 1597, 1595, 1591, 1589, 1580, 956, 55, 54, 53,
	50, 49, 47, 43, 42, 41, -1000, 39, 38, 37,
	36, 35, 34, 32, 29, 132, 28, 22, 10, 9,
	6, 4, 1, 3022, -1000, 1683, 1026, 28312, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 106152, 100509, 0, -42,
	-1, -1000, 3095, 1028, 49650, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 523, 1707, 761, -1000,
	-1000, -1000, 96883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2128, -77, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	760, -1000, 2126, 209, 2075, -1000, -1000, -1000, -1000, -1000,
	100509, -1000, 1009, -1000, -1000, 3599, 3598, 1901, 757, 88077,
	-1000, 1833, -1000, 908, 29944, -1000, 1232, -1000, 29944, 282,
	-1000, -1000, -1000, -1000, -1000, -1000, 3596, 3591, 3587, 3582,
	-1000, -1000, 72048, 21730, 71528, 71008, 96370, 21200, 80860, 80340,
	95850, 66352, 1008, -1000, -1000, -1000, 1370, -1000, -1000, -1000,
	-1000, -1000, -1000, -20, 67393, 3297, 100509, -1000, 280, -1000,
	-1000, -1000, -1000, -1000, -1000, 42672, 698, 42116, 645, 41560,
	572, -1000, -1000, -1000, 65822, -1000, 3579, 3571, 1089, 3565,
	3031, 105639, 1660, 3559, 1764, 1173, 3558, 3557, 3555, 3554,
	3528, 3527, 1348, 95330, 2757, 94810, 1603, 65292, 1007, 79820,
	82413, 2468, 94290, 1311, 1285, -1000, -1000, -1000, -1000, 2876,
	2623, 2603, 1246, -1000, -1000, 3523, 3522, 3521, 3520, 3519,
	105126, 1659, 3518, 2309, 3517, 3516, 3515, 3514, 3513, 3512,
	3511, -1000, 79300, 1006, 78780, 78260, 3149, 93770, 77740, 93250,
	64762, 41004, 839, -1000, -1000, -1000, 51744, 7681, 7255, 92730,
	53863, 82413, 82413, -1000, -1000, -1000, -1000, -1000, 40448, 546,
	39892, 810, -1000, -1000, 52279, 2704, -1000, -1000, -1000, -1000,
	39336, 506, 38780, 633, 100509, -1000, 2756, 1782, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1807, 1542, 3341, 2550, 64232, 1871, 1356, 3111,
	2875, 2872, 1450, 3510, 3507, 2419, 2869, 2867, 2865, 2864,
	2861, 1341, 2349, 501, 27756, 2743, 1543, 38224, 1480, 1444,
	2854, 2808, 3348, 1838, 1842, 1859, 70488, 3506, 3505, 3069,
	2799, 2791, 2702, -1000, -1000, -1000, -1000, 1424, -1000, -1000,
	-1000, -1000, -1000, 73601, -1000, -1000, 1891, -1000, -1000, 1891,
	-1000, -1000, -1000, -1000, -1000, 1258, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1683, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2019, -1000,
	1899, -1000, -1000, 2545, 3080, 3080, 3080, 3136, 510, 503,
	-1000, 132, -1000, -1000, 110399, -1000, -1000, 43216, 43216, 43216,
	43216, 43216, 43216, 43216, 2000, -1000, 756, -1000, -1000, 799,
	-1000, 753, 612, -1000, -1000, -1000, -1000, -1000, -1000, 752,
	-1000, -1000, -1000, -1000, -1000, -1000, 3297, -1000, 24432, -1000,
	-1000, -1000, 474, 751, 43216, -1000, -1000, 3374, 3373, 966,
	-1000, 275, 919, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2755, 749, 748, -1000, 747,
	742, 739, 738, 734, -1000, -1000, -1000, 724, 723, 722,
	719, 713, 711, 707, 705, -1000, 1855, -1000, -1000, -1000,
	-1000, -1000, -1000, 666, 665, 665, 665, -1000, 998, -1000,
	-1000, -1000, 309, 661, 301, 660, 656, 651, -1000, 704,
	703, 702, 699, 692, 690, 686, 684, 683, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 994, -1000, -1000, -1000, -1000,
	-21, 100509, -1000, 523, -21, -1000, -1000, 682, -1000, 32132,
	32132, 32132, -1000, -1000, 2117, 43216, -1000, 2995, -1000, -15,
	-15, 855, 50688, -1000, 48594, 855, 285, 818, 55414, -1000,
	2693, -1000, -1000, 680, 273, -1000, -1000, -1000, -1000, 22258,
	2666, 100509, 100509, 82413, 82413, 82413, 2966, 43216, -1000, -1000,
	63702, 100509, 82926, 3256, 60064, 63184, 100509, 2754, -1000, 3068,
	-1000, -1000, 100509, -1000, 43216, -1000, 3255, 1715, 67911, 3183,
	-33, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2291, 2297,
	1118, 2150, -1000, 2986, 1834, -1000, 29944, 3019, -1000, -1000,
	-1000, 272, 22258, -1000, -1000, -1000, -1000, -1000, 2965, 2904,
	1334, -1000, 2148, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1706, 2902, -1000, 2106, 2897, 1702, -1000, -1000,
	2204, -1000, -1000, 3047, -1000, -1000, 1968, 2894, -14, -1000,
	-1000, 2480, -1000, -1000, 1914, -1000, -1000, 962, 2891, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 77220, 53335,
	52279, 67393, -26, -1000, -1000, -1000, -1000, -53, -1000, 20670,
	110399, -1000, -1000, -1000, -1000, 1704, 110399, 928, -1000, -1000,
	2890, -1000, 110399, 927, -1000, -1000, 2889, -1000, 2751, -1000,
	-1000, -1000, -1000, 3504, -1000, 3503, 2213, 3501, 3500, 3499,
	-1000, 1546, 1852, 3498, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 76707, 2116, -1000, -1000, 75667, -1000, 2212, 3180, -1000,
	-1000, -1000, 76187, 1002, -1000, 962, 2210, -1000, 86004, 1025,
	-1000, 3496, 3142, 2489, 962, 2207, -1000, -1000, -1000, -1000,
	-1000, 1011, -1000, 56964, -1000, 56964, -1000, 1481, -1000, 104613,
	-15, 82413, 3297, -1000, -1000, -1000, -1000, -1000, -1000, 2887,
	3495, 3494, 3493, -1000, 100509, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 192, 2886, -1000, -1000, 85491, 192, 2884, -1000,
	192, 2880, -1000, 84978, -1000, -1000, 2112, 2879, -1000, 205,
	2877, -1000, -1000, 203, 2873, -1000, -1000, -124, 2848, -1000,
	-1000, 110399, -1000, -1000, -1000, -56, -1000, -1000, -1000, 1028,
	-1000, 51209, -1000, 51209, 87557, 66880, 924, 735, 58509, 110399,
	-1000, -1000, -1000, -1000, 110399, -1000, -1000, -1000, -262, -1000,
	-1000, 66880, 52279, 110399, -1000, -1000, -1000, -1000, 110399, -1000,
	-1000, -1000, 66880, 75667, -1000, 92210, 75154, -1000, -1000, 1337,
	2345, -1000, -1000, -1000, 66880, 1231, 66880, 66880, 66880, -1000,
	91690, -1000, -1000, 1889, 1223, 3049, 1872, 82413, -1000, 1800,
	-1000, -1000, -1000, 3090, -1000, -1000, 2749, -1000, 62666, 84465,
	-1000, 83952, -1000, 83439, -1000, 82413, -1000, 82413, -1000, 3492,
	3491, 3489, 3485, -1000, 3484, 3078, -1000, 110399, 3057, -1000,
	3483, 3170, 2743, 110399, -1000, 2885, 1604, 1585, 100509, -1000,
	-1000, 100509, -1000, 100509, -1000, -1000, -1000, 1396, -1000, -1000,
	2290, -1000, -1000, -1000, -1000, 82413, -1000, -1000, -1000, -1000,
	-1000, -1000, 2740, -1000, 1578, -1000, 1781, -1000, 1320, -1000,
	-1000, 207, -1000, -1000, -33, -1000, 104100, -1000, 2545, -1000,
	100509, -1000, 2334, 2724, 2739, 1476, 2140, 2394, -1000, 37668,
	2365, 45936, 2145, 132, -1000, -1000, 132, 132, 29400, -1000,
	-1000, 60064, 60064, 22258, 1272, 43216, 43216, 43216, 43216, 43216,
	43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216,
	43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216,
	43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216,
	2143, 43216, 1250, 43216, 43216, 43216, 43216, 1866, -1000, -1000,
	1794, 547, 1881, -1000, 3311, 3311, 3311, 570, 570, 110789,
	110789, 653, 3482, 799, -1000, 43216, -1000, 137, 43216, 22788,
	-1000, 503, 6050, 2316, -1000, 502, 23344, -1000, -1000, -1000,
	24432, 612, 37112, 43216, 988, 110399, -1000, -1000, 1349, 3304,
	20142, 2738, 2589, 675, 820, 813, 27200, 26644, 26088, 25532,
	693, 43216, 43216, 43216, 43216, 43216, 43216, 43216, 43216, -1000,
	-1000, 3328, -1000, 3304, -1000, -1000, -1000, -1000, 3304, 1265,
	1263, 3304, -1000, 3304, 3304, 5375, 5375, 36568, 36012, 35456,
	46480, 34900, 43216, 24976, 34344, 33788, -1000, 100509, -21, 3251,
	43216, 171, -1000, 109152, -1000, 171, 171, 674, -63, 110399,
	2467, 2467, 50169, 2202, 2005, 2005, 2005, -1000, 855, 15889,
	855, 90659, 2029, 855, 855, 251, 287, 498, 48075, 2995,
	90659, 779, 673, -3, -4, -5, -1000, -1000, -7, -8,
	-1000, -1000, 82413, 671, 22788, 22258, 249, 1373, -64, 2382,
	2379, 2375, -1000, 2366, 1678, -65, 1243, 82413, 100509, -111,
	-1000, 6310, -66, -1000, 1255, 246, 3304, -1000, -1000, -1000,
	-1000, -1000, 3481, 3480, -1000, 932, 670, 667, 984, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 666, 665, 665,
	665, -1000, 309, 661, 301, 660, 656, 651, -1000, -1000,
	-1000, -1000, -1000, 2664, 82413, 100509, -53, 82926, 82413, 887,
	-74, 1094, -33, -1000, -1000, -1000, 1891, -1000, 1540, -1000,
	-1000, -1000, -1000, -1000, -1000, 1367, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 966, -1000, -1000, -1000, -1000, -1000,
	-1000, 3333, 3318, -22, -1000, -1000, 22258, -1000, -34, 1513,
	1638, -1000, 69968, 2206, 3058, 3039, 1472, -1000, 1386, 1239,
	3133, 73601, 3193, 3237, 785, -1000, 2662, -1000, -1000, 907,
	1577, 1634, 1238, 73601, 2106, -1000, 60064, -1000, 2435, 3132,
	1363, 1359, 1363, 1363, 1347, -1000, 73601, 1622, 1176, 1170,
	-1000, 1168, 1167, -1000, -39, 3192, 3231, 291, -1000, 2658,
	1157, -1000, -1000, 82413, 22258, 1494, 1497, 1621, 1156, -25,
	-1000, 3189, 3188, 1155, 1154, -1000, 4970, -1000, 66880, 1618,
	2842, 2539, 824, 2532, -1000, -1000, 824, -26, 67393, 100509,
	241, -1000, 137, 43216, 43216, 137, 43216, 137, 3166, -1000,
	-1000, 2841, -1000, -1000, -1000, 3478, 1825, 2306, -1000, -1000,
	650, 2201, 2654, 100509, 2390, -30, 82413, -1000, 2838, 60584,
	2106, 2200, -1000, -1000, 74634, -1000, 2834, 523, 2199, -1000,
	618, 3474, -1000, 103587, -1000, 3068, 1283, 2833, 1047, 151,
	3250, -1000, 151, 57483, -1000, 100509, -1000, -15, 100509, -1000,
	-1000, -1000, 3472, -1000, 82413, -1000, -1000, 82413, 192, 2825,
	-1000, 82413, -1000, 82413, 189, 2824, -1000, -1000, 100509, -1000,
	82413, 82413, -1000, 100509, 100509, 66880, 66880, 5572, 68942, -79,
	-84, 497, -1000, 91177, 100509, 1046, 69455, 100509, 3008, 960,
	52279, -1000, -86, -262, 2521, 924, 924, 824, -1000, 824,
	-1000, 82413, 2737, -1000, -1000, 66880, 924, 924, 924, -1000,
	-1000, -1000, -1000, 3471, 3470, 3469, -1000, -1000, -1000, 961,
	82413, 100509, 82413, -1000, -1000, 100509, -1000, 100509, -1000, 961,
	100509, 961, 100509, 961, 100509, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 137, 43216, -1000, -1000, 3468, 1515, -1000, 2734,
	-1000, 2729, -1000, 27, -1000, -1000, -1000, -1000, -1000, 1977,
	82413, 82413, 82413, 82413, 100509, 82413, -1000, 73601, -1000, 2334,
	2724, -1000, -1000, -1000, -1000, -1000, -1000, 1312, 2083, -1000,
	2340, -1000, 1419, -1000, -1000, -1000, 110399, 47008, -1000, -1000,
	110399, 1785, -1000, 45392, 44848, -1000, -1000, 1600, 82413, 2402,
	-1000, 2402, -186, -1000, 108665, 2338, 82413, -1000, -1000, -1000,
	-1000, -1000, 906, 842, 842, 1289, 1289, 1289, 1289, 3204,
	1848, 1888, 1095, 11570, 11570, 358, 358, 358, 358, 358,
	11570, 435, 570, 570, 435, 435, 435, 435, 435, 570,
	570, 570, 11570, 11570, 11570, 110789, 110580, 10881, 43216, 43216,
	1153, 1780, 547, 9151, 43216, 4440, 4440, 4440, 4440, -1000,
	1979, -1000, -1000, -1000, -1000, 2653, 649, 46480, 46480, -1000,
	-1000, -1000, -1000, 23888, 43216, -1000, -1000, -1000, -1000, 33232,
	-1000, -1000, 8380, -314, 496, -155, -23, -1000, 43216, 43216,
	43216, 484, -1000, 239, 43216, 100509, -1000, 14080, 778, -102,
	-1000, -87, 1353, -1000, 43216, -1000, -1000, 1150, -1000, 1148,
	1147, 1146, -1000, 648, 476, -1000, 222, -1000, 2006, 643,
	640, 43216, -1000, -1000, -1000, -1000, -1000, 108499, -1000, -1000,
	108263, -1000, -1000, 108082, -1000, -1000, 107917, -1000, -1000, -1000,
	110233, 13516, 12965, 11961, 4878, 7956, 7311, -89, 468, -96,
	466, 900, 896, 465, 462, 457, -99, -1000, 3467, 3466,
	3463, -1000, 3460, 3459, 3458, -1000, 3457, 3456, 3455, -1000,
	3453, 3452, 3448, -1000, 3447, 3446, 3445, -1000, 3444, 3442,
	3441, -1000, 3439, 3438, 3437, -1000, 3436, 3431, 3430, -101,
	452, -1000, 2650, -155, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 421, -1000, 420, -1000, 110148, -155, 419, 499,
	-1000, 46480, 46480, 46480, -1000, 417, -1000, 108916, -1000, 109982,
	32688, 32688, 32688, 413, 109746, 43216, -155, -106, -1000, -112,
	-1000, -1000, 509, -117, 972, 32132, 49129, 22258, -1000, 972,
	972, 43216, -1000, 43216, 2351, -1000, -1000, -1000, 2350, 2307,
	2467, 50169, -1000, -1000, -1000, -1000, 90659, -1000, 3297, 2564,
	-1000, 90659, -1000, -1000, 100509, 523, -1000, 90659, 90659, 22258,
	855, -1000, 855, 90659, 577, -1000, -1000, -1000, -1000, -1000,
	412, 54381, -23, 218, 22258, 962, -1000, 2496, 2496, 2496,
	2496, -1000, -1000, 100509, 1145, -27, -109, 3273, -1000, 1884,
	-1000, 60064, -1000, 796, 1191, 22258, -1000, -1000, -1000, 636,
	-1000, 3304, 3304, -1000, 3304, 100509, 2649, 101, 95, 969,
	29944, -1000, 1891, -1000, -1000, 1490, -1000, 1809, -1000, 1177,
	-1000, -1000, -1000, -1000, 29944, -1000, 3737, 100509, 100509, 82413,
	-1000, 100509, -1000, 2193, 103074, 2192, 60064, 100509, -1000, -1000,
	635, 631, 2328, 2327, 1041, 100509, 100509, 2323, 102561, 102048,
	100509, 1893, 43216, 60584, 2032, 2024, 137, 137, -1000, -1000,
	137, 626, 1267, 82413, 82413, 100509, 82413, 1565, -1000, -1000,
	-1000, -1000, -1000, 74114, -1000, -1000, 3325, 3323, -1000, 1363,
	-1000, -1000, -1000, 1363, 2106, 1553, 100509, 82413, 60584, 1619,
	100509, 1925, 137, 137, -1000, -1000, 137, 625, 22258, 1920,
	-1000, 2731, 100509, 3367, 100509, 100509, 100509, 60584, 3072, 101535,
	100509, 100509, 60584, 4970, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 62153, 1055, 962, 1611, 1144,
	73601, 52279, 953, 52279, 2504, -1000, -1000, 19614, -1000, 110399,
	110399, -1000, 110399, -1000, 61625, 100509, -1000, 1001, 100509, 69455,
	917, 2823, 56445, -53, 924, 66880, 82413, -30, 100509, -1000,
	-1000, -1000, -1000, -1000, 2106, 2821, 523, 2191, -1000, 66880,
	3249, 2820, 624, 3426, 3423, -1000, 2115, 2190, -1000, -1000,
	101022, 2950, 836, 100509, 972, 50169, 1850, -1000, 54901, 1016,
	100509, 1754, 74, -1000, -1000, -1000, 8, 100509, -1000, 814,
	3416, -1000, -1000, 192, -1000, 82413, 192, 192, -1000, 82413,
	82413, 2112, -1000, 205, -1000, 203, -1000, -124, -1000, -1000,
	5572, 5572, 924, -209, 619, -1000, 883, 882, 52807, 66880,
	-125, -1000, -1000, -1000, -1000, -1000, 82413, 100509, 737, 2471,
	100509, -126, -1000, 215, 617, -1000, 2524, -1000, -1000, 960,
	52279, 2648, -1000, -1000, 968, -1000, 1319, 924, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -16, -53,
	-53, -1000, 961, -1000, 961, -1000, 961, -1000, 110399, -1000,
	-1000, 1506, 1496, 100509, -1000, 22258, 100509, 82413, 22258, 82413,
	2722, 2721, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1059, -1000, 1785, 2082, -1000, 612, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2270, -1000, -32, 29400, 2154,
	-1000, -1000, 82413, -17, 43216, 43216, 8632, 7476, 43216, 46480,
	46480, -1000, 43216, 4642, -1000, -1000, -1000, -1000, -1000, 2647,
	610, 43216, 60064, 5858, 5614, -1000, 391, 7044, 435, -1000,
	43216, -1000, 388, 31588, -1000, 109318, -31, -127, -1000, 16430,
	-155, -132, -1000, -1000, 795, -1000, 2925, -1000, 43216, 109403,
	2237, 1917, 1667, 1528, 3304, 3361, 19086, -1000, 57996, 977,
	2065, 107831, -1000, -1000, -1000, -1000, 60064, 60064, 43216, 43216,
	-1000, 43216, 43216, 43216, -1000, -1000, -1000, 3304, 897, -1000,
	-1000, -1000, 897, -1000, -1000, 1363, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1363, -1000, 43216, -1000, -1000, 2644, 43216, -1000, 60064,
	60064, 46480, 46480, 46480, 46480, 46480, 46480, 46480, 46480, 46480,
	46480, 46480, 46480, 46480, 46480, 46480, 46480, 46480, 46480, 46480,
	2347, 46480, 3288, 3288, 3288, -1000, 2718, 2644, 43216, 43216,
	60064, 387, 376, 375, -1000, 43216, -155, -1000, -1000, 5572,
	608, -1000, 2256, -1000, 2574, -1000, 43216, -1000, -246, -1000,
	2995, -1000, -1000, 2574, 2574, -135, 110399, 50169, 50169, -1000,
	607, 43216, 2329, -1000, -1000, 777, -312, -1000, 876, -1000,
	-1000, -1000, -1000, -1000, 523, -1000, -1000, -1000, 214, 90659,
	90659, 776, -1000, -137, -1000, -1000, -153, -1000, 3246, 372,
	22258, -1000, -1000, 3050, -1000, -1000, -1000, -1000, -1000, -1000,
	-53, 100509, 100509, 2074, 3360, -1000, 3321, 792, 774, 211,
	3304, 371, 370, 368, -53, 100509, 100509, 100509, -1000, 2416,
	-1000, -33, -1000, -1000, -1000, 43216, -1000, -1000, 3055, 1141,
	1140, -1000, -1000, 2815, -1000, 2188, -1000, 1020, -1000, 1837,
	-1000, 43216, 43216, 606, 601, 3413, 1812, 3411, 1044, 2814,
	2112, 2813, 2112, -1000, -1000, 911, -1000, 110399, -1000, 594,
	591, -1000, -34, 1512, 1579, 965, -1000, -1000, 43216, 43216,
	90146, -1000, 448, 3047, -18, -1000, -1000, 1562, 1131, -1000,
	-1000, -1000, -1000, 2106, 1541, 1129, -1000, -1000, -1000, 964,
	-1000, -1000, 963, -1000, -1000, 43216, -1000, -39, 1128, 3178,
	2186, 82413, 1127, -1000, 1121, -1000, -1000, -1000, 3185, 2112,
	2812, 1126, -1000, -1000, -1000, -1000, -1000, 61112, -1000, 100509,
	82413, 1533, 824, -1000, 2179, 824, 953, 2643, -1000, 2388,
	3407, 82413, 3401, 363, -154, -40, 60064, 3243, -1000, 2132,
	538, 82413, 898, -1000, 3297, -1000, -1000, -1000, -1000, 3179,
	82413, 3238, 2811, 962, 137, 82413, 3359, -1000, -1000, 82413,
	2810, 2104, 2181, 2298, 836, 68429, -1000, 962, 2048, -123,
	-1000, 1754, 31032, 3044, -159, -1000, -1000, -1000, 972, 57483,
	50169, 43216, 3400, -160, -1000, -1000, -1000, -1000, 192, -1000,
	-1000, -1000, 189, -1000, -1000, -1000, -1000, -1000, -1000, 89115,
	89115, 66880, 66880, 66880, 924, 100509, 100509, 69455, -1000, 589,
	100509, 100509, 587, -1000, 100509, 100509, 3399, 66880, -48, 586,
	-1000, 874, 871, 870, -1000, -1000, -1000, -1000, -1000, -1000,
	-262, 137, -1000, 2072, 82413, -1000, 18558, -1000, -1000, -1000,
	-1000, -1000, 961, -1000, -1000, 1926, 2144, 1926, 1743, 1735,
	-1000, 2080, -1000, -1000, -1000, -1000, 2431, 3073, 22258, 3173,
	4440, 43216, 43216, 405, 5035, 4629, 4440, 43216, 43216, 60064,
	110970, -161, 43216, 43216, -1000, 43216, 772, 110399, 3355, 43216,
	362, 359, -1000, -1000, -1000, 3300, -1000, -1000, -1000, 110399,
	43216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 356, -1000,
	199, -1000, -1000, -1000, 106665, -1000, 43216, 344, 3131, -1000,
	340, 330, 5439, 244, 107666, 107477, 107226, 329, -1000, -1000,
	327, 325, 110399, 2718, 110399, -1000, -1000, 1185, 1185, 1335,
	1335, 1335, 1335, 3288, 343, 909, 736, 415, 415, 415,
	454, 604, 604, 415, 415, 415, 2642, 2348, 585, 6000,
	-1000, -1000, 110399, 110399, 324, -1000, -1000, -1000, -155, 320,
	5572, -1000, 2565, 3130, 110399, -1000, 50169, 2565, 2565, -1000,
	-1000, 2307, 100509, 110399, 50169, -1000, 2564, -1000, 16969, -1000,
	22258, -1000, -1000, -1000, -1000, 3297, -1000, 54381, -1000, 583,
	-1000, 75, 3050, -1000, 868, -1000, -53, -53, -1000, -1000,
	771, 3396, 791, 22258, 319, -1000, -1000, -1000, -53, -53,
	-53, -1000, 3005, 110399, 100509, 100509, 100509, 2797, -1000, 1880,
	-1000, 1041, 107186, -166, -1000, 108665, 43216, 100509, -1000, -1000,
	1773, 2415, 1082, -1000, 3099, 100509, -1000, 100509, -1000, -1000,
	100509, 100509, 82413, 100509, 2784, -167, 110399, -54, -1000, 866,
	-1000, 1354, -1000, 18030, 100509, 82413, 100509, 82413, 1993, 2783,
	-173, 22258, -1000, 3351, 3350, 2795, 3108, 3349, 100509, -1000,
	100509, 82413, 3003, -1000, -1000, -1000, -1000, 1534, 1114, 953,
	-58, 582, -1000, 864, -1000, -1000, 863, 953, -1000, 66880,
	52279, -1000, 523, -1000, 2464, -1000, 87037, 2118, 137, -1000,
	3388, 89633, 579, -1000, 2070, -1000, 769, 60584, 2106, 137,
	82413, -1000, -1000, 523, 316, -59, -1000, 1032, 22258, 82413,
	2793, 2300, 836, 68429, -1000, 1283, 2394, -1000, -76, -1000,
	432, 137, 2048, -1000, -123, 110399, -1000, 862, -1000, -1000,
	-1000, -174, -1000, -1000, 315, -1000, 3002, 3000, -1000, 2577,
	43216, 574, 571, 100509, 2999, -1000, -1000, -175, 2534, 2534,
	66880, 52279, 66880, 960, -1000, 2170, -1000, -1000, -1000, -1000,
	-1000, 22258, 1560, -1000, 569, 568, -1000, -1000, -1000, -1000,
	3073, 4440, 4440, 43216, 43216, 43216, 4440, 110970, -176, -1000,
	4440, 4440, -155, -1000, -1000, 109318, -1000, -1000, -1000, 110399,
	-1000, 17502, 1964, -1000, 15256, -1000, 29400, -1000, -1000, 43216,
	43216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46480,
	2638, 558, 60064, -1000, -1000, 314, 957, 43216, 43216, 2995,
	957, 957, -1000, -181, -1000, -1000, -1000, 3297, 75, -1000,
	-1000, 3387, 22258, -1000, 66880, 783, -1000, 3385, -1000, -1000,
	-1000, -1000, -1000, -1000, 100509, -1000, 100509, -1000, 22258, 100509,
	2613, 2167, -1000, -1000, 2319, 557, 46480, 82413, 850, -1000,
	3245, 2559, 1750, 43216, 2154, -183, -189, 2166, -1000, -1000,
	2164, 43216, -1000, 60064, 554, 2112, 2112, -194, -195, -1000,
	-1000, 43216, 1113, 100509, 30488, -1000, 3383, 3047, -1000, -1000,
	-1000, -1000, 100509, 43216, 1109, -1000, -1000, -1000, 3347, 2112,
	22258, -1000, 2112, 2112, 3108, 1079, 100509, 82413, -1000, 2217,
	2217, 66880, 52279, -1000, -124, 953, 3233, 1925, 2516, -1000,
	-1000, -1000, -1000, 2315, -1000, -1000, 100509, 2314, 929, -1000,
	-196, -1000, 860, 859, 69455, 917, 895, -1000, -1000, -1000,
	-1000, 523, 3228, -1000, 3340, 553, 100509, 2103, 549, 22258,
	3042, 836, 68429, -1000, 2950, 1754, -1000, 2174, 100509, 3037,
	-1000, 2394, 547, -1000, 924, 543, 541, 3952, 3952, -197,
	43216, 43216, -203, 539, 924, -1000, -204, -1000, -1000, -1000,
	-1000, -138, -1000, 841, 832, -1000, -1000, 82413, 82413, 43216,
	43216, -1000, 4440, 4440, 4440, -1000, 295, -1000, -1000, 2048,
	3128, -1000, -147, 14910, 14674, 926, 46480, 60064, -211, -1000,
	-1000, 100509, 110399, -155, -1000, -1000, -1000, 765, -1000, -1000,
	3381, -1000, -1000, 2044, -1000, -1000, -1000, 100509, 2180, -1000,
	1037, 43216, 6000, 537, 43216, -1000, 3222, -1000, 2449, 2655,
	2464, 535, -1000, -1000, -1000, -1000, -1000, 1023, 1792, -1000,
	-1000, 110399, 3108, 43216, -1000, -1000, 534, 532, 110399, 530,
	857, 2627, -1000, -1000, -1000, -1000, 110399, 527, 3178, -1000,
	-1000, -1000, -1000, 2112, 82413, -1000, -1000, -1000, -212, -1000,
	-1000, 1804, 137, 917, -1000, 1992, 2118, 526, -1000, -1000,
	2091, 2401, -1000, 89633, 29944, 29944, 293, 3217, 895, -1000,
	3292, -1000, 3202, 137, -1000, 43216, -1000, 82413, 43216, 2102,
	-1000, 2282, 68429, -1000, 2298, -1000, -1000, -213, 100509, 1754,
	-1000, -1000, 66880, 66880, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1023, -214, -221, -1000, 66880,
	-1000, -1000, 2170, -1000, 100509, -1000, 100509, -1000, -1000, -222,
	-224, -1000, 1960, 43216, 29400, -1000, -1000, 926, -227, -1000,
	-148, -1000, 3199, -1000, -1000, -1000, -1000, 2792, 2569, 14508,
	2258, 100509, 14319, -1000, 2651, -1000, -1000, 1925, 100509, 2464,
	2557, 82413, 1033, -229, 1926, 1926, 43216, 28856, 1981, 43216,
	-1000, -1000, 3108, -1000, 2606, 3309, -1000, 2091, 82413, 100509,
	-1000, 3084, -1000, 2998, -1000, -1000, -1000, 2464, 137, -1000,
	-1000, 137, -1000, -230, 1032, -235, 82413, 836, -1000, 2300,
	972, -1000, -1000, -236, -237, 1750, 1023, 922, -243, -1000,
	-245, -250, -1000, -1000, 292, 44304, 44304, 44304, -155, -186,
	-1000, 100509, 525, 2773, 942, -1000, 2093, 1744, 103, 1053,
	-1000, -1000, 2559, -251, -1000, 941, 523, -1000, 43216, 1023,
	-253, -1000, 1015, -259, -1000, 1014, -260, -1000, 2619, -1000,
	-261, 2112, 940, 3164, -1000, -1000, -1000, -1000, 519, -266,
	-1000, -1000, 2205, -1000, 1925, 929, -1000, 1023, 518, 1750,
	517, 1363, 3042, 2962, 924, 924, 2464, 1750, 972, 515,
	924, -1000, -1000, -1000, 2910, -1000, 47536, 2035, 1732, 108750,
	2910, 2910, -1000, -1000, 100509, 3146, -1000, 2100, 2095, 1442,
	-1000, -1000, -1000, -1000, -1000, -1000, 972, -1000, 3145, 2258,
	110399, 2464, -1000, 1926, 2515, -1000, 1926, 2609, -1000, 1978,
	-1000, -1000, -1000, 1644, 3306, 100509, -1000, 100509, 1664, 1652,
	3379, 917, 2091, 1750, 43216, 2464, 43216, -1000, -1000, 1270,
	-1000, -1000, 1925, 2464, -1000, -1000, -1000, 1694, 3236, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 835, -1000, 2978,
	-1000, 1058, 2146, 2146, -1000, 823, 2093, -1000, -1000, 513,
	-1000, 512, -1000, 2037, -1000, -1000, -269, -1000, -1000, 3344,
	-1000, 2091, -1000, 2464, -274, 1925, -275, -1000, 1460, 922,
	1925, 1700, -1000, -1000, 2022, 43760, 43216, -1000, 3276, -1000,
	-1000, 2371, -1000, 43216, 2559, 43216, 43216, 55932, 2110, -1000,
	-1000, 1925, 1023, 922, 1750, 57483, 972, 922, -1000, -1000,
	-1000, 110399, -1000, -1000, -1000, 110399, -1000, -277, -285, -209,
	89115, -1000, -1000, -1000, 922, 1750, 972, 2464, -271, -1000,
	972, 1925, 1103, -290, 972, 2464, -1000, 1925, -1000, -1000,
	-1000, 500, -1000, -1000, 1925, 922, 43216, 922, 972, -292,
	972, -1000, 1925, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4224, 4223, 4220, 4218, 4216, 4215, 4213, 4212, 4211,
	4209, 4208, 4207, 4205, 4204, 4203, 4202, 4197, 4196, 4195,
	4194, 4193, 4192, 4191, 4190, 4189, 4187, 4186, 4184, 4183,
	4182, 4180, 4175, 4174, 4172, 4168, 4167, 4165, 4163, 4160,
	4159, 4158, 4151, 4150, 4149, 4145, 4143, 4140, 4139, 4137,
	4136, 4132, 4131, 4128, 41, 4127, 4124, 4120, 4119, 4117,
	4116, 4114, 4109, 4106, 4103, 4101, 4095, 4092, 4091, 4090,
	4089, 4088, 4087, 46, 4083, 239, 4080, 4079, 4078, 4074,
	4073, 4072, 4071, 4068, 4066, 4061, 4060, 4058, 238, 4056,
	127, 4053, 4052, 4048, 4046, 4045, 236, 4043, 4042, 4041,
	4040, 245, 4039, 4037, 4036, 4035, 4030, 4029, 4025, 4024,
	4018, 85, 188, 4017, 4015, 35, 4014, 4011, 4004, 4001,
	4000, 3999, 3998, 3994, 3991, 3987, 217, 3986, 235, 3981,
	3980, 3977, 3976, 3975, 3971, 3969, 3967, 3963, 3962, 3961,
	3956, 3955, 3954, 3952, 3950, 3949, 3948, 3947, 3944, 3943,
	3941, 3940, 3938, 3937, 3929, 3928, 3927, 3925, 3916, 3915,
	3913, 3911, 241, 166, 3910, 3906, 234, 231, 3903, 3902,
	3888, 3880, 3875, 108, 14, 20, 3873, 3872, 52, 66,
	62, 78, 82, 79, 3871, 99, 3870, 104, 47, 3869,
	9, 23, 308, 212, 9279, 210, 3868, 3866, 3862, 219,
	165, 3859, 207, 3857, 3856, 3853, 3851, 73, 69, 155,
	152, 142, 147, 28, 3849, 3848, 90, 61, 45, 32,
	25, 3847, 3843, 3840, 3839, 3197, 117, 3836, 230, 213,
	141, 3835, 3834, 3829, 1607, 3828, 50, 3826, 81, 76,
	119, 16, 110, 3824, 151, 27, 3821, 133, 40, 3820,
	134, 77, 68, 8240, 8820, 3819, 96, 53, 150, 719,
	163, 146, 175, 157, 136, 173, 184, 182, 144, 107,
	3818, 222, 3816, 3195, 74, 135, 3813, 3812, 3810, 64,
	169, 91, 3809, 3808, 51, 5, 15, 34, 170, 12,
	97, 18, 3806, 13, 3805, 3803, 3802, 3801, 33, 143,
	3796, 244, 3794, 75, 37, 38, 3793, 55, 190, 3791,
	202, 113, 3790, 3789, 226, 176, 138, 3788, 88, 198,
	3787, 3786, 3783, 3781, 3780, 111, 2, 116, 3778, 3776,
	123, 209, 168, 3775, 56, 3773, 3772, 145, 83, 122,
	242, 109, 196, 86, 189, 160, 203, 3770, 3769, 3768,
	191, 3764, 3758, 193, 131, 3757, 3756, 177, 246, 39,
	60, 206, 63, 161, 132, 3755, 174, 3753, 3752, 247,
	154, 186, 1, 6, 95, 106, 3751, 10, 205, 130,
	179, 100, 3750, 5204, 1568, 531, 3748, 3746, 124, 102,
	58, 103, 128, 229, 54, 3744, 3740, 65, 3738, 3737,
	3736, 3735, 156, 3734, 3733, 3732, 112, 126, 149, 3731,
	72, 71, 11, 101, 278, 237, 98, 192, 167, 223,
	3730, 3727, 3726, 171, 3725, 87, 125, 3724, 172, 221,
	3722, 3721, 162, 3719, 139, 563, 48, 129, 3718, 194,
	3717, 3715, 3713, 3705, 3704, 3703, 3700, 392, 204, 3699,
	3698, 3697, 31, 164, 3696, 228, 158, 218, 93, 57,
	3693, 105, 2447, 3691, 200, 199, 44, 80, 3690, 3324,
	43, 0, 11872, 10408, 7129, 10645, 3683, 917, 3682, 3680,
	3679, 183, 120, 3678, 3677, 3675, 84, 3674, 59, 3673,
	3671, 49, 3670, 21, 7, 8, 22, 19, 358, 153,
	3669, 3666, 92, 118, 114, 3664, 232, 197, 3659, 3658,
	3657, 3656, 67, 3655, 29, 3653, 26, 3650, 3649, 30,
	4, 24, 3648, 3646, 208, 3644, 187, 220, 3643, 137,
	3642, 3219, 121, 3637, 3636, 227, 89, 3635, 224, 3631,
	3137, 3630, 3627, 17, 3623, 3622, 211, 148, 195, 3621,
	3618, 140, 3617, 3616, 3614, 225, 3611, 3610, 36, 3609,
	3, 3606, 3605, 180, 3060, 3604, 3603, 42, 3602, 159,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 535, 535, 21, 35, 22, 36,
	15, 536, 536, 536, 536, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 534, 534, 212, 212,
	211, 206, 206, 537, 537, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 436,
	436, 436, 467, 467, 467, 550, 550, 551, 551, 551,
	551, 551, 114, 114, 336, 336, 336, 43, 43, 43,
	43, 43, 529, 529, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 542, 542, 543, 543, 541,
	544, 544, 544, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 469,
	469, 470, 470, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 553,
	553, 554, 554, 555, 555, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 300, 300, 272, 272, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 527, 527, 315, 315,
	427, 427, 75, 75, 335, 335, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 526, 262, 262, 82, 82, 82, 265,
	265, 81, 81, 81, 316, 316, 87, 87, 87, 87,
	273, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 429, 429, 89, 89, 89, 395, 395, 93,
	93, 93, 351, 351, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 531, 531, 308, 308, 228, 228, 228, 228, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 547,
	547, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	461, 461, 324, 324, 459, 459, 478, 478, 460, 460,
	277, 277, 277, 277, 277, 278, 278, 278, 468, 468,
	468, 468, 468, 468, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 358, 358, 358,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 545, 545, 546,
	546, 155, 155, 155, 155, 155, 155, 409, 409, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 341, 341, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 557, 557, 557, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 528, 528, 524, 524, 524, 524,
	524, 524, 524, 524, 525, 525, 530, 530, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 65, 65, 14, 14, 14, 66, 66, 190,
	190, 190, 191, 191, 285, 285, 285, 285, 188, 188,
	189, 189, 67, 67, 558, 558, 558, 538, 538, 538,
	539, 539, 539, 539, 539, 539, 279, 279, 280, 280,
	375, 375, 375, 375, 375, 283, 283, 283, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 286, 286, 214,
	214, 214, 289, 290, 290, 287, 287, 288, 288, 288,
	292, 292, 291, 294, 294, 293, 374, 487, 487, 489,
	489, 489, 489, 489, 489, 489, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 559, 559, 485,
	485, 485, 486, 481, 481, 482, 482, 482, 482, 482,
	281, 281, 282, 282, 282, 282, 483, 484, 306, 306,
	412, 488, 488, 490, 490, 492, 560, 560, 560, 560,
	560, 560, 561, 561, 561, 373, 373, 372, 372, 298,
	298, 493, 493, 493, 493, 494, 494, 494, 494, 494,
	497, 496, 495, 495, 495, 495, 495, 69, 69, 69,
	338, 338, 337, 337, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 165,
	165, 231, 231, 63, 63, 63, 12, 12, 12, 540,
	540, 540, 68, 68, 68, 68, 68, 68, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 533, 533,
	532, 532, 232, 232, 563, 563, 74, 74, 74, 74,
	74, 74, 74, 430, 430, 431, 431, 62, 62, 62,
	62, 62, 359, 359, 357, 357, 356, 356, 305, 305,
	411, 236, 236, 207, 207, 207, 27, 26, 19, 19,
	24, 24, 39, 39, 39, 39, 42, 42, 38, 38,
	38, 38, 40, 40, 34, 34, 548, 548, 549, 549,
	102, 102, 107, 107, 107, 107, 107, 108, 108, 108,
	108, 109, 109, 109, 109, 118, 118, 164, 164, 164,
	164, 164, 164, 164, 44, 44, 44, 44, 56, 56,
	56, 56, 116, 565, 565, 565, 117, 117, 117, 564,
	564, 229, 229, 369, 369, 370, 370, 566, 566, 371,
	371, 371, 371, 371, 222, 221, 223, 223, 224, 224,
	61, 61, 61, 216, 216, 217, 217, 218, 218, 219,
	219, 220, 220, 567, 567, 96, 96, 96, 167, 167,
	271, 271, 271, 366, 366, 366, 299, 299, 242, 242,
	368, 368, 368, 368, 334, 334, 334, 166, 166, 313,
	313, 326, 326, 327, 327, 424, 424, 328, 115, 115,
	194, 194, 192, 192, 192, 192, 192, 192, 192, 192,
	199, 199, 200, 200, 201, 201, 202, 203, 203, 203,
	203, 317, 317, 204, 204, 204, 193, 193, 193, 195,
	195, 195, 195, 195, 195, 195, 198, 198, 198, 198,
	205, 205, 205, 197, 197, 504, 504, 504, 506, 506,
	508, 508, 507, 507, 503, 503, 505, 505, 562, 562,
	340, 340, 340, 296, 297, 295, 295, 303, 303, 301,
	302, 302, 304, 304, 410, 410, 410, 208, 208, 208,
	331, 331, 331, 331, 332, 332, 362, 362, 360, 360,
	360, 360, 361, 361, 363, 363, 363, 364, 364, 365,
	365, 330, 330, 391, 391, 196, 196, 196, 310, 310,
	310, 311, 311, 381, 381, 381, 381, 381, 381, 382,
	382, 380, 380, 380, 380, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 414, 415, 415, 312, 312, 416,
	367, 367, 522, 522, 522, 523, 523, 408, 408, 417,
	417, 417, 417, 417, 417, 406, 406, 407, 407, 425,
	426, 426, 344, 344, 344, 344, 342, 342, 345, 345,
	345, 345, 343, 343, 418, 418, 418, 418, 333, 333,
	419, 419, 419, 419, 420, 421, 421, 422, 422, 376,
	377, 377, 432, 432, 432, 432, 434, 309, 309, 309,
	309, 309, 480, 479, 479, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 449, 449, 449, 449,
	449, 449, 449, 435, 435, 435, 435, 435, 439, 439,
	439, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 440, 440, 445, 445, 446, 446, 446, 441,
	442, 447, 447, 447, 447, 568, 568, 451, 451, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 437, 437,
	437, 444, 444, 444, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 352, 352, 354,
	354, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 385, 385,
	385, 385, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 498, 498, 498,
	498, 498, 498, 498, 498, 387, 387, 501, 501, 502,
	502, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	509, 509, 510, 510, 512, 512, 513, 513, 514, 515,
	515, 515, 516, 517, 517, 511, 511, 518, 518, 518,
	518, 519, 519, 520, 520, 520, 520, 520, 521, 521,
	521, 521, 521, 397, 397, 398, 398, 404, 404, 404,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 233, 233, 233, 233,
	233, 322, 322, 320, 320, 320, 323, 323, 321, 321,
	319, 319, 318, 318, 394, 394, 392, 392, 396, 396,
	346, 346, 450, 450, 450, 450, 450, 450, 450, 450,
	347, 347, 347, 355, 348, 348, 349, 349, 349, 349,
	349, 388, 389, 350, 350, 350, 390, 390, 399, 403,
	403, 402, 401, 401, 400, 400, 378, 378, 379, 379,
	329, 329, 569, 569, 325, 325, 423, 423, 423, 423,
	275, 275, 314, 314, 274, 274, 266, 266, 267, 267,
	267, 267, 307, 307, 405, 405, 452, 452, 453, 453,
	454, 454, 455, 455, 456, 457, 458, 393, 393, 252,
	251, 239, 240, 250, 249, 248, 238, 241, 245, 246,
	247, 243, 244, 258, 257, 256, 263, 264, 254, 255,
	428, 237, 268, 268, 269, 269, 269, 270, 270, 270,
	270, 234, 234, 235, 235, 259, 259, 260, 261, 261,
	253, 253, 253, 225, 225, 225, 226, 226, 227, 227,
	466, 466, 463, 463, 463, 464, 464, 464, 465, 465,
	465, 465, 462, 462, 462, 462, 462, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	472, 472, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	474, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 477, 477,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 11, 14, 1,
	2, 3, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 9, 9, 3,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 1, 2,
	8, 4, 2, 5, 5, 5, 2, 1, 3, 11,
	12, 8, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	3, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	9, 12, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 558, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 98, 78, 149, 124, 132,
	193, 368, 404, 415, 396, 385, -123, -124, 432, -44,
	-56, -117, -116, 71, 125, 391, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -552, 100,
	-505, -78, -81, -109, -556, 137, 156, 211, -99, -100,
	351, -104, -105, 398, -107, -108, 400, 157, -51, -50,
	151, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 436, -153,
	491, 47, 450, 80, 141, 408, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -504, -79, -80, -83, -85,
	-86, -82, -84, 397, -195, -193, 555, 506, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 525, 533, -198, -196,
	-197, -205, 424, 514, 466, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, -273, 2, -254, -259, -260,
	-261, -253, -225, -474, -477, 4, -471, -475, 162, 220,
	315, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 90, 92,
	94, 95, 96, 97, 98, 99, 101, 102, 103, 105,
	106, 114, 115, 116, 117, 119, 124, 125, 128, 123,
	127, 130, 131, 132, 135, 136, 137, 139, 140, 142,
	143, 144, 146, 147, 149, 150, 151, 154, 152, 473,
	153, 155, 156, 157, 158, 168, 169, 170, 175, 177,
	181, 182, 185, 186, 187, 188, 189, 190, 191, 192,
	194, 198, 200, 201, 202, 203, 204, 210, 211, 213,
	214, 215, 216, 221, 222, 226, 223, 232, 233, 237,
	238, 239, 241, 245, 246, 247, 248, 249, 250, 252,
	254, 253, 256, 259, 260, 263, 267, 268, 271, 272,
	273, 274, 276, 277, 280, 278, 281, 279, 282, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	295, 283, 298, 296, 300, 301, 302, 313, 311, 306,
	307, 303, 308, 304, 305, 309, 310, 317, 318, 321,
	208, 323, 324, 327, 345, 331, 332, 333, 336, 337,
	340, 343, 344, 346, 347, 348, 349, 350, 351, 352,
	353, 355, 356, 358, 359, 360, 362, 363, 364, 366,
	368, 369, 371, 373, 374, 375, 376, 377, 378, 379,
	382, 381, 383, 385, 391, 396, 393, 394, 395, 397,
	398, 399, 400, 402, 403, 404, 406, 407, 408, 409,
	411, 413, 414, 417, 418, 433, 434, 452, 415, 416,
	419, 420, 421, 422, 423, 427, 425, 426, 428, 429,
	430, 432, 435, 436, 438, 439, 440, 441, 442, 443,
	446, 448, 449, 450, 451, 453, 456, 457, 458, 459,
	454, 465, 462, 463, 467, 468, 469, 470, 471, 472,
	474, 476, 484, 485, 486, 488, 491, 492, 493, 494,
	482, 496, 497, 500, 501, 502, 505, 503, 504, 506,
	508, 511, 512, 513, 519, 518, 520, 526, 527, 529,
	530, 531, 35, 48, 49, 52, 54, 56, 67, 68,
	69, 73, 120, 121, 148, 159, 160, 171, 183, 184,
	195, 197, 205, 206, 207, 227, 228, 230, 235, 257,
	320, 322, 338, 342, 357, 361, 365, 367, 380, 410,
	444, 455, 460, 477, 478, 479, 480, 487, 489, 514,
	515, 516, 521, 528, -273, 2, -254, 329, -247, 2,
	-225, -225, 368, 27, 2, 27, 356, 426, 468, 470,
	2, -531, -308, 2, 27, -228, -225, 100, 193, 424,
	-247, 2, -531, -308, 24, 2, -225, 2, -229, 2,
	415, -225, 277, 2, 558, 92, 268, 72, 410, 429,
	-126, 485, -125, 477, 419, -127, -461, 2, 298, -225,
	558, 558, 558, 27, -237, -225, 466, 220, 116, 463,
	558, 2, 466, 348, 518, 425, 116, 377, 220, 493,
	419, -540, 277, 406, 196, 507, -529, 2, -524, 4,
	-475, -471, -267, -266, 466, 471, 116, -261, -253, 548,
	-260, 558, 558, 558, 2, 238, 239, 376, 375, 429,
	430, 558, 558, 558, 417, 2, 26, 64, 91, 96,
	122, 158, 178, 181, 334, -553, 345, 374, 428, 465,
	474, 488, -539, 451, 66, 419, -538, -540, 277, 493,
	135, -356, 116, 268, 192, 501, 470, 468, 499, 128,
	226, 504, 503, 558, 558, 26, 64, 75, 96, 135,
	158, 178, 181, -555, 345, 374, 413, 428, 465, 474,
	488, 2, 518, 277, 425, 466, 220, 116, 493, 419,
	-540, 417, 418, 372, -90, 2, 555, 31, 30, 432,
	-187, 466, 231, 2, -225, 558, 558, 2, 238, 239,
	417, 418, 558, 558, 179, -524, 2, 558, 558, 2,
	238, 239, 417, 418, 231, 2, 66, 421, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	2, -162, 429, 451, 202, 45, 44, 72, 27, 373,
	77, 349, 117, 143, 494, 194, 220, 221, 246, 91,
	92, -358, 43, 239, 238, 418, -545, 417, -409, 467,
	420, 426, 462, 250, 415, 485, 100, 508, 407, 531,
	377, 378, 152, 4, 116, 298, 431, 477, 268, 414,
	352, 82, 558, -562, 2, 466, -564, 2, 485, 485,
	2, -564, 2, -564, 2, -564, 2, -565, 485, 528,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, -193, -195, -194,
	558, 558, 558, 558, 558, 558, 558, -162, 429, 2,
	72, 27, -301, -303, 498, 229, 145, 335, -192, -194,
	2, -504, -459, 2, -383, -478, -385, 546, 547, 539,
	464, 65, 314, 532, -397, 122, 499, 329, -477, -386,
	-399, 148, 410, -323, 8, 9, 5, 6, 7, -234,
	-387, -393, 490, 161, 319, -270, 559, 10, 555, -501,
	-194, -398, 36, 197, 63, -463, -269, -235, -435, 230,
	-268, -253, -498, -499, 4, -471, -472, -464, -438, -446,
	-442, -443, -449, -225, -474, 75, 108, 109, 107, 112,
	111, 270, 269, 113, 110, 431, 507, 64, 35, 205,
	206, 235, 320, 207, 73, -500, 136, -473, 227, 228,
	444, 49, 380, 171, 121, 120, 322, 54, 52, 515,
	-447, 118, 477, 478, 479, 480, 183, 184, 56, 159,
	160, 342, 365, 460, 487, 489, 195, 257, 42, 104,
	180, 225, 209, 234, 236, 240, 258, 261, 299, 312,
	316, 339, 341, 405, 437, -568, 516, 455, 67, 68,
	-506, 381, -507, -247, -506, 558, 558, 560, 558, -295,
	-296, -297, 2, 27, 133, 555, 2, -413, 2, -414,
	-418, -194, 251, -417, 555, -415, 553, -254, 330, -502,
	411, -498, -499, -234, -253, -269, 4, -471, -473, 557,
	-298, 555, 116, 466, 76, 220, -351, 555, -225, 27,
	329, 481, 560, -395, 555, 329, 179, 332, -225, 518,
	2, 2, 433, 2, 555, -126, 69, 485, 42, 429,
	-370, 2, -371, -221, -222, -223, -425, -224, 237, 371,
	379, 534, 126, 314, 531, -459, -547, 179, 538, 481,
	-459, -324, 557, 2, 2, 2, 2, 2, -418, 205,
	-254, 2, -251, -462, 4, -471, -475, -472, -476, -474,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 55,
	63, 64, 70, 74, 76, 85, 91, 100, 107, 108,
	110, 109, 111, 112, 113, 122, 126, 129, 133, 134,
	138, 141, 145, 161, 163, 176, 178, 179, 193, 196,
	199, 212, 224, 229, 231, 251, 255, 262, 269, 270,
	314, 319, 325, 329, 330, 334, 335, 354, 370, 384,
	401, 424, 431, 447, 461, 466, 475, 481, 483, 490,
	498, 499, 507, 509, 517, 522, 523, 524, 525, -477,
	75, 2, -418, 205, 2, -256, 205, -418, -259, 2,
	-238, -225, 2, -250, -462, 2, -274, 205, -254, -255,
	-259, -257, 2, -259, -263, 2, -225, -469, 205, 2,
	-466, 10, -465, 5, 4, -471, -475, -472, 518, 231,
	481, 560, -314, -266, -267, -458, 8, -307, -225, 557,
	-383, 2, -115, -101, 2, 176, -383, 205, 2, -115,
	205, 2, -383, 205, 2, -115, 205, 2, -542, 2,
	-469, 2, 2, 488, 2, 96, 205, -225, 466, 115,
	2, 395, -554, 413, 492, 2, 2, 2, 2, 2,
	2, 466, -243, 2, -225, 176, -263, 205, -264, 2,
	-225, -226, 425, -563, 381, -469, 205, 2, 518, -257,
	2, -257, 220, 233, -238, 205, 2, 470, 468, 470,
	468, 179, 2, 231, 2, 231, 2, -419, 2, -420,
	-414, -421, 553, 330, 2, 2, 2, 2, 2, 205,
	-225, 466, 115, 2, 249, 2, 2, 2, 2, 2,
	2, 2, -316, 205, 2, -254, 518, -316, 205, 2,
	-316, 205, 2, -357, 2, 85, -238, 205, 2, -262,
	205, 2, -257, -265, 205, 2, -263, -470, 205, 2,
	-469, -383, 2, -115, 2, -429, 2, -428, -465, 514,
	-90, 555, -90, 555, 429, 555, -469, -254, -254, -383,
	2, -115, -101, 2, -383, 2, -115, 2, -112, -111,
	-469, 555, 179, -383, 2, -115, -101, 2, -383, 2,
	-115, 2, -187, 176, 2, 116, 466, -162, 2, 176,
	509, 2, 8, 2, 212, -469, 420, 378, 168, 2,
	433, 2, 434, 72, -358, 531, 72, 179, 2, 179,
	2, -341, 2, 525, 2, 2, -528, 2, 329, 179,
	2, 179, 2, 179, 2, 179, 2, 179, 2, 375,
	430, 486, 239, 2, -115, 522, -101, -383, 522, 2,
	-546, 176, 418, -383, 2, 484, 248, 153, 179, -341,
	2, 179, 2, 179, 2, 5, 2, 376, 452, 2,
	237, 371, 452, 2, -254, -557, 2, 466, 518, 425,
	2, 2, 86, 87, 179, 2, 179, 2, 179, 531,
	2, -333, -418, -369, -370, -369, 481, -301, -303, -162,
	433, 2, -199, -331, -201, 176, -360, -361, -202, 262,
	163, 325, -203, -340, 27, 133, -340, -340, 58, 556,
	556, 11, 12, 74, 40, 546, 547, 548, 549, 174,
	550, 551, 544, 545, 543, 536, 537, 541, 243, 244,
	93, 540, 538, 84, 275, 412, 164, 165, 166, 167,
	392, 218, 33, 219, 14, 15, 16, 32, 334, 261,
	532, 209, 437, 539, 17, 18, 19, 234, 236, 316,
	48, 212, -233, -276, -383, -383, -383, -383, -383, -383,
	-383, 341, 555, -329, -378, 553, -194, 555, 555, 555,
	-458, -194, -383, -397, 556, -321, 555, -194, -397, -392,
	555, 410, 553, 555, -400, -383, 5, 5, 5, 555,
	557, -509, 526, 176, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 367,
	-440, 555, -439, 555, -439, -439, 519, -437, 555, 533,
	527, 555, -437, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 519, 560, -506, -298,
	555, -325, -423, -383, 548, -325, -325, 329, -318, -383,
	104, -344, 240, 299, 180, 258, 405, 225, -380, 559,
	-380, -408, 533, -194, -415, -253, -194, -417, 555, -413,
	-408, -91, -458, -75, -88, -96, -115, -128, -166, -167,
	548, -254, 555, 179, 555, 557, -462, 179, -307, -238,
	-254, -268, -269, -274, 132, -318, -524, 493, 419, -307,
	-228, 37, -394, -432, -433, -480, 559, -479, -435, -445,
	-441, -444, 357, 361, -464, 52, 515, -447, 230, 4,
	-471, -473, 227, 228, 444, 49, 380, 171, 121, 120,
	322, 54, 477, 478, 479, 480, 183, 184, 56, 516,
	455, 67, 68, -524, 493, 419, -307, 176, -357, -461,
	-318, 37, -370, 2, 122, -466, -566, 560, 260, -278,
	274, 313, 201, 330, 529, 323, 126, -468, 5, 4,
	-393, -405, 122, 268, 230, -452, -454, 8, -453, 9,
	-455, 546, 547, -460, -459, 106, 557, -462, -210, 393,
	432, -209, 23, 28, 137, 512, 154, -288, 222, 344,
	348, 148, 448, 502, -535, -536, 416, 472, 473, 88,
	323, 432, 393, 148, -337, -339, 37, 114, 302, 343,
	59, 215, 279, 280, 450, 521, 148, 432, 393, 344,
	-536, 97, 393, -536, -212, 448, 502, -535, -536, 416,
	393, -211, -288, 148, 559, 23, 393, 432, 344, -550,
	-551, 137, 28, 393, 344, -532, -503, 525, 148, -418,
	205, -543, -111, 252, 5, 10, -111, -314, 560, 560,
	-462, 548, 418, 417, 148, 148, 148, 148, 176, 2,
	2, 314, 2, 2, 2, 181, -538, -555, 2, 2,
	-254, 205, -300, 329, -527, -315, 466, -254, 314, 42,
	-256, 205, 2, -259, 518, -532, 314, -258, 205, -254,
	37, 555, 2, -357, 2, 220, -503, 314, -419, -271,
	-254, -414, -271, 432, -247, 37, -380, -254, 148, 2,
	2, 2, -225, -213, 560, 62, 399, 148, -316, 205,
	-213, 148, -213, 148, -275, 205, -274, -213, 148, -213,
	560, 148, -213, 560, 148, 560, 148, 556, 560, -429,
	-429, -469, -175, 525, 179, 100, 555, 555, -187, -426,
	560, -425, -470, -112, -469, -469, -527, -238, 2, -254,
	2, 466, 241, -469, -175, 212, -469, -469, -469, -461,
	27, 434, 2, 375, 430, 486, 87, 434, 2, -254,
	466, 116, 220, 78, -530, 176, -525, 406, -524, -254,
	116, -254, 116, -254, 116, -254, -254, 2, 2, 2,
	2, 2, 83, 83, 2, 44, -546, 176, 2, 484,
	2, 484, 2, -225, -225, -225, 451, 260, -254, 176,
	466, 220, 466, 220, 116, 466, -213, 560, -229, -199,
	-331, -461, -332, -331, -200, -199, -202, 176, 379, 503,
	302, 435, 245, -361, -360, 27, -383, -365, 170, 301,
	-383, -363, -385, 546, 547, -453, -455, -317, 323, -193,
	-193, -193, -304, -410, -383, 370, 220, -434, -432, -432,
	-252, -462, 477, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, 261, 209,
	437, 48, 212, -383, 481, -383, -383, -383, -383, 296,
	314, 319, 490, 161, 500, 133, 323, -569, 461, 39,
	-390, -194, -322, 555, -404, 34, 447, 27, -397, 555,
	2, -378, -383, -379, -319, -318, -318, 556, 517, 27,
	133, 548, 2, 556, 560, 37, 556, -383, -319, -396,
	-392, -318, -403, -402, 522, -352, -353, 530, 283, 119,
	203, 281, -354, 423, -456, 8, -462, 548, -510, 169,
	196, 555, 556, 2, 556, 2, 556, -383, 2, 556,
	-383, 2, 556, -383, 2, 556, -383, 2, 556, 2,
	-383, -383, -383, -383, -383, -383, -383, -318, 8, -456,
	-456, 477, 477, -456, -456, -456, -448, 357, 358, 359,
	360, 263, 264, 265, 266, 361, 362, 363, 364, 288,
	289, 290, 291, 284, 285, 286, 287, 292, 293, 294,
	295, 188, 189, 190, 191, 184, 185, 186, 187, -448,
	-346, 2, -450, -318, 4, 530, 283, 119, 203, 281,
	423, 5, -346, 2, -347, 2, -383, -318, -348, -384,
	-385, 546, 547, 539, -397, -349, 2, -383, -319, -383,
	55, 255, 483, -350, -383, 179, -318, -318, 2, -318,
	2, -507, 37, -318, -310, 560, 179, 37, 4, -310,
	-310, 555, 556, 560, -345, 200, 278, 273, -345, -413,
	-344, 240, -342, 339, -342, -342, -408, -239, 553, 561,
	-462, -408, -407, -406, 37, -247, 336, -408, -408, 557,
	556, -407, 554, -522, 555, 558, 558, 558, 558, 558,
	-254, 555, -318, -462, 557, 453, 556, 234, 234, 234,
	234, 411, 556, 481, -526, -262, -265, 525, -90, 331,
	556, 560, -309, 36, 553, 557, -456, 2, 2, -451,
	519, 555, 555, -353, 555, 179, -526, -265, -308, -258,
	-547, 556, 485, -371, -277, 379, 446, 394, 427, 463,
	8, 9, 8, 9, 560, -462, 560, -548, 91, 481,
	76, 419, -374, 205, 76, -481, -241, 91, -482, -225,
	70, 499, 370, 178, 146, -548, 91, 370, -548, 91,
	91, 432, 451, 481, 58, -418, 40, 40, 27, -115,
	256, 179, 531, 466, 220, 419, 481, -418, -339, -432,
	114, 279, 280, 58, -457, -452, 546, 547, -457, 58,
	-457, -457, -457, 525, -256, -418, 419, 481, 481, 481,
	481, 560, 40, 40, 27, -115, 256, 179, 481, -274,
	-239, 513, 41, 513, 481, 41, 419, 481, 560, 41,
	41, 481, 481, -533, -230, 103, 308, 272, 309, 95,
	305, 94, 304, 101, 306, 102, 307, 520, 317, 61,
	303, 282, 310, -231, -232, 350, 511, -469, 432, 393,
	148, 212, -426, 212, -426, -266, -225, 557, -115, -383,
	-383, -115, -383, -115, 44, 148, 2, -563, 249, 555,
	-281, 314, 179, -307, -427, 231, 560, -315, 148, -467,
	-466, 113, 431, -338, -337, 314, -258, 205, 2, 148,
	-298, 314, 142, 555, 377, 2, -240, 205, -226, -225,
	-357, -216, 469, 148, -335, 509, -366, -115, 555, 122,
	37, -366, -326, -327, -424, -328, -241, 555, -247, -380,
	-225, 2, -254, -316, -213, 148, -316, -316, -213, 560,
	148, -238, -257, -262, -263, -265, -469, -470, -90, -428,
	556, 556, 556, -174, 333, -173, -225, 5, -187, 509,
	-280, -375, -374, -485, -486, -481, 261, 220, 499, 233,
	162, -299, -242, -241, 115, -181, 525, -111, 556, -426,
	212, -175, -175, -426, -426, -254, 176, -469, -175, -175,
	-175, 2, 2, 2, -341, -254, -238, -274, -254, -307,
	-307, -341, -238, -341, -238, -341, -238, -115, -383, 2,
	429, 176, 176, 557, -341, 377, 116, 466, 348, 220,
	-254, -274, -254, -274, -238, -254, -418, -332, -200, 330,
	245, 435, -363, -364, -385, 410, 411, -364, 410, 411,
	8, 9, 8, 9, -204, 439, 318, -316, 560, -207,
	38, 129, 245, -254, 531, 144, -383, -383, 481, -569,
	461, -390, 144, -383, 296, 319, 490, 161, 500, 133,
	323, 179, 555, -384, -384, 556, -320, -383, -383, 554,
	563, 556, -303, 560, -301, -383, -318, -318, 556, 557,
	-318, -307, 554, 554, 560, 556, -401, -402, 138, -383,
	481, 481, 481, 481, 555, 556, 557, -515, 340, 555,
	555, -383, 556, 556, 556, 556, 37, 560, 560, 560,
	556, 560, 560, 560, 556, 556, 556, 560, 556, 531,
	531, 556, 556, 556, 556, 560, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	556, 560, 556, 179, 556, 556, -355, 354, 556, 11,
	12, 546, 547, 548, 549, 174, 550, 551, 544, 545,
	543, 536, 537, 538, 84, 275, 412, 14, 15, 16,
	234, 212, -384, -384, -384, 556, -388, -389, 179, 176,
	37, -350, -350, -350, 556, 179, -318, 556, 556, 555,
	-508, 277, 314, 556, -377, -376, 523, -423, -311, 2,
	-413, -249, -462, -377, -377, -318, -383, 240, 240, -343,
	509, 329, -345, -413, -407, -458, -382, -381, 177, 38,
	129, 311, 208, -407, -247, -298, -407, -407, -462, -408,
	-408, -406, 556, -523, -458, 556, -312, -416, -502, -303,
	557, -462, -184, -503, -163, 5, 319, -163, -163, -163,
	-307, 481, 481, 24, 355, -432, 553, 554, 8, -462,
	555, -456, -456, -456, -307, 179, 179, 179, -336, 525,
	-459, -370, 497, 81, 379, 477, -459, -209, 393, -241,
	-241, -254, -263, 314, -374, 205, -215, 314, -432, -248,
	-225, 555, 555, 245, 245, 509, -241, -248, 245, 205,
	-241, 205, -248, -248, -534, 379, 324, -383, -467, 267,
	377, 315, -210, 393, 432, -115, -115, -115, 555, -547,
	509, 132, -254, -274, -254, -263, -258, 432, 393, 312,
	-268, -457, -457, -337, 432, 393, -263, -256, -467, 419,
	-238, -211, -115, -115, -115, 555, -239, -212, 393, 5,
	205, -241, 5, -225, -241, -263, -467, -551, 23, -241,
	205, -241, -263, -467, -230, -469, 319, 505, -532, 419,
	481, -418, -111, -178, 525, -111, -172, 216, 548, -529,
	-225, 518, -225, -279, -282, -280, -241, -190, -191, 527,
	525, 148, -272, -254, 553, -175, -469, -254, -263, -264,
	148, -298, 314, -469, 37, 148, 555, 2, 2, 329,
	314, -240, 205, -217, 139, -567, 538, -238, -377, -311,
	-334, -368, 401, 329, -299, 514, -247, -334, -313, 560,
	179, 538, 557, -299, -422, 548, 2, -213, -316, -213,
	-213, -274, -275, -213, -213, -213, -90, -90, -175, 560,
	555, 538, 538, 555, -469, -469, 556, 560, -254, -240,
	220, 220, -246, -226, 556, 560, 557, 555, -183, 333,
	-182, 140, 247, 232, 440, 441, 442, 443, 131, -181,
	-112, 179, -52, 525, 466, -175, 559, -341, -341, -341,
	429, 429, -225, -250, -238, -254, -251, -274, 176, 176,
	503, -364, 330, 271, -410, -208, 321, -254, 559, -383,
	-383, 144, 144, -383, -384, -384, -383, 144, 179, 555,
	-383, -394, 32, 32, 556, 560, -379, -383, 556, 517,
	-303, -303, 556, 548, -462, 559, 556, -392, 141, -383,
	475, 283, 203, 281, -354, 281, -354, -354, -456, 5,
	-462, 548, -516, -244, 555, -225, 523, -302, 335, 556,
	-434, -432, -383, -383, -383, -383, -383, -456, -437, -437,
	-452, -452, -383, -388, -383, -434, -432, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, 133, 314, 323, -384,
	-389, -388, -383, -383, -432, 556, 556, 556, -318, -90,
	555, 277, -330, 196, -383, -426, 560, -330, -330, 556,
	-413, -413, 555, -383, 240, 554, 560, 562, 538, -298,
	557, -406, -407, 554, 556, 560, 556, 560, -367, 37,
	556, -462, -186, -185, 130, 51, -307, -307, 332, 5,
	8, 553, 554, 557, -456, 556, 556, 556, -307, -307,
	-307, 115, 302, -383, 481, 481, 148, 314, 511, -487,
	-482, 146, -383, -305, -411, -383, 555, 555, 2, -206,
	137, 432, -549, 2, 509, 148, -213, 148, -213, 529,
	555, 555, 481, 419, 525, -318, -383, -176, 122, -461,
	-536, 559, -536, 559, 419, 481, 419, 481, 525, 525,
	-318, 481, -436, 46, 25, 314, -257, 481, 481, -213,
	148, 493, 432, -469, 319, -263, -258, 432, 393, -426,
	-180, 333, -179, 140, 403, 131, 247, -426, -178, 179,
	231, 2, -258, 2, 556, 556, 560, -488, 37, 327,
	327, 555, -254, -71, 525, -425, -458, 42, -256, 37,
	148, -532, -115, -258, -430, -431, 5, -254, 148, 329,
	314, -218, 254, -567, -466, -503, -303, -334, -325, 315,
	89, 556, -377, -327, -311, -383, 2, 556, -213, -213,
	-173, -174, -469, -469, -469, -175, -187, -187, -375, -283,
	555, -240, -226, 555, -187, -242, 2, -470, 560, 555,
	538, 538, 538, -426, -115, 333, -254, 548, -341, -290,
	-289, 348, 323, -290, 410, 410, 330, 170, 250, -207,
	-239, -383, -383, 144, 32, 32, -383, -383, -394, 556,
	-383, -383, -318, 554, 5, -383, 556, 556, 8, -383,
	556, 557, -517, -225, -383, 556, 58, 556, 556, 560,
	560, 556, 556, 556, 556, 556, 556, 556, -389, 179,
	133, 323, 555, 556, 556, -90, -391, 199, 58, -413,
	-391, -391, -343, -307, -413, -381, -239, 553, -462, -458,
	-416, 555, 557, -185, 538, 554, 2, 553, -462, 556,
	115, -241, -241, -374, 148, -489, 91, -491, 74, 162,
	100, 314, 319, 499, 370, 70, 122, 384, -559, 37,
	535, 556, 556, 560, -207, -305, -307, 314, 458, 122,
	314, 122, 115, 493, 77, -241, -248, -307, -307, -254,
	-263, 155, 556, 560, 538, 2, 548, 548, -263, -258,
	-263, -256, 346, 155, 556, -239, 5, 5, 148, -236,
	74, 5, -241, -241, -257, 115, 419, 481, -178, 560,
	555, 538, 538, -178, -470, -111, -298, -286, 223, -241,
	-486, -483, -484, 370, -490, -492, 162, 370, -115, 2,
	-189, -188, -225, 5, 555, -281, 333, 554, -467, -338,
	-115, -258, -298, 556, 560, -359, 509, -239, -254, 148,
	-219, 253, -567, -466, -216, -362, -360, 134, 555, 329,
	-115, -303, 538, 556, 556, 115, 115, 214, 147, -305,
	555, 555, -307, 115, 556, -182, -183, -469, -111, -469,
	-181, -53, -54, 220, 91, 353, -251, 466, 220, 555,
	555, -207, -383, -383, -383, 556, -303, -462, 548, -511,
	348, 556, -410, -383, -383, -384, 179, 555, -394, 556,
	-512, 524, -383, -318, -512, -512, 556, -458, 2, -469,
	553, 2, -374, -248, -252, -245, -225, 162, 205, 319,
	245, 555, -384, -254, 555, 2, 29, -560, 126, 224,
	-373, -561, 99, 459, 213, -411, -208, 556, 556, 319,
	319, -383, -432, 555, -213, -213, 556, 556, -383, 481,
	-461, 98, -459, 2, -536, -238, -383, 481, 5, -213,
	-252, -213, -213, -236, 493, -263, -258, -179, -180, -469,
	-111, -178, 37, -287, -288, 212, -488, 245, -245, 245,
	-558, 525, 556, 560, 538, 538, -279, -190, -72, -73,
	482, -425, -298, 37, 5, 555, -225, 329, 555, -239,
	-220, 90, -567, -466, -217, -334, 315, -307, 91, -362,
	-390, -175, 555, 555, -284, 79, 92, 123, 204, 182,
	221, 451, 456, 27, -284, 556, -305, -305, 556, 555,
	-175, 556, 560, 27, 555, 27, 555, -254, -274, -318,
	-318, 556, -303, 58, 560, 556, 556, -384, -394, 556,
	-513, -514, -244, 554, 2, -491, -245, 314, 509, -383,
	-227, 555, -383, 37, 224, 127, 210, -286, 555, -372,
	509, 384, -236, -305, 555, 555, 555, 538, 179, 555,
	-436, -213, -257, 556, -541, 382, -115, -190, 346, 555,
	-285, 329, 115, 302, -188, -459, -459, 556, 37, -73,
	9, 37, -115, -305, -254, -305, 329, 262, -466, -218,
	556, -248, -334, -470, -470, -372, 556, 556, -470, -54,
	-307, -307, 556, 556, -518, 377, 411, 198, -318, -304,
	556, 560, 37, 148, 200, 556, -493, 276, -225, 556,
	127, 210, -287, -307, -286, 200, -254, -537, 509, 556,
	-292, -291, -289, -294, -293, -289, -318, -459, 98, 346,
	-318, -236, -544, 180, -543, 5, 10, -285, -254, -306,
	-412, -241, 80, 115, -286, -115, -115, 556, -359, 556,
	-254, -567, -219, -377, 556, 556, -373, -372, -191, 525,
	556, 556, 556, 556, -519, -520, 48, 496, 106, -383,
	-519, -519, -514, -516, 162, 525, -494, -497, -496, 329,
	438, 180, 347, 556, 458, 521, -560, 556, 525, -298,
	-383, -372, 556, 560, 514, 556, 560, 514, 556, 179,
	556, -213, -177, 525, 44, 555, 556, 560, 369, 128,
	137, -287, -558, -372, 555, -373, 555, -452, -220, 134,
	-175, -175, -286, -373, -377, -175, -521, 146, -520, 366,
	175, 410, 366, 175, -521, -521, -245, 53, -496, 329,
	-497, 329, 503, 128, -377, 53, -493, -286, -291, 212,
	-293, 179, 346, 417, -543, 29, -307, -412, 411, 411,
	2, -190, -285, -373, -305, -286, -305, 315, 503, -287,
	-286, 106, 196, 476, 302, 32, 538, -495, 302, 399,
	62, 432, -495, 538, -494, 555, 555, 333, 556, 2,
	-285, -286, 556, -287, 556, 432, -191, -287, 410, 337,
	-520, -383, 22, 319, 122, -383, -560, -318, -318, -174,
	555, -214, 62, 399, -287, -372, -191, -373, -326, -377,
	-191, 556, 556, -174, -191, -373, -377, -286, -377, -377,
	-287, 481, 556, -377, -286, -287, 555, -287, -191, -318,
	-191, -377, 556, -377, -287,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1197,
	1199, 1201, 1203, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 878, 880,
	0, 559, 561, 0, 883, 885, 0, 0, 581, 582,
	0, 1288, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1215, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1346, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1358, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1319, 1321,
	1323, 1325, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 2008, 2025,
	2026, 2027, 2030, 2031, 2032, 2033, 2034, 2035, 2450, 2531,
	2532, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 468, 469, 1040, 0, 533, 531,
	2000, 534, 2266, 536, 538, 406, 407, 408, 409, 410,
	411, 0, 552, 544, 551, 553, 555, 556, 557, 558,
	528, 526, 0, 552, 2060, 550, 1195, 1196, 1180, 1181,
	2304, 1222, 0, 193, 571, -2, -2, -2, 2415, -2,
	603, -2, 610, 2419, 2306, 615, 0, 617, -2, 620,
	1198, 1200, 1202, 708, 709, 2011, 0, 0, 0, 0,
	34, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 1090, 1091, 0, 201, 203, -2,
	-2, -2, -2, 0, 0, 2344, 2109, 1968, 2027, 1971,
	1966, 282, 284, 286, 287, 0, 0, 0, 0, 0,
	0, 312, 315, 317, -2, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 927, 928, 1146, 0,
	0, 0, -2, 414, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 343, 471, 472, 0, 1347, 1347, 0,
	0, 0, 0, 256, 247, 879, 881, 882, 0, 0,
	0, 0, 560, 562, 0, 0, 229, 884, 886, 887,
	0, 0, 0, 0, 0, 258, 0, 0, 576, 578,
	580, 645, 647, 649, 651, 653, 655, 657, 659, 662,
	664, 666, 668, 670, 672, 674, 676, 679, 681, 683,
	685, 687, 689, 691, 693, 695, 697, 699, 701, 703,
	705, 715, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 799, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 718, 720, 721, 722, 0, 779, 797,
	798, 807, 707, 0, 1080, 1348, 1224, 1205, 1219, 1224,
	1207, 1208, 1209, 1210, 1211, 1216, 1218, 1212, 1213, 1214,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 365,
	367, 369, 371, 373, 376, 378, 380, -2, 1317, 1318,
	420, 422, 424, 426, 428, 430, 432, 563, 0, 565,
	0, 719, -2, 0, 1352, 1352, 1352, 0, 0, 1318,
	1316, 0, 568, 569, 624, 625, 1611, 0, 0, 0,
	0, 0, 0, 0, 1865, 1697, 0, 626, -2, 1728,
	1730, 2390, 2415, 1864, 1732, 1733, 1734, 1735, 1736, 0,
	1738, 1739, 1740, 1741, 1742, 1743, 0, 1745, 0, 1750,
	1751, 1752, 0, 2397, 1945, 2021, -2, 0, 0, 2403,
	2017, 0, 1831, 1768, -2, -2, 2044, 2023, 1543, 1544,
	1545, 1546, 1547, -2, -2, 2433, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 0, 2378, 2398,
	2399, 2404, 2406, 2400, 2387, 1793, 2121, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1570, 1579, -2, -2, -2, -2, -2, -2, -2, 2391,
	2392, 2409, 2412, 2418, 2423, 2424, 2396, 2405, 2432, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 1571, -2, -2, -2, -2,
	1335, 2277, 1338, 1040, 1336, 1320, 1322, 0, 1324, 0,
	0, 0, 1329, 1355, 1353, 0, 1396, 1333, 1334, 1414,
	1414, 1438, 0, 1419, 0, 1438, 1347, 1464, 0, 1425,
	2296, 1769, 1770, 0, 2027, 2022, -2, -2, 2430, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 535, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 1221, 1145,
	573, 574, 0, 598, 0, 602, 2386, -2, 0, 2315,
	-2, 606, 1225, 1229, 1230, 1231, 1232, 1233, 0, 0,
	0, 0, 1238, 0, 0, 612, 0, 0, 599, 600,
	618, 621, 0, 711, 712, 713, 714, 63, 0, 2398,
	1464, 65, 0, 1990, 2052, 2053, 2054, 2055, 2056, 2431,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2433, 68, 0, 2398, 72, 0, 2398, 0, -2, 79,
	0, 1996, 82, 0, 1993, 91, 0, 2398, 0, 1965,
	-2, 0, 178, 2004, 0, 906, 2006, -2, 2398, 1088,
	259, 260, 2040, 2041, 2048, 2049, 2050, 2051, 0, 0,
	0, 0, 871, 1962, 1967, 872, 1986, 873, 1972, 0,
	288, 289, 290, 291, 292, 0, 293, 2398, 295, 296,
	0, 298, 299, 2398, 301, 302, 0, 304, 0, 214,
	215, 320, 321, 0, 323, 0, 2398, 0, 0, 0,
	329, -2, 344, 0, 341, 332, 333, 335, 336, 337,
	338, 0, 384, 382, 2001, 0, 899, 2398, 0, 903,
	-2, 2007, 0, 0, 1125, -2, 2398, 1085, 0, 1131,
	1127, 0, -2, 0, 1345, 2398, 1242, 931, 932, 933,
	934, 1476, 403, 0, 1257, 0, 1259, 0, 1278, 1470,
	1414, 0, 0, 1475, 345, 346, 347, 348, 349, 2398,
	0, 0, 0, 354, 0, 356, 357, 358, 359, 360,
	361, 362, 167, 2398, 437, 464, 0, 167, 2398, 440,
	167, 2398, 443, 0, 446, 1144, 167, 2398, 449, 167,
	2398, 452, 454, 167, 2398, 458, 459, 461, 2398, 463,
	261, 1191, 1192, 1193, 1194, 0, -2, 522, 2010, -2,
	474, 0, 475, 0, -2, 0, 273, 0, 0, 888,
	889, 890, 891, 892, 895, 896, 897, 898, 1451, 232,
	230, 0, 0, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 0, 0, 583, 0, 0, 716, 717, 0,
	0, 727, 728, 729, 0, 273, 2307, 2274, 2141, 736,
	0, 739, 742, -2, 0, 0, 0, 0, 746, 0,
	751, 752, 753, 0, 755, 757, 877, 759, 0, 0,
	761, 0, 765, 0, 768, 0, 770, 0, 772, -2,
	-2, -2, -2, 783, -2, 0, 786, 788, 0, 790,
	-2, 0, 799, 795, 796, 0, 0, 0, 0, 815,
	816, 0, 825, 0, 828, 829, 830, 0, 832, 833,
	0, 835, 836, 837, 838, 0, 840, 841, -2, -2,
	845, 847, 0, 854, 0, 858, 0, 862, 0, 723,
	724, 167, 1468, 1204, -2, 1206, 0, -2, 0, 564,
	0, 567, 1375, 1303, 1300, 0, 1372, 1373, 1304, 0,
	0, 0, 1311, 0, 1350, 1351, 0, 0, 0, 1290,
	1291, 0, 0, 0, 0, 1870, 1871, 1872, 1873, 1874,
	1875, 1878, 1879, 1876, 1877, 1880, 1881, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 1884, 1885, 0, 0, 1887,
	0, 1889, 0, 0, 0, 0, 0, 0, 1676, 1678,
	1953, 0, 0, 1886, 1616, 1617, 1618, 1619, 1620, 1655,
	1656, 0, 0, 1729, 1950, 1949, 1731, 0, 1901, 0,
	1744, -2, 0, 1865, 1896, 0, 0, 1753, 1754, 1755,
	0, 0, 1901, 0, 0, 1944, 1765, 1766, 1608, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	1556, 0, 1558, 0, 1559, 1560, 1567, 1580, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	1925, -2, 0, 0, 0, 0, 1572, 0, 1337, 0,
	0, 1400, 1954, 1958, 1959, 1400, 1400, 0, 0, 1902,
	1461, 1461, 0, 0, 1457, 1457, 1457, 1455, 1438, 0,
	1438, 1448, 0, 1438, 1438, 0, -2, 1419, 0, 0,
	1448, 0, 1432, 510, 512, 514, 516, 517, 518, 520,
	1465, 1466, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 2354, 2306, 540,
	554, 1347, 0, 1904, 1491, 1495, 0, 1497, 1498, 1499,
	1500, 1501, 0, 0, 1492, -2, 1568, 1570, 1591, 2045,
	2046, 2047, 1551, 1552, 1553, 1554, 1555, 1563, 1550, 1550,
	1550, 1561, 1590, 1582, 1590, 1586, 1536, 1537, 1538, 1573,
	1574, 1575, 1576, 0, 2354, 2306, 546, 0, 0, 0,
	0, 0, -2, 608, 613, 614, 0, 1227, 0, 1234,
	635, 636, 637, 1236, 1237, 0, 1239, 611, 638, 639,
	640, 641, 642, 643, 0, 1974, 1975, 1976, 1977, 1980,
	1981, 0, 0, 609, 628, 616, 0, 622, 92, 1177,
	0, 131, 0, 1177, 1177, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 116, 127, 104, 105, 0,
	0, 0, 0, 0, 73, 1062, 0, 1065, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 0, 0, 0,
	115, 0, 0, 110, 94, 0, 0, 0, 117, 129,
	0, 158, 160, 0, 0, 0, 0, 0, 0, 177,
	185, 0, 0, 0, 0, 1086, 0, 1344, 0, 0,
	2398, 0, 1451, 2185, -2, -2, 1451, 870, 0, 0,
	2028, 1970, 0, 0, 0, 0, 0, 0, 0, 322,
	324, 0, 326, 327, 328, 0, 1124, 0, 334, 374,
	1011, 2398, 0, 0, 401, 396, 0, 398, 0, 0,
	1061, 2398, 1059, 2005, 0, 1083, 0, 1040, 2398, 2003,
	0, 0, 1132, 2037, 1141, 1145, 1244, 0, 405, 0,
	1260, 1262, 0, 0, 1471, 0, 1473, 1414, 0, 351,
	352, 353, 0, 433, 0, 165, 166, 0, 167, 2398,
	438, 0, 441, 0, 167, 2398, 1960, 447, 0, 450,
	0, 0, 456, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 236,
	0, 1450, 0, 1451, 230, 273, 273, 1451, 585, 1451,
	587, 0, 0, 730, 731, 0, 273, 273, 273, 737,
	738, 740, 741, -2, -2, -2, 855, 743, 744, 822,
	0, 0, 0, 821, 758, 0, 864, 2292, 875, 822,
	2109, 822, 2109, 822, 2109, 769, 771, 774, 810, 818,
	782, 787, 0, 0, 792, 800, -2, 0, 802, 0,
	804, 0, 806, 822, 823, 826, 831, 834, 839, 0,
	0, 0, 0, 0, 0, 0, 1079, 0, 1217, 1375,
	1303, 566, 1294, 1374, 1295, 1302, 1305, 0, 0, 1307,
	0, 1309, 0, 1370, 1371, 1378, 1379, 0, 1389, 1390,
	1382, 0, -2, 0, 0, 1385, 1386, 1313, 0, 1330,
	1331, 1332, 1359, 1362, 1155, 0, 2531, 1612, 1486, 1613,
	1614, 1989, 0, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, -2, -2, -2, -2, -2, -2, -2,
	-2, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, -2, -2, -2, 1653, 1654, -2, 1888, 1890,
	0, 1953, 0, -2, 0, -2, -2, -2, -2, 1673,
	0, 1675, 1680, 1682, 1684, 0, 0, 0, 0, 1952,
	1694, 1936, 1937, 0, 0, 1867, 1868, 1869, 1679, 0,
	1698, 1951, 1948, 0, 0, 1900, 1358, 1757, 0, 0,
	0, 0, 1764, 1749, 1898, 0, 1897, 0, 0, 0,
	1908, 0, 1943, 1939, 0, 1987, 1607, 1594, 1595, 1596,
	1597, 1598, 1599, 1609, 0, 1984, 2014, 2020, 1841, 0,
	0, 0, 1794, 1795, 1796, 1797, 1798, 0, 1800, 1801,
	0, 1803, 1804, 0, 1806, 1807, 0, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 1508, 0, 0, 0, 1512, 0, 0, 0, 1516,
	0, 0, 0, 1520, 0, 0, 0, 1524, 0, 0,
	0, 1528, 0, 0, 0, 1532, 0, 0, 0, 0,
	0, 1813, 0, 1911, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1815, 0, 1817, 1902, 1922, 0, 0,
	1699, 0, 0, 0, 1865, 0, 1820, 1902, 1930, 0,
	0, 0, 0, 0, 1902, 0, 1935, 0, 1827, 0,
	1829, 1339, 0, 0, 1481, 0, 0, 0, 1957, 1481,
	1481, 0, 1395, 0, 0, 1458, 1459, 1460, 0, 0,
	1461, 0, 1452, 1456, 1453, 1454, 1448, 1411, 0, 0,
	1991, 1448, 1417, 1447, 0, 1040, 1437, 1448, 1448, 0,
	-2, 1421, 1438, 0, 0, 511, 513, 515, 519, 521,
	0, 0, 1358, -2, 0, -2, 1039, 0, 0, 0,
	0, 530, 532, 0, 0, 453, 0, 0, 524, 0,
	527, 0, 1482, 1485, 0, 0, 1496, 1502, 1503, 0,
	-2, 0, 0, 1592, 0, 0, 0, 0, 0, 196,
	0, 601, 0, 1226, 1235, 0, 632, 0, 634, 0,
	1978, 1982, 1979, 1983, 0, 623, 0, 0, 0, 0,
	1176, 0, 135, 2398, 0, 169, 0, 0, 1004, 1997,
	0, 0, 0, 0, 2128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 1063, 1064,
	1066, 1073, 1075, 0, 1069, 1985, 0, 0, 1070, 0,
	1072, 1074, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 107, 0, 0, 0, 0,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1120, 1118, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 0, 0, -2, 0, 0,
	0, 0, 206, 0, 264, 1963, 1973, 0, 893, 894,
	294, 297, 300, 303, 202, 0, 330, 0, 0, 937,
	912, 0, 0, 383, 273, 0, 0, 397, 2037, 901,
	182, 183, 184, 1057, 1060, 0, 1040, 2398, 1097, 0,
	0, 0, 0, 0, 0, 1130, 0, 2398, 1992, 2036,
	2037, 1246, 1254, 0, 1481, 0, 1276, 1263, 0, 0,
	0, 1276, 1280, 1281, 1283, 1284, 0, 0, 1472, 1478,
	0, 355, 465, 167, 435, 0, 167, 167, 444, 0,
	0, 167, 455, 167, 460, 167, 262, 462, 473, 523,
	1347, 1347, 273, 271, 2243, 269, 266, 268, 0, 0,
	0, 938, 940, 941, 942, 943, 0, 2037, 0, 2174,
	2037, 0, 1266, 1268, 0, 226, 0, 233, 231, 236,
	0, 0, 395, 584, 589, 725, 0, 273, 733, 734,
	735, 776, 812, 820, 745, 747, 748, 749, 0, 876,
	874, 760, 822, 763, 822, 766, 822, 785, 789, 794,
	801, 0, 0, 0, 814, 0, 0, 0, 0, 0,
	0, 0, 859, 860, 861, 863, 1469, 1298, 1299, 1301,
	0, 1310, 0, 0, 1384, -2, -2, 1383, 1387, 1388,
	-2, -2, -2, -2, 1306, 0, 1315, 1312, 0, 1369,
	1153, 1154, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1695, 0, -2, 1674, 1677, 1681, 1683, 1685, 0,
	0, 0, 0, 0, 0, 1891, 0, 1893, 1696, 1946,
	1949, 1863, 0, 0, 1357, 1358, 1358, 0, 1763, 0,
	1899, 0, 1906, 1907, 0, 1756, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 1799, 1802, 1805, 1808, 0, 0, 0, 0,
	1788, 0, 0, 0, 1792, 1562, 1548, 0, 1590, 1588,
	1589, 1583, 1590, 1587, 1540, 0, 1505, 1506, 1507, 1509,
	1510, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522,
	1523, 1525, 1526, 1527, 1529, 1530, 1531, 1533, 1534, 1535,
	1539, 0, 1812, 0, 1814, 1816, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 1703, 1704, 1819, 1928, 1929, 0, 0,
	0, 0, 0, 0, 1825, 0, 1934, 1826, 1828, 1347,
	0, 1340, 0, 1397, 1392, 1480, 0, 1955, 1451, 1399,
	1401, 1956, 1994, 1392, 1392, 0, 1903, 0, 0, 1442,
	0, 0, 0, 1444, 1415, 0, 0, 1409, 0, 1405,
	1406, 1407, 1408, 1416, 1040, 1446, 1418, 1422, 2014, 0,
	1448, 0, 1433, 0, 1435, 1467, 0, 1427, 1430, 0,
	0, 2029, 274, 0, 305, 309, 310, 306, 307, 308,
	539, 0, 0, 0, 0, 1905, 0, 1487, 0, 1493,
	0, 0, 0, 0, 545, 0, 0, 0, 192, 0,
	597, -2, 630, 631, 633, 0, 629, 132, 1177, 0,
	0, 1158, 1160, 0, 137, 2398, 146, 0, 978, 0,
	1995, 0, 0, 0, 0, 0, 1179, 0, 0, 2398,
	167, 2398, 167, 149, 152, 0, 157, 154, 155, 0,
	0, 969, 93, 1177, 0, 96, 100, 108, 0, 0,
	0, 114, 0, 0, 0, 1162, 1168, 0, 0, 1067,
	1068, 1071, 1077, 74, 0, 0, 1166, 1172, 80, 0,
	1157, 159, 98, 102, 109, 0, 1174, 95, 0, 181,
	0, 0, 0, 173, 0, 174, 175, 186, 0, 167,
	2398, 0, 904, 905, 1119, 1081, 1082, 0, 1087, 0,
	0, 0, 1451, 198, 0, 1451, 206, 0, 1969, 0,
	0, 0, 0, 0, 0, 936, 1022, 0, 909, 0,
	0, 0, 389, 385, 0, 394, 400, 399, 900, 0,
	0, 0, 0, -2, 0, 0, 1134, 1128, 1129, 0,
	0, 0, 2398, 1248, 1254, 0, 1253, 1345, 1358, 404,
	1255, 1276, 0, 0, 0, 1265, 1261, 1258, 1481, 0,
	0, 0, 0, 0, 1474, 1477, 350, 434, 167, 439,
	442, 1961, 167, 448, 451, 457, 476, 477, 248, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 947, 0,
	2037, 2037, 0, 1999, 0, 0, 0, 0, 234, 0,
	237, 0, 0, 0, 242, 243, 244, 245, 246, 227,
	1451, 0, 586, 0, 0, 732, 0, 762, 764, 767,
	803, 805, 822, 848, 849, 964, 0, 964, 0, 0,
	1308, 0, 1381, 1314, 1363, 1364, 0, 1155, 0, 1615,
	1658, 0, 0, -2, 0, 0, 1662, 0, 0, 0,
	-2, 0, 0, 0, 1892, 1894, 0, 1948, 1758, 0,
	0, 0, 1762, 1746, 1747, 0, 1866, 1909, 1938, 1942,
	0, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 0, 1988,
	2015, 2019, 1839, 1840, 1844, 2002, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 1581, 1585,
	0, 0, 1910, 1921, 1923, 1700, 1701, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, -2, -2, -2,
	1718, 1719, 1720, -2, -2, -2, 0, 0, 0, 1924,
	1926, 1927, 1931, 1932, 0, 1822, 1823, 1824, 1933, 0,
	1347, 1341, 1394, 0, 1479, 1398, 0, 1394, 1394, 1354,
	1440, 0, 0, 1463, 0, 1412, 0, 1413, 0, 1445,
	0, 1420, 1423, 1424, 1434, 0, 1426, 0, 1429, 0,
	1758, -2, 275, 277, 0, 280, 542, 543, 541, 525,
	0, 0, 1489, 0, 0, 1565, 1569, 1593, 548, 549,
	547, 194, 0, 1449, 0, 0, 0, 0, 168, 976,
	1003, 0, 0, 0, 1148, 1155, 0, 0, 1009, 139,
	0, 0, 0, 147, 0, 0, 144, 0, 151, 156,
	0, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	118, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 1152, 0, 0, 188,
	0, 0, 0, 1122, 1123, 1163, 1169, 0, 0, 206,
	204, 0, 207, 0, 210, 211, 0, 206, 200, 0,
	0, 325, 1040, 331, 958, 1010, 0, 1012, 0, 910,
	0, 0, 1011, 381, 0, 388, 0, 0, 1061, 0,
	0, 1084, 1095, 1040, 0, 1133, 1135, 1143, 0, 0,
	0, 1250, 1254, 0, 1243, 1244, 1377, 1256, 1274, -2,
	0, 0, 1358, 1282, 1279, 1285, 1286, 0, 436, 445,
	270, 0, 265, 267, 0, 251, 0, 0, 939, 944,
	0, 0, 0, 0, 0, 1267, 1269, 0, 0, 0,
	0, 0, 0, 236, 257, 0, 726, 750, 813, 850,
	963, 0, 0, 852, 0, 0, 1380, 1367, 1368, 1365,
	1155, 1660, 1664, 0, 0, 0, 1666, -2, 0, 1688,
	-2, -2, 1895, 1947, 1737, 1358, 1759, 1761, 1748, 1941,
	1610, 0, 1846, 1843, 0, 1830, 0, 1783, 1784, 0,
	0, 1787, 1789, 1790, 1791, 1549, 1542, 1541, 1920, 0,
	0, 0, 0, 1821, 1342, 0, 1835, 0, 0, 1402,
	1835, 1835, 1441, 0, 1443, 1410, 1403, 0, 2015, 1436,
	1428, 0, 0, 278, 0, 1483, 1488, 0, 1494, 1564,
	195, 133, 134, 136, 0, 977, 0, 980, 0, 0,
	0, 0, 987, 988, 0, 0, 0, 0, 0, 997,
	0, 1026, 1036, 0, 1369, 0, 0, 0, 141, 162,
	0, 0, 1178, 0, 0, 167, 167, 0, 0, 1159,
	1161, 0, 0, 0, 0, 121, 0, 0, 1164, 1170,
	1167, 1173, 0, 0, 0, 1175, 179, 180, 0, 167,
	0, 172, 167, 167, 1152, 0, 0, 0, 197, 0,
	0, 0, 0, 199, 263, 206, 0, 966, 0, 1022,
	1014, 1015, 1016, 0, 1021, 1023, 0, 0, 924, 911,
	0, 920, 0, 0, 937, 912, 0, 386, 902, 1058,
	1092, 1040, 0, 1126, 0, 0, 0, 0, 0, 0,
	1252, 1254, 0, 1245, 1246, 1276, 1376, 0, 0, 0,
	1264, 1377, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 238, 0, 239, 240, 241,
	228, 588, 590, 0, 0, 596, 962, 0, 0, 0,
	0, 1366, 1668, -2, -2, 1689, 0, 2016, 2018, 1358,
	0, 1832, 1360, 0, 0, -2, 0, 0, 0, 1343,
	1326, 0, 1393, 1391, 1327, 1328, 1462, 0, 1431, 279,
	0, 1490, 138, 0, 981, 982, 1998, 984, 0, 986,
	989, 0, 992, 2039, 0, 996, 0, 1005, 1027, 0,
	958, 0, 1032, 1033, 1034, 1149, 1150, 1038, 0, 140,
	142, 161, 1152, 0, 143, 150, 0, 0, 97, 0,
	0, 2100, 124, 122, 120, 1156, 99, 0, 181, 187,
	1151, 176, 189, 167, 0, 1165, 1171, 208, 0, 209,
	212, 0, 0, 912, 965, 0, 1013, 0, 1024, 1025,
	914, 0, 913, 0, 0, 0, 0, 0, 387, 390,
	0, 393, 0, 0, 1136, 0, 1142, 0, 0, 0,
	1240, 0, 0, 1247, 1248, 402, 1270, 0, 0, 1276,
	1287, 250, 0, 0, 945, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 946, 1038, 0, 0, 1002, 0,
	255, 235, 0, 592, 0, 594, 0, 851, 853, 0,
	0, 1760, 1850, 0, 0, 1785, 1786, -2, 0, 1726,
	1834, 1836, 0, 1404, 1484, 979, 983, 0, 0, 0,
	1044, 0, 0, 998, 0, 1030, 1031, 966, 0, 958,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	171, 190, 1152, 205, 222, 0, 1093, 914, 0, 0,
	922, 0, 925, 0, 921, 918, 919, 958, 0, 391,
	392, 0, 1096, 0, 1143, 0, 0, 1254, 1249, 1250,
	1481, 1273, 1277, 0, 0, 1036, 1038, 912, 0, 591,
	0, 0, 856, 857, 0, 0, 0, 0, 1845, 1361,
	1727, 0, 0, 0, 0, 991, 1049, 0, 0, 0,
	1028, 1029, 1026, 0, 1007, 0, 1040, 145, 0, 1038,
	0, 970, 0, 0, 973, 0, 0, 125, 2100, 123,
	0, 167, 225, 0, 219, 217, 218, 907, 0, 0,
	1018, 1020, 0, 926, 966, 924, 1094, 1038, 0, 1036,
	0, 0, 1252, 0, 273, 273, 958, 1036, 1481, 0,
	273, 593, 595, 1842, 1862, 1851, -2, 2357, 2106, 0,
	1862, 1862, 1837, 1838, 0, 0, 993, 1045, 1046, 0,
	1041, 1042, 1043, 2038, 994, 995, 1481, 1035, 0, 1044,
	163, 958, 967, 0, 0, 968, 0, 0, 128, 0,
	130, 191, 213, 0, 0, 0, 1017, 0, 0, 0,
	0, 912, 914, 1036, 0, 958, 0, 1251, 1241, 0,
	252, 253, 966, 958, 1001, 254, 1847, 0, 0, 1853,
	1854, 1855, 1856, 1857, 1848, 1849, 985, 0, 1047, 0,
	1048, 0, 0, 0, 1006, 0, 1049, 148, 971, 0,
	974, 0, 126, 0, 220, 221, 0, 1019, 915, 0,
	917, 914, 923, 958, 0, 966, 0, 1271, 0, 912,
	966, 0, 1859, 1860, 0, 0, 0, 1050, 0, 1053,
	1054, 0, 1051, 0, 1026, 0, 0, 0, 961, 916,
	908, 966, 1038, 912, 1036, 0, 1481, 912, 1858, 1861,
	1852, 990, 1052, 1055, 1056, 1037, 1008, 0, 0, 223,
	0, 957, 959, 960, 912, 1036, 1481, 958, 1481, 999,
	1481, 966, 0, 0, 1481, 958, 1139, 966, 1272, 1000,
	972, 0, 224, 1137, 966, 912, 0, 912, 1481, 0,
	1481, 1140, 966, 1138, 975,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 544, 3, 550, 545, 3,
	555, 556, 548, 546, 560, 547, 557, 549, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 563, 3,
	536, 538, 537, 541, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 553, 3, 554, 551, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 561, 543, 562, 539,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 540, 57879, 542,
	57880, 552, 57881, 558, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1232
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1257
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1360
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1373
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1390
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1394
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1415
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1490
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1558
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1569
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1576
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1603
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1642
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1671
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1682
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1714
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1719
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2049
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2056
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2107
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2451
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2584
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2600
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2717
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2766
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2951
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3091
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3154
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3487
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3564
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3741
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4034
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4058
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4295
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4484
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4904
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4980
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5120
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "RESUME")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5396
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5411
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{

			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5493
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5507
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5522
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5620
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5636
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.str = ""
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5830
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5844
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5855
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5954
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6072
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6233
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6242
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = true
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{

			sqlVAL.union.val = true
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = false
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6369
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6383
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6395
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6407
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6417
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6427
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = nil
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6537
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6556
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6558
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6560
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6564
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6602
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6620
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6639
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6656
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6673
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6677
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = true
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = false
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = false
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.str = ""
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6784
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6790
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6860
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6866
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6878
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6884
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6898
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6904
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6925
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6926
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7039
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7109
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7113
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7156
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7241
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7285
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7298
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7408
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7435
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7694
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = nil
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7884
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7885
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = true
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = false
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = false
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7982
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8099
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8100
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8104
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8157
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8159
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8196
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8206
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8287
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8297
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8343
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8373
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8406
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = nil
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = true
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = false
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.str = tree.AstFull
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.str = tree.AstRight
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = tree.AstInner
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8526
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.str = tree.AstHash
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.str = ""
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8633
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = false
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = true
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = false
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8695
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8703
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8722
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8724
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8732
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8820
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8828
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8832
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8846
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = types.Geography
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8863
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8871
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8905
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = nil
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = types.Int2
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = types.Int
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = types.Float4
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = types.Float
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = types.Bool
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = types.Float
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8997
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9003
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9025
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = types.String
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = true
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = false
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = types.Date
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9082
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9113
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9130
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = false
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = types.Interval
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9154
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = nil
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9283
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9882
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9908
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9932
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9962
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9973
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9974
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10230
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10260
		{
			return unimplemented(sqllex, "treat")
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.str = ""
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10435
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10532
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = tree.Any
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.Some
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.All
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.Div
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = tree.LT
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = tree.GT
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.LE
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.GE
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = tree.NE
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.Like
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10893
		{
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10894
		{
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11092
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11100
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11112
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11312
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.str = ""
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
