// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11915

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1345,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	230, 202,
	480, 202,
	-2, 0,
	-1, 79,
	219, 1147,
	232, 1147,
	248, 340,
	371, 340,
	380, 929,
	412, 340,
	424, 929,
	465, 929,
	491, 340,
	517, 929,
	-2, 0,
	-1, 85,
	248, 344,
	-2, 0,
	-1, 86,
	127, 1345,
	225, 1345,
	502, 1345,
	503, 1345,
	-2, 0,
	-1, 102,
	144, 1316,
	162, 1316,
	175, 1316,
	228, 1316,
	261, 1316,
	324, 1316,
	334, 1316,
	497, 1316,
	-2, 1287,
	-1, 138,
	152, 808,
	247, 808,
	374, 777,
	429, 777,
	483, 808,
	485, 777,
	-2, 0,
	-1, 140,
	4, 1347,
	21, 1347,
	22, 1347,
	23, 1347,
	24, 1347,
	25, 1347,
	26, 1347,
	28, 1347,
	29, 1347,
	35, 1347,
	40, 1347,
	41, 1347,
	43, 1347,
	44, 1347,
	45, 1347,
	46, 1347,
	47, 1347,
	48, 1347,
	49, 1347,
	51, 1347,
	52, 1347,
	53, 1347,
	54, 1347,
	56, 1347,
	57, 1347,
	58, 1347,
	59, 1347,
	60, 1347,
	61, 1347,
	62, 1347,
	66, 1347,
	67, 1347,
	68, 1347,
	69, 1347,
	71, 1347,
	72, 1347,
	73, 1347,
	77, 1347,
	78, 1347,
	79, 1347,
	80, 1347,
	81, 1347,
	82, 1347,
	83, 1347,
	86, 1347,
	87, 1347,
	88, 1347,
	89, 1347,
	91, 1347,
	93, 1347,
	94, 1347,
	95, 1347,
	96, 1347,
	97, 1347,
	98, 1347,
	100, 1347,
	101, 1347,
	102, 1347,
	104, 1347,
	105, 1347,
	113, 1347,
	114, 1347,
	115, 1347,
	116, 1347,
	118, 1347,
	119, 1347,
	120, 1347,
	122, 1347,
	123, 1347,
	124, 1347,
	126, 1347,
	127, 1347,
	129, 1347,
	130, 1347,
	131, 1347,
	134, 1347,
	135, 1347,
	136, 1347,
	138, 1347,
	139, 1347,
	141, 1347,
	142, 1347,
	143, 1347,
	145, 1347,
	146, 1347,
	147, 1347,
	148, 1347,
	149, 1347,
	150, 1347,
	151, 1347,
	152, 1347,
	153, 1347,
	154, 1347,
	155, 1347,
	156, 1347,
	157, 1347,
	158, 1347,
	159, 1347,
	161, 1347,
	167, 1347,
	168, 1347,
	169, 1347,
	170, 1347,
	174, 1347,
	176, 1347,
	180, 1347,
	181, 1347,
	182, 1347,
	183, 1347,
	184, 1347,
	185, 1347,
	186, 1347,
	187, 1347,
	188, 1347,
	189, 1347,
	190, 1347,
	191, 1347,
	193, 1347,
	194, 1347,
	196, 1347,
	197, 1347,
	199, 1347,
	200, 1347,
	201, 1347,
	202, 1347,
	203, 1347,
	204, 1347,
	205, 1347,
	206, 1347,
	207, 1347,
	209, 1347,
	210, 1347,
	212, 1347,
	213, 1347,
	214, 1347,
	215, 1347,
	219, 1347,
	220, 1347,
	221, 1347,
	222, 1347,
	225, 1347,
	226, 1347,
	227, 1347,
	229, 1347,
	231, 1347,
	232, 1347,
	234, 1347,
	236, 1347,
	237, 1347,
	238, 1347,
	240, 1347,
	244, 1347,
	245, 1347,
	246, 1347,
	247, 1347,
	248, 1347,
	249, 1347,
	251, 1347,
	252, 1347,
	253, 1347,
	255, 1347,
	256, 1347,
	258, 1347,
	259, 1347,
	262, 1347,
	266, 1347,
	267, 1347,
	270, 1347,
	271, 1347,
	272, 1347,
	273, 1347,
	275, 1347,
	276, 1347,
	277, 1347,
	278, 1347,
	279, 1347,
	280, 1347,
	281, 1347,
	282, 1347,
	283, 1347,
	284, 1347,
	285, 1347,
	286, 1347,
	287, 1347,
	288, 1347,
	289, 1347,
	290, 1347,
	291, 1347,
	292, 1347,
	293, 1347,
	294, 1347,
	295, 1347,
	297, 1347,
	299, 1347,
	300, 1347,
	301, 1347,
	302, 1347,
	303, 1347,
	304, 1347,
	305, 1347,
	306, 1347,
	307, 1347,
	308, 1347,
	309, 1347,
	310, 1347,
	312, 1347,
	314, 1347,
	316, 1347,
	317, 1347,
	319, 1347,
	320, 1347,
	321, 1347,
	322, 1347,
	323, 1347,
	326, 1347,
	329, 1347,
	330, 1347,
	331, 1347,
	332, 1347,
	335, 1347,
	336, 1347,
	337, 1347,
	339, 1347,
	341, 1347,
	342, 1347,
	343, 1347,
	344, 1347,
	345, 1347,
	346, 1347,
	347, 1347,
	348, 1347,
	349, 1347,
	350, 1347,
	351, 1347,
	352, 1347,
	354, 1347,
	355, 1347,
	356, 1347,
	357, 1347,
	358, 1347,
	359, 1347,
	360, 1347,
	361, 1347,
	362, 1347,
	363, 1347,
	364, 1347,
	365, 1347,
	366, 1347,
	367, 1347,
	368, 1347,
	370, 1347,
	372, 1347,
	373, 1347,
	374, 1347,
	375, 1347,
	376, 1347,
	377, 1347,
	378, 1347,
	379, 1347,
	380, 1347,
	381, 1347,
	382, 1347,
	384, 1347,
	390, 1347,
	392, 1347,
	393, 1347,
	394, 1347,
	395, 1347,
	396, 1347,
	397, 1347,
	398, 1347,
	399, 1347,
	401, 1347,
	402, 1347,
	403, 1347,
	405, 1347,
	406, 1347,
	407, 1347,
	408, 1347,
	409, 1347,
	410, 1347,
	412, 1347,
	413, 1347,
	414, 1347,
	415, 1347,
	416, 1347,
	417, 1347,
	418, 1347,
	419, 1347,
	420, 1347,
	421, 1347,
	422, 1347,
	424, 1347,
	425, 1347,
	426, 1347,
	427, 1347,
	428, 1347,
	429, 1347,
	431, 1347,
	432, 1347,
	433, 1347,
	434, 1347,
	435, 1347,
	437, 1347,
	438, 1347,
	439, 1347,
	440, 1347,
	441, 1347,
	442, 1347,
	443, 1347,
	445, 1347,
	447, 1347,
	448, 1347,
	449, 1347,
	450, 1347,
	451, 1347,
	452, 1347,
	453, 1347,
	454, 1347,
	455, 1347,
	456, 1347,
	457, 1347,
	458, 1347,
	459, 1347,
	461, 1347,
	462, 1347,
	464, 1347,
	466, 1347,
	467, 1347,
	468, 1347,
	469, 1347,
	470, 1347,
	471, 1347,
	472, 1347,
	473, 1347,
	475, 1347,
	476, 1347,
	477, 1347,
	478, 1347,
	479, 1347,
	481, 1347,
	483, 1347,
	484, 1347,
	485, 1347,
	486, 1347,
	487, 1347,
	488, 1347,
	490, 1347,
	491, 1347,
	492, 1347,
	493, 1347,
	495, 1347,
	496, 1347,
	499, 1347,
	500, 1347,
	501, 1347,
	502, 1347,
	503, 1347,
	504, 1347,
	505, 1347,
	507, 1347,
	510, 1347,
	511, 1347,
	512, 1347,
	513, 1347,
	514, 1347,
	515, 1347,
	517, 1347,
	518, 1347,
	519, 1347,
	520, 1347,
	525, 1347,
	526, 1347,
	527, 1347,
	528, 1347,
	529, 1347,
	530, 1347,
	-2, 0,
	-1, 141,
	1, 1220,
	125, 1220,
	236, 1220,
	313, 1220,
	370, 1220,
	378, 1220,
	533, 1220,
	557, 1220,
	-2, 0,
	-1, 143,
	1, 1220,
	557, 1220,
	-2, 0,
	-1, 144,
	1, 1220,
	557, 1220,
	-2, 0,
	-1, 145,
	1, 1220,
	480, 1220,
	557, 1220,
	-2, 0,
	-1, 174,
	144, 1315,
	162, 1315,
	175, 1315,
	228, 1315,
	261, 1315,
	324, 1315,
	334, 1315,
	497, 1315,
	-2, 1290,
	-1, 212,
	4, 1354,
	5, 1354,
	6, 1354,
	7, 1354,
	8, 1354,
	9, 1354,
	10, 1354,
	21, 1354,
	22, 1354,
	23, 1354,
	24, 1354,
	25, 1354,
	26, 1354,
	28, 1354,
	29, 1354,
	35, 1354,
	36, 1354,
	40, 1354,
	41, 1354,
	42, 1354,
	43, 1354,
	44, 1354,
	45, 1354,
	46, 1354,
	47, 1354,
	48, 1354,
	49, 1354,
	51, 1354,
	52, 1354,
	53, 1354,
	54, 1354,
	56, 1354,
	57, 1354,
	58, 1354,
	59, 1354,
	60, 1354,
	61, 1354,
	62, 1354,
	63, 1354,
	64, 1354,
	65, 1354,
	66, 1354,
	67, 1354,
	68, 1354,
	69, 1354,
	71, 1354,
	72, 1354,
	73, 1354,
	75, 1354,
	77, 1354,
	78, 1354,
	79, 1354,
	80, 1354,
	81, 1354,
	82, 1354,
	83, 1354,
	86, 1354,
	87, 1354,
	88, 1354,
	89, 1354,
	91, 1354,
	93, 1354,
	94, 1354,
	95, 1354,
	96, 1354,
	97, 1354,
	98, 1354,
	100, 1354,
	101, 1354,
	102, 1354,
	103, 1354,
	104, 1354,
	105, 1354,
	106, 1354,
	107, 1354,
	108, 1354,
	109, 1354,
	110, 1354,
	111, 1354,
	112, 1354,
	113, 1354,
	114, 1354,
	115, 1354,
	116, 1354,
	117, 1354,
	118, 1354,
	119, 1354,
	120, 1354,
	121, 1354,
	122, 1354,
	123, 1354,
	124, 1354,
	126, 1354,
	127, 1354,
	129, 1354,
	130, 1354,
	131, 1354,
	134, 1354,
	135, 1354,
	136, 1354,
	138, 1354,
	139, 1354,
	141, 1354,
	142, 1354,
	143, 1354,
	145, 1354,
	146, 1354,
	147, 1354,
	148, 1354,
	149, 1354,
	150, 1354,
	151, 1354,
	152, 1354,
	153, 1354,
	154, 1354,
	155, 1354,
	156, 1354,
	157, 1354,
	158, 1354,
	159, 1354,
	160, 1354,
	161, 1354,
	167, 1354,
	168, 1354,
	169, 1354,
	170, 1354,
	174, 1354,
	176, 1354,
	179, 1354,
	180, 1354,
	181, 1354,
	182, 1354,
	183, 1354,
	184, 1354,
	185, 1354,
	186, 1354,
	187, 1354,
	188, 1354,
	189, 1354,
	190, 1354,
	191, 1354,
	193, 1354,
	194, 1354,
	196, 1354,
	197, 1354,
	199, 1354,
	200, 1354,
	201, 1354,
	202, 1354,
	203, 1354,
	204, 1354,
	205, 1354,
	206, 1354,
	207, 1354,
	208, 1354,
	209, 1354,
	210, 1354,
	212, 1354,
	213, 1354,
	214, 1354,
	215, 1354,
	219, 1354,
	220, 1354,
	221, 1354,
	222, 1354,
	224, 1354,
	225, 1354,
	226, 1354,
	227, 1354,
	229, 1354,
	231, 1354,
	232, 1354,
	233, 1354,
	234, 1354,
	235, 1354,
	236, 1354,
	237, 1354,
	238, 1354,
	239, 1354,
	240, 1354,
	244, 1354,
	245, 1354,
	246, 1354,
	247, 1354,
	248, 1354,
	249, 1354,
	251, 1354,
	252, 1354,
	253, 1354,
	255, 1354,
	256, 1354,
	257, 1354,
	258, 1354,
	259, 1354,
	260, 1354,
	262, 1354,
	266, 1354,
	267, 1354,
	268, 1354,
	269, 1354,
	270, 1354,
	271, 1354,
	272, 1354,
	273, 1354,
	275, 1354,
	276, 1354,
	277, 1354,
	278, 1354,
	279, 1354,
	280, 1354,
	281, 1354,
	282, 1354,
	283, 1354,
	284, 1354,
	285, 1354,
	286, 1354,
	287, 1354,
	288, 1354,
	289, 1354,
	290, 1354,
	291, 1354,
	292, 1354,
	293, 1354,
	294, 1354,
	295, 1354,
	297, 1354,
	298, 1354,
	299, 1354,
	300, 1354,
	301, 1354,
	302, 1354,
	303, 1354,
	304, 1354,
	305, 1354,
	306, 1354,
	307, 1354,
	308, 1354,
	309, 1354,
	310, 1354,
	311, 1354,
	312, 1354,
	313, 1354,
	314, 1354,
	315, 1354,
	316, 1354,
	317, 1354,
	318, 1354,
	319, 1354,
	320, 1354,
	321, 1354,
	322, 1354,
	323, 1354,
	326, 1354,
	330, 1354,
	331, 1354,
	332, 1354,
	335, 1354,
	336, 1354,
	337, 1354,
	338, 1354,
	339, 1354,
	340, 1354,
	341, 1354,
	342, 1354,
	343, 1354,
	344, 1354,
	345, 1354,
	346, 1354,
	347, 1354,
	348, 1354,
	349, 1354,
	350, 1354,
	351, 1354,
	352, 1354,
	354, 1354,
	355, 1354,
	356, 1354,
	357, 1354,
	358, 1354,
	359, 1354,
	360, 1354,
	361, 1354,
	362, 1354,
	363, 1354,
	364, 1354,
	365, 1354,
	366, 1354,
	367, 1354,
	368, 1354,
	370, 1354,
	372, 1354,
	373, 1354,
	374, 1354,
	375, 1354,
	376, 1354,
	377, 1354,
	378, 1354,
	379, 1354,
	380, 1354,
	381, 1354,
	382, 1354,
	384, 1354,
	390, 1354,
	392, 1354,
	393, 1354,
	394, 1354,
	395, 1354,
	396, 1354,
	397, 1354,
	398, 1354,
	399, 1354,
	401, 1354,
	402, 1354,
	403, 1354,
	404, 1354,
	405, 1354,
	406, 1354,
	407, 1354,
	408, 1354,
	409, 1354,
	410, 1354,
	412, 1354,
	413, 1354,
	414, 1354,
	415, 1354,
	416, 1354,
	417, 1354,
	418, 1354,
	419, 1354,
	420, 1354,
	421, 1354,
	422, 1354,
	424, 1354,
	425, 1354,
	426, 1354,
	427, 1354,
	428, 1354,
	429, 1354,
	430, 1354,
	431, 1354,
	432, 1354,
	433, 1354,
	434, 1354,
	435, 1354,
	436, 1354,
	437, 1354,
	438, 1354,
	439, 1354,
	440, 1354,
	441, 1354,
	442, 1354,
	443, 1354,
	445, 1354,
	447, 1354,
	448, 1354,
	449, 1354,
	450, 1354,
	451, 1354,
	452, 1354,
	453, 1354,
	454, 1354,
	455, 1354,
	456, 1354,
	457, 1354,
	458, 1354,
	459, 1354,
	461, 1354,
	462, 1354,
	463, 1354,
	464, 1354,
	466, 1354,
	467, 1354,
	468, 1354,
	469, 1354,
	470, 1354,
	471, 1354,
	472, 1354,
	473, 1354,
	475, 1354,
	476, 1354,
	477, 1354,
	478, 1354,
	479, 1354,
	481, 1354,
	483, 1354,
	484, 1354,
	485, 1354,
	486, 1354,
	487, 1354,
	488, 1354,
	489, 1354,
	490, 1354,
	491, 1354,
	492, 1354,
	493, 1354,
	495, 1354,
	496, 1354,
	498, 1354,
	499, 1354,
	500, 1354,
	501, 1354,
	502, 1354,
	503, 1354,
	504, 1354,
	505, 1354,
	506, 1354,
	507, 1354,
	510, 1354,
	511, 1354,
	512, 1354,
	513, 1354,
	514, 1354,
	515, 1354,
	517, 1354,
	518, 1354,
	519, 1354,
	520, 1354,
	525, 1354,
	526, 1354,
	527, 1354,
	528, 1354,
	529, 1354,
	530, 1354,
	531, 1354,
	538, 1354,
	545, 1354,
	546, 1354,
	547, 1354,
	554, 1354,
	558, 1354,
	-2, 0,
	-1, 664,
	178, 2092,
	480, 2092,
	537, 2092,
	556, 2092,
	-2, 0,
	-1, 665,
	178, 2190,
	480, 2190,
	537, 2190,
	556, 2190,
	-2, 0,
	-1, 666,
	178, 2080,
	480, 2080,
	537, 2080,
	556, 2080,
	-2, 0,
	-1, 668,
	178, 2312,
	480, 2312,
	537, 2312,
	556, 2312,
	-2, 0,
	-1, 670,
	178, 2346,
	480, 2346,
	537, 2346,
	556, 2346,
	-2, 0,
	-1, 677,
	178, 2215,
	480, 2215,
	537, 2215,
	556, 2215,
	-2, 619,
	-1, 708,
	556, 2031,
	559, 2031,
	-2, 866,
	-1, 709,
	556, 2033,
	559, 2033,
	-2, 867,
	-1, 710,
	556, 2032,
	559, 2032,
	-2, 868,
	-1, 711,
	559, 1965,
	-2, 869,
	-1, 733,
	175, 216,
	-2, 0,
	-1, 754,
	42, 2035,
	-2, 0,
	-1, 755,
	517, 1124,
	-2, 930,
	-1, 771,
	4, 1474,
	21, 1474,
	22, 1474,
	23, 1474,
	24, 1474,
	25, 1474,
	26, 1474,
	28, 1474,
	29, 1474,
	35, 1474,
	40, 1474,
	41, 1474,
	43, 1474,
	44, 1474,
	45, 1474,
	46, 1474,
	47, 1474,
	48, 1474,
	49, 1474,
	51, 1474,
	52, 1474,
	53, 1474,
	54, 1474,
	56, 1474,
	57, 1474,
	58, 1474,
	59, 1474,
	60, 1474,
	61, 1474,
	62, 1474,
	66, 1474,
	67, 1474,
	68, 1474,
	69, 1474,
	71, 1474,
	72, 1474,
	73, 1474,
	77, 1474,
	78, 1474,
	79, 1474,
	80, 1474,
	81, 1474,
	82, 1474,
	83, 1474,
	86, 1474,
	87, 1474,
	88, 1474,
	89, 1474,
	91, 1474,
	93, 1474,
	94, 1474,
	95, 1474,
	96, 1474,
	97, 1474,
	98, 1474,
	100, 1474,
	101, 1474,
	102, 1474,
	104, 1474,
	105, 1474,
	113, 1474,
	114, 1474,
	115, 1474,
	116, 1474,
	118, 1474,
	119, 1474,
	120, 1474,
	122, 1474,
	123, 1474,
	124, 1474,
	126, 1474,
	127, 1474,
	129, 1474,
	130, 1474,
	131, 1474,
	134, 1474,
	135, 1474,
	136, 1474,
	138, 1474,
	139, 1474,
	141, 1474,
	142, 1474,
	143, 1474,
	145, 1474,
	146, 1474,
	147, 1474,
	148, 1474,
	149, 1474,
	150, 1474,
	151, 1474,
	152, 1474,
	153, 1474,
	154, 1474,
	155, 1474,
	156, 1474,
	157, 1474,
	158, 1474,
	159, 1474,
	161, 1474,
	167, 1474,
	168, 1474,
	169, 1474,
	170, 1474,
	174, 1474,
	176, 1474,
	180, 1474,
	181, 1474,
	182, 1474,
	183, 1474,
	184, 1474,
	185, 1474,
	186, 1474,
	187, 1474,
	188, 1474,
	189, 1474,
	190, 1474,
	191, 1474,
	193, 1474,
	194, 1474,
	196, 1474,
	197, 1474,
	199, 1474,
	200, 1474,
	201, 1474,
	202, 1474,
	203, 1474,
	204, 1474,
	205, 1474,
	206, 1474,
	207, 1474,
	209, 1474,
	210, 1474,
	212, 1474,
	213, 1474,
	214, 1474,
	215, 1474,
	219, 1474,
	220, 1474,
	221, 1474,
	222, 1474,
	225, 1474,
	226, 1474,
	227, 1474,
	229, 1474,
	231, 1474,
	232, 1474,
	234, 1474,
	236, 1474,
	237, 1474,
	238, 1474,
	240, 1474,
	244, 1474,
	245, 1474,
	246, 1474,
	247, 1474,
	248, 1474,
	249, 1474,
	251, 1474,
	252, 1474,
	253, 1474,
	255, 1474,
	256, 1474,
	258, 1474,
	259, 1474,
	262, 1474,
	266, 1474,
	267, 1474,
	270, 1474,
	271, 1474,
	272, 1474,
	273, 1474,
	275, 1474,
	276, 1474,
	277, 1474,
	278, 1474,
	279, 1474,
	280, 1474,
	281, 1474,
	282, 1474,
	283, 1474,
	284, 1474,
	285, 1474,
	286, 1474,
	287, 1474,
	288, 1474,
	289, 1474,
	290, 1474,
	291, 1474,
	292, 1474,
	293, 1474,
	294, 1474,
	295, 1474,
	297, 1474,
	299, 1474,
	300, 1474,
	301, 1474,
	302, 1474,
	303, 1474,
	304, 1474,
	305, 1474,
	306, 1474,
	307, 1474,
	308, 1474,
	309, 1474,
	310, 1474,
	312, 1474,
	314, 1474,
	316, 1474,
	317, 1474,
	319, 1474,
	320, 1474,
	321, 1474,
	322, 1474,
	323, 1474,
	326, 1474,
	330, 1474,
	331, 1474,
	332, 1474,
	335, 1474,
	336, 1474,
	337, 1474,
	339, 1474,
	341, 1474,
	342, 1474,
	343, 1474,
	344, 1474,
	345, 1474,
	346, 1474,
	347, 1474,
	348, 1474,
	349, 1474,
	350, 1474,
	351, 1474,
	352, 1474,
	354, 1474,
	355, 1474,
	356, 1474,
	357, 1474,
	358, 1474,
	359, 1474,
	360, 1474,
	361, 1474,
	362, 1474,
	363, 1474,
	364, 1474,
	365, 1474,
	366, 1474,
	367, 1474,
	368, 1474,
	370, 1474,
	372, 1474,
	373, 1474,
	374, 1474,
	375, 1474,
	376, 1474,
	377, 1474,
	378, 1474,
	379, 1474,
	380, 1474,
	381, 1474,
	382, 1474,
	384, 1474,
	390, 1474,
	392, 1474,
	393, 1474,
	394, 1474,
	395, 1474,
	396, 1474,
	397, 1474,
	398, 1474,
	399, 1474,
	401, 1474,
	402, 1474,
	403, 1474,
	405, 1474,
	406, 1474,
	407, 1474,
	408, 1474,
	409, 1474,
	410, 1474,
	412, 1474,
	413, 1474,
	414, 1474,
	415, 1474,
	416, 1474,
	417, 1474,
	418, 1474,
	419, 1474,
	420, 1474,
	421, 1474,
	422, 1474,
	424, 1474,
	425, 1474,
	426, 1474,
	427, 1474,
	428, 1474,
	429, 1474,
	431, 1474,
	432, 1474,
	433, 1474,
	434, 1474,
	435, 1474,
	437, 1474,
	438, 1474,
	439, 1474,
	440, 1474,
	441, 1474,
	442, 1474,
	443, 1474,
	445, 1474,
	447, 1474,
	448, 1474,
	449, 1474,
	450, 1474,
	451, 1474,
	452, 1474,
	453, 1474,
	454, 1474,
	455, 1474,
	456, 1474,
	457, 1474,
	458, 1474,
	459, 1474,
	461, 1474,
	462, 1474,
	464, 1474,
	466, 1474,
	467, 1474,
	468, 1474,
	469, 1474,
	470, 1474,
	471, 1474,
	472, 1474,
	473, 1474,
	475, 1474,
	476, 1474,
	477, 1474,
	478, 1474,
	479, 1474,
	481, 1474,
	483, 1474,
	484, 1474,
	485, 1474,
	486, 1474,
	487, 1474,
	488, 1474,
	490, 1474,
	491, 1474,
	492, 1474,
	493, 1474,
	495, 1474,
	496, 1474,
	499, 1474,
	500, 1474,
	501, 1474,
	502, 1474,
	503, 1474,
	504, 1474,
	505, 1474,
	507, 1474,
	510, 1474,
	511, 1474,
	512, 1474,
	513, 1474,
	514, 1474,
	515, 1474,
	517, 1474,
	518, 1474,
	519, 1474,
	520, 1474,
	525, 1474,
	526, 1474,
	527, 1474,
	528, 1474,
	529, 1474,
	530, 1474,
	-2, 0,
	-1, 795,
	4, 1145,
	21, 1145,
	22, 1145,
	23, 1145,
	24, 1145,
	25, 1145,
	26, 1145,
	28, 1145,
	29, 1145,
	35, 1145,
	40, 1145,
	41, 1145,
	43, 1145,
	44, 1145,
	45, 1145,
	46, 1145,
	47, 1145,
	48, 1145,
	49, 1145,
	51, 1145,
	52, 1145,
	53, 1145,
	54, 1145,
	56, 1145,
	57, 1145,
	58, 1145,
	59, 1145,
	60, 1145,
	61, 1145,
	62, 1145,
	66, 1145,
	67, 1145,
	68, 1145,
	69, 1145,
	71, 1145,
	72, 1145,
	73, 1145,
	77, 1145,
	78, 1145,
	79, 1145,
	80, 1145,
	81, 1145,
	82, 1145,
	83, 1145,
	86, 1145,
	87, 1145,
	88, 1145,
	89, 1145,
	91, 1145,
	93, 1145,
	94, 1145,
	95, 1145,
	96, 1145,
	97, 1145,
	98, 1145,
	100, 1145,
	101, 1145,
	102, 1145,
	104, 1145,
	105, 1145,
	113, 1145,
	114, 1145,
	115, 1145,
	116, 1145,
	118, 1145,
	119, 1145,
	120, 1145,
	122, 1145,
	123, 1145,
	124, 1145,
	126, 1145,
	127, 1145,
	129, 1145,
	130, 1145,
	131, 1145,
	134, 1145,
	135, 1145,
	136, 1145,
	138, 1145,
	139, 1145,
	141, 1145,
	142, 1145,
	143, 1145,
	145, 1145,
	146, 1145,
	147, 1145,
	148, 1145,
	149, 1145,
	150, 1145,
	151, 1145,
	152, 1145,
	153, 1145,
	154, 1145,
	155, 1145,
	156, 1145,
	157, 1145,
	158, 1145,
	159, 1145,
	161, 1145,
	167, 1145,
	168, 1145,
	169, 1145,
	170, 1145,
	174, 1145,
	176, 1145,
	180, 1145,
	181, 1145,
	182, 1145,
	183, 1145,
	184, 1145,
	185, 1145,
	186, 1145,
	187, 1145,
	188, 1145,
	189, 1145,
	190, 1145,
	191, 1145,
	193, 1145,
	194, 1145,
	196, 1145,
	197, 1145,
	199, 1145,
	200, 1145,
	201, 1145,
	202, 1145,
	203, 1145,
	204, 1145,
	205, 1145,
	206, 1145,
	207, 1145,
	209, 1145,
	210, 1145,
	212, 1145,
	213, 1145,
	214, 1145,
	215, 1145,
	219, 1145,
	220, 1145,
	221, 1145,
	222, 1145,
	225, 1145,
	226, 1145,
	227, 1145,
	229, 1145,
	231, 1145,
	232, 1145,
	234, 1145,
	236, 1145,
	237, 1145,
	238, 1145,
	240, 1145,
	244, 1145,
	245, 1145,
	246, 1145,
	247, 1145,
	248, 1145,
	249, 1145,
	251, 1145,
	252, 1145,
	253, 1145,
	255, 1145,
	256, 1145,
	258, 1145,
	259, 1145,
	262, 1145,
	266, 1145,
	267, 1145,
	270, 1145,
	271, 1145,
	272, 1145,
	273, 1145,
	275, 1145,
	276, 1145,
	277, 1145,
	278, 1145,
	279, 1145,
	280, 1145,
	281, 1145,
	282, 1145,
	283, 1145,
	284, 1145,
	285, 1145,
	286, 1145,
	287, 1145,
	288, 1145,
	289, 1145,
	290, 1145,
	291, 1145,
	292, 1145,
	293, 1145,
	294, 1145,
	295, 1145,
	297, 1145,
	299, 1145,
	300, 1145,
	301, 1145,
	302, 1145,
	303, 1145,
	304, 1145,
	305, 1145,
	306, 1145,
	307, 1145,
	308, 1145,
	309, 1145,
	310, 1145,
	312, 1145,
	314, 1145,
	316, 1145,
	317, 1145,
	319, 1145,
	320, 1145,
	321, 1145,
	322, 1145,
	323, 1145,
	326, 1145,
	330, 1145,
	331, 1145,
	332, 1145,
	335, 1145,
	336, 1145,
	337, 1145,
	339, 1145,
	341, 1145,
	342, 1145,
	343, 1145,
	344, 1145,
	345, 1145,
	346, 1145,
	347, 1145,
	348, 1145,
	349, 1145,
	350, 1145,
	351, 1145,
	352, 1145,
	354, 1145,
	355, 1145,
	356, 1145,
	357, 1145,
	358, 1145,
	359, 1145,
	360, 1145,
	361, 1145,
	362, 1145,
	363, 1145,
	364, 1145,
	365, 1145,
	366, 1145,
	367, 1145,
	368, 1145,
	370, 1145,
	372, 1145,
	373, 1145,
	374, 1145,
	375, 1145,
	376, 1145,
	377, 1145,
	378, 1145,
	379, 1145,
	380, 1145,
	381, 1145,
	382, 1145,
	384, 1145,
	390, 1145,
	392, 1145,
	393, 1145,
	394, 1145,
	395, 1145,
	396, 1145,
	397, 1145,
	398, 1145,
	399, 1145,
	401, 1145,
	402, 1145,
	403, 1145,
	405, 1145,
	406, 1145,
	407, 1145,
	408, 1145,
	409, 1145,
	410, 1145,
	412, 1145,
	413, 1145,
	414, 1145,
	415, 1145,
	416, 1145,
	417, 1145,
	418, 1145,
	419, 1145,
	420, 1145,
	421, 1145,
	422, 1145,
	424, 1145,
	425, 1145,
	426, 1145,
	427, 1145,
	428, 1145,
	429, 1145,
	431, 1145,
	432, 1145,
	433, 1145,
	434, 1145,
	435, 1145,
	437, 1145,
	438, 1145,
	439, 1145,
	440, 1145,
	441, 1145,
	442, 1145,
	443, 1145,
	445, 1145,
	447, 1145,
	448, 1145,
	449, 1145,
	450, 1145,
	451, 1145,
	452, 1145,
	453, 1145,
	454, 1145,
	455, 1145,
	456, 1145,
	457, 1145,
	458, 1145,
	459, 1145,
	461, 1145,
	462, 1145,
	464, 1145,
	466, 1145,
	467, 1145,
	468, 1145,
	469, 1145,
	470, 1145,
	471, 1145,
	472, 1145,
	473, 1145,
	475, 1145,
	476, 1145,
	477, 1145,
	478, 1145,
	479, 1145,
	481, 1145,
	483, 1145,
	484, 1145,
	485, 1145,
	486, 1145,
	487, 1145,
	488, 1145,
	490, 1145,
	491, 1145,
	492, 1145,
	493, 1145,
	495, 1145,
	496, 1145,
	499, 1145,
	500, 1145,
	501, 1145,
	502, 1145,
	503, 1145,
	504, 1145,
	505, 1145,
	507, 1145,
	510, 1145,
	511, 1145,
	512, 1145,
	513, 1145,
	514, 1145,
	515, 1145,
	517, 1145,
	518, 1145,
	519, 1145,
	520, 1145,
	525, 1145,
	526, 1145,
	527, 1145,
	528, 1145,
	529, 1145,
	530, 1145,
	-2, 0,
	-1, 876,
	374, 778,
	429, 778,
	485, 778,
	-2, 0,
	-1, 877,
	374, 777,
	429, 777,
	485, 777,
	-2, 719,
	-1, 881,
	1, 822,
	553, 822,
	555, 822,
	557, 822,
	-2, 0,
	-1, 882,
	1, 754,
	553, 754,
	555, 754,
	557, 754,
	-2, 0,
	-1, 883,
	1, 756,
	553, 756,
	555, 756,
	557, 756,
	-2, 0,
	-1, 884,
	1, 865,
	175, 865,
	553, 865,
	555, 865,
	557, 865,
	-2, 0,
	-1, 892,
	1, 781,
	553, 781,
	555, 781,
	557, 781,
	-2, 0,
	-1, 898,
	1, 822,
	553, 822,
	555, 822,
	557, 822,
	-2, 0,
	-1, 899,
	1, 824,
	553, 824,
	555, 824,
	557, 824,
	-2, 0,
	-1, 900,
	1, 827,
	553, 827,
	555, 827,
	557, 827,
	-2, 0,
	-1, 906,
	1, 844,
	553, 844,
	555, 844,
	557, 844,
	-2, 0,
	-1, 907,
	1, 846,
	553, 846,
	555, 846,
	557, 846,
	-2, 0,
	-1, 956,
	162, 1356,
	175, 1356,
	261, 1356,
	324, 1356,
	-2, 1294,
	-1, 971,
	162, 1355,
	175, 1355,
	261, 1355,
	324, 1355,
	-2, 1291,
	-1, 997,
	556, 2030,
	-2, 627,
	-1, 1025,
	5, 2022,
	554, 2020,
	-2, 2011,
	-1, 1033,
	5, 2043,
	554, 2040,
	-2, 2031,
	-1, 1034,
	5, 2044,
	554, 2041,
	-2, 2032,
	-1, 1042,
	556, 2028,
	-2, 2010,
	-1, 1043,
	554, 2428,
	-2, 2029,
	-1, 1066,
	554, 2427,
	-2, 2045,
	-1, 1067,
	5, 1549,
	-2, 2398,
	-1, 1068,
	5, 1550,
	-2, 2399,
	-1, 1069,
	5, 1551,
	-2, 2413,
	-1, 1070,
	5, 1552,
	-2, 2377,
	-1, 1071,
	5, 1553,
	-2, 2411,
	-1, 1072,
	5, 1561,
	-2, 2390,
	-1, 1073,
	5, 1548,
	-2, 2386,
	-1, 1074,
	5, 1548,
	-2, 2385,
	-1, 1075,
	5, 1548,
	-2, 2404,
	-1, 1076,
	5, 1559,
	-2, 2379,
	-1, 1077,
	5, 1564,
	-2, 2378,
	-1, 1078,
	5, 1566,
	-2, 2423,
	-1, 1081,
	5, 1588,
	-2, 2416,
	-1, 1082,
	5, 1580,
	-2, 2417,
	-1, 1083,
	5, 1588,
	-2, 2418,
	-1, 1084,
	5, 1584,
	-2, 2419,
	-1, 1085,
	5, 1534,
	-2, 2391,
	-1, 1086,
	5, 1535,
	-2, 2392,
	-1, 1087,
	5, 1536,
	-2, 2380,
	-1, 1115,
	5, 1571,
	-2, 2424,
	-1, 1116,
	5, 1572,
	-2, 2414,
	-1, 1117,
	5, 1573,
	518, 1573,
	-2, 2381,
	-1, 1118,
	5, 1574,
	518, 1574,
	-2, 2382,
	-1, 1155,
	554, 2040,
	-2, 2031,
	-1, 1156,
	554, 2041,
	-2, 2032,
	-1, 1186,
	178, 2346,
	480, 2346,
	537, 2346,
	556, 2346,
	-2, 0,
	-1, 1189,
	1, 605,
	557, 605,
	-2, 1228,
	-1, 1317,
	392, 2006,
	431, 2006,
	547, 2006,
	-2, 2003,
	-1, 1329,
	558, 2006,
	-2, 2007,
	-1, 1336,
	1, 1121,
	553, 1121,
	555, 1121,
	557, 1121,
	-2, 1343,
	-1, 1390,
	380, 929,
	517, 929,
	-2, 339,
	-1, 1409,
	42, 2034,
	-2, 2004,
	-1, 1414,
	1, 1121,
	553, 1121,
	555, 1121,
	557, 1121,
	-2, 1343,
	-1, 1421,
	4, 1145,
	21, 1145,
	22, 1145,
	23, 1145,
	24, 1145,
	25, 1145,
	26, 1145,
	28, 1145,
	29, 1145,
	35, 1145,
	40, 1145,
	41, 1145,
	43, 1145,
	44, 1145,
	45, 1145,
	46, 1145,
	47, 1145,
	48, 1145,
	49, 1145,
	51, 1145,
	52, 1145,
	53, 1145,
	54, 1145,
	56, 1145,
	57, 1145,
	58, 1145,
	59, 1145,
	60, 1145,
	61, 1145,
	62, 1145,
	66, 1145,
	67, 1145,
	68, 1145,
	69, 1145,
	71, 1145,
	72, 1145,
	73, 1145,
	77, 1145,
	78, 1145,
	79, 1145,
	80, 1145,
	81, 1145,
	82, 1145,
	83, 1145,
	86, 1145,
	87, 1145,
	88, 1145,
	89, 1145,
	91, 1145,
	93, 1145,
	94, 1145,
	95, 1145,
	96, 1145,
	97, 1145,
	98, 1145,
	100, 1145,
	101, 1145,
	102, 1145,
	104, 1145,
	105, 1145,
	113, 1145,
	114, 1145,
	115, 1145,
	116, 1145,
	118, 1145,
	119, 1145,
	120, 1145,
	122, 1145,
	123, 1145,
	124, 1145,
	126, 1145,
	127, 1145,
	129, 1145,
	130, 1145,
	131, 1145,
	134, 1145,
	135, 1145,
	136, 1145,
	138, 1145,
	139, 1145,
	141, 1145,
	142, 1145,
	143, 1145,
	145, 1145,
	146, 1145,
	147, 1145,
	148, 1145,
	149, 1145,
	150, 1145,
	151, 1145,
	152, 1145,
	153, 1145,
	154, 1145,
	155, 1145,
	156, 1145,
	157, 1145,
	158, 1145,
	159, 1145,
	167, 1145,
	168, 1145,
	169, 1145,
	170, 1145,
	174, 1145,
	176, 1145,
	180, 1145,
	181, 1145,
	182, 1145,
	183, 1145,
	184, 1145,
	185, 1145,
	186, 1145,
	187, 1145,
	188, 1145,
	189, 1145,
	190, 1145,
	191, 1145,
	193, 1145,
	194, 1145,
	196, 1145,
	197, 1145,
	199, 1145,
	200, 1145,
	201, 1145,
	202, 1145,
	203, 1145,
	204, 1145,
	205, 1145,
	206, 1145,
	207, 1145,
	209, 1145,
	210, 1145,
	212, 1145,
	213, 1145,
	214, 1145,
	215, 1145,
	220, 1145,
	221, 1145,
	222, 1145,
	225, 1145,
	226, 1145,
	227, 1145,
	229, 1145,
	231, 1145,
	232, 1145,
	234, 1145,
	236, 1145,
	237, 1145,
	238, 1145,
	240, 1145,
	244, 1145,
	245, 1145,
	246, 1145,
	247, 1145,
	248, 1145,
	249, 1145,
	251, 1145,
	252, 1145,
	253, 1145,
	255, 1145,
	256, 1145,
	258, 1145,
	259, 1145,
	262, 1145,
	266, 1145,
	267, 1145,
	270, 1145,
	271, 1145,
	272, 1145,
	273, 1145,
	275, 1145,
	276, 1145,
	277, 1145,
	278, 1145,
	279, 1145,
	280, 1145,
	281, 1145,
	282, 1145,
	283, 1145,
	284, 1145,
	285, 1145,
	286, 1145,
	287, 1145,
	288, 1145,
	289, 1145,
	290, 1145,
	291, 1145,
	292, 1145,
	293, 1145,
	294, 1145,
	295, 1145,
	297, 1145,
	299, 1145,
	300, 1145,
	301, 1145,
	302, 1145,
	303, 1145,
	304, 1145,
	305, 1145,
	306, 1145,
	307, 1145,
	308, 1145,
	309, 1145,
	310, 1145,
	312, 1145,
	316, 1145,
	317, 1145,
	319, 1145,
	320, 1145,
	321, 1145,
	322, 1145,
	323, 1145,
	326, 1145,
	328, 1145,
	330, 1145,
	331, 1145,
	332, 1145,
	335, 1145,
	336, 1145,
	337, 1145,
	339, 1145,
	341, 1145,
	342, 1145,
	343, 1145,
	344, 1145,
	345, 1145,
	346, 1145,
	347, 1145,
	348, 1145,
	349, 1145,
	350, 1145,
	351, 1145,
	352, 1145,
	354, 1145,
	355, 1145,
	356, 1145,
	357, 1145,
	358, 1145,
	359, 1145,
	360, 1145,
	361, 1145,
	362, 1145,
	363, 1145,
	364, 1145,
	365, 1145,
	366, 1145,
	367, 1145,
	368, 1145,
	370, 1145,
	372, 1145,
	373, 1145,
	374, 1145,
	375, 1145,
	376, 1145,
	377, 1145,
	378, 1145,
	379, 1145,
	380, 1145,
	381, 1145,
	382, 1145,
	384, 1145,
	390, 1145,
	392, 1145,
	393, 1145,
	394, 1145,
	395, 1145,
	396, 1145,
	397, 1145,
	398, 1145,
	399, 1145,
	401, 1145,
	402, 1145,
	403, 1145,
	405, 1145,
	406, 1145,
	407, 1145,
	408, 1145,
	409, 1145,
	410, 1145,
	412, 1145,
	413, 1145,
	414, 1145,
	415, 1145,
	416, 1145,
	417, 1145,
	418, 1145,
	419, 1145,
	420, 1145,
	421, 1145,
	422, 1145,
	424, 1145,
	425, 1145,
	426, 1145,
	427, 1145,
	428, 1145,
	429, 1145,
	431, 1145,
	432, 1145,
	433, 1145,
	434, 1145,
	435, 1145,
	437, 1145,
	438, 1145,
	439, 1145,
	440, 1145,
	441, 1145,
	442, 1145,
	443, 1145,
	445, 1145,
	447, 1145,
	448, 1145,
	449, 1145,
	450, 1145,
	451, 1145,
	452, 1145,
	453, 1145,
	454, 1145,
	455, 1145,
	456, 1145,
	457, 1145,
	458, 1145,
	459, 1145,
	461, 1145,
	462, 1145,
	464, 1145,
	466, 1145,
	467, 1145,
	468, 1145,
	469, 1145,
	470, 1145,
	471, 1145,
	472, 1145,
	473, 1145,
	475, 1145,
	476, 1145,
	477, 1145,
	478, 1145,
	479, 1145,
	481, 1145,
	483, 1145,
	484, 1145,
	485, 1145,
	486, 1145,
	487, 1145,
	488, 1145,
	490, 1145,
	491, 1145,
	492, 1145,
	493, 1145,
	495, 1145,
	496, 1145,
	499, 1145,
	500, 1145,
	501, 1145,
	502, 1145,
	503, 1145,
	504, 1145,
	505, 1145,
	507, 1145,
	510, 1145,
	511, 1145,
	512, 1145,
	513, 1145,
	514, 1145,
	515, 1145,
	517, 1145,
	518, 1145,
	519, 1145,
	520, 1145,
	525, 1145,
	526, 1145,
	527, 1145,
	528, 1145,
	529, 1145,
	530, 1145,
	-2, 0,
	-1, 1495,
	1, 478,
	553, 478,
	555, 478,
	557, 478,
	-2, 1314,
	-1, 1498,
	4, 2422,
	11, 2422,
	12, 2422,
	14, 2422,
	15, 2422,
	16, 2422,
	17, 2422,
	18, 2422,
	19, 2422,
	21, 2422,
	22, 2422,
	23, 2422,
	24, 2422,
	25, 2422,
	26, 2422,
	28, 2422,
	29, 2422,
	32, 2422,
	33, 2422,
	35, 2422,
	37, 2422,
	40, 2422,
	41, 2422,
	43, 2422,
	44, 2422,
	45, 2422,
	46, 2422,
	47, 2422,
	48, 2422,
	49, 2422,
	51, 2422,
	52, 2422,
	53, 2422,
	54, 2422,
	56, 2422,
	57, 2422,
	58, 2422,
	59, 2422,
	60, 2422,
	61, 2422,
	62, 2422,
	66, 2422,
	67, 2422,
	68, 2422,
	69, 2422,
	71, 2422,
	72, 2422,
	73, 2422,
	74, 2422,
	77, 2422,
	78, 2422,
	79, 2422,
	80, 2422,
	81, 2422,
	82, 2422,
	83, 2422,
	84, 2422,
	86, 2422,
	87, 2422,
	88, 2422,
	89, 2422,
	91, 2422,
	92, 2422,
	93, 2422,
	94, 2422,
	95, 2422,
	96, 2422,
	97, 2422,
	98, 2422,
	100, 2422,
	101, 2422,
	102, 2422,
	103, 2422,
	104, 2422,
	105, 2422,
	113, 2422,
	114, 2422,
	115, 2422,
	116, 2422,
	118, 2422,
	119, 2422,
	120, 2422,
	122, 2422,
	123, 2422,
	124, 2422,
	126, 2422,
	127, 2422,
	129, 2422,
	130, 2422,
	131, 2422,
	134, 2422,
	135, 2422,
	136, 2422,
	138, 2422,
	139, 2422,
	141, 2422,
	142, 2422,
	143, 2422,
	145, 2422,
	146, 2422,
	147, 2422,
	148, 2422,
	149, 2422,
	150, 2422,
	151, 2422,
	152, 2422,
	153, 2422,
	154, 2422,
	155, 2422,
	156, 2422,
	157, 2422,
	158, 2422,
	159, 2422,
	163, 2422,
	164, 2422,
	165, 2422,
	166, 2422,
	167, 2422,
	168, 2422,
	169, 2422,
	170, 2422,
	173, 2422,
	174, 2422,
	176, 2422,
	179, 2422,
	180, 2422,
	181, 2422,
	182, 2422,
	183, 2422,
	184, 2422,
	185, 2422,
	186, 2422,
	187, 2422,
	188, 2422,
	189, 2422,
	190, 2422,
	191, 2422,
	193, 2422,
	194, 2422,
	196, 2422,
	197, 2422,
	199, 2422,
	200, 2422,
	201, 2422,
	202, 2422,
	203, 2422,
	204, 2422,
	205, 2422,
	206, 2422,
	207, 2422,
	208, 2422,
	209, 2422,
	210, 2422,
	211, 2422,
	212, 2422,
	213, 2422,
	214, 2422,
	215, 2422,
	217, 2422,
	218, 2422,
	220, 2422,
	221, 2422,
	222, 2422,
	224, 2422,
	225, 2422,
	226, 2422,
	227, 2422,
	229, 2422,
	231, 2422,
	232, 2422,
	233, 2422,
	234, 2422,
	235, 2422,
	236, 2422,
	237, 2422,
	238, 2422,
	239, 2422,
	240, 2422,
	242, 2422,
	243, 2422,
	244, 2422,
	245, 2422,
	246, 2422,
	247, 2422,
	248, 2422,
	249, 2422,
	251, 2422,
	252, 2422,
	253, 2422,
	255, 2422,
	256, 2422,
	257, 2422,
	258, 2422,
	259, 2422,
	260, 2422,
	262, 2422,
	266, 2422,
	267, 2422,
	270, 2422,
	271, 2422,
	272, 2422,
	273, 2422,
	274, 2422,
	275, 2422,
	276, 2422,
	277, 2422,
	278, 2422,
	279, 2422,
	280, 2422,
	281, 2422,
	282, 2422,
	283, 2422,
	284, 2422,
	285, 2422,
	286, 2422,
	287, 2422,
	288, 2422,
	289, 2422,
	290, 2422,
	291, 2422,
	292, 2422,
	293, 2422,
	294, 2422,
	295, 2422,
	297, 2422,
	298, 2422,
	299, 2422,
	300, 2422,
	301, 2422,
	302, 2422,
	303, 2422,
	304, 2422,
	305, 2422,
	306, 2422,
	307, 2422,
	308, 2422,
	309, 2422,
	310, 2422,
	312, 2422,
	315, 2422,
	316, 2422,
	317, 2422,
	319, 2422,
	320, 2422,
	321, 2422,
	322, 2422,
	323, 2422,
	326, 2422,
	330, 2422,
	331, 2422,
	332, 2422,
	333, 2422,
	335, 2422,
	336, 2422,
	337, 2422,
	339, 2422,
	341, 2422,
	342, 2422,
	343, 2422,
	344, 2422,
	345, 2422,
	346, 2422,
	347, 2422,
	348, 2422,
	349, 2422,
	350, 2422,
	351, 2422,
	352, 2422,
	354, 2422,
	355, 2422,
	356, 2422,
	357, 2422,
	358, 2422,
	359, 2422,
	360, 2422,
	361, 2422,
	362, 2422,
	363, 2422,
	364, 2422,
	365, 2422,
	366, 2422,
	367, 2422,
	368, 2422,
	370, 2422,
	372, 2422,
	373, 2422,
	374, 2422,
	375, 2422,
	376, 2422,
	377, 2422,
	378, 2422,
	379, 2422,
	380, 2422,
	381, 2422,
	382, 2422,
	384, 2422,
	390, 2422,
	391, 2422,
	392, 2422,
	393, 2422,
	394, 2422,
	395, 2422,
	396, 2422,
	397, 2422,
	398, 2422,
	399, 2422,
	401, 2422,
	402, 2422,
	403, 2422,
	404, 2422,
	405, 2422,
	406, 2422,
	407, 2422,
	408, 2422,
	409, 2422,
	410, 2422,
	411, 2422,
	412, 2422,
	413, 2422,
	414, 2422,
	415, 2422,
	416, 2422,
	417, 2422,
	418, 2422,
	419, 2422,
	420, 2422,
	421, 2422,
	422, 2422,
	424, 2422,
	425, 2422,
	426, 2422,
	427, 2422,
	428, 2422,
	429, 2422,
	431, 2422,
	432, 2422,
	433, 2422,
	434, 2422,
	435, 2422,
	436, 2422,
	437, 2422,
	438, 2422,
	439, 2422,
	440, 2422,
	441, 2422,
	442, 2422,
	443, 2422,
	445, 2422,
	447, 2422,
	448, 2422,
	449, 2422,
	450, 2422,
	451, 2422,
	452, 2422,
	453, 2422,
	454, 2422,
	455, 2422,
	456, 2422,
	457, 2422,
	458, 2422,
	459, 2422,
	461, 2422,
	462, 2422,
	464, 2422,
	466, 2422,
	467, 2422,
	468, 2422,
	469, 2422,
	470, 2422,
	471, 2422,
	472, 2422,
	473, 2422,
	475, 2422,
	476, 2422,
	477, 2422,
	478, 2422,
	479, 2422,
	481, 2422,
	483, 2422,
	484, 2422,
	485, 2422,
	486, 2422,
	487, 2422,
	488, 2422,
	490, 2422,
	491, 2422,
	492, 2422,
	493, 2422,
	495, 2422,
	496, 2422,
	499, 2422,
	500, 2422,
	501, 2422,
	502, 2422,
	503, 2422,
	504, 2422,
	505, 2422,
	507, 2422,
	510, 2422,
	511, 2422,
	512, 2422,
	513, 2422,
	514, 2422,
	515, 2422,
	517, 2422,
	518, 2422,
	519, 2422,
	520, 2422,
	525, 2422,
	526, 2422,
	527, 2422,
	528, 2422,
	529, 2422,
	530, 2422,
	531, 2422,
	532, 2422,
	535, 2422,
	536, 2422,
	537, 2422,
	538, 2422,
	539, 2422,
	540, 2422,
	542, 2422,
	543, 2422,
	544, 2422,
	545, 2422,
	546, 2422,
	547, 2422,
	548, 2422,
	549, 2422,
	550, 2422,
	552, 2422,
	555, 2422,
	556, 2422,
	558, 2422,
	559, 2422,
	-2, 0,
	-1, 1503,
	178, 2312,
	480, 2312,
	537, 2312,
	556, 2312,
	-2, 0,
	-1, 1552,
	374, 778,
	429, 778,
	485, 778,
	-2, 0,
	-1, 1578,
	1, 773,
	553, 773,
	555, 773,
	557, 773,
	-2, 0,
	-1, 1579,
	1, 809,
	553, 809,
	555, 809,
	557, 809,
	-2, 0,
	-1, 1580,
	1, 817,
	553, 817,
	555, 817,
	557, 817,
	-2, 0,
	-1, 1581,
	1, 780,
	553, 780,
	555, 780,
	557, 780,
	-2, 0,
	-1, 1583,
	1, 784,
	553, 784,
	555, 784,
	557, 784,
	-2, 0,
	-1, 1589,
	1, 791,
	553, 791,
	555, 791,
	557, 791,
	-2, 0,
	-1, 1617,
	1, 2368,
	553, 2368,
	555, 2368,
	556, 2368,
	557, 2368,
	-2, 842,
	-1, 1618,
	1, 2309,
	553, 2309,
	555, 2309,
	556, 2309,
	557, 2309,
	-2, 843,
	-1, 1633,
	1, 1223,
	557, 1223,
	-2, 1228,
	-1, 1636,
	162, 1355,
	175, 1355,
	261, 1355,
	324, 1355,
	-2, 1295,
	-1, 1730,
	144, 1316,
	162, 1316,
	175, 1316,
	228, 1316,
	261, 1316,
	324, 1316,
	334, 1316,
	497, 1316,
	-2, 1749,
	-1, 1790,
	555, 1899,
	-2, 0,
	-1, 1825,
	144, 1316,
	162, 1316,
	175, 1316,
	228, 1316,
	261, 1316,
	324, 1316,
	334, 1316,
	497, 1316,
	-2, 1436,
	-1, 1874,
	554, 1576,
	-2, 1564,
	-1, 1911,
	1, 607,
	557, 607,
	-2, 1228,
	-1, 2023,
	211, 217,
	-2, 2039,
	-1, 2024,
	211, 218,
	-2, 260,
	-1, 2152,
	1, 775,
	553, 775,
	555, 775,
	557, 775,
	-2, 0,
	-1, 2153,
	1, 811,
	553, 811,
	555, 811,
	557, 811,
	-2, 0,
	-1, 2154,
	1, 819,
	553, 819,
	555, 819,
	557, 819,
	-2, 0,
	-1, 2185,
	1, 793,
	553, 793,
	555, 793,
	557, 793,
	-2, 0,
	-1, 2231,
	409, 1382,
	410, 1382,
	-2, 1609,
	-1, 2262,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1629,
	-1, 2263,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1630,
	-1, 2264,
	92, 0,
	242, 0,
	243, 0,
	539, 0,
	540, 0,
	-2, 1631,
	-1, 2265,
	92, 0,
	242, 0,
	243, 0,
	539, 0,
	540, 0,
	-2, 1632,
	-1, 2266,
	92, 0,
	242, 0,
	243, 0,
	539, 0,
	540, 0,
	-2, 1633,
	-1, 2267,
	92, 0,
	242, 0,
	243, 0,
	539, 0,
	540, 0,
	-2, 1634,
	-1, 2268,
	92, 0,
	242, 0,
	243, 0,
	539, 0,
	540, 0,
	-2, 1635,
	-1, 2269,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1636,
	-1, 2281,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1648,
	-1, 2282,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1649,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1650,
	-1, 2286,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1655,
	-1, 2292,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1659,
	-1, 2294,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1667,
	-1, 2295,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1668,
	-1, 2296,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1669,
	-1, 2297,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1670,
	-1, 2433,
	5, 2043,
	178, 1910,
	554, 2040,
	-2, 2031,
	-1, 2434,
	178, 1911,
	-2, 2373,
	-1, 2435,
	178, 1912,
	-2, 2214,
	-1, 2436,
	178, 1913,
	-2, 2108,
	-1, 2437,
	178, 1914,
	-2, 2158,
	-1, 2438,
	178, 1915,
	-2, 2199,
	-1, 2439,
	178, 1916,
	-2, 2307,
	-1, 2440,
	178, 1917,
	-2, 1732,
	-1, 2509,
	1, 1437,
	2, 1437,
	103, 1437,
	144, 1437,
	162, 1437,
	175, 1437,
	179, 1437,
	195, 1437,
	198, 1437,
	224, 1437,
	228, 1437,
	239, 1437,
	257, 1437,
	261, 1437,
	298, 1437,
	324, 1437,
	328, 1437,
	334, 1437,
	400, 1437,
	404, 1437,
	497, 1437,
	508, 1437,
	522, 1437,
	523, 1437,
	524, 1437,
	533, 1437,
	553, 1437,
	555, 1437,
	557, 1437,
	559, 1437,
	-2, 1436,
	-1, 2522,
	554, 2012,
	-2, 2026,
	-1, 2524,
	1, 276,
	-2, 1343,
	-1, 2549,
	554, 1575,
	-2, 1565,
	-1, 2686,
	1, 1121,
	553, 1121,
	555, 1121,
	557, 1121,
	-2, 1343,
	-1, 2864,
	329, 1385,
	-2, 2412,
	-1, 2865,
	329, 1386,
	-2, 2293,
	-1, 2869,
	409, 1976,
	410, 1976,
	-2, 1730,
	-1, 2870,
	409, 1980,
	410, 1980,
	-2, 1731,
	-1, 2871,
	409, 1977,
	410, 1977,
	-2, 1730,
	-1, 2872,
	409, 1981,
	410, 1981,
	-2, 1731,
	-1, 2885,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1657,
	-1, 2886,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1661,
	-1, 2892,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1663,
	-1, 3120,
	1, 604,
	553, 604,
	555, 604,
	557, 604,
	-2, 1228,
	-1, 3252,
	1, 1121,
	553, 1121,
	555, 1121,
	557, 1121,
	-2, 1343,
	-1, 3362,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1665,
	-1, 3369,
	233, 0,
	235, 0,
	315, 0,
	-2, 1684,
	-1, 3436,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1713,
	-1, 3437,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1714,
	-1, 3438,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1715,
	-1, 3442,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1719,
	-1, 3443,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1720,
	-1, 3444,
	14, 0,
	15, 0,
	16, 0,
	535, 0,
	536, 0,
	537, 0,
	-2, 1721,
	-1, 3490,
	554, 2013,
	-2, 2027,
	-1, 3628,
	556, 2529,
	-2, 1273,
	-1, 3686,
	233, 0,
	235, 0,
	315, 0,
	-2, 1685,
	-1, 3689,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1688,
	-1, 3690,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1690,
	-1, 3902,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1689,
	-1, 3903,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 1691,
	-1, 3914,
	233, 0,
	-2, 1722,
	-1, 4064,
	233, 0,
	-2, 1723,
	-1, 4211,
	48, 0,
	208, 0,
	260, 0,
	436, 0,
	531, 0,
	538, 0,
	-2, 2376,
}

const sqlPrivate = 57344

const sqlLast = 111185

var sqlAct = [...]int{

	246, 4086, 3237, 2751, 2782, 3043, 4107, 4221, 4320, 3826,
	4186, 2020, 3946, 2585, 3992, 3236, 3669, 4210, 4167, 4152,
	4222, 3999, 4223, 3522, 1159, 4170, 4269, 3934, 4068, 3401,
	4209, 3859, 3854, 3808, 3891, 981, 2241, 3949, 1486, 3840,
	3138, 3620, 4008, 3269, 3561, 3756, 3262, 4031, 2130, 2105,
	2121, 1339, 3864, 1481, 2309, 3596, 3579, 3232, 3581, 1964,
	3222, 1356, 2249, 1861, 1645, 993, 3354, 3264, 675, 1319,
	710, 3523, 2242, 2649, 3919, 1518, 972, 2804, 1221, 2878,
	2791, 3319, 1831, 2793, 3317, 2722, 2740, 3086, 1314, 2465,
	1485, 1148, 2709, 3492, 710, 2718, 3066, 3725, 3668, 2128,
	3058, 3026, 3049, 2784, 3047, 1974, 2092, 2752, 2587, 2502,
	2015, 2014, 3461, 1025, 2246, 4069, 3025, 1800, 2801, 2351,
	1738, 2322, 2862, 2624, 2501, 1322, 2800, 2790, 1407, 1776,
	2735, 705, 2663, 809, 1517, 2103, 2000, 2737, 2009, 240,
	1029, 1993, 3993, 1461, 1205, 2623, 2723, 3093, 239, 1947,
	2342, 1950, 2483, 980, 165, 1801, 2306, 1633, 1937, 2230,
	2211, 4, 2504, 1139, 3234, 2213, 1496, 1482, 1820, 2745,
	1412, 1817, 2534, 2054, 1472, 641, 2533, 1191, 1034, 711,
	2576, 1142, 2345, 2794, 712, 2491, 1771, 1121, 2395, 2462,
	1810, 2473, 2323, 1032, 2429, 1723, 174, 1646, 1647, 1862,
	2212, 657, 707, 2214, 1589, 1560, 2053, 1138, 669, 716,
	627, 175, 1494, 2078, 649, 1156, 1436, 1341, 719, 755,
	101, 782, 2235, 1351, 1963, 1010, 644, 42, 652, 41,
	39, 2066, 30, 716, 28, 26, 1119, 870, 2913, 1632,
	165, 1144, 719, 1652, 1362, 890, 2909, 3475, 803, 3476,
	1660, 1661, 2094, 1693, 1694, 1695, 1703, 1704, 1705, 2094,
	3045, 2094, 2094, 4385, 2094, 4375, 4365, 2482, 976, 3298,
	2482, 1696, 1691, 4364, 4337, 976, 4335, 2482, 3772, 1663,
	3772, 4331, 4251, 3279, 4245, 2028, 4252, 1709, 2482, 37,
	4243, 2748, 3116, 3298, 2482, 1031, 824, 3278, 4240, 4237,
	1660, 1661, 4241, 4238, 4232, 4207, 4206, 4205, 2028, 2028,
	2028, 2114, 4200, 1662, 4199, 4195, 2114, 1136, 2114, 3772,
	4193, 4165, 1691, 1682, 3772, 3772, 4146, 3115, 1154, 1663,
	2540, 1679, 4139, 4138, 4133, 4132, 2482, 2482, 3772, 3772,
	4126, 2877, 4100, 4066, 2028, 1355, 3818, 2540, 1582, 4048,
	4045, 4042, 4001, 3657, 2028, 3772, 4002, 3966, 3101, 2922,
	3965, 2028, 957, 1662, 2028, 2923, 2536, 3957, 3956, 1122,
	1122, 2028, 3772, 2998, 2999, 3925, 3904, 956, 3883, 2028,
	2540, 3872, 2114, 3803, 3791, 3298, 3771, 2482, 2482, 3688,
	3772, 2998, 2999, 2540, 3016, 3017, 3018, 977, 1170, 1200,
	2482, 2028, 1685, 1686, 1687, 1688, 3636, 4147, 1151, 2448,
	3314, 966, 1668, 4061, 971, 1200, 1660, 1661, 2645, 1693,
	1694, 1695, 1703, 1704, 1705, 2129, 3630, 3594, 3485, 3483,
	3314, 3595, 3486, 3484, 2475, 3468, 3385, 2112, 1691, 2482,
	2028, 3465, 3381, 4049, 1123, 1663, 2482, 1700, 3313, 2114,
	1710, 3305, 3314, 1709, 3042, 3306, 1690, 1692, 2482, 3037,
	3465, 1175, 1668, 2482, 3013, 1660, 1661, 3036, 1125, 2989,
	1126, 2482, 1706, 2990, 1707, 2998, 2999, 1171, 2474, 1662,
	2963, 1677, 1678, 3853, 2964, 3818, 2955, 1691, 3792, 1682,
	2956, 2953, 86, 2482, 1663, 2482, 2028, 1679, 2924, 1698,
	2912, 212, 2482, 3657, 1660, 1661, 1690, 1692, 2807, 3306,
	1150, 2780, 2114, 1683, 2779, 2117, 2560, 2640, 2117, 2575,
	2482, 1364, 1660, 1661, 1968, 2539, 1691, 2531, 1662, 2540,
	2525, 2482, 2481, 1663, 2028, 3004, 2482, 2116, 1916, 2093,
	2715, 2117, 1526, 214, 2109, 2027, 2657, 2573, 3013, 1796,
	1350, 1663, 3552, 3004, 1708, 3357, 3335, 1818, 2003, 2518,
	3280, 2517, 1512, 1683, 1562, 2516, 2515, 1662, 1685, 1686,
	1687, 1688, 1697, 2514, 1127, 1124, 965, 1682, 1668, 3281,
	2378, 964, 2353, 963, 2348, 1662, 212, 212, 2095, 962,
	961, 213, 960, 212, 959, 2095, 2842, 2095, 2095, 1036,
	2095, 955, 206, 954, 953, 952, 951, 950, 949, 948,
	207, 947, 946, 1700, 945, 944, 1710, 943, 942, 941,
	940, 939, 1690, 1692, 921, 868, 867, 1668, 214, 214,
	1689, 866, 176, 865, 1363, 214, 3014, 3004, 864, 863,
	862, 861, 860, 859, 858, 857, 856, 1677, 1678, 1376,
	1684, 855, 854, 853, 3014, 852, 1685, 1686, 1687, 1688,
	851, 850, 1355, 849, 3278, 1698, 1668, 848, 2349, 847,
	846, 1690, 1692, 1171, 1034, 1701, 213, 213, 1034, 1683,
	845, 844, 843, 213, 1668, 842, 841, 206, 840, 839,
	838, 837, 827, 1224, 206, 207, 826, 1224, 822, 821,
	1684, 1344, 207, 815, 814, 773, 1530, 772, 2112, 1204,
	1690, 1692, 732, 1209, 731, 1364, 730, 176, 176, 1195,
	238, 2731, 722, 721, 2747, 1034, 720, 1034, 1683, 1034,
	689, 681, 680, 679, 1344, 1364, 663, 234, 3014, 233,
	232, 1516, 231, 230, 229, 228, 2350, 1325, 2347, 2768,
	227, 226, 1330, 225, 2364, 224, 2093, 1344, 2112, 2109,
	212, 2206, 223, 222, 1370, 221, 220, 1683, 219, 212,
	1699, 218, 138, 3015, 1674, 1675, 1681, 1702, 1680, 1676,
	217, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	1333, 3015, 216, 215, 3710, 2362, 1689, 1354, 3709, 3741,
	1344, 1034, 214, 3700, 1493, 3502, 1344, 1364, 3479, 3315,
	1344, 214, 1418, 1420, 3089, 2474, 1684, 2935, 1034, 2918,
	1034, 3866, 2696, 3040, 1344, 2544, 2523, 2508, 1189, 1821,
	1034, 1423, 1034, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	1779, 1701, 1171, 1779, 1945, 1405, 1778, 1844, 1749, 1778,
	213, 1375, 1659, 716, 1358, 1217, 1211, 1311, 1316, 213,
	3041, 206, 719, 1158, 4228, 1684, 1475, 1584, 1782, 207,
	206, 1777, 4052, 4208, 4114, 3015, 1344, 1184, 207, 979,
	4058, 4050, 3944, 2124, 1689, 3918, 1740, 3873, 2352, 3852,
	3748, 176, 1410, 1353, 1034, 3723, 3722, 1034, 1352, 3716,
	176, 2035, 3715, 2609, 1684, 3007, 3008, 3000, 3001, 3002,
	3003, 3005, 3006, 3714, 3707, 3010, 3011, 3012, 3706, 3704,
	2998, 2999, 3009, 3007, 3008, 3000, 3001, 3002, 3003, 3005,
	3006, 3699, 3696, 2998, 2999, 3599, 1699, 1466, 1469, 3695,
	1674, 1675, 1681, 1702, 1680, 1676, 3593, 1673, 1671, 1672,
	1664, 1665, 1666, 1667, 1669, 1670, 2733, 3506, 3505, 3504,
	165, 165, 2123, 212, 3489, 3456, 1369, 1531, 1499, 1501,
	1478, 3455, 3454, 3377, 1195, 3373, 3084, 1195, 3033, 1439,
	3024, 2997, 3309, 212, 1079, 2994, 2993, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 3550, 2346, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 214, 3009, 3007, 3008, 3000,
	3001, 3002, 3003, 3005, 3006, 1361, 3868, 1368, 1034, 1374,
	2553, 1740, 2991, 1497, 1034, 214, 977, 2998, 2999, 1741,
	2962, 1739, 1747, 1637, 2961, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 2960, 2957, 2954, 2934, 1135, 2917,
	2910, 2781, 2509, 213, 2335, 212, 1664, 1665, 1666, 1667,
	1669, 1670, 1659, 1511, 206, 1658, 2069, 2033, 4379, 4329,
	212, 212, 207, 213, 4328, 1525, 3600, 4261, 1660, 1661,
	4259, 4250, 3004, 1732, 206, 1160, 1631, 1737, 3403, 1660,
	1661, 1492, 207, 4106, 176, 3004, 4096, 214, 1729, 4093,
	4092, 3038, 4091, 4085, 1598, 4078, 4046, 1663, 1510, 1536,
	1515, 1691, 214, 214, 176, 4030, 4029, 2312, 1663, 4017,
	1524, 4014, 1529, 1553, 3962, 3940, 3916, 212, 3899, 1034,
	1034, 1034, 4070, 2377, 2732, 1034, 3898, 1585, 3880, 3879,
	3843, 1662, 1156, 3819, 1156, 213, 3740, 1798, 3721, 3658,
	3652, 3649, 1662, 3540, 3539, 3526, 206, 3525, 3471, 1224,
	213, 213, 212, 3600, 207, 3459, 2318, 1034, 1634, 214,
	710, 206, 206, 1642, 1879, 710, 1641, 957, 3368, 207,
	207, 1727, 1583, 3014, 1034, 212, 176, 3316, 1344, 3004,
	3299, 3255, 956, 3194, 3167, 1636, 2998, 2999, 3141, 3140,
	3109, 176, 176, 3107, 214, 1638, 1034, 2939, 3846, 3081,
	2938, 2933, 1224, 1781, 1852, 2901, 2708, 213, 1655, 1656,
	1785, 1784, 1847, 1783, 1807, 212, 1780, 214, 206, 1772,
	1770, 1848, 1858, 2551, 2550, 1195, 207, 1905, 977, 1914,
	1668, 1943, 3867, 1660, 1661, 2520, 1828, 1804, 1805, 2513,
	1908, 1668, 213, 2480, 2360, 1154, 1854, 1154, 176, 1660,
	1661, 1773, 1774, 206, 1843, 1691, 1799, 214, 1794, 1793,
	1792, 207, 1663, 1909, 1791, 213, 1790, 1851, 1789, 1788,
	1787, 1786, 1767, 1122, 1766, 1765, 206, 1764, 1663, 1763,
	3014, 1762, 1519, 176, 207, 1690, 1692, 1761, 1760, 165,
	212, 1759, 1758, 1757, 1850, 1756, 1662, 2363, 1762, 716,
	1755, 1819, 1754, 1829, 716, 213, 176, 3141, 719, 1753,
	3015, 1742, 1662, 719, 1728, 1826, 206, 1934, 1928, 1927,
	1726, 1721, 1936, 1938, 207, 1151, 1183, 1151, 2125, 1173,
	1166, 3744, 214, 3692, 1911, 3501, 1442, 3482, 2361, 1344,
	1344, 3474, 1683, 1907, 2921, 2542, 176, 1797, 3004, 1224,
	1956, 2511, 3929, 3746, 977, 3500, 1741, 3105, 1724, 2998,
	2999, 3794, 1855, 1838, 1936, 1837, 1836, 1902, 1834, 1989,
	1833, 1832, 1992, 1823, 1936, 1997, 1936, 1437, 2998, 2999,
	213, 3284, 1968, 1839, 4326, 4319, 4094, 3265, 1859, 4053,
	4004, 206, 4003, 1208, 3871, 1668, 3821, 3820, 4051, 207,
	3793, 3743, 3661, 3660, 4009, 1317, 3659, 1552, 1329, 1332,
	3477, 3301, 3300, 3603, 2021, 2025, 1939, 3015, 1200, 1929,
	1821, 176, 1200, 1629, 3943, 1835, 2628, 1150, 1779, 1150,
	2959, 2958, 3538, 1206, 1778, 1931, 2883, 2611, 3170, 1690,
	1692, 3009, 3007, 3008, 3000, 3001, 3002, 3003, 3005, 3006,
	1207, 1973, 1203, 1599, 937, 1922, 1200, 1751, 2001, 3002,
	3003, 3005, 3006, 3239, 1762, 3238, 1561, 4204, 2122, 1332,
	1332, 4000, 4248, 4233, 4220, 1008, 2144, 3223, 2805, 1684,
	716, 1562, 2016, 1027, 3558, 3557, 3543, 3332, 3118, 719,
	2059, 1344, 3920, 1344, 3045, 1344, 1683, 938, 3405, 2927,
	2343, 2018, 4229, 2549, 1795, 1775, 3230, 2063, 1332, 1465,
	1417, 1344, 1344, 1347, 1178, 4242, 2064, 4239, 3274, 3517,
	1353, 3004, 1344, 4087, 2075, 1352, 3855, 2651, 4164, 2654,
	4075, 3144, 3533, 2788, 1344, 2744, 1344, 1344, 1344, 3216,
	1996, 1540, 4285, 1933, 3349, 3983, 768, 3782, 4310, 2131,
	3008, 3000, 3001, 3002, 3003, 3005, 3006, 1392, 710, 1441,
	4286, 1382, 3122, 2099, 2026, 4230, 2101, 2561, 4374, 935,
	933, 1748, 2106, 2070, 3571, 2108, 931, 3976, 929, 2111,
	2191, 1932, 3968, 3816, 3567, 2143, 2072, 2189, 1348, 926,
	1134, 2083, 3566, 3560, 2136, 3556, 3554, 1596, 3514, 2097,
	2045, 2085, 917, 2046, 1666, 1667, 1669, 1670, 2148, 3513,
	2579, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 3219,
	3100, 1912, 3014, 2741, 2577, 3124, 2932, 2931, 1439, 1597,
	2080, 2127, 2080, 1684, 2930, 3570, 1393, 2077, 2081, 1034,
	2929, 1034, 2887, 2661, 769, 2660, 2132, 2656, 1034, 2647,
	975, 1879, 1879, 1224, 1923, 1034, 1034, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	1152, 1034, 1595, 1034, 1034, 1034, 1034, 716, 2210, 985,
	2639, 2223, 1184, 2118, 1442, 2119, 719, 2638, 1497, 1965,
	1497, 977, 2637, 977, 1538, 1034, 2636, 2579, 1034, 1034,
	3000, 3001, 3002, 3003, 3005, 3006, 1034, 2205, 1975, 2135,
	1034, 2577, 1034, 1034, 974, 1208, 4311, 2615, 3106, 2602,
	1224, 1961, 2532, 2293, 1201, 2152, 1034, 1034, 1034, 1034,
	1979, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 3015,
	2167, 1578, 2221, 1873, 3768, 1966, 1967, 1664, 1665, 1666,
	1667, 1669, 1670, 2221, 1201, 1635, 2317, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 2185, 1208, 1670, 2122,
	1034, 1732, 1207, 2391, 2348, 1962, 1190, 3764, 2390, 2234,
	2153, 3757, 1156, 2251, 1976, 3333, 2044, 2324, 2325, 1224,
	4314, 1429, 1427, 1428, 1426, 3169, 1579, 3755, 1156, 2219,
	2204, 2324, 2340, 923, 2875, 2140, 3759, 2207, 2209, 1533,
	2219, 2208, 2215, 2222, 1034, 1224, 2568, 1400, 1349, 957,
	976, 1839, 957, 957, 1207, 2453, 2308, 2386, 3765, 3778,
	2247, 2248, 2339, 3897, 2238, 1197, 2154, 2239, 2240, 1940,
	1941, 2543, 2524, 2613, 1451, 1554, 2432, 2432, 2446, 2860,
	2324, 1640, 1580, 2466, 2468, 1329, 1388, 2601, 2349, 2472,
	2632, 2195, 2496, 2343, 2308, 1197, 1968, 3577, 3758, 1608,
	3184, 2200, 2157, 3000, 3001, 3002, 3003, 3005, 3006, 4338,
	4315, 2625, 2626, 3529, 2488, 1980, 3795, 2217, 2320, 2151,
	4226, 2625, 2626, 2625, 2626, 1154, 2600, 3006, 1550, 1201,
	1828, 771, 770, 2521, 2337, 1612, 3576, 1441, 1594, 3183,
	2082, 1154, 1202, 1951, 639, 4285, 1224, 977, 1952, 1182,
	3951, 1163, 1534, 3340, 2510, 2874, 977, 3339, 2316, 1122,
	977, 1628, 2220, 2487, 1195, 2314, 2350, 1413, 2347, 634,
	2839, 3394, 1202, 2220, 2428, 2352, 1879, 3815, 2653, 1981,
	1982, 2845, 2441, 2457, 2470, 1562, 2495, 3121, 2500, 3391,
	1161, 2506, 2507, 1336, 2589, 687, 2478, 2479, 1562, 1198,
	2493, 2494, 1977, 2489, 1224, 1151, 3768, 1199, 2650, 1826,
	2652, 1411, 3555, 973, 165, 1591, 4317, 3553, 1344, 3177,
	3542, 1151, 2537, 1781, 3541, 2535, 1379, 2688, 835, 1198,
	2218, 3218, 2581, 1034, 1034, 3188, 1034, 1199, 2203, 3764,
	1197, 2218, 2160, 1978, 1987, 1971, 2655, 4296, 977, 1414,
	3760, 3776, 2648, 2559, 2290, 3761, 1953, 1539, 3176, 1344,
	2552, 927, 927, 2635, 3953, 4323, 2687, 3392, 927, 3520,
	928, 2190, 2556, 1955, 2633, 1773, 1774, 4302, 2188, 2617,
	2555, 927, 2557, 1986, 1970, 2848, 2614, 4227, 2580, 4301,
	3765, 2729, 1489, 2562, 1164, 2530, 2755, 2032, 2031, 686,
	3271, 2592, 1505, 766, 4341, 765, 3763, 1150, 2352, 3896,
	2719, 4274, 4143, 2352, 2712, 1344, 1344, 1202, 1344, 2612,
	3766, 2691, 3674, 1150, 2604, 2693, 2627, 2629, 2630, 2631,
	1344, 2578, 2062, 2594, 2597, 2584, 2616, 2304, 3673, 2558,
	2802, 1957, 2202, 912, 4355, 1344, 2161, 2199, 3272, 2634,
	1983, 2867, 2868, 2898, 2776, 1959, 1390, 2013, 1876, 1537,
	2094, 912, 1200, 2771, 828, 2302, 970, 716, 1544, 1609,
	816, 4088, 4102, 1959, 1198, 2618, 719, 2770, 4225, 1413,
	3123, 2896, 1199, 1034, 970, 2810, 2811, 1606, 1768, 802,
	4316, 723, 1200, 1329, 1968, 3777, 2817, 2818, 2819, 3103,
	1999, 3155, 1990, 2773, 2763, 2806, 2012, 1353, 3530, 2352,
	2767, 2826, 2694, 2847, 2288, 2346, 2706, 2291, 3197, 1951,
	3271, 1984, 4254, 1998, 1952, 1450, 2828, 1034, 2829, 2716,
	2825, 4255, 2808, 1034, 1034, 3762, 2812, 1387, 2813, 2831,
	2762, 2833, 2844, 2835, 2765, 2579, 2766, 2757, 3835, 2739,
	2850, 2750, 2852, 2608, 913, 1994, 3154, 2787, 2758, 2595,
	1873, 1873, 2334, 1958, 4273, 3893, 2287, 1959, 1959, 3670,
	165, 3769, 913, 2853, 4295, 3909, 1720, 2889, 2777, 1966,
	1967, 2774, 3760, 2772, 2778, 4175, 2644, 3761, 1034, 1034,
	2789, 4141, 2453, 2591, 1034, 2725, 924, 635, 4105, 3801,
	2298, 4342, 1535, 1610, 4321, 2937, 2492, 1034, 1034, 1995,
	3952, 1639, 3162, 1034, 1034, 2307, 2893, 2505, 2299, 1034,
	976, 2697, 3407, 2300, 2700, 4142, 2702, 2305, 1034, 1034,
	1034, 2846, 1953, 2156, 1034, 1497, 1809, 1200, 3763, 2894,
	1162, 2564, 688, 2899, 1034, 685, 2890, 4330, 1607, 1955,
	2150, 3163, 3766, 2866, 3845, 2388, 2566, 1809, 1549, 1551,
	2389, 1034, 3664, 2392, 2823, 2393, 2394, 636, 2746, 2856,
	2855, 2746, 2453, 2453, 2830, 2857, 2832, 2315, 2834, 1181,
	1813, 2876, 836, 3497, 1611, 2234, 2861, 1176, 2201, 2567,
	3158, 3675, 2159, 3351, 3892, 2858, 2920, 4108, 2843, 829,
	830, 4322, 2911, 4224, 1566, 817, 818, 3584, 2565, 637,
	3598, 638, 1813, 4284, 4282, 2004, 3582, 1957, 2915, 2916,
	2011, 4123, 2590, 2919, 4016, 1816, 724, 725, 3618, 3258,
	2052, 1954, 1806, 1813, 4324, 1174, 914, 1169, 3160, 626,
	2490, 1650, 2289, 3671, 2237, 1649, 3355, 2888, 2545, 1988,
	1969, 1034, 1034, 1034, 914, 4272, 3836, 1816, 1814, 1924,
	1034, 1034, 1034, 4253, 4347, 1034, 3445, 3762, 3094, 3719,
	3959, 2836, 1811, 3958, 3938, 1034, 1156, 1224, 1816, 4023,
	4356, 1034, 1649, 1034, 3052, 3053, 4074, 3619, 2227, 1921,
	1814, 1156, 2926, 1811, 2301, 1644, 2095, 3584, 1991, 3564,
	3159, 3781, 3390, 3769, 2303, 3516, 3582, 3259, 3780, 1224,
	2895, 1814, 3251, 3136, 4109, 3132, 2453, 2453, 2453, 2730,
	2897, 1156, 2724, 3585, 1224, 2710, 2076, 3894, 2010, 3074,
	2065, 1812, 2057, 977, 2040, 662, 3460, 3510, 2596, 1958,
	4153, 1879, 3352, 1959, 1648, 1224, 2619, 2196, 2484, 1917,
	3621, 3860, 1812, 1649, 3035, 2707, 1453, 3998, 3996, 3939,
	1034, 3060, 1919, 727, 726, 1720, 3147, 3143, 3142, 915,
	3054, 2881, 2859, 3676, 1034, 1873, 2141, 1332, 831, 832,
	3064, 1648, 3589, 3473, 819, 820, 1879, 915, 3127, 1154,
	3128, 3129, 3057, 3062, 3099, 3119, 3083, 3056, 3088, 1581,
	1435, 1920, 1034, 1344, 1154, 1815, 2529, 1650, 3145, 3125,
	1195, 3149, 3087, 3585, 2528, 916, 3113, 728, 729, 2228,
	3063, 2486, 3080, 2527, 1332, 3072, 2485, 1152, 2526, 1152,
	3046, 3075, 3076, 916, 1154, 3092, 3146, 1815, 1344, 3151,
	3152, 2714, 3061, 974, 1650, 1876, 1876, 3446, 1224, 3030,
	3031, 3032, 1648, 3677, 2719, 3947, 3447, 1344, 1815, 3720,
	4081, 4346, 1344, 3172, 3133, 3200, 3073, 1867, 3203, 1151,
	1421, 3131, 3208, 3210, 3827, 3096, 3097, 3098, 3078, 3583,
	3079, 1433, 3226, 1422, 1151, 1344, 834, 3310, 2074, 2719,
	4292, 1344, 3877, 1344, 3994, 2809, 2692, 1224, 3157, 3580,
	3779, 4110, 2690, 1543, 710, 3174, 1317, 1954, 2719, 3189,
	4156, 2620, 2621, 2719, 1151, 1344, 2902, 2903, 1956, 3120,
	4082, 3195, 3235, 1329, 3511, 3186, 3185, 3126, 4161, 1344,
	1567, 3198, 3936, 3187, 4150, 2007, 1851, 3726, 3462, 2359,
	3104, 3059, 4179, 4294, 1626, 1156, 3204, 1956, 1624, 3267,
	3250, 3211, 3205, 3948, 3161, 4244, 3168, 3212, 4095, 3876,
	3915, 2802, 4149, 3179, 3244, 3718, 3221, 1603, 3224, 3583,
	2802, 1150, 2187, 3588, 3180, 3937, 2358, 3190, 3181, 3027,
	3182, 3095, 1601, 2001, 2005, 3137, 1150, 1577, 1344, 1344,
	3196, 2001, 3367, 4157, 3276, 3213, 3206, 2120, 3217, 1575,
	1573, 1571, 4040, 4083, 1569, 1559, 1557, 1431, 3247, 661,
	1344, 3330, 3266, 1489, 2133, 3114, 1150, 2992, 3290, 2900,
	2711, 3068, 2646, 2006, 2134, 2610, 2554, 1846, 1434, 2617,
	1332, 1332, 3297, 1842, 1627, 3228, 2142, 2499, 2145, 2146,
	2147, 1521, 3028, 716, 3348, 1224, 3248, 3175, 1224, 3268,
	3347, 1644, 719, 3220, 4032, 1410, 2841, 2840, 1154, 4219,
	3021, 3022, 3023, 2815, 2216, 2198, 4033, 3334, 1590, 3286,
	3260, 3327, 3288, 3289, 3273, 2164, 2037, 3292, 1034, 3293,
	3320, 3294, 1329, 3282, 1034, 1034, 3328, 1906, 1034, 1034,
	1034, 1752, 1034, 1532, 1404, 3164, 3165, 4034, 3346, 3166,
	3858, 1034, 1879, 3802, 3790, 3291, 3807, 3753, 3287, 1432,
	1034, 3069, 3275, 1034, 833, 3343, 3617, 4270, 925, 1224,
	1625, 1329, 3263, 1329, 1623, 3609, 3345, 3308, 1034, 3569,
	3199, 3191, 3192, 165, 165, 3193, 1224, 3312, 1151, 3536,
	3534, 3295, 3296, 1602, 3329, 2186, 1879, 1879, 1034, 1034,
	3353, 1034, 1034, 1034, 2453, 2453, 4036, 3515, 1600, 3067,
	1876, 3254, 3249, 1576, 3240, 3370, 2769, 2764, 977, 2742,
	3342, 2728, 3322, 2717, 2704, 1574, 1572, 1570, 4035, 2689,
	1568, 1558, 1556, 1430, 3350, 2115, 2113, 3321, 2110, 2107,
	3071, 3379, 3380, 1034, 2102, 4037, 2100, 1034, 2096, 1879,
	1879, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	2087, 1034, 2036, 2034, 968, 2017, 912, 2002, 1034, 1034,
	1879, 3375, 1985, 1972, 1960, 1034, 3387, 3336, 3207, 3337,
	1150, 3338, 4262, 2011, 3386, 1853, 1034, 1653, 2879, 970,
	3393, 3395, 3396, 3402, 3494, 4286, 1042, 1156, 1156, 1925,
	3409, 1034, 930, 932, 934, 4189, 2453, 2453, 2453, 2453,
	2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,
	2453, 2453, 2453, 2453, 2453, 3882, 2453, 3417, 3419, 3875,
	1224, 3418, 1131, 3070, 969, 3874, 3814, 3749, 3478, 2803,
	242, 242, 242, 1944, 629, 630, 1384, 645, 629, 645,
	655, 660, 3422, 3424, 3420, 678, 2579, 1132, 4025, 2599,
	684, 2579, 3629, 1968, 3457, 1034, 242, 3449, 1621, 1622,
	2577, 2155, 3493, 3110, 3111, 2598, 3112, 913, 2880, 1474,
	1873, 1034, 1034, 3450, 813, 2247, 3410, 3464, 1951, 2182,
	242, 2010, 1654, 1952, 1867, 1867, 2073, 700, 1473, 3469,
	3470, 2181, 3495, 3496, 4188, 3466, 3467, 2162, 1034, 1034,
	1154, 1154, 3783, 3809, 1555, 4060, 3507, 3508, 3509, 3727,
	3323, 3324, 3325, 3326, 3705, 1873, 1660, 1661, 3480, 1660,
	1661, 2622, 165, 2603, 1657, 1034, 4288, 4280, 2247, 3425,
	3458, 235, 640, 4249, 3481, 3563, 2703, 2184, 3606, 2058,
	1187, 2651, 2659, 2658, 2643, 1663, 2641, 1344, 4148, 2605,
	2607, 4118, 1133, 4115, 4318, 4038, 3562, 2642, 4080, 3453,
	4039, 3549, 3551, 2606, 4012, 3991, 1879, 756, 3548, 1474,
	3608, 1474, 3597, 799, 3488, 3253, 623, 3519, 2749, 1662,
	1151, 1151, 1662, 2471, 3565, 651, 3535, 3544, 3537, 1910,
	1860, 1953, 3945, 629, 629, 1344, 3102, 4345, 4181, 4181,
	4117, 242, 1034, 4182, 4182, 1355, 2998, 2999, 1955, 1542,
	1156, 1034, 3697, 3631, 3559, 1541, 3587, 2354, 2617, 3499,
	3604, 4013, 2755, 4298, 1660, 1661, 2571, 1152, 3363, 3364,
	2569, 1344, 1344, 1344, 3640, 2571, 2572, 2569, 2570, 3574,
	2686, 2387, 3977, 1152, 3626, 3568, 3623, 1344, 3810, 914,
	1605, 3578, 3806, 1604, 3586, 3805, 3605, 3693, 2802, 3615,
	3498, 3622, 3398, 3201, 1329, 1746, 1224, 1745, 3607, 4332,
	4303, 4071, 3327, 3972, 3625, 3930, 1957, 3927, 3838, 3745,
	3655, 3320, 1150, 1150, 3644, 3656, 3635, 2062, 1224, 3592,
	2231, 1034, 1034, 3590, 3610, 3532, 3527, 1034, 1034, 1879,
	3285, 3257, 1034, 1034, 3256, 1034, 2988, 3624, 2987, 1034,
	2986, 2985, 2984, 2983, 3633, 2982, 3632, 2981, 2980, 3627,
	1034, 2979, 2978, 1154, 3637, 2977, 2976, 2975, 3638, 2974,
	2973, 2972, 3639, 2971, 2970, 2969, 1034, 2775, 1489, 2968,
	3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435,
	3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3662,
	3448, 3679, 3687, 3654, 3647, 3137, 3678, 2816, 3645, 3646,
	3650, 2967, 2966, 3322, 2965, 3672, 2838, 3653, 3651, 2822,
	967, 3575, 915, 2821, 2820, 2760, 2734, 2705, 3321, 2547,
	2546, 2319, 3591, 2183, 3691, 2180, 1156, 2179, 1958, 1867,
	2178, 2177, 1959, 1151, 1156, 2176, 2090, 2089, 1224, 2088,
	1224, 2071, 2047, 2043, 2042, 2041, 3612, 1156, 2039, 1329,
	1329, 2038, 1620, 1619, 1564, 1563, 1460, 1459, 916, 2449,
	1458, 1873, 1457, 1224, 1456, 1455, 1454, 1452, 1447, 1446,
	1445, 1444, 1443, 1399, 1398, 1397, 3397, 1948, 1396, 1395,
	1394, 1389, 1383, 1381, 3717, 1876, 1034, 3750, 3751, 1380,
	1222, 1215, 1214, 3732, 1323, 1213, 1212, 1180, 1179, 3416,
	1114, 1915, 936, 3611, 3318, 1873, 1873, 3667, 3784, 3774,
	922, 3735, 3950, 1224, 3767, 1614, 1949, 84, 1391, 744,
	78, 1224, 2008, 3531, 3729, 3730, 895, 3738, 3728, 1329,
	1876, 3731, 3734, 4178, 3739, 1150, 3733, 3785, 3087, 1154,
	1377, 3811, 4101, 3812, 751, 3742, 4163, 1154, 3775, 1344,
	1344, 3153, 2662, 2163, 1565, 2165, 3752, 3082, 1873, 1873,
	1154, 3786, 3787, 2512, 3773, 4140, 3701, 1344, 2936, 3828,
	4067, 3908, 2357, 165, 1750, 3039, 3825, 80, 1224, 1018,
	3663, 3724, 1064, 1344, 3813, 3834, 3833, 3823, 3754, 1873,
	3518, 2792, 3831, 3789, 3804, 3830, 1954, 3851, 1864, 3817,
	1866, 984, 1227, 1926, 3797, 3800, 3799, 3822, 1024, 1942,
	1034, 3323, 3324, 3325, 3326, 1935, 2548, 2431, 2719, 1151,
	1344, 1344, 1344, 1041, 1038, 3824, 1868, 1151, 1870, 1040,
	1039, 1224, 1869, 3878, 3862, 1769, 1037, 1863, 3614, 3829,
	1151, 3613, 2713, 1034, 1034, 1034, 2753, 3283, 1167, 3861,
	3865, 3856, 3503, 3848, 3844, 1440, 1438, 897, 1930, 2313,
	2341, 1224, 3847, 2925, 1743, 999, 1034, 1020, 3870, 1034,
	1034, 3863, 2338, 1172, 3881, 1009, 1177, 998, 3065, 1034,
	3044, 3270, 1879, 3487, 2226, 678, 760, 1034, 1034, 2995,
	2344, 1165, 2454, 2447, 2443, 3117, 3887, 2743, 1630, 3884,
	3889, 1722, 1224, 3885, 1344, 2754, 1210, 1002, 242, 3895,
	242, 242, 1320, 2311, 242, 242, 1335, 1734, 1224, 3900,
	2905, 1150, 2236, 3277, 3085, 2541, 1034, 4185, 3406, 1150,
	242, 3905, 1357, 1034, 2051, 1130, 1129, 1128, 3911, 4169,
	4166, 1034, 1150, 1879, 2453, 3917, 3798, 3648, 3233, 1918,
	2563, 1034, 1712, 3241, 1034, 1014, 3932, 1386, 1328, 3050,
	3311, 1401, 683, 1034, 3923, 3924, 1026, 1711, 2683, 1403,
	1224, 1409, 2682, 4077, 1196, 242, 242, 3922, 1320, 3926,
	3933, 1344, 1344, 1194, 1193, 1192, 3135, 4354, 3528, 3971,
	211, 2453, 2873, 1651, 3931, 1873, 1449, 1643, 208, 210,
	3955, 3850, 209, 3839, 3954, 3491, 3091, 3982, 242, 4247,
	242, 242, 3546, 1320, 242, 1335, 3973, 3235, 3225, 1224,
	4006, 3969, 1344, 3997, 21, 678, 20, 242, 242, 19,
	105, 3974, 3979, 40, 18, 4011, 3987, 3986, 120, 137,
	1034, 1034, 136, 113, 3995, 3990, 1876, 3837, 135, 134,
	813, 3963, 3964, 133, 4010, 132, 139, 3989, 3849, 1034,
	1034, 4005, 131, 4043, 4044, 130, 3984, 125, 4022, 129,
	4021, 128, 127, 4020, 126, 3978, 1034, 1879, 3980, 3981,
	3869, 1332, 124, 4026, 4028, 4041, 4027, 123, 4019, 4024,
	1876, 1876, 4018, 122, 4047, 3865, 2863, 121, 119, 118,
	117, 1034, 116, 115, 1034, 114, 112, 4055, 111, 110,
	109, 108, 107, 106, 674, 671, 57, 56, 104, 4084,
	103, 1152, 242, 1034, 4073, 17, 38, 14, 1873, 61,
	2062, 62, 16, 13, 33, 83, 1152, 3214, 4072, 242,
	4065, 2453, 3961, 1876, 1876, 4059, 4090, 95, 4056, 4057,
	94, 34, 92, 91, 32, 4089, 1845, 15, 89, 88,
	31, 29, 11, 9, 1034, 1034, 1152, 3245, 4104, 8,
	35, 1830, 12, 5, 1876, 1034, 2449, 2449, 1034, 170,
	1344, 3252, 4097, 169, 172, 168, 171, 82, 167, 166,
	1344, 1344, 81, 27, 1867, 10, 162, 4099, 4120, 4112,
	4113, 4122, 4111, 4007, 4131, 3602, 76, 1344, 3985, 1946,
	4116, 164, 163, 161, 160, 159, 4010, 77, 74, 158,
	157, 1034, 1034, 4125, 75, 156, 4127, 25, 4129, 4130,
	4128, 4124, 6, 60, 7, 3890, 3331, 98, 99, 1867,
	3303, 3304, 36, 72, 4135, 4134, 71, 70, 24, 4098,
	59, 23, 199, 198, 1034, 1034, 4160, 1034, 4145, 4158,
	197, 196, 195, 194, 189, 188, 193, 191, 4168, 4171,
	190, 4183, 192, 4136, 4180, 4137, 187, 202, 201, 203,
	4187, 200, 205, 186, 4190, 184, 180, 179, 3914, 183,
	4173, 185, 4198, 4177, 4202, 182, 4203, 181, 178, 204,
	154, 155, 1034, 1034, 1034, 67, 153, 4159, 152, 151,
	4144, 150, 149, 148, 4194, 147, 66, 4197, 22, 2,
	2449, 2449, 2449, 1, 0, 1034, 0, 4236, 0, 4201,
	0, 4231, 0, 4215, 4216, 3941, 4217, 629, 4218, 0,
	0, 0, 0, 4172, 0, 0, 4176, 4234, 0, 0,
	0, 0, 0, 0, 0, 4258, 2029, 0, 242, 0,
	242, 0, 0, 0, 242, 4256, 0, 0, 0, 4267,
	0, 4265, 1034, 4257, 0, 0, 0, 1357, 1320, 242,
	1876, 242, 0, 0, 0, 0, 242, 1357, 645, 4271,
	1152, 242, 1357, 4260, 0, 0, 0, 4287, 678, 0,
	4266, 0, 4277, 4278, 4283, 4281, 4290, 4279, 0, 0,
	4263, 4264, 0, 0, 4289, 4168, 4268, 4291, 4171, 0,
	1034, 4297, 1034, 4300, 4305, 0, 4187, 4293, 0, 0,
	4308, 690, 4304, 0, 0, 0, 4313, 2062, 0, 0,
	4312, 4103, 0, 4307, 4246, 4309, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 4325, 4306, 4327, 0, 0,
	0, 0, 4119, 0, 0, 0, 0, 0, 244, 0,
	0, 4333, 4299, 0, 0, 4339, 4334, 0, 0, 1034,
	1034, 1873, 0, 4336, 0, 4064, 0, 1034, 4340, 1034,
	1034, 0, 0, 0, 0, 4352, 4343, 4358, 0, 4359,
	4349, 0, 4361, 4363, 0, 4362, 0, 0, 0, 4357,
	0, 0, 2755, 1876, 0, 0, 0, 0, 4366, 0,
	4367, 0, 0, 0, 0, 4369, 0, 4371, 0, 4372,
	4370, 0, 0, 4376, 0, 4360, 0, 0, 4377, 4373,
	1034, 4381, 1873, 4383, 695, 4378, 0, 4384, 0, 4386,
	0, 0, 4380, 0, 0, 1867, 4368, 0, 0, 0,
	4387, 0, 0, 0, 242, 4191, 0, 242, 4192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4350, 4351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 242, 0, 0,
	0, 242, 0, 0, 703, 0, 0, 0, 242, 4382,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	68, 0, 807, 806, 0, 0, 997, 0, 697, 242,
	0, 242, 1867, 1867, 0, 629, 69, 242, 0, 0,
	2250, 0, 0, 0, 0, 0, 0, 0, 0, 3572,
	2091, 0, 73, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 242, 1867, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 1152, 0, 701, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 813, 0, 0, 0, 0, 2998,
	2999, 0, 3016, 3017, 3018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2355, 85, 242,
	3684, 1320, 242, 3641, 3642, 3643, 0, 0, 2449, 2449,
	0, 0, 100, 0, 0, 0, 678, 86, 97, 1489,
	0, 0, 0, 242, 0, 0, 692, 0, 1329, 0,
	0, 0, 0, 0, 242, 242, 0, 242, 0, 242,
	0, 242, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 3013, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 2192, 0, 0, 2193, 0, 2194,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 1660, 1661, 702, 0, 0, 0, 1703, 1704,
	1705, 0, 2522, 0, 0, 0, 0, 699, 0, 0,
	0, 0, 660, 694, 1691, 0, 678, 0, 0, 0,
	0, 1663, 0, 0, 1332, 0, 1876, 0, 0, 1709,
	2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449,
	2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 1867,
	2449, 3004, 0, 0, 691, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 698, 0, 0, 0, 1152, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 2574, 0, 0, 693, 0, 0, 0,
	0, 3019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 1687, 1688, 0, 0,
	0, 0, 3014, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 93,
	0, 96, 0, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 242, 1700,
	0, 0, 1710, 0, 0, 212, 0, 629, 1690, 1692,
	0, 1489, 0, 808, 242, 0, 629, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 1876, 0, 1677, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 1335, 1660, 1661, 214, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 1691, 0, 0,
	0, 0, 140, 0, 1663, 0, 0, 0, 0, 0,
	0, 1152, 3886, 0, 3888, 0, 0, 177, 0, 1152,
	242, 1335, 0, 645, 242, 213, 0, 0, 0, 3015,
	0, 0, 1152, 0, 0, 0, 206, 0, 1662, 0,
	0, 0, 997, 0, 207, 0, 997, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 1308, 0, 0, 0, 1308, 805, 0, 2588, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 2678, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 3928, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 3682, 0, 0,
	0, 0, 1689, 0, 0, 0, 0, 2670, 2668, 242,
	0, 0, 0, 1808, 2672, 2674, 2664, 1685, 1686, 1687,
	1688, 0, 1684, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 242, 2695, 0, 0, 0, 0,
	0, 0, 0, 3010, 3011, 3012, 0, 1701, 0, 0,
	3009, 3007, 3008, 3000, 3001, 3002, 3003, 3005, 3006, 1357,
	0, 0, 242, 3988, 0, 0, 0, 0, 0, 0,
	242, 1690, 1692, 0, 0, 0, 0, 0, 0, 2738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2588,
	0, 629, 0, 0, 2759, 0, 1677, 1678, 0, 0,
	242, 0, 0, 242, 0, 0, 0, 242, 0, 242,
	0, 0, 0, 0, 1320, 0, 242, 242, 0, 1335,
	1335, 0, 0, 0, 0, 0, 0, 0, 1683, 2785,
	813, 0, 2588, 2588, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 242, 0, 1702,
	1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667,
	1669, 1670, 0, 0, 0, 1867, 242, 1320, 242, 0,
	0, 1357, 0, 1357, 0, 0, 1320, 0, 1320, 0,
	1320, 0, 0, 0, 0, 2666, 0, 0, 0, 0,
	0, 983, 0, 0, 0, 2680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 242, 242, 242,
	1320, 242, 0, 242, 0, 0, 2679, 2671, 2669, 2673,
	2675, 2665, 2667, 2681, 0, 0, 1867, 0, 0, 0,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 1689, 0, 0, 0, 0,
	0, 0, 242, 0, 1660, 1661, 0, 1693, 1694, 1695,
	1703, 1704, 1705, 2684, 3051, 1684, 0, 0, 0, 0,
	0, 0, 1489, 1489, 0, 1696, 1691, 0, 0, 0,
	0, 0, 0, 1663, 1660, 1661, 0, 0, 0, 1489,
	0, 1709, 0, 0, 0, 0, 3077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 3090, 0, 1663, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 3108, 0, 0, 1679, 0, 0, 0, 0,
	0, 1357, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	1867, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 1685, 1686, 1687, 1688,
	0, 0, 0, 0, 0, 0, 1668, 1308, 0, 0,
	0, 0, 0, 0, 2685, 2449, 0, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 1685, 1686, 1687, 1688,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 1700, 0, 0, 1710, 0, 0, 0, 0, 0,
	1690, 1692, 0, 0, 997, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 0, 0, 1706, 0, 1707, 0,
	0, 0, 242, 0, 3090, 1677, 1678, 0, 0, 0,
	1690, 1692, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 629, 1698, 0, 0, 0, 629, 0, 0,
	629, 0, 0, 629, 629, 1677, 1678, 1683, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2449, 1697, 0, 0, 0,
	0, 0, 0, 2588, 2588, 242, 0, 1335, 0, 0,
	2588, 0, 0, 3139, 0, 0, 0, 0, 0, 0,
	0, 2588, 3139, 0, 2588, 3139, 3139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1308, 0, 242,
	242, 1335, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1689, 1222, 0, 0, 0, 0,
	0, 0, 1335, 242, 0, 0, 1320, 0, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 2588, 0,
	3202, 2588, 1335, 0, 1689, 2588, 2588, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 1684, 0, 0, 983, 0, 0,
	0, 983, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3383, 0, 0, 0,
	242, 3229, 0, 0, 3231, 2588, 0, 0, 242, 0,
	0, 0, 242, 3399, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	1365, 0, 1371, 0, 0, 0, 2738, 0, 0, 1320,
	0, 242, 0, 0, 2588, 0, 629, 0, 0, 0,
	0, 0, 0, 2588, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 1699, 242, 242, 0, 1674, 1675,
	1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 0, 0, 0, 0, 4155, 0,
	0, 0, 242, 2738, 0, 0, 2738, 0, 0, 0,
	0, 0, 1680, 1676, 1490, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 0, 0, 0, 0, 1660, 1661,
	0, 1508, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 1527, 0, 0, 0, 3341,
	1691, 0, 1320, 242, 0, 242, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 1661,
	0, 1693, 1694, 1695, 1703, 1704, 1705, 3490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 1696,
	1691, 1662, 0, 0, 0, 1660, 1661, 1663, 0, 0,
	0, 1682, 0, 0, 0, 1709, 0, 1586, 0, 1679,
	1592, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 1308, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 0, 0, 3404, 0, 0, 0, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	3366, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	1685, 1686, 1687, 1688, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 1686, 1687, 1688, 0, 0, 0, 3361, 0, 0,
	1668, 1731, 0, 0, 1690, 1692, 1146, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 0, 0, 0, 1668, 0, 1677,
	1678, 0, 0, 242, 242, 1700, 0, 0, 1710, 0,
	0, 0, 0, 0, 1690, 1692, 0, 1308, 0, 0,
	237, 237, 625, 0, 0, 629, 629, 0, 0, 0,
	1706, 1683, 1707, 0, 0, 0, 0, 0, 0, 1677,
	1678, 1690, 1692, 1308, 0, 0, 0, 1357, 1357, 0,
	0, 0, 0, 0, 0, 0, 68, 1698, 1660, 1661,
	0, 1357, 1357, 1357, 0, 0, 1677, 1678, 0, 0,
	0, 1683, 69, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 1802, 1802, 1802, 0, 0, 1663, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 678, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 79, 0, 0,
	1697, 1682, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 0, 0, 0, 1308, 0, 0, 242, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	0, 0, 0, 0, 85, 1335, 242, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 100, 0,
	0, 0, 0, 86, 97, 0, 0, 242, 1689, 0,
	3360, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 242, 1308, 0, 0, 242, 0, 3737, 1684, 0,
	1685, 1686, 1687, 1688, 0, 1689, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 2588, 242, 0, 0, 0,
	3747, 0, 0, 1701, 0, 1684, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 2785, 2785, 0, 0, 0,
	0, 813, 813, 2588, 0, 0, 2738, 2738, 0, 0,
	813, 2588, 0, 0, 1690, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	1678, 0, 0, 0, 0, 0, 1680, 1676, 0, 1673,
	1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 1674, 1675, 1681, 1702, 1680, 1676, 0, 1673,
	1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 0,
	3702, 0, 2949, 0, 0, 0, 2950, 0, 2538, 0,
	0, 0, 0, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 1357, 0,
	242, 0, 0, 0, 173, 93, 0, 96, 3906, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 1684, 808,
	2588, 2588, 2588, 138, 0, 0, 0, 0, 0, 3906,
	0, 0, 0, 1357, 0, 0, 0, 0, 0, 0,
	0, 2588, 0, 3139, 0, 2250, 1357, 1357, 242, 1335,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	1335, 242, 1335, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2588, 0, 2588, 242, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 2250, 0, 0,
	0, 213, 2588, 0, 0, 0, 0, 3841, 0, 0,
	0, 0, 206, 0, 0, 0, 242, 0, 0, 0,
	207, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 1680, 1676, 0, 1673,
	1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 1357,
	0, 0, 2225, 0, 2229, 0, 0, 0, 0, 0,
	0, 2243, 0, 0, 0, 0, 0, 0, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 0, 2292, 0, 2294, 2295, 2296, 2297,
	0, 0, 0, 0, 0, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 1327, 1308, 0, 0, 2321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	2588, 0, 3139, 0, 0, 3935, 0, 1308, 0, 2366,
	2369, 2372, 2375, 242, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	0, 0, 2445, 1308, 2456, 2458, 2463, 0, 1320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 1335, 242, 0, 0, 0, 0, 1464, 0,
	1464, 1464, 997, 0, 1660, 1661, 0, 0, 0, 0,
	0, 0, 3935, 0, 0, 0, 0, 1506, 1507, 0,
	2588, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 4015, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2998, 2999, 1662, 3016, 3017,
	3018, 0, 0, 242, 242, 0, 1308, 1682, 0, 0,
	0, 0, 0, 0, 0, 1679, 3683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3404, 0, 1660,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 3935, 0, 0, 0, 0, 0, 0,
	0, 1691, 0, 0, 0, 1308, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 2891, 0, 3013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1043, 0, 0, 1685, 1686, 1687, 1688,
	242, 0, 1662, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 3841,
	1679, 0, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703,
	1704, 1705, 0, 242, 0, 0, 0, 243, 243, 243,
	0, 0, 3139, 0, 1696, 1691, 0, 0, 0, 0,
	1690, 1692, 1663, 0, 0, 0, 2698, 2699, 0, 2701,
	1709, 0, 0, 243, 0, 0, 0, 3004, 1357, 0,
	1357, 2884, 0, 0, 0, 1677, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 243, 0, 0,
	0, 1685, 1686, 1687, 1688, 4154, 1682, 0, 0, 0,
	0, 1668, 1357, 0, 1679, 242, 0, 1683, 0, 0,
	0, 0, 0, 1308, 0, 0, 1308, 0, 0, 0,
	0, 0, 242, 2588, 0, 0, 0, 3019, 0, 0,
	0, 0, 2998, 2999, 0, 3016, 3017, 3018, 0, 0,
	242, 0, 0, 0, 0, 1690, 1692, 0, 0, 0,
	0, 0, 0, 3372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3404, 0, 0, 0, 3014, 0,
	1677, 1678, 0, 0, 0, 1685, 1686, 1687, 1688, 0,
	0, 0, 0, 0, 0, 1668, 0, 1308, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 1683, 0, 1308, 3013, 2837, 0, 0, 1849,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 1710, 1689, 0, 0, 0, 0, 1690,
	1692, 0, 0, 0, 0, 0, 3935, 0, 0, 0,
	0, 0, 0, 0, 1684, 1706, 0, 1707, 0, 0,
	0, 0, 0, 0, 1677, 1678, 1713, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 0, 2588,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 3004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3015, 0, 0, 0, 0,
	0, 2885, 2886, 0, 0, 0, 0, 2892, 0, 1689,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 2906, 2907, 0, 1684,
	0, 0, 2336, 0, 0, 1697, 0, 2785, 0, 0,
	0, 2914, 0, 0, 3019, 2588, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 0, 0, 2928, 0, 0,
	2785, 0, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 2940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3014, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 3010,
	3011, 3012, 0, 0, 0, 0, 3009, 3007, 3008, 3000,
	3001, 3002, 3003, 3005, 3006, 0, 0, 2049, 1701, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 1680, 1676, 0,
	1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 2079,
	0, 2079, 0, 2463, 2463, 2463, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 3055, 0, 0, 0,
	0, 0, 1464, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1674, 1675, 1681,
	1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666,
	1667, 1669, 1670, 0, 0, 0, 0, 2332, 0, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 2138, 983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 0, 2158, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 0, 2170, 0, 2172,
	0, 2174, 0, 2175, 0, 3156, 1308, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3010, 3011, 3012, 73,
	0, 2197, 0, 3009, 3007, 3008, 3000, 3001, 3002, 3003,
	3005, 3006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 1228, 243, 243, 0,
	1228, 243, 243, 0, 1228, 0, 1660, 1661, 79, 1693,
	1694, 1695, 1703, 1704, 1705, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 1691, 0,
	0, 0, 0, 0, 0, 1663, 0, 1228, 0, 0,
	0, 0, 0, 1709, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 1308, 100,
	1228, 0, 243, 243, 86, 97, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	0, 1308, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 243, 243, 0,
	0, 243, 0, 1228, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 1228, 243, 243, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 1686,
	1687, 1688, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 2519, 0,
	0, 0, 0, 1700, 0, 0, 1710, 0, 0, 243,
	0, 2243, 1690, 1692, 0, 0, 0, 3358, 3359, 0,
	0, 3362, 0, 0, 0, 3365, 243, 0, 1706, 0,
	1707, 0, 0, 0, 3369, 0, 0, 1677, 1678, 0,
	0, 0, 0, 3376, 0, 0, 3055, 0, 0, 1308,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 90,
	0, 3388, 0, 0, 2068, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	0, 3411, 3412, 0, 3413, 3414, 3415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 93, 0, 96, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 0, 0, 3421, 0, 1697, 0,
	3423, 0, 212, 0, 0, 0, 1308, 0, 0, 0,
	808, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 3451, 3452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 214, 0, 0, 0, 0, 3463,
	0, 0, 0, 0, 0, 0, 1689, 0, 1308, 0,
	0, 0, 0, 0, 3472, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 2056, 0, 177, 0, 0, 0, 0, 0,
	2068, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 206, 0, 0, 0, 1308, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	2761, 243, 0, 1464, 0, 0, 0, 1464, 3512, 1464,
	0, 0, 1228, 176, 0, 0, 243, 243, 243, 0,
	0, 0, 0, 243, 3521, 3524, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 2814, 0, 0,
	0, 0, 3545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 2824, 0, 2827, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	1674, 1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672,
	1664, 1665, 1666, 1667, 1669, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 3708, 0, 2849, 1327, 2851, 1327,
	0, 2854, 0, 0, 1660, 1661, 0, 1693, 1694, 1695,
	1703, 1704, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 997, 0, 1696, 1691, 0, 0, 0,
	0, 0, 0, 1663, 1464, 0, 0, 0, 0, 0,
	0, 1709, 2882, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 3634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 243, 1228, 1228, 243, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3680, 3681, 0, 0, 0, 0,
	3685, 3686, 0, 0, 243, 3689, 3690, 0, 243, 0,
	0, 0, 3694, 0, 0, 243, 1685, 1686, 1687, 1688,
	0, 243, 0, 3698, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 243, 3703,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 1710, 0, 0, 0, 0, 243,
	1690, 1692, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 1707, 0,
	0, 0, 0, 0, 68, 1677, 1678, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 1228, 0, 1228, 0,
	69, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 1228, 73, 1683, 0, 0,
	0, 0, 0, 0, 0, 1228, 243, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 1228,
	1228, 1228, 2998, 2999, 0, 3016, 3017, 3018, 0, 3524,
	243, 0, 0, 0, 0, 79, 0, 0, 1708, 0,
	0, 243, 243, 3371, 243, 0, 243, 0, 243, 0,
	243, 0, 0, 0, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 100, 0, 243, 0,
	0, 86, 97, 0, 0, 3013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3130, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1019, 102, 0, 0, 241, 241,
	241, 0, 0, 0, 1684, 0, 1228, 0, 0, 3171,
	3173, 0, 2068, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 3524, 717, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 3004, 0, 3901, 3902, 3903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2998, 2999, 0, 3016, 3017, 3018, 0, 2243,
	0, 102, 3912, 3913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 0, 0, 0, 0,
	3921, 0, 0, 0, 0, 0, 0, 0, 3242, 0,
	0, 0, 3246, 0, 3019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 1674, 1675,
	1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 0, 3013, 3524, 0, 0, 0,
	0, 0, 3374, 0, 3960, 3014, 90, 0, 0, 0,
	958, 1464, 1228, 0, 3967, 1327, 1327, 983, 0, 1153,
	0, 978, 0, 0, 0, 0, 3975, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 1228, 0,
	0, 0, 3307, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 173, 93, 0, 96, 0, 0, 0, 1140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 3004, 0, 0, 808, 0, 0,
	0, 138, 0, 3344, 0, 1327, 0, 243, 0, 0,
	0, 243, 0, 3524, 3524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 3020, 0, 0, 0, 0, 0, 3356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 3015, 0, 3019, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 4076, 0, 243, 4079, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	206, 0, 0, 0, 0, 3014, 3524, 0, 207, 0,
	0, 0, 0, 0, 247, 0, 243, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 983, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3524, 0,
	0, 3524, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 1228, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 709, 0, 3010, 3011, 3012, 0,
	0, 0, 0, 3009, 3007, 3008, 3000, 3001, 3002, 3003,
	3005, 3006, 0, 0, 0, 2243, 0, 243, 709, 0,
	243, 0, 0, 0, 243, 0, 243, 0, 68, 0,
	0, 0, 0, 243, 243, 0, 0, 0, 1228, 1228,
	0, 1228, 0, 0, 69, 0, 0, 0, 983, 0,
	0, 0, 3015, 1228, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 243, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4214, 4214, 4214, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4235, 0,
	0, 0, 0, 243, 243, 243, 243, 0, 243, 0,
	243, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 86, 97, 0, 0, 0,
	0, 243, 0, 0, 0, 4214, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 3010, 3011, 3012, 0,
	0, 0, 0, 3009, 3007, 3008, 3000, 3001, 3002, 3003,
	3005, 3006, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	87, 0, 0, 3524, 0, 3524, 0, 3601, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 241, 241,
	0, 2068, 241, 241, 0, 3616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 1660,
	1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 1691, 4214, 4344, 0, 0, 0, 0, 1663, 0,
	4348, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 241, 241, 0, 0, 0, 0, 0,
	102, 0, 102, 0, 102, 0, 0, 0, 0, 0,
	3665, 0, 1662, 2998, 2999, 0, 3016, 3017, 3018, 0,
	0, 0, 1682, 0, 0, 0, 241, 0, 241, 241,
	1679, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 241, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	978, 102, 102, 0, 0, 0, 3013, 0, 0, 0,
	0, 0, 0, 102, 0, 102, 173, 93, 0, 96,
	1228, 1685, 1686, 1687, 1688, 102, 0, 102, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 808, 1228, 0, 0, 138, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 1700, 1228, 0, 1710,
	0, 0, 0, 0, 0, 1690, 1692, 241, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 102, 1228, 0,
	0, 1706, 0, 1707, 0, 3004, 0, 0, 0, 0,
	1677, 1678, 0, 0, 0, 0, 790, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 243, 0, 0, 177, 0, 0, 0, 0,
	774, 0, 1683, 213, 0, 0, 0, 0, 3788, 0,
	0, 0, 0, 0, 206, 0, 1228, 0, 0, 0,
	0, 2068, 207, 0, 0, 3019, 243, 243, 0, 243,
	0, 0, 0, 0, 0, 0, 243, 0, 775, 0,
	0, 0, 0, 1708, 1500, 958, 0, 0, 0, 776,
	243, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 1725, 3014, 0, 0, 777,
	1228, 0, 0, 0, 0, 1228, 2068, 0, 0, 0,
	0, 0, 1730, 0, 0, 3857, 1736, 0, 0, 796,
	0, 0, 0, 0, 0, 0, 0, 1066, 1228, 0,
	0, 0, 0, 243, 1228, 0, 1228, 1225, 778, 0,
	1228, 1225, 0, 0, 0, 1345, 0, 243, 0, 1689,
	0, 0, 0, 0, 0, 243, 0, 0, 1228, 243,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 1228, 0, 0, 0, 0, 0, 1345, 0,
	0, 780, 0, 0, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 1824, 0, 1153, 703,
	0, 1345, 241, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 243, 243, 0, 0, 0, 241, 1824, 241,
	0, 0, 0, 795, 717, 0, 0, 0, 0, 717,
	0, 1228, 1228, 3015, 0, 0, 1822, 0, 1825, 243,
	102, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	1345, 0, 0, 1228, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 3942, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 0, 0, 0, 0, 1228, 1699,
	243, 1228, 243, 1674, 1675, 1681, 1702, 1680, 1676, 0,
	1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 0, 0, 0, 0, 783, 0,
	0, 0, 0, 0, 0, 0, 0, 3010, 3011, 3012,
	0, 0, 1228, 0, 3009, 3007, 3008, 3000, 3001, 3002,
	3003, 3005, 3006, 0, 0, 802, 0, 784, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4054, 1327, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 717, 0, 0, 0, 702,
	0, 0, 0, 0, 0, 0, 785, 0, 0, 0,
	800, 801, 798, 0, 0, 0, 0, 0, 793, 0,
	0, 786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 241, 0, 787, 794,
	0, 0, 241, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 241,
	0, 789, 0, 0, 0, 241, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 4121, 0, 0, 0, 0, 0, 0,
	241, 791, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 1228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4162, 0, 241, 0, 0,
	241, 0, 0, 0, 0, 978, 0, 978, 0, 0,
	0, 0, 4184, 1225, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 709, 0, 0, 0, 0, 709,
	4196, 0, 717, 241, 0, 241, 0, 241, 0, 241,
	0, 241, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	1228, 0, 0, 243, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 243, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 243, 0,
	735, 0, 243, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	753, 0, 0, 0, 1228, 1228, 1228, 958, 0, 0,
	958, 958, 0, 0, 0, 0, 0, 0, 0, 0,
	1228, 0, 0, 0, 737, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 1345, 1345, 739, 0, 0, 0, 0,
	0, 1228, 0, 1225, 0, 2310, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1157, 978, 0, 0, 1157, 0, 0, 0, 1157, 0,
	1730, 740, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 0, 0, 742, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 763, 1153, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1153, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 1825, 1228, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 1157, 0, 0,
	0, 762, 0, 0, 0, 1345, 1228, 1345, 0, 1345,
	757, 1157, 0, 0, 0, 102, 0, 0, 241, 0,
	0, 0, 241, 0, 0, 1345, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 1345, 0,
	1345, 1345, 1345, 0, 0, 0, 1228, 0, 243, 0,
	243, 0, 0, 1157, 1228, 0, 0, 743, 0, 0,
	0, 0, 709, 0, 243, 241, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 1228, 1228, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	1228, 0, 0, 243, 0, 0, 0, 241, 102, 0,
	0, 1228, 243, 0, 0, 0, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	733, 102, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 1228, 1228, 1228, 0, 1225, 0, 0,
	241, 0, 0, 0, 1228, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 752, 0, 102, 0, 0, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 766, 0, 765, 1228, 0, 0, 749, 241, 0,
	0, 241, 0, 0, 0, 241, 0, 241, 0, 0,
	0, 750, 0, 0, 241, 241, 758, 0, 0, 0,
	0, 0, 767, 102, 764, 0, 102, 0, 0, 0,
	704, 0, 0, 0, 0, 1228, 0, 1228, 0, 0,
	0, 0, 0, 0, 1225, 241, 0, 0, 0, 0,
	0, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 102, 0, 0, 241, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2424, 2425, 2426, 2427, 2420, 2421, 2422, 2423,
	0, 0, 0, 1228, 241, 241, 241, 241, 0, 241,
	243, 241, 0, 1225, 1228, 1228, 0, 0, 0, 1157,
	0, 1157, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 1225,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	241, 1880, 1228, 0, 0, 1228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 2400, 2401, 2402, 2403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	243, 243, 2412, 2413, 2414, 2415, 2408, 2409, 2410, 2411,
	2416, 2417, 2418, 2419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2310, 0, 0, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 2396, 2397, 2398, 2399, 2404,
	2405, 2406, 2407, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 1345, 1228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1228, 1228, 0, 1157, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	1228, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703, 1704,
	1705, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 1691, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 1709,
	1153, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 1345,
	1345, 0, 1345, 0, 0, 1682, 0, 243, 0, 0,
	1140, 0, 0, 1679, 1345, 1824, 1035, 0, 0, 0,
	0, 0, 0, 0, 0, 1140, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	1157, 0, 1157, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 1687, 1688, 1157, 1157,
	0, 0, 0, 0, 1668, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 241, 241, 0,
	241, 1157, 0, 1157, 1157, 1157, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 241, 1710, 0, 0, 0, 0, 0, 1690, 1692,
	102, 102, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 1707, 0, 0, 0,
	0, 0, 0, 1677, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 102, 0, 0,
	102, 1698, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 1880,
	1157, 0, 0, 0, 0, 0, 1708, 0, 0, 1153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 241,
	0, 0, 0, 241, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	0, 0, 978, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1689, 0, 102, 102, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 1225, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 1674, 1675, 1681, 1702,
	1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667,
	1669, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	2952, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 1880, 0, 0, 1345, 0, 0, 0,
	0, 1153, 1153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 1157, 0, 102, 0, 1345, 0, 1345, 0, 0,
	0, 1225, 0, 0, 0, 1157, 0, 0, 709, 0,
	0, 1140, 1140, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 1157, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 241, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 1157, 1226, 241, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 1225,
	0, 0, 1225, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 241,
	1346, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1140, 0, 1346, 0, 0, 0,
	1225, 0, 1346, 0, 0, 0, 1346, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 1661,
	0, 1693, 1694, 1695, 1703, 1704, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	1691, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	1153, 0, 0, 0, 0, 1709, 0, 0, 1153, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 102, 0, 0, 0, 0, 0,
	1140, 1682, 0, 0, 0, 0, 0, 0, 1140, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 1157, 1157, 0, 0, 0, 0, 241,
	0, 241, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	1685, 1686, 1687, 1688, 0, 0, 0, 0, 1157, 0,
	1668, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 241, 0, 0, 0, 1880, 0,
	0, 0, 1157, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 1710, 0,
	0, 0, 102, 0, 1690, 1692, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 1345,
	1706, 0, 1707, 1880, 0, 0, 0, 0, 0, 1677,
	1678, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 1226, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 1345, 1345, 1345, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 1346, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	1225, 0, 0, 0, 1157, 0, 0, 0, 1226, 1157,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 1157, 0, 0, 0, 0, 0, 1157, 0,
	1157, 241, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1689, 0,
	0, 241, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 1157, 1157, 0, 0, 0,
	0, 0, 1225, 0, 1225, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 241, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2310, 0, 0, 0,
	0, 0, 1157, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 0, 1225, 0, 0, 1699, 0,
	0, 0, 1674, 1675, 1681, 1702, 1680, 1676, 0, 1673,
	1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 1880,
	0, 0, 0, 1345, 1345, 0, 2951, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 1157, 0, 0, 0, 1345, 0, 0,
	0, 241, 0, 1880, 1880, 0, 0, 1346, 0, 1346,
	0, 1346, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 0, 0, 1345, 1345, 1345, 102, 1346, 0,
	0, 0, 0, 0, 0, 1225, 0, 0, 0, 0,
	1346, 0, 1346, 1346, 1346, 0, 1880, 1880, 0, 0,
	1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	0, 0, 0, 241, 0, 1225, 0, 0, 0, 0,
	0, 1696, 1691, 0, 0, 0, 0, 1880, 0, 1663,
	241, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 1157, 1157, 1225, 0, 1345, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 1682, 0, 0, 0, 0, 0, 0,
	102, 1679, 0, 102, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 1686, 1687, 1688, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1225, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 1700, 0, 0,
	1710, 0, 0, 0, 0, 0, 1690, 1692, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 1683, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 0, 1157, 1157,
	1157, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 1346, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 1157, 0, 1157, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 2948, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 1346, 1346, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 1157, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 1157, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 1691, 0, 0, 0, 0, 0, 1157, 1663,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 1157,
	0, 1157, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 1157,
	0, 0, 1685, 1686, 1687, 1688, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	1710, 0, 0, 0, 0, 0, 1690, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 1698,
	0, 0, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 1346,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 1660, 1661, 0, 1693, 1694,
	1695, 1703, 1704, 1705, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 1701, 1696, 1691, 0, 0,
	0, 0, 0, 1346, 1663, 0, 0, 0, 1346, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 1346, 1662, 1346,
	0, 0, 0, 1226, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 2947, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 1346, 1346, 0, 1668, 0, 0,
	1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 1696, 1691, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 1700, 0, 0, 1710, 0, 1709, 0, 0,
	0, 1690, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 1226, 0, 0, 1706, 0, 1707,
	0, 0, 0, 1662, 0, 0, 1677, 1678, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 1698, 1660, 1661, 0, 1693, 1694,
	1695, 1703, 1704, 1705, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 1696, 1691, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 1226, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 1685, 1686, 1687, 1688, 0, 1697, 1682, 0,
	0, 0, 1668, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	1710, 0, 0, 0, 0, 0, 1690, 1692, 0, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 0, 0,
	0, 0, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 0, 0, 1684, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 0, 0, 0, 1668, 0, 1698,
	1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	1701, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 1696, 1691, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 1700, 0, 0, 1710, 0, 1709, 0, 0,
	0, 1690, 1692, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 1706, 0, 1707,
	0, 0, 0, 1662, 0, 0, 1677, 1678, 0, 0,
	0, 0, 1697, 1682, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 1674,
	1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 0, 0, 0, 0,
	1689, 0, 0, 2946, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 1685, 1686, 1687, 1688, 0, 1697, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	1710, 0, 0, 0, 0, 0, 1690, 1692, 0, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 0, 0,
	0, 1346, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 1346,
	1701, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 1346, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 1226, 0, 0, 0, 0, 0, 2333, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 1674,
	1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 0, 0, 0, 4151,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703, 1704,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 1691, 1701, 0, 0, 0, 0,
	0, 1663, 0, 0, 1226, 0, 1226, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 1226, 0, 0,
	1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 0, 0, 4063, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 1687, 1688, 0, 0,
	0, 0, 0, 1346, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 1710, 0, 0, 0, 0, 0, 1690, 1692,
	0, 0, 0, 0, 0, 0, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 1706, 0, 1707, 1226, 0, 0,
	0, 0, 0, 1677, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	1346, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 1674, 1675, 1681, 1702,
	1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667,
	1669, 1670, 0, 0, 0, 0, 4062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1229, 257, 258,
	1230, 1231, 1232, 1346, 1233, 571, 1234, 1235, 1236, 1237,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 1238, 576, 268, 269, 270,
	271, 272, 273, 1239, 1240, 0, 274, 577, 578, 579,
	1241, 275, 276, 580, 1242, 1309, 1243, 277, 278, 279,
	280, 281, 282, 283, 0, 1244, 285, 286, 287, 284,
	1245, 288, 0, 289, 290, 291, 292, 293, 294, 1246,
	295, 296, 297, 1098, 298, 299, 1247, 1248, 1250, 1249,
	1251, 1252, 1253, 300, 301, 302, 303, 0, 304, 581,
	582, 1254, 308, 305, 306, 1255, 309, 307, 1256, 310,
	311, 312, 1257, 1258, 313, 314, 315, 1259, 316, 317,
	1260, 318, 319, 320, 1261, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	1262, 248, 1263, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 1264, 338, 1265, 1266, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 1267, 349, 589, 1268, 590, 350, 1269, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 1270, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 1271, 1100, 364, 594, 595, 1272, 596,
	1273, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	1274, 378, 380, 379, 1275, 381, 598, 1105, 382, 383,
	1106, 1276, 384, 0, 0, 0, 385, 386, 1277, 1278,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 1279, 250, 1109, 426, 427, 1280, 599,
	428, 600, 430, 431, 1281, 0, 432, 0, 1282, 1283,
	434, 435, 436, 1284, 1285, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 1286, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 1287,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 1288, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	1289, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 1290, 505, 506, 504, 507, 508, 509,
	1291, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 1292, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	1293, 531, 532, 0, 530, 1294, 533, 534, 535, 536,
	537, 538, 328, 539, 1295, 540, 612, 613, 614, 615,
	1296, 549, 1297, 541, 542, 543, 616, 544, 617, 1298,
	545, 546, 547, 548, 0, 550, 551, 1299, 1300, 552,
	553, 554, 556, 557, 555, 558, 1301, 559, 1302, 0,
	560, 561, 562, 618, 619, 620, 1303, 564, 563, 565,
	621, 1304, 1305, 1306, 1307, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 2497, 0, 0, 0, 0, 0, 0, 0,
	2498, 251, 252, 253, 254, 255, 256, 1229, 257, 258,
	1230, 1231, 1232, 0, 1233, 571, 1234, 1235, 1236, 1237,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 1238, 576, 268, 269, 270,
	271, 272, 273, 1239, 1240, 0, 274, 577, 578, 579,
	1241, 275, 276, 580, 1242, 1309, 1243, 277, 278, 279,
	280, 281, 282, 283, 0, 1244, 285, 286, 287, 284,
	1245, 288, 0, 289, 290, 291, 292, 293, 294, 1246,
	295, 296, 297, 1098, 298, 299, 1247, 1248, 1250, 1249,
	1251, 1252, 1253, 300, 301, 302, 303, 0, 304, 581,
	582, 1254, 308, 305, 306, 1255, 309, 307, 1256, 310,
	311, 312, 1257, 1258, 313, 314, 315, 1259, 316, 317,
	1260, 318, 319, 320, 1261, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	1262, 248, 1263, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 1264, 338, 1265, 1266, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 1267, 349, 589, 1268, 590, 350, 1269, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 1270, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 1271, 1100, 364, 594, 595, 1272, 596,
	1273, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	1274, 378, 380, 379, 1275, 381, 598, 1105, 382, 383,
	1106, 1276, 384, 0, 0, 0, 385, 386, 1277, 1278,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 1279, 250, 1109, 426, 427, 1280, 599,
	428, 600, 430, 431, 1281, 0, 432, 0, 1282, 1283,
	434, 435, 436, 1284, 1285, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 1286, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 1287,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 1288, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	1289, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 1290, 505, 506, 504, 507, 508, 509,
	1291, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 1292, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	1293, 531, 532, 0, 530, 1294, 533, 534, 535, 536,
	537, 538, 328, 539, 1295, 540, 612, 613, 614, 615,
	1296, 549, 1297, 541, 542, 543, 616, 544, 617, 1298,
	545, 546, 547, 548, 0, 550, 551, 1299, 1300, 552,
	553, 554, 556, 557, 555, 558, 1301, 559, 1302, 0,
	560, 561, 562, 618, 619, 620, 1303, 564, 563, 565,
	621, 1304, 1305, 1306, 1307, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 3382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3384, 251,
	252, 253, 254, 255, 256, 1229, 257, 258, 1230, 1231,
	1232, 0, 1233, 571, 1234, 1235, 1236, 1237, 259, 260,
	1097, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 1238, 576, 268, 269, 270, 271, 272,
	273, 1239, 1240, 0, 274, 577, 578, 579, 1241, 275,
	276, 580, 1242, 1309, 1243, 277, 278, 279, 280, 281,
	282, 283, 0, 1244, 285, 286, 287, 284, 1245, 288,
	0, 289, 290, 291, 292, 293, 294, 1246, 295, 296,
	297, 1098, 298, 299, 1247, 1248, 1250, 1249, 1251, 1252,
	1253, 300, 301, 302, 303, 0, 304, 581, 582, 1254,
	308, 305, 306, 1255, 309, 307, 1256, 310, 311, 312,
	1257, 1258, 313, 314, 315, 1259, 316, 317, 1260, 318,
	319, 320, 1261, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 1262, 248,
	1263, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 1264, 338, 1265, 1266, 1099, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	1267, 349, 589, 1268, 590, 350, 1269, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 1101, 356, 357, 1270,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 1271, 1100, 364, 594, 595, 1272, 596, 1273, 366,
	367, 1102, 597, 1103, 368, 369, 370, 1104, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 1274, 378,
	380, 379, 1275, 381, 598, 1105, 382, 383, 1106, 1276,
	384, 0, 0, 0, 385, 386, 1277, 1278, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 1107, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 1108,
	416, 1279, 250, 1109, 426, 427, 1280, 599, 428, 600,
	430, 431, 1281, 0, 432, 0, 1282, 1283, 434, 435,
	436, 1284, 1285, 437, 438, 601, 1110, 439, 1111, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 1286, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 1287, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 1288, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 1289, 482,
	483, 484, 1112, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 1290, 505, 506, 504, 507, 508, 509, 1291, 510,
	494, 495, 511, 512, 1113, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 1292, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 1293, 531,
	532, 0, 530, 1294, 533, 534, 535, 536, 537, 538,
	328, 539, 1295, 540, 612, 613, 614, 615, 1296, 549,
	1297, 541, 542, 543, 616, 544, 617, 1298, 545, 546,
	547, 548, 0, 550, 551, 1299, 1300, 552, 553, 554,
	556, 557, 555, 558, 1301, 559, 1302, 0, 560, 561,
	562, 618, 619, 620, 1303, 564, 563, 565, 621, 1304,
	1305, 1306, 1307, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3736, 251, 252, 253, 254, 255, 256, 1229, 257, 258,
	1230, 1231, 1232, 0, 1233, 571, 1234, 1235, 1236, 1237,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 1238, 576, 268, 269, 270,
	271, 272, 273, 1239, 1240, 0, 274, 577, 578, 579,
	1241, 275, 276, 580, 1242, 1309, 1243, 277, 278, 279,
	280, 281, 282, 283, 0, 1244, 285, 286, 287, 284,
	1245, 288, 0, 289, 290, 291, 292, 293, 294, 1246,
	295, 296, 297, 1098, 298, 299, 1247, 1248, 1250, 1249,
	1251, 1252, 1253, 300, 301, 302, 303, 0, 304, 581,
	582, 1254, 308, 305, 306, 1255, 309, 307, 1256, 310,
	311, 312, 1257, 1258, 313, 314, 315, 1259, 316, 317,
	1260, 318, 319, 320, 1261, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	1262, 248, 1263, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 1264, 338, 1265, 1266, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 1267, 349, 589, 1268, 590, 350, 1269, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 1270, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 1271, 1100, 364, 594, 595, 1272, 596,
	1273, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	1274, 378, 380, 379, 1275, 381, 598, 1105, 382, 383,
	1106, 1276, 384, 0, 0, 0, 385, 386, 1277, 1278,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 1279, 250, 1109, 426, 427, 1280, 599,
	428, 600, 430, 431, 1281, 0, 432, 0, 1282, 1283,
	434, 435, 436, 1284, 1285, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 1286, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 1287,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 1288, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	1289, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 1290, 505, 506, 504, 507, 508, 509,
	1291, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 1292, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	1293, 531, 532, 0, 530, 1294, 533, 534, 535, 536,
	537, 538, 328, 539, 1295, 540, 612, 613, 614, 615,
	1296, 549, 1297, 541, 542, 543, 616, 544, 617, 1298,
	545, 546, 547, 548, 0, 550, 551, 1299, 1300, 552,
	553, 554, 556, 557, 555, 558, 1301, 559, 1302, 0,
	560, 561, 562, 618, 619, 620, 1303, 564, 563, 565,
	621, 1304, 1305, 1306, 1307, 566, 567, 622, 568, 569,
	570, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3907, 251, 252,
	253, 254, 255, 256, 1229, 257, 258, 1230, 1231, 1232,
	0, 1233, 571, 1234, 1235, 1236, 1237, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 1238, 576, 268, 269, 270, 271, 272, 273,
	1239, 1240, 0, 274, 577, 578, 579, 1241, 275, 276,
	580, 1242, 1309, 1243, 277, 278, 279, 280, 281, 282,
	283, 0, 1244, 285, 286, 287, 284, 1245, 288, 0,
	289, 290, 291, 292, 293, 294, 1246, 295, 296, 297,
	1098, 298, 299, 1247, 1248, 1250, 1249, 1251, 1252, 1253,
	300, 301, 302, 303, 0, 304, 581, 582, 1254, 308,
	305, 306, 1255, 309, 307, 1256, 310, 311, 312, 1257,
	1258, 313, 314, 315, 1259, 316, 317, 1260, 318, 319,
	320, 1261, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 1262, 248, 1263,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 1264, 338, 1265, 1266, 1099, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 1267,
	349, 589, 1268, 590, 350, 1269, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 1101, 356, 357, 1270, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	1271, 1100, 364, 594, 595, 1272, 596, 1273, 366, 367,
	1102, 597, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 1274, 378, 380,
	379, 1275, 381, 598, 1105, 382, 383, 1106, 1276, 384,
	0, 0, 0, 385, 386, 1277, 1278, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	1279, 250, 1109, 426, 427, 1280, 599, 428, 600, 430,
	431, 1281, 0, 432, 0, 1282, 1283, 434, 435, 436,
	1284, 1285, 437, 438, 601, 1110, 439, 1111, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	1286, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 1287, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	1288, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 1289, 482, 483,
	484, 1112, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	1290, 505, 506, 504, 507, 508, 509, 1291, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 1292, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 1293, 531, 532,
	0, 530, 1294, 533, 534, 535, 536, 537, 538, 328,
	539, 1295, 540, 612, 613, 614, 615, 1296, 549, 1297,
	541, 542, 543, 616, 544, 617, 1298, 545, 546, 547,
	548, 0, 550, 551, 1299, 1300, 552, 553, 554, 556,
	557, 555, 558, 1301, 559, 1302, 0, 560, 561, 562,
	618, 619, 620, 1303, 564, 563, 565, 621, 1304, 1305,
	1306, 1307, 566, 567, 622, 568, 569, 570, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3796, 251, 252, 253, 254, 255,
	256, 1229, 257, 258, 1230, 1231, 1232, 0, 1233, 571,
	1234, 1235, 1236, 1237, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 1238,
	576, 268, 269, 270, 271, 272, 273, 1239, 1240, 0,
	274, 577, 578, 579, 1241, 275, 276, 580, 1242, 1309,
	1243, 277, 278, 279, 280, 281, 282, 283, 0, 1244,
	285, 286, 287, 284, 1245, 288, 0, 289, 290, 291,
	292, 293, 294, 1246, 295, 296, 297, 1098, 298, 299,
	1247, 1248, 1250, 1249, 1251, 1252, 1253, 300, 301, 302,
	303, 0, 304, 581, 582, 1254, 308, 305, 306, 1255,
	309, 307, 1256, 310, 311, 312, 1257, 1258, 313, 314,
	315, 1259, 316, 317, 1260, 318, 319, 320, 1261, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 1262, 248, 1263, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 1264,
	338, 1265, 1266, 1099, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 1267, 349, 589, 1268,
	590, 350, 1269, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 1101, 356, 357, 1270, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 1271, 1100, 364,
	594, 595, 1272, 596, 1273, 366, 367, 1102, 597, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 1274, 378, 380, 379, 1275, 381,
	598, 1105, 382, 383, 1106, 1276, 384, 0, 0, 0,
	385, 386, 1277, 1278, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 1279, 250, 1109,
	426, 427, 1280, 599, 428, 600, 430, 431, 1281, 0,
	432, 0, 1282, 1283, 434, 435, 436, 1284, 1285, 437,
	438, 601, 1110, 439, 1111, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 1286, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 1287, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 1288, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 1289, 482, 483, 484, 1112, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 1290, 505, 506,
	504, 507, 508, 509, 1291, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	1292, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 1293, 531, 532, 0, 530, 1294,
	533, 534, 535, 536, 537, 538, 328, 539, 1295, 540,
	612, 613, 614, 615, 1296, 549, 1297, 541, 542, 543,
	616, 544, 617, 1298, 545, 546, 547, 548, 0, 550,
	551, 1299, 1300, 552, 553, 554, 556, 557, 555, 558,
	1301, 559, 1302, 0, 560, 561, 562, 618, 619, 620,
	1303, 564, 563, 565, 621, 1304, 1305, 1306, 1307, 566,
	567, 622, 568, 569, 570, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3666, 251, 252, 253, 254, 255, 256, 1229, 257,
	258, 1230, 1231, 1232, 0, 1233, 571, 1234, 1235, 1236,
	1237, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 1238, 576, 268, 269,
	270, 271, 272, 273, 1239, 1240, 0, 274, 577, 578,
	579, 1241, 275, 276, 580, 1242, 1309, 1243, 277, 278,
	279, 280, 281, 282, 283, 0, 1244, 285, 286, 287,
	284, 1245, 288, 0, 289, 290, 291, 292, 293, 294,
	1246, 295, 296, 297, 1098, 298, 299, 1247, 1248, 1250,
	1249, 1251, 1252, 1253, 300, 301, 302, 303, 0, 304,
	581, 582, 1254, 308, 305, 306, 1255, 309, 307, 1256,
	310, 311, 312, 1257, 1258, 313, 314, 315, 1259, 316,
	317, 1260, 318, 319, 320, 1261, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 1262, 248, 1263, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 1264, 338, 1265, 1266,
	1099, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 1267, 349, 589, 1268, 590, 350, 1269,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 1101,
	356, 357, 1270, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1271, 1100, 364, 594, 595, 1272,
	596, 1273, 366, 367, 1102, 597, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1274, 378, 380, 379, 1275, 381, 598, 1105, 382,
	383, 1106, 1276, 384, 0, 0, 0, 385, 386, 1277,
	1278, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 1279, 250, 1109, 426, 427, 1280,
	599, 428, 600, 430, 431, 1281, 0, 432, 0, 1282,
	1283, 434, 435, 436, 1284, 1285, 437, 438, 601, 1110,
	439, 1111, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 1286, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	1287, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 1288, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 1289, 482, 483, 484, 1112, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 1290, 505, 506, 504, 507, 508,
	509, 1291, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 1292, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 1293, 531, 532, 0, 530, 1294, 533, 534, 535,
	536, 537, 538, 328, 539, 1295, 540, 612, 613, 614,
	615, 1296, 549, 1297, 541, 542, 543, 616, 544, 617,
	1298, 545, 546, 547, 548, 0, 550, 551, 1299, 1300,
	552, 553, 554, 556, 557, 555, 558, 1301, 559, 1302,
	0, 560, 561, 562, 618, 619, 620, 1303, 564, 563,
	565, 621, 1304, 1305, 1306, 1307, 566, 567, 622, 568,
	569, 570, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3400, 251,
	252, 253, 254, 255, 256, 1229, 257, 258, 1230, 1231,
	1232, 0, 1233, 571, 1234, 1235, 1236, 1237, 259, 260,
	1097, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 1238, 576, 268, 269, 270, 271, 272,
	273, 1239, 1240, 0, 274, 577, 578, 579, 1241, 275,
	276, 580, 1242, 1309, 1243, 277, 278, 279, 280, 281,
	282, 283, 0, 1244, 285, 286, 287, 284, 1245, 288,
	0, 289, 290, 291, 292, 293, 294, 1246, 295, 296,
	297, 1098, 298, 299, 1247, 1248, 1250, 1249, 1251, 1252,
	1253, 300, 301, 302, 303, 0, 304, 581, 582, 1254,
	308, 305, 306, 1255, 309, 307, 1256, 310, 311, 312,
	1257, 1258, 313, 314, 315, 1259, 316, 317, 1260, 318,
	319, 320, 1261, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 1262, 248,
	1263, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 1264, 338, 1265, 1266, 1099, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	1267, 349, 589, 1268, 590, 350, 1269, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 1101, 356, 357, 1270,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 1271, 1100, 364, 594, 595, 1272, 596, 1273, 366,
	367, 1102, 597, 1103, 368, 369, 370, 1104, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 1274, 378,
	380, 379, 1275, 381, 598, 1105, 382, 383, 1106, 1276,
	384, 0, 0, 0, 385, 386, 1277, 1278, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 1107, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 1108,
	416, 1279, 250, 1109, 426, 427, 1280, 599, 428, 600,
	430, 431, 1281, 0, 432, 0, 1282, 1283, 434, 435,
	436, 1284, 1285, 437, 438, 601, 1110, 439, 1111, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 1286, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 1287, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 1288, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 1289, 482,
	483, 484, 1112, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 1290, 505, 506, 504, 507, 508, 509, 1291, 510,
	494, 495, 511, 512, 1113, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 1292, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 1293, 531,
	532, 0, 530, 1294, 533, 534, 535, 536, 537, 538,
	328, 539, 1295, 540, 612, 613, 614, 615, 1296, 549,
	1297, 541, 542, 543, 616, 544, 617, 1298, 545, 546,
	547, 548, 0, 550, 551, 1299, 1300, 552, 553, 554,
	556, 557, 555, 558, 1301, 559, 1302, 0, 560, 561,
	562, 618, 619, 620, 1303, 564, 563, 565, 621, 1304,
	1305, 1306, 1307, 566, 567, 622, 568, 569, 570, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3227, 251, 252, 253, 254,
	255, 256, 1229, 257, 258, 1230, 1231, 1232, 0, 1233,
	571, 1234, 1235, 1236, 1237, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	1238, 576, 268, 269, 270, 271, 272, 273, 1239, 1240,
	0, 274, 577, 578, 579, 1241, 275, 276, 580, 1242,
	1309, 1243, 277, 278, 279, 280, 281, 282, 283, 0,
	1244, 285, 286, 287, 284, 1245, 288, 0, 289, 290,
	291, 292, 293, 294, 1246, 295, 296, 297, 1098, 298,
	299, 1247, 1248, 1250, 1249, 1251, 1252, 1253, 300, 301,
	302, 303, 0, 304, 581, 582, 1254, 308, 305, 306,
	1255, 309, 307, 1256, 310, 311, 312, 1257, 1258, 313,
	314, 315, 1259, 316, 317, 1260, 318, 319, 320, 1261,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 1262, 248, 1263, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	1264, 338, 1265, 1266, 1099, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 1267, 349, 589,
	1268, 590, 350, 1269, 351, 352, 353, 354, 355, 591,
	592, 593, 429, 1101, 356, 357, 1270, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 1271, 1100,
	364, 594, 595, 1272, 596, 1273, 366, 367, 1102, 597,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 1274, 378, 380, 379, 1275,
	381, 598, 1105, 382, 383, 1106, 1276, 384, 0, 0,
	0, 385, 386, 1277, 1278, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 1279, 250,
	1109, 426, 427, 1280, 599, 428, 600, 430, 431, 1281,
	0, 432, 0, 1282, 1283, 434, 435, 436, 1284, 1285,
	437, 438, 601, 1110, 439, 1111, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 1286, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 1287, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 1288, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 1289, 482, 483, 484, 1112,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 1290, 505,
	506, 504, 507, 508, 509, 1291, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 1292, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 1293, 531, 532, 0, 530,
	1294, 533, 534, 535, 536, 537, 538, 328, 539, 1295,
	540, 612, 613, 614, 615, 1296, 549, 1297, 541, 542,
	543, 616, 544, 617, 1298, 545, 546, 547, 548, 0,
	550, 551, 1299, 1300, 552, 553, 554, 556, 557, 555,
	558, 1301, 559, 1302, 0, 560, 561, 562, 618, 619,
	620, 1303, 564, 563, 565, 621, 1304, 1305, 1306, 1307,
	566, 567, 622, 568, 569, 570, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2356, 251, 252, 253, 254, 255, 256, 1229,
	257, 258, 1230, 1231, 1232, 0, 1233, 571, 1234, 1235,
	1236, 1237, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 1238, 576, 268,
	269, 270, 271, 272, 273, 1239, 1240, 0, 274, 577,
	578, 579, 1241, 275, 276, 580, 1242, 1309, 1243, 277,
	278, 279, 280, 281, 282, 283, 0, 1244, 285, 286,
	287, 284, 1245, 288, 0, 289, 290, 291, 292, 293,
	294, 1246, 295, 296, 297, 1098, 298, 299, 1247, 1248,
	1250, 1249, 1251, 1252, 1253, 300, 301, 302, 303, 0,
	304, 581, 582, 1254, 308, 305, 306, 1255, 309, 307,
	1256, 310, 311, 312, 1257, 1258, 313, 314, 315, 1259,
	316, 317, 1260, 318, 319, 320, 1261, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 1262, 248, 1263, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 1264, 338, 1265,
	1266, 1099, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 1267, 349, 589, 1268, 590, 350,
	1269, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	1101, 356, 357, 1270, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 1271, 1100, 364, 594, 595,
	1272, 596, 1273, 366, 367, 1102, 597, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 1274, 378, 380, 379, 1275, 381, 598, 1105,
	382, 383, 1106, 1276, 384, 0, 0, 0, 385, 386,
	1277, 1278, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 1279, 250, 1109, 426, 427,
	1280, 599, 428, 600, 430, 431, 1281, 0, 432, 0,
	1282, 1283, 434, 435, 436, 1284, 1285, 437, 438, 601,
	1110, 439, 1111, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 1286, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 1287, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 1288, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 1289, 482, 483, 484, 1112, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 1290, 505, 506, 504, 507,
	508, 509, 1291, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 1292, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 1293, 531, 532, 0, 530, 1294, 533, 534,
	535, 536, 537, 538, 328, 539, 1295, 540, 612, 613,
	614, 615, 1296, 549, 1297, 541, 542, 543, 616, 544,
	617, 1298, 545, 546, 547, 548, 0, 550, 551, 1299,
	1300, 552, 553, 554, 556, 557, 555, 558, 1301, 559,
	1302, 0, 560, 561, 562, 618, 619, 620, 1303, 564,
	563, 565, 621, 1304, 1305, 1306, 1307, 566, 567, 622,
	568, 569, 570, 1321, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 251, 252, 253, 254, 255, 256, 1229, 257,
	258, 1230, 1231, 1232, 0, 1233, 571, 1234, 1235, 1236,
	1237, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 1238, 576, 268, 269,
	270, 271, 272, 273, 1239, 1240, 0, 274, 577, 578,
	579, 1241, 275, 276, 580, 1242, 1309, 1243, 277, 278,
	279, 280, 281, 282, 283, 0, 1244, 285, 286, 287,
	284, 1245, 288, 0, 289, 290, 291, 292, 293, 294,
	1246, 295, 296, 297, 1098, 298, 299, 1247, 1248, 1250,
	1249, 1251, 1252, 1253, 300, 301, 302, 303, 0, 304,
	581, 582, 1254, 308, 305, 306, 1255, 309, 307, 1256,
	310, 311, 312, 1257, 1258, 313, 314, 315, 1259, 316,
	317, 1260, 318, 319, 320, 1261, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 1262, 248, 1263, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 1264, 338, 1265, 1266,
	1099, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 1267, 349, 589, 1268, 590, 350, 1269,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 1101,
	356, 357, 1270, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1271, 1100, 364, 594, 595, 1272,
	596, 1273, 366, 367, 1102, 597, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1274, 378, 380, 379, 1275, 381, 598, 1105, 382,
	383, 1106, 1276, 384, 0, 0, 0, 385, 386, 1277,
	1278, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 1279, 250, 1109, 426, 427, 1280,
	599, 428, 600, 430, 431, 1281, 0, 432, 0, 1282,
	1283, 434, 435, 436, 1284, 1285, 437, 438, 601, 1110,
	439, 1111, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 1286, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	1287, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 1288, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 1289, 482, 483, 484, 1112, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 1290, 505, 506, 504, 507, 508,
	509, 1291, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 1292, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 1293, 531, 532, 0, 530, 1294, 533, 534, 535,
	536, 537, 538, 328, 539, 1295, 540, 612, 613, 614,
	615, 1296, 549, 1297, 541, 542, 543, 616, 544, 617,
	1298, 545, 546, 547, 548, 0, 550, 551, 1299, 1300,
	552, 553, 554, 556, 557, 555, 558, 1301, 559, 1302,
	0, 560, 561, 562, 618, 619, 620, 1303, 564, 563,
	565, 621, 1304, 1305, 1306, 1307, 566, 567, 622, 568,
	569, 570, 1220, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1229, 257, 258,
	1230, 1231, 1232, 0, 1233, 571, 1234, 1235, 1236, 1237,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 1238, 576, 268, 269, 270,
	271, 272, 273, 1239, 1240, 0, 274, 577, 578, 579,
	1241, 275, 276, 580, 1242, 1309, 1243, 277, 278, 279,
	280, 281, 282, 283, 0, 1244, 285, 286, 287, 284,
	1245, 288, 0, 289, 290, 291, 292, 293, 294, 1246,
	295, 296, 297, 1098, 298, 299, 1247, 1248, 1250, 1249,
	1251, 1252, 1253, 300, 301, 302, 303, 0, 304, 581,
	582, 1254, 308, 305, 306, 1255, 309, 307, 1256, 310,
	311, 312, 1257, 1258, 313, 314, 315, 1259, 316, 317,
	1260, 318, 319, 320, 1261, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	1262, 248, 1263, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 1264, 338, 1265, 1266, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 1267, 349, 589, 1268, 590, 350, 1269, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 1270, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 1271, 1100, 364, 594, 595, 1272, 596,
	1273, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	1274, 378, 380, 379, 1275, 381, 598, 1105, 382, 383,
	1106, 1276, 384, 0, 0, 0, 385, 386, 1277, 1278,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 1279, 250, 1109, 426, 427, 1280, 599,
	428, 600, 430, 431, 1281, 0, 432, 0, 1282, 1283,
	434, 435, 436, 1284, 1285, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 1286, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 1287,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 1288, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	1289, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 1290, 505, 506, 504, 507, 508, 509,
	1291, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 1292, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	1293, 531, 532, 0, 530, 1294, 533, 534, 535, 536,
	537, 538, 328, 539, 1295, 540, 612, 613, 614, 615,
	1296, 549, 1297, 541, 542, 543, 616, 544, 617, 1298,
	545, 546, 547, 548, 0, 550, 551, 1299, 1300, 552,
	553, 554, 556, 557, 555, 558, 1301, 559, 1302, 0,
	560, 561, 562, 618, 619, 620, 1303, 564, 563, 565,
	621, 1304, 1305, 1306, 1307, 566, 567, 622, 568, 569,
	570, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1229, 257, 258, 1230, 1231, 1232,
	0, 1233, 571, 1234, 1235, 1236, 1237, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 1238, 576, 268, 269, 270, 271, 272, 273,
	1239, 1240, 0, 274, 577, 578, 579, 1241, 275, 276,
	580, 1242, 1309, 1243, 277, 278, 279, 280, 281, 282,
	283, 0, 1244, 285, 286, 287, 284, 1245, 288, 0,
	289, 290, 291, 292, 293, 294, 1246, 295, 296, 297,
	1098, 298, 299, 1247, 1248, 1250, 1249, 1251, 1252, 1253,
	300, 301, 302, 303, 0, 304, 581, 582, 1254, 308,
	305, 306, 1255, 309, 307, 1256, 310, 311, 312, 1257,
	1258, 313, 314, 315, 1259, 316, 317, 1260, 318, 319,
	320, 1261, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 1262, 248, 1263,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 1264, 338, 1265, 1266, 1099, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 1267,
	349, 589, 1268, 590, 350, 1269, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 1101, 356, 357, 1270, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	1271, 1100, 364, 594, 595, 1272, 596, 1273, 366, 367,
	1102, 597, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 1274, 378, 380,
	379, 1275, 381, 598, 1105, 382, 383, 1106, 1276, 384,
	0, 0, 0, 385, 386, 1277, 1278, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	1279, 250, 1109, 426, 427, 1280, 599, 428, 600, 430,
	431, 1281, 0, 432, 0, 1282, 1283, 434, 435, 436,
	1284, 1285, 437, 438, 601, 1110, 439, 1111, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	1286, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 1287, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	1288, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 1289, 482, 483,
	484, 1112, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	1290, 505, 506, 504, 507, 508, 509, 1291, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 1292, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 1293, 531, 532,
	0, 530, 1294, 533, 534, 535, 536, 537, 538, 328,
	539, 1295, 540, 612, 613, 614, 615, 1296, 549, 1297,
	541, 542, 543, 616, 544, 617, 1298, 545, 546, 547,
	548, 0, 550, 551, 1299, 1300, 552, 553, 554, 556,
	557, 555, 558, 1301, 559, 1302, 0, 560, 561, 562,
	618, 619, 620, 1303, 564, 563, 565, 621, 1304, 1305,
	1306, 1307, 566, 567, 622, 568, 569, 570, 2331, 0,
	1033, 1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 2328, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 304, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 2329, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 354, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 2327, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 2330, 0, 0, 0, 0, 0, 0,
	1017, 2326, 0, 979, 1015, 1033, 1005, 1006, 1007, 1003,
	1004, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 1021, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	1070, 0, 266, 1077, 267, 1076, 0, 1087, 268, 269,
	270, 271, 272, 273, 1023, 1056, 990, 274, 1117, 1118,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080, 304,
	1074, 1073, 994, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1065, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 1000, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 1012, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1072, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 1085, 1086, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 1022, 350, 0,
	351, 352, 353, 354, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 1067, 1068, 0,
	1028, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 991, 250, 1109, 426, 427, 1013,
	1061, 428, 1075, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	1071, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	1001, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 212, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 1069, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 1116, 525, 526, 527, 528,
	1092, 0, 531, 532, 989, 530, 214, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 1081, 1082, 1083,
	1084, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	1011, 545, 546, 547, 548, 0, 550, 551, 0, 995,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 1498, 1078, 1115, 0, 564, 563,
	565, 621, 0, 0, 0, 206, 566, 567, 622, 568,
	569, 570, 992, 207, 0, 0, 0, 0, 0, 988,
	0, 0, 0, 0, 0, 0, 986, 987, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 1735, 1733, 0, 0, 1015,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 212, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 214,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 1498, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 206, 566,
	567, 622, 568, 569, 570, 992, 207, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 1033, 1005, 1006, 1007, 1003, 1004, 1016, 1735, 2904,
	0, 0, 1015, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1057, 1021, 0, 0, 0, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 1070, 0, 266, 1077,
	267, 1076, 0, 1087, 268, 269, 270, 271, 272, 273,
	1023, 1056, 990, 274, 1117, 1118, 579, 0, 275, 276,
	1063, 0, 1044, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1098, 298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052,
	300, 301, 302, 303, 1080, 304, 1074, 1073, 994, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1065, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 1000, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1088, 1089, 1012, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1072, 0, 0,
	0, 337, 0, 338, 0, 0, 1099, 339, 340, 1085,
	1086, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1095, 0, 1022, 350, 0, 351, 352, 353, 354,
	355, 1058, 1059, 1062, 429, 1101, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1100, 364, 1067, 1068, 0, 1028, 0, 366, 367,
	1102, 1060, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1096, 1105, 382, 383, 1106, 0, 384,
	0, 0, 0, 385, 386, 1051, 1050, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	991, 250, 1109, 426, 427, 1013, 1061, 428, 1075, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 1110, 439, 1111, 1090, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 1091, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 1071, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 1112, 485, 486, 487, 488, 1001, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	212, 505, 506, 504, 507, 508, 509, 1054, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	1069, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 1116, 525, 526, 527, 528, 1092, 0, 531, 532,
	989, 530, 214, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 1081, 1082, 1083, 1084, 0, 549, 0,
	541, 542, 543, 1093, 544, 1094, 1011, 545, 546, 547,
	548, 0, 550, 551, 0, 995, 552, 553, 554, 556,
	557, 555, 558, 1055, 559, 0, 0, 560, 561, 562,
	1498, 1078, 1115, 0, 564, 563, 565, 621, 0, 0,
	0, 206, 566, 567, 622, 568, 569, 570, 992, 207,
	0, 0, 0, 0, 0, 988, 0, 0, 0, 0,
	0, 0, 986, 987, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 1735, 1733, 0, 0, 1015, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 2459, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 2464, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 2460, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 2461, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 550, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 2376, 1015, 1033,
	1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1057, 1021, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 1070, 0, 266, 1077, 267, 1076,
	0, 1087, 268, 269, 270, 271, 272, 273, 1023, 1056,
	990, 274, 1117, 1118, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 1080, 304, 1074, 1073, 994, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1065, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 1000, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 1012, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1072, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 1085, 1086, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 1022, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 991, 250,
	1109, 426, 427, 1013, 1061, 428, 1075, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 1071, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 1001, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 1069, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 1116,
	525, 526, 527, 528, 1092, 0, 531, 532, 989, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 1081, 1082, 1083, 1084, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 1011, 545, 546, 547, 548, 0,
	550, 551, 0, 995, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 1078,
	1115, 0, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 992, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	986, 987, 0, 0, 0, 0, 0, 0, 0, 1017,
	2374, 0, 2373, 1015, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 0, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 0, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 550, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 0, 0, 0,
	0, 0, 0, 0, 1017, 2371, 0, 2370, 1015, 1033,
	1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1057, 1021, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 1070, 0, 266, 1077, 267, 1076,
	0, 1087, 268, 269, 270, 271, 272, 273, 1023, 1056,
	990, 274, 1117, 1118, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 1080, 304, 1074, 1073, 994, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1065, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 1000, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 1012, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1072, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 1085, 1086, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 1022, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 991, 250,
	1109, 426, 427, 1013, 1061, 428, 1075, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 1071, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 1001, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 1069, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 1116,
	525, 526, 527, 528, 1092, 0, 531, 532, 989, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 1081, 1082, 1083, 1084, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 1011, 545, 546, 547, 548, 0,
	550, 551, 0, 995, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 1078,
	1115, 0, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 992, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	986, 987, 0, 0, 0, 0, 0, 0, 0, 1017,
	2368, 0, 2367, 1015, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 0, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 0, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 550, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 0, 0, 0,
	0, 0, 0, 0, 1017, 2365, 0, 1588, 1015, 1033,
	1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1057, 1021, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 1070, 0, 266, 1077, 267, 1076,
	0, 1087, 268, 269, 270, 271, 272, 273, 1023, 1056,
	990, 274, 1117, 1118, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 1080, 304, 1074, 1073, 994, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1065, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 1000, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 1012, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1072, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 1085, 1086, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 1022, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 991, 250,
	1109, 426, 427, 1013, 1061, 428, 1075, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 1071, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 1001, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 1069, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 1116,
	525, 526, 527, 528, 1092, 0, 531, 532, 989, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 1081, 1082, 1083, 1084, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 1011, 545, 546, 547, 548, 0,
	550, 551, 0, 995, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 1078,
	1115, 0, 564, 563, 565, 621, 1587, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 992, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	986, 987, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 982, 1015, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 0, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 996, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 0, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 550, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 1033, 1005, 1006,
	1007, 1003, 1004, 1016, 1017, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1057, 1021,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 572, 1070, 0, 266, 1077, 267, 1076, 0, 1087,
	268, 269, 270, 271, 272, 273, 1023, 1056, 990, 274,
	1117, 1118, 579, 0, 275, 276, 1063, 0, 1044, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	4174, 294, 0, 295, 296, 297, 1098, 298, 299, 1047,
	1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303,
	1080, 304, 1074, 1073, 994, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1065, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	1000, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1088, 1089, 1012, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1072, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 1085, 1086, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1095, 0, 1022,
	350, 0, 351, 352, 353, 354, 355, 1058, 1059, 1062,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1100, 364, 1067,
	1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1096,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 1051, 1050, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 991, 250, 1109, 426,
	427, 1013, 1061, 428, 1075, 430, 431, 0, 0, 432,
	0, 996, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 1110, 439, 1111, 1090, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 1091, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 1071, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 1001, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 1054, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 1069, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 1116, 525, 526,
	527, 528, 1092, 0, 531, 532, 989, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 1081,
	1082, 1083, 1084, 0, 549, 0, 541, 542, 543, 1093,
	544, 1094, 1011, 545, 546, 547, 548, 0, 550, 551,
	0, 995, 552, 553, 554, 556, 557, 555, 558, 1055,
	559, 0, 0, 560, 561, 562, 618, 1078, 1115, 0,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 992, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 0, 0, 0, 0, 986, 987,
	1033, 1005, 1006, 1007, 1003, 1004, 1016, 1017, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 304, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 354, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 2245, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 2244, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 0, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	1017, 0, 0, 0, 1015, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 996, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 1033, 1005, 1006, 1007,
	1003, 1004, 1016, 1017, 0, 0, 0, 1015, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1057, 1021, 0,
	0, 0, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 1070, 0, 266, 1077, 267, 1076, 0, 1087, 268,
	269, 270, 271, 272, 273, 1023, 1056, 990, 274, 1117,
	1118, 579, 0, 275, 276, 1063, 0, 1044, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 3970,
	294, 0, 295, 296, 297, 1098, 298, 299, 1047, 1045,
	1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080,
	304, 1074, 1073, 994, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1065, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 1000,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1088, 1089, 1012, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1072, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 1085, 1086, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1095, 0, 1022, 350,
	0, 351, 352, 353, 354, 355, 1058, 1059, 1062, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1100, 364, 1067, 1068,
	0, 1028, 0, 366, 367, 1102, 1060, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1096, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	1051, 1050, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 991, 250, 1109, 426, 427,
	1013, 1061, 428, 1075, 430, 431, 0, 0, 432, 0,
	996, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 1090, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 1091, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 1071, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 1001, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 1054, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 1069, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 1116, 525, 526, 527,
	528, 1092, 0, 531, 532, 989, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 1081, 1082,
	1083, 1084, 0, 549, 0, 541, 542, 543, 1093, 544,
	1094, 1011, 545, 546, 547, 548, 0, 550, 551, 0,
	995, 552, 553, 554, 556, 557, 555, 558, 1055, 559,
	0, 0, 560, 561, 562, 618, 1078, 1115, 0, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 992, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 986, 987, 1033,
	1005, 1006, 1007, 1003, 1004, 1016, 1017, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1057, 1021, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 1070, 0, 266, 1077, 267, 1076,
	0, 1087, 268, 269, 270, 271, 272, 273, 1023, 1056,
	990, 274, 1117, 1118, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 1080, 304, 1074, 1073, 994, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1065, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 1000, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 1012, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1072, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 1085, 1086, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 1022, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 991, 3628,
	1109, 426, 427, 1013, 1061, 428, 1075, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 1071, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 1001, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 1069, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 1116,
	525, 526, 527, 528, 1092, 0, 531, 532, 989, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 1081, 1082, 1083, 1084, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 1011, 545, 546, 547, 548, 0,
	550, 551, 0, 995, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 1078,
	1115, 0, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 992, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	986, 987, 1803, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 1015, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 0, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 0, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 550, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 3378, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 1033, 1005, 1006,
	1007, 1003, 1004, 1016, 1017, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1057, 1021,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 572, 1070, 0, 266, 1077, 267, 1076, 0, 1087,
	268, 269, 270, 271, 272, 273, 1023, 1056, 990, 274,
	1117, 1118, 579, 0, 275, 276, 1063, 0, 1044, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1098, 298, 299, 1047,
	1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303,
	1080, 304, 1074, 1073, 994, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1065, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	1000, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1088, 1089, 1012, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1072, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 1085, 1086, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1095, 0, 1022,
	350, 0, 351, 352, 353, 354, 355, 1058, 1059, 1062,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1100, 364, 1067,
	1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1096,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 1051, 1050, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 991, 250, 1109, 426,
	427, 1013, 1061, 428, 1075, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 1110, 439, 1111, 1090, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 1091, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 1071, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 1001, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 1054, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 1069, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 1116, 525, 526,
	527, 528, 1092, 0, 531, 532, 989, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 1081,
	1082, 1083, 1084, 0, 549, 0, 541, 542, 543, 1093,
	544, 1094, 1011, 545, 546, 547, 548, 0, 550, 551,
	0, 995, 552, 553, 554, 556, 557, 555, 558, 1055,
	559, 0, 0, 560, 561, 562, 618, 1078, 1115, 0,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 992, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 0, 0, 0, 0, 986, 987,
	1803, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1057, 1021, 0, 0, 0, 259, 260,
	1097, 261, 262, 263, 264, 265, 572, 1070, 0, 266,
	1077, 267, 1076, 0, 1087, 268, 269, 270, 271, 272,
	273, 1023, 1056, 990, 274, 1117, 1118, 579, 0, 275,
	276, 1063, 0, 1044, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049, 1048,
	1052, 300, 301, 302, 303, 1080, 304, 1074, 1073, 994,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1065, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 1000, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1088, 1089, 1012, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1072, 0,
	0, 0, 337, 0, 338, 0, 2464, 1099, 339, 340,
	1085, 1086, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 1095, 0, 1022, 350, 0, 351, 352, 353,
	354, 355, 1058, 1059, 1062, 429, 1101, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 1100, 364, 1067, 1068, 0, 1028, 0, 366,
	367, 1102, 1060, 1103, 368, 369, 370, 1104, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 1096, 1105, 382, 383, 1106, 0,
	384, 0, 0, 0, 385, 386, 1051, 1050, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 1107, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 1108,
	416, 991, 250, 1109, 426, 427, 1013, 1061, 428, 1075,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 1110, 439, 1111, 1090,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 1091, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 1071, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 1112, 485, 486, 487, 488, 1001, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 1054, 510,
	494, 495, 511, 512, 1113, 513, 514, 515, 516, 517,
	518, 1069, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 1116, 525, 526, 527, 528, 1092, 0, 531,
	532, 989, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 1081, 1082, 1083, 1084, 0, 549,
	0, 541, 542, 543, 1093, 544, 1094, 1011, 545, 546,
	547, 548, 0, 550, 551, 0, 995, 552, 553, 554,
	556, 557, 555, 558, 1055, 559, 0, 0, 560, 561,
	562, 618, 1078, 1115, 0, 564, 563, 565, 621, 0,
	0, 0, 0, 566, 567, 622, 568, 569, 570, 992,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 0,
	0, 0, 0, 986, 987, 1033, 1005, 1006, 1007, 1003,
	1004, 1016, 1017, 0, 0, 0, 1015, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 1021, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	1070, 0, 266, 1077, 267, 1076, 0, 1087, 268, 269,
	270, 271, 272, 273, 1023, 1056, 990, 274, 1117, 1118,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080, 304,
	1074, 1073, 994, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1065, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 1000, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 1012, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1072, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 1085, 1086, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 1022, 350, 0,
	351, 352, 353, 354, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 1067, 1068, 0,
	1028, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 991, 250, 1109, 426, 427, 1013,
	1061, 428, 1075, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	1071, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	1001, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 1069, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 1116, 525, 526, 527, 528,
	1092, 0, 531, 532, 989, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 1081, 1082, 1083,
	1084, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	1011, 545, 546, 547, 548, 0, 550, 551, 0, 995,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 618, 1078, 1115, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 992, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 0, 0, 0, 0, 986, 987, 0, 0,
	0, 0, 0, 0, 0, 1017, 1733, 0, 2469, 1015,
	1033, 1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 304, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 354, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 0, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 2467, 1015, 1033, 1005, 1006, 1007, 1003,
	1004, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 1021, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	1070, 0, 266, 1077, 267, 1076, 0, 1087, 268, 269,
	270, 271, 272, 273, 1023, 1056, 990, 274, 1117, 1118,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080, 304,
	1074, 1073, 994, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1065, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 1000, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 1012, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1072, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 1085, 1086, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 1022, 350, 0,
	351, 352, 353, 354, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 1067, 1068, 0,
	1028, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 991, 250, 1109, 426, 427, 1013,
	1061, 428, 1075, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	1071, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	1001, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 1069, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 1116, 525, 526, 527, 528,
	1092, 0, 531, 532, 989, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 1081, 1082, 1083,
	1084, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	1011, 545, 546, 547, 548, 0, 550, 551, 0, 995,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 618, 1078, 1115, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 992, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 0, 0, 0, 0, 986, 987, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 2455, 1015,
	1033, 1005, 1006, 1007, 1003, 1004, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 304, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 354, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 0, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 2444, 1015, 1033, 1005, 1006, 1007, 1003,
	1004, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 1021, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	1070, 0, 266, 1077, 267, 1076, 0, 1087, 268, 269,
	270, 271, 272, 273, 1023, 1056, 990, 274, 1117, 1118,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080, 304,
	1074, 1073, 994, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1065, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 1000, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 1012, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1072, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 1085, 1086, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 1022, 350, 0,
	351, 352, 353, 354, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 1067, 1068, 0,
	1028, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 991, 250, 1109, 426, 427, 1013,
	1061, 428, 1075, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	1071, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	1001, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 1069, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 1116, 525, 526, 527, 528,
	1092, 0, 531, 532, 989, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 1081, 1082, 1083,
	1084, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	1011, 545, 546, 547, 548, 0, 550, 551, 0, 995,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 618, 1078, 1115, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 992, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 0, 0, 0, 0, 986, 987, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 2442, 1015,
	2433, 2440, 1006, 1007, 1003, 1004, 1016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 2436, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 2437, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 2438, 397, 2435, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 2439, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 0, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 2434, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 2430, 1015, 2433, 2440, 1006, 1007, 1003,
	1004, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 1021, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	1070, 0, 266, 1077, 267, 1076, 0, 1087, 268, 269,
	270, 271, 272, 273, 1023, 1056, 990, 274, 1117, 1118,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080, 2436,
	1074, 1073, 994, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1065, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 1000, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 1012, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1072, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 1085, 1086, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 1022, 350, 0,
	351, 352, 353, 2437, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 1067, 1068, 0,
	1028, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 2438, 397, 2435, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 991, 250, 1109, 426, 427, 1013,
	1061, 428, 1075, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	1071, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	1001, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 2439, 0, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 1069, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 1116, 525, 526, 527, 528,
	1092, 0, 531, 532, 989, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 1081, 1082, 1083,
	1084, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	1011, 545, 546, 547, 548, 0, 550, 551, 0, 995,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 618, 1078, 1115, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	2434, 570, 992, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 0, 0, 0, 0, 986, 987, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 1017, 0, 0, 0, 1015,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 0, 0, 0, 0, 0, 1741, 0, 1017, 0,
	0, 0, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 2224, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 1593, 1015, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 1528, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 1523, 1015, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 1514, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 1509, 1015, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 1491, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 1373, 1015, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1372, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 1367, 1015, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1366, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 1360, 1015, 1033, 1005,
	1006, 1007, 1003, 1004, 1016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1057,
	1021, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 1070, 0, 266, 1077, 267, 1076, 0,
	1087, 268, 269, 270, 271, 272, 273, 1023, 1056, 990,
	274, 1117, 1118, 579, 0, 275, 276, 1063, 0, 1044,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302,
	303, 1080, 304, 1074, 1073, 994, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1065,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 1000, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1088, 1089, 1012, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1072, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 1085, 1086, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1095, 0,
	1022, 350, 0, 351, 352, 353, 354, 355, 1058, 1059,
	1062, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1100, 364,
	1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1096, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 1051, 1050, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 991, 250, 1109,
	426, 427, 1013, 1061, 428, 1075, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 1090, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 1091, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 1071, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 1001, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 1054, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 1069, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 1116, 525,
	526, 527, 528, 1092, 0, 531, 532, 989, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	1081, 1082, 1083, 1084, 0, 549, 0, 541, 542, 543,
	1093, 544, 1094, 1011, 545, 546, 547, 548, 0, 550,
	551, 0, 995, 552, 553, 554, 556, 557, 555, 558,
	1055, 559, 0, 0, 560, 561, 562, 618, 1078, 1115,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 992, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 986,
	987, 1033, 1005, 1006, 1007, 1003, 1004, 1016, 1017, 0,
	0, 0, 1015, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1057, 1021, 0, 0, 0, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 1070, 0, 266, 1077,
	267, 1076, 0, 1087, 268, 269, 270, 271, 272, 273,
	1023, 1056, 990, 274, 1117, 1118, 579, 0, 275, 276,
	1063, 0, 1044, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1098, 298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052,
	300, 301, 302, 303, 1080, 304, 1074, 1073, 994, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1065, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 1000, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1088, 1089, 1012, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1072, 0, 0,
	0, 337, 0, 338, 0, 0, 1099, 339, 340, 1085,
	1086, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1095, 0, 1022, 350, 0, 351, 352, 353, 354,
	355, 1058, 1059, 1062, 429, 1101, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1100, 364, 1067, 1068, 0, 1028, 0, 366, 367,
	1102, 1060, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1096, 1105, 382, 383, 1106, 0, 384,
	0, 0, 0, 385, 386, 1051, 1050, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	991, 250, 1109, 426, 427, 1013, 1061, 428, 1075, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 1110, 439, 1111, 1090, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 1091, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 1071, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 1112, 485, 486, 487, 488, 1001, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 1054, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	1069, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 1116, 525, 526, 527, 528, 1092, 0, 531, 532,
	989, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 1081, 1082, 1083, 1084, 0, 549, 0,
	541, 542, 543, 1093, 544, 1094, 1011, 545, 546, 547,
	548, 0, 550, 551, 0, 995, 552, 553, 554, 556,
	557, 555, 558, 1055, 559, 0, 0, 560, 561, 562,
	618, 1078, 1115, 0, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 992, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 0, 0,
	0, 0, 986, 987, 1033, 1005, 1006, 1007, 1003, 1004,
	1016, 1017, 0, 0, 0, 1015, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1057, 1021, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 1070,
	0, 266, 1077, 267, 1076, 0, 1087, 268, 269, 270,
	271, 272, 273, 1023, 1056, 990, 274, 1117, 1118, 579,
	0, 275, 276, 1063, 0, 1044, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 4213, 1047, 1045, 1046, 1053,
	1049, 1048, 1052, 300, 301, 302, 303, 1080, 304, 1074,
	1073, 994, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1065, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 1000, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1088, 1089,
	1012, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1072, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 1085, 1086, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1095, 0, 1022, 350, 0, 351,
	352, 353, 354, 355, 1058, 1059, 1062, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1100, 364, 1067, 1068, 0, 1028,
	0, 366, 367, 1102, 1060, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1096, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 1051, 1050,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 991, 250, 1109, 426, 427, 1013, 1061,
	428, 1075, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 1090, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 1091, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 1071,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 1001,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	1054, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 1069, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 1116, 525, 526, 527, 528, 1092,
	0, 531, 532, 989, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 1081, 1082, 1083, 1084,
	0, 549, 0, 541, 542, 543, 1093, 544, 1094, 1011,
	545, 546, 547, 548, 0, 4212, 551, 0, 995, 552,
	553, 554, 556, 557, 555, 558, 1055, 559, 0, 0,
	560, 561, 562, 618, 1078, 1115, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 992, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 986, 987, 1033, 1005, 1006,
	1007, 1003, 1004, 1016, 1017, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1057, 1021,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 4211, 1070, 0, 266, 1077, 267, 1076, 0, 1087,
	268, 269, 270, 271, 272, 273, 1023, 1056, 990, 274,
	1117, 1118, 579, 0, 275, 276, 1063, 0, 1044, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1098, 298, 4213, 1047,
	1045, 1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303,
	1080, 304, 1074, 1073, 994, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1065, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	1000, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1088, 1089, 1012, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1072, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 1085, 1086, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1095, 0, 1022,
	350, 0, 351, 352, 353, 354, 355, 1058, 1059, 1062,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1100, 364, 1067,
	1068, 0, 1028, 0, 366, 367, 1102, 1060, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1096,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 1051, 1050, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 991, 250, 1109, 426,
	427, 1013, 1061, 428, 1075, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 1110, 439, 1111, 1090, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 1091, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 1071, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 1001, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 1054, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 1069, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 1116, 525, 526,
	527, 528, 1092, 0, 531, 532, 989, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 1081,
	1082, 1083, 1084, 0, 549, 0, 541, 542, 543, 1093,
	544, 1094, 1011, 545, 546, 547, 548, 0, 4212, 551,
	0, 995, 552, 553, 554, 556, 557, 555, 558, 1055,
	559, 0, 0, 560, 561, 562, 618, 1078, 1115, 0,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 992, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 0, 0, 0, 0, 986, 987,
	1033, 1005, 1006, 1007, 2871, 2872, 1016, 1017, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1057, 1021, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 1070, 0, 266, 1077, 267,
	1076, 0, 1087, 268, 269, 270, 271, 272, 273, 1023,
	1056, 990, 274, 1117, 1118, 579, 0, 275, 276, 1063,
	0, 1044, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300,
	301, 302, 303, 1080, 304, 1074, 1073, 994, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1065, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 1000, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1088, 1089, 1012, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1072, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 1085, 1086,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1095, 0, 1022, 350, 0, 351, 352, 353, 354, 355,
	1058, 1059, 1062, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1100, 364, 1067, 1068, 0, 1028, 0, 366, 367, 1102,
	1060, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1096, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 1051, 1050, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 991,
	250, 1109, 426, 427, 1013, 1061, 428, 1075, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 1090, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	1091, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 1071, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 1001, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 1054, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 1069,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	1116, 525, 526, 527, 528, 1092, 0, 531, 532, 989,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 1081, 1082, 1083, 1084, 0, 549, 0, 541,
	542, 543, 1093, 544, 1094, 1011, 545, 546, 547, 548,
	0, 550, 551, 0, 995, 552, 553, 554, 556, 557,
	555, 558, 1055, 559, 0, 0, 560, 561, 562, 618,
	1078, 1115, 0, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 992, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 986, 987, 1033, 1005, 1006, 1007, 2869, 2870, 1016,
	1017, 0, 0, 0, 1015, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 1109, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 550, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	992, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	0, 0, 0, 0, 986, 987, 1033, 1005, 1006, 1007,
	1003, 1004, 1016, 1017, 0, 0, 0, 1015, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1057, 1021, 0,
	0, 0, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 1070, 0, 266, 1077, 267, 1076, 0, 1087, 268,
	269, 270, 271, 272, 273, 1023, 1056, 990, 274, 1117,
	1118, 579, 0, 275, 276, 1063, 0, 1044, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1098, 298, 299, 1047, 1045,
	1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080,
	304, 1074, 1073, 994, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1065, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 1000,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1088, 1089, 1012, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1072, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 1085, 1086, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1095, 0, 1022, 350,
	0, 351, 352, 353, 354, 355, 1058, 1059, 1062, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1100, 364, 1067, 1068,
	0, 1028, 0, 366, 367, 1102, 1060, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1096, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	1051, 1050, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 991, 250, 1109, 426, 427,
	1013, 1061, 428, 1075, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 1090, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 1091, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 1071, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 1001, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 1054, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 1069, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 1116, 525, 526, 527,
	528, 1092, 0, 531, 532, 989, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 1081, 1082,
	1083, 1084, 0, 549, 0, 541, 542, 543, 1093, 544,
	1094, 1011, 545, 546, 547, 548, 0, 550, 551, 0,
	995, 552, 553, 554, 556, 557, 555, 558, 1055, 559,
	0, 0, 560, 561, 562, 618, 1078, 1115, 0, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 992, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 2232, 2233, 1033,
	1005, 1006, 1007, 1003, 1004, 1016, 1017, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1057, 1021, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 1070, 0, 266, 1077, 267, 1076,
	0, 1087, 268, 269, 270, 271, 272, 273, 1023, 1056,
	0, 274, 1117, 1118, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 1080, 304, 1074, 1073, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1065, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 1000, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 1012, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1072, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 1085, 1086, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 1022, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 1067, 1068, 0, 1028, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 0, 250,
	1109, 426, 427, 1013, 1061, 428, 1075, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 1071, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 1001, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 1069, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 1116,
	525, 526, 527, 528, 1092, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 1081, 1082, 1083, 1084, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 1011, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 1078,
	1115, 0, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 1033, 1005, 1006, 1007,
	1003, 1004, 1016, 2452, 0, 0, 0, 0, 0, 0,
	2450, 2451, 0, 251, 252, 253, 254, 255, 256, 1017,
	257, 258, 0, 1015, 0, 0, 0, 1057, 1021, 0,
	0, 0, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 1070, 0, 266, 1077, 267, 1076, 0, 1087, 268,
	269, 270, 271, 272, 273, 1023, 1056, 0, 274, 1117,
	1118, 579, 0, 275, 276, 1063, 0, 1044, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1098, 298, 299, 1047, 1045,
	1046, 1053, 1049, 1048, 1052, 300, 301, 302, 303, 1080,
	304, 1074, 1073, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1065, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 1000,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1088, 1089, 1012, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1072, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 1085, 1086, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1095, 0, 1022, 350,
	0, 351, 352, 353, 354, 355, 1058, 1059, 1062, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1100, 364, 1067, 1068,
	0, 1028, 0, 366, 367, 1102, 1060, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1096, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	1051, 1050, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 0, 250, 1109, 426, 427,
	1013, 1061, 428, 1075, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 1090, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 1091, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 1071, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 2864, 2865, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 1054, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 1069, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 1116, 525, 526, 527,
	528, 1092, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 1081, 1082,
	1083, 1084, 0, 549, 0, 541, 542, 543, 1093, 544,
	1094, 1011, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 1055, 559,
	0, 0, 560, 561, 562, 618, 1078, 1115, 0, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 1033, 1005, 1006, 1007, 1003, 1004, 1016,
	0, 0, 0, 0, 0, 0, 0, 1940, 1941, 0,
	251, 252, 253, 254, 255, 256, 1017, 257, 258, 0,
	1015, 0, 0, 0, 1057, 1021, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 0, 1070, 0,
	266, 1077, 267, 1076, 0, 1087, 268, 269, 270, 271,
	272, 273, 1023, 1056, 990, 274, 1117, 1118, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 4213, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 1080, 304, 1074, 1073,
	994, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1065, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 1000, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 1012,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1072,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 1085, 1086, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 1022, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 1067, 1068, 0, 1028, 0,
	366, 367, 0, 1060, 0, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 991, 250, 0, 426, 427, 1013, 1061, 428,
	1075, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 1071, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 1001, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 1069, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 1116, 525, 526, 527, 528, 1092, 0,
	531, 532, 989, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 1081, 1082, 1083, 1084, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 1011, 545,
	546, 547, 548, 0, 4212, 551, 0, 995, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 1078, 1115, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 1155, 0, 0, 986, 987, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 1015, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 1056, 0, 274, 577, 578, 579, 0, 275, 276,
	1063, 0, 1044, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1098, 298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1088, 1089, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 1099, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1095, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 1058, 1059, 1062, 429, 1101, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1100, 364, 594, 595, 0, 596, 0, 366, 367,
	1102, 1060, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 1141, 378, 380,
	379, 0, 381, 1096, 1105, 382, 383, 1106, 0, 384,
	0, 0, 0, 385, 386, 1051, 1050, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	0, 250, 1109, 426, 427, 0, 1061, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 1147, 434, 435, 436,
	0, 0, 437, 438, 601, 1110, 439, 1111, 1090, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 1091, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 1112, 485, 486, 487, 488, 608, 1149, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	212, 505, 506, 504, 507, 508, 509, 1054, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 1092, 0, 531, 532,
	0, 530, 214, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 1093, 544, 1094, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 1055, 559, 0, 0, 560, 561, 562,
	1498, 619, 620, 0, 564, 563, 565, 621, 0, 1155,
	0, 206, 566, 567, 622, 568, 569, 570, 0, 207,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1145,
	1057, 1827, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 1056,
	0, 274, 577, 578, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 594, 595, 0, 596, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 1141, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 0, 250,
	1109, 426, 427, 0, 1061, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 1147, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 608, 1149, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 212, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 1092, 0, 531, 532, 0, 530,
	214, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 1498, 619,
	620, 0, 564, 563, 565, 621, 0, 0, 0, 206,
	566, 567, 622, 568, 569, 570, 0, 207, 0, 0,
	0, 3048, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1145, 0, 1827,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 1056, 0, 274, 577, 578, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 594, 595, 0, 596, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 1141,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 0, 250, 1109, 426, 427, 0, 1061, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 1147, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 608, 1149,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 1092, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	0, 1137, 0, 1155, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 1145, 0, 1143, 1057, 0, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 1056, 0, 274, 577, 578, 579, 0,
	275, 276, 1063, 0, 1044, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 1047, 1045, 1046, 1053, 1049,
	1048, 1052, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1088, 1089, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1095, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 1058, 1059, 1062, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1100, 364, 594, 595, 0, 596, 0,
	366, 367, 1102, 1060, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 1141,
	378, 380, 379, 0, 381, 1096, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 1051, 1050, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 0, 250, 1109, 426, 427, 0, 1061, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 1147, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	1090, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 1091, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 608, 1149,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 1054,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 1092, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 1093, 544, 1094, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 1055, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	0, 1155, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1145, 1057, 1143, 0, 0, 0, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 1056, 0, 274, 577, 578, 579, 0, 275, 276,
	1063, 0, 1044, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1098, 298, 299, 1047, 1045, 1046, 1053, 1049, 1048, 1052,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1088, 1089, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 1099, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1095, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 1058, 1059, 1062, 429, 1101, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1100, 364, 594, 595, 0, 596, 0, 366, 367,
	1102, 1060, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 1141, 378, 380,
	379, 0, 381, 1096, 1105, 382, 383, 1106, 0, 384,
	0, 0, 0, 385, 386, 1051, 1050, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	0, 250, 1109, 426, 427, 0, 1061, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 1147, 434, 435, 436,
	0, 0, 437, 438, 601, 1110, 439, 1111, 1090, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 1091, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 1112, 485, 486, 487, 488, 608, 1149, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 1054, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 1092, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 1093, 544, 1094, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 1055, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 0, 564, 563, 565, 621, 0, 1155,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1145,
	1057, 1143, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 1056,
	0, 274, 577, 578, 579, 0, 275, 276, 1063, 0,
	1044, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 1047, 1045, 1046, 1053, 1049, 1048, 1052, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1088, 1089, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1095,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 1058,
	1059, 1062, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1100,
	364, 594, 595, 0, 596, 0, 366, 367, 1102, 1060,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1096, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 1051, 1050, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 0, 250,
	1109, 426, 427, 0, 1061, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 1090, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 1091,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 608, 1149, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 1054, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 1092, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 1093, 544, 1094, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 1055, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 0, 979, 0, 1343,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1726,
	571, 0, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	1309, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 591,
	592, 593, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 1100,
	364, 594, 595, 0, 596, 0, 366, 367, 1102, 597,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 0, 0,
	1109, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 212, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	214, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 1498, 619,
	620, 0, 564, 563, 565, 621, 0, 0, 0, 206,
	566, 567, 622, 568, 569, 570, 0, 207, 0, 0,
	0, 1495, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 1309, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 1100, 364, 594, 595, 0, 596, 0,
	366, 367, 1102, 597, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 0, 0, 1109, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 212, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 214, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 1498, 619, 620, 0, 564, 563, 565, 621,
	0, 0, 0, 206, 566, 567, 622, 568, 569, 570,
	0, 207, 0, 0, 0, 0, 0, 1343, 1342, 0,
	0, 0, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 1309, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1098, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 1100, 364, 594,
	595, 0, 596, 0, 366, 367, 1102, 597, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 0, 0, 1109, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 1110, 439, 1111, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 1343, 1342, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1520, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 1309, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 1100, 364, 594, 595, 0, 596,
	0, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 0, 0, 1109, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 1343, 2023, 0, 0, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 3302, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 1097,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 1309, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1098, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 1099, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 1101, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 1100, 364, 594, 595, 0, 596, 0, 366, 367,
	1102, 597, 1103, 368, 369, 370, 1104, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 2022, 380,
	379, 0, 381, 598, 1105, 382, 383, 1106, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 1107, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 1108, 416,
	0, 0, 1109, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 1110, 439, 1111, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 1112, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 1113, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 0, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 1343, 1342,
	0, 0, 0, 0, 1340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 1520, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 1309,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 1100, 364,
	594, 595, 0, 596, 0, 366, 367, 1102, 597, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 0, 0, 1109,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 1155, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1057, 0, 1504, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 1056, 0, 274, 577, 578,
	579, 0, 275, 276, 1063, 0, 1044, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 1047, 1045, 1046,
	1053, 1049, 1048, 1052, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1088,
	1089, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1095, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 1058, 1059, 1062, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1100, 364, 594, 595, 0,
	596, 0, 366, 367, 1102, 1060, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1096, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 1051,
	1050, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 0, 250, 1109, 426, 427, 0,
	1061, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 1090, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 1091, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 1054, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	1092, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 1093, 544, 1094,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 1055, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 979, 0, 245, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 212, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 214, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 1498, 619, 620, 245, 564, 563, 565,
	621, 0, 0, 0, 206, 566, 567, 622, 568, 569,
	570, 0, 207, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 176, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 250, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 245, 2786, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 1841, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 0, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 245, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 4353, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 0, 245, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 3243, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 250, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	0, 245, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1441, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 0, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 245, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 2756, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 0, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 245, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 3403, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 0, 825, 0, 708, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 2126, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 715, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 823,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 713, 533, 534, 535,
	536, 714, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 0, 706, 0, 708, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 718, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 715, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 713, 533, 534, 535,
	536, 714, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 1878, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 0, 1884, 0, 266, 1874, 267, 1890, 0, 1897,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	1900, 1901, 0, 0, 275, 276, 0, 0, 1309, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1098, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	1080, 304, 1888, 1887, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1065, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	0, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 1886, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 1895, 1896, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 0, 0, 0,
	350, 0, 351, 352, 353, 354, 355, 0, 0, 0,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 1100, 364, 1881,
	1882, 0, 1877, 0, 366, 367, 1102, 0, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 0,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 0, 0, 1109, 426,
	427, 0, 0, 428, 1889, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	0, 1110, 439, 1111, 0, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 1871,
	452, 453, 454, 1872, 455, 456, 457, 0, 458, 0,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 1885, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 0, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 1883, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 1899, 525, 526,
	527, 528, 0, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 1891,
	1892, 1893, 1894, 0, 549, 0, 541, 542, 543, 0,
	544, 0, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 0, 1875, 1898, 0,
	564, 563, 565, 0, 0, 0, 1343, 1342, 566, 567,
	0, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 1865, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 1309, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1098, 298, 299, 0, 0,
	0, 0, 0, 0, 2720, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1100, 364, 594, 595,
	0, 596, 0, 366, 367, 1102, 597, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 0, 0, 1109, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 2721, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 1343, 1342, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 1309, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 1100, 364, 594, 595, 0, 596, 0,
	366, 367, 1102, 597, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 0, 0, 1109, 426, 427, 3573, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 708, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 715, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 713, 533, 534, 535,
	536, 714, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 1343, 1342, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	1097, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 1309, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1098, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 1099, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 1101, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 1100, 364, 594, 595, 0, 596, 0, 366,
	367, 1102, 597, 1103, 368, 369, 370, 1104, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 1105, 382, 383, 1106, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 1107, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 1108,
	416, 0, 0, 1109, 426, 427, 3215, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 1110, 439, 1111, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 1112, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 1113, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 708, 564, 563, 565, 621, 0,
	0, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 715, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 250, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 2166, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 713, 533, 534, 535, 536,
	714, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 708, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 718, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 715, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 250, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 1904, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 713, 533, 534, 535, 536, 714, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 1903,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 0, 564, 563, 565, 621, 708, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 718, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 715,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 1857, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 713,
	533, 534, 535, 536, 714, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 1856, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 1548, 0, 1343, 1342, 0,
	0, 0, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 1097, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 1309, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1098, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 248, 0, 0, 0, 0, 0,
	1547, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 1099, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 1101, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 1100, 364, 594,
	595, 0, 596, 0, 366, 367, 1102, 597, 1103, 368,
	369, 370, 1104, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	1105, 382, 383, 1106, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 1107, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 1108, 416, 0, 0, 1109, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 1110, 439, 1111, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	1546, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 1112, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 1545, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 1113,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 1488, 0, 1343, 1342, 0, 0,
	0, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 1309, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1098, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 1487, 592, 593, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1100, 364, 594, 595,
	0, 596, 0, 366, 367, 1102, 597, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 0, 0, 1109, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 1416, 0, 1343, 1342, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 1097, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 1309, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1098, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	1099, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 1415, 592, 593, 429, 1101,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 1100, 364, 594, 595, 0,
	596, 0, 366, 367, 1102, 597, 1103, 368, 369, 370,
	1104, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 1105, 382,
	383, 1106, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 1107,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 1108, 416, 0, 0, 1109, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 1110,
	439, 1111, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 1112, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 1113, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 1378, 0, 1343, 1342, 0, 0, 0, 0,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 1097, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 1309, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1098, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 1099,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 1101, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 1100, 364, 594, 595, 0, 596,
	0, 366, 367, 1102, 597, 1103, 368, 369, 370, 1104,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 1105, 382, 383,
	1106, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 1107, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 1108, 416, 0, 0, 1109, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 1110, 439,
	1111, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 1112, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 1113, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 1338, 0, 1343, 1342, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 1097, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 1309, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1098, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 1099, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 1337, 592, 593, 429, 1101, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 1100, 364, 594, 595, 0, 596, 0,
	366, 367, 1102, 597, 1103, 368, 369, 370, 1104, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 1105, 382, 383, 1106,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 1107, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	1108, 416, 0, 0, 1109, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 1110, 439, 1111,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 1112, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 1113, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	1343, 1342, 0, 0, 0, 0, 1340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 1097, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 1309, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1098,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 1099, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 1101, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	1100, 364, 594, 595, 0, 596, 0, 366, 367, 1102,
	597, 1103, 368, 369, 370, 1104, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 1105, 382, 383, 1106, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 1107, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 1108, 416, 0,
	0, 1109, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 1110, 439, 1111, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	1112, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 1113, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 245, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 250, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 0, 564, 563, 565, 621, 1343,
	1342, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 718, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 1097, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	1309, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1098, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 1913, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 1099, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 591,
	592, 593, 429, 1101, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 1100,
	364, 594, 595, 0, 596, 0, 366, 367, 1102, 597,
	1103, 368, 369, 370, 1104, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 1105, 382, 383, 1106, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 1107, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 1108, 416, 0, 0,
	1109, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 1110, 439, 1111, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 1112,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 1113, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 1343, 1342, 0, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 1097, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 1309, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1098, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 1099, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	1101, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1100, 364, 594, 595,
	0, 596, 0, 366, 367, 1102, 597, 1103, 368, 369,
	370, 1104, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 1105,
	382, 383, 1106, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	1107, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 1108, 416, 0, 0, 1109, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	1110, 439, 1111, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 1112, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 1113, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 1343, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 1097, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 1309,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1098, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 1099, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 1101, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 1100, 364,
	594, 595, 0, 596, 0, 366, 367, 1102, 597, 1103,
	368, 369, 370, 1104, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 1105, 382, 383, 1106, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 1107, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 1108, 416, 0, 0, 1109,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 1110, 439, 1111, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 1112, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	1113, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 2589, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 2586, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 2593, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 2799, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 2592, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 2796, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 2798, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 2795, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	0, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 2591, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 2797, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 245, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 2589, 275,
	276, 580, 0, 0, 2583, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 2586, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 2593, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 2592, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 2582, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 2591, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 2590, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 0, 564, 563, 565, 621, 1615,
	0, 245, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 250, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 1618, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 1616, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 0, 1617, 563, 565, 621, 1313, 0,
	245, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	1315, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	250, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 1147, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 0, 564, 563, 565, 621, 1310, 0, 245,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 1312,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 250,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 1147, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 1216, 0, 245, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 1218, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 1147, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 654, 0, 245, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 653, 255, 256,
	643, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 646, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 647, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 0, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 648, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 642, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 643,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 646, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 647, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 648, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 245, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 1147, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 3178, 416, 0,
	250, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 0, 564, 563, 565, 621, 2727, 0, 245,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 2726,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 250,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 2139, 0, 245, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	250, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 2055, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 0, 564, 563, 565, 621, 2061, 0, 245,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 2060,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 250,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 2048, 0, 245, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 2050, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	2019, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	250, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 1147, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 0, 564, 563, 565, 621, 1480, 0, 245,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 1479,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 250,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 1471, 0, 245, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 1470, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 250, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 1468, 0, 245, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 1467, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 250, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 1463, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 1462, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 250, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 1419, 0, 245, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 1331, 0, 245, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 250, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 1324, 0, 245, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 1326, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 250, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	624, 0, 245, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 250, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 0, 564, 563, 565, 621, 236,
	0, 245, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 250, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 245, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 250, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 245, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	646, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 647, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 648, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 245, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 2173, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 250, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 245,
	564, 563, 565, 621, 0, 0, 0, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	2171, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 591,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 250,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 245, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 2169, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 250, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 245, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 2104, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 250, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 245, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 2098, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 250, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 245, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 2067, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 250, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 812, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 811, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 810, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 245, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 2799, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 0, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 3832, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 676, 0, 245, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 1187, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 1185, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	677, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 0, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 673, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 1188, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 672,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 676, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 1187, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 1185, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 677,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	673, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	1188, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 672, 613,
	614, 615, 0, 549, 0, 541, 1186, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 633, 0, 245, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 632, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 631, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 245, 2786, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 0, 564, 563, 565, 621, 245,
	3842, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 591,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 0,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 245, 564, 563, 565, 621, 0, 0, 0, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 3547, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 0, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 245, 564, 563, 565, 621, 0, 0,
	0, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 2503, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 0, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	245, 2786, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	0, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 2783, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 245, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 251,
	252, 253, 254, 255, 256, 2149, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 0, 564, 563, 565, 621, 2137,
	0, 245, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 572, 573, 0, 266, 574,
	267, 575, 0, 576, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 577, 578, 579, 0, 275, 276,
	580, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 581, 582, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 583, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 584, 585, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 586, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 587,
	588, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 589, 0, 590, 350, 0, 351, 352, 353, 354,
	355, 591, 592, 593, 429, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 594, 595, 0, 596, 0, 366, 367,
	0, 597, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 598, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 397, 410,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 412, 0, 411, 0, 413, 414, 415, 420,
	422, 423, 418, 419, 421, 424, 425, 417, 0, 416,
	0, 0, 0, 426, 427, 0, 599, 428, 600, 430,
	431, 0, 0, 432, 0, 0, 0, 434, 435, 436,
	0, 0, 437, 438, 601, 0, 439, 0, 602, 440,
	441, 433, 442, 443, 444, 445, 446, 447, 448, 449,
	0, 450, 451, 603, 452, 453, 454, 604, 455, 456,
	457, 605, 458, 606, 459, 460, 0, 461, 0, 462,
	463, 464, 465, 466, 467, 468, 607, 470, 469, 471,
	0, 472, 0, 0, 0, 0, 0, 473, 0, 475,
	476, 477, 474, 478, 479, 480, 481, 0, 482, 483,
	484, 0, 485, 486, 487, 488, 608, 489, 0, 490,
	491, 497, 498, 492, 493, 499, 500, 501, 502, 503,
	0, 505, 506, 504, 507, 508, 509, 0, 510, 494,
	495, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	609, 0, 519, 0, 520, 521, 522, 523, 496, 524,
	529, 610, 525, 526, 527, 528, 611, 0, 531, 532,
	0, 530, 0, 533, 534, 535, 536, 537, 538, 328,
	539, 0, 540, 612, 613, 614, 615, 0, 549, 0,
	541, 542, 543, 616, 544, 617, 0, 545, 546, 547,
	548, 0, 550, 551, 0, 0, 552, 553, 554, 556,
	557, 555, 558, 0, 559, 0, 0, 560, 561, 562,
	618, 619, 620, 0, 564, 563, 565, 621, 676, 0,
	245, 0, 566, 567, 622, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 666, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 677, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	0, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 673, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 1503, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 672, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 0, 564, 563, 565, 621, 1484, 0, 245,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	571, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 572, 573, 0, 266, 574, 267, 575,
	0, 576, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 577, 578, 579, 0, 275, 276, 580, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 581, 582, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 583, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 584, 585, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 586, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 587, 588, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 589,
	0, 590, 350, 0, 351, 352, 353, 354, 355, 1483,
	592, 593, 429, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 0,
	364, 594, 595, 0, 596, 0, 366, 367, 0, 597,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 598, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 397, 410, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	412, 0, 411, 0, 413, 414, 415, 420, 422, 423,
	418, 419, 421, 424, 425, 417, 0, 416, 0, 0,
	0, 426, 427, 0, 599, 428, 600, 430, 431, 0,
	0, 432, 0, 0, 0, 434, 435, 436, 0, 0,
	437, 438, 601, 0, 439, 0, 602, 440, 441, 433,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 450,
	451, 603, 452, 453, 454, 604, 455, 456, 457, 605,
	458, 606, 459, 460, 0, 461, 0, 462, 463, 464,
	465, 466, 467, 468, 607, 470, 469, 471, 0, 472,
	0, 0, 0, 0, 0, 473, 0, 475, 476, 477,
	474, 478, 479, 480, 481, 0, 482, 483, 484, 0,
	485, 486, 487, 488, 608, 489, 0, 490, 491, 497,
	498, 492, 493, 499, 500, 501, 502, 503, 0, 505,
	506, 504, 507, 508, 509, 0, 510, 494, 495, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 609, 0,
	519, 0, 520, 521, 522, 523, 496, 524, 529, 610,
	525, 526, 527, 528, 611, 0, 531, 532, 0, 530,
	0, 533, 534, 535, 536, 537, 538, 328, 539, 0,
	540, 612, 613, 614, 615, 0, 549, 0, 541, 542,
	543, 616, 544, 617, 0, 545, 546, 547, 548, 0,
	550, 551, 0, 0, 552, 553, 554, 556, 557, 555,
	558, 0, 559, 0, 0, 560, 561, 562, 618, 619,
	620, 0, 564, 563, 565, 621, 1477, 0, 245, 0,
	566, 567, 622, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 1476, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 0, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 1425, 0, 245, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 1424, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 0, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 1408, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 1406, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 1402, 0, 245, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 1334, 0, 245, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 1318, 0, 245, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 0, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 245, 564, 563, 565, 621,
	0, 0, 0, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 251, 252, 253, 254, 255, 256, 1168, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 497, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 245, 564, 563,
	565, 621, 0, 0, 0, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 251, 252, 253, 254, 255, 256,
	682, 257, 258, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 572, 573, 0, 266, 574, 267, 575, 0, 576,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	577, 578, 579, 0, 275, 276, 580, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 581, 582, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	583, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 584, 585, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 586, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 587, 588, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 589, 0, 590,
	350, 0, 351, 352, 353, 354, 355, 591, 592, 593,
	429, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 594,
	595, 0, 596, 0, 366, 367, 0, 597, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 598,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 397, 410, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 412, 0,
	411, 0, 413, 414, 415, 420, 422, 423, 418, 419,
	421, 424, 425, 417, 0, 416, 0, 0, 0, 426,
	427, 0, 599, 428, 600, 430, 431, 0, 0, 432,
	0, 0, 0, 434, 435, 436, 0, 0, 437, 438,
	601, 0, 439, 0, 602, 440, 441, 433, 442, 443,
	444, 445, 446, 447, 448, 449, 0, 450, 451, 603,
	452, 453, 454, 604, 455, 456, 457, 605, 458, 606,
	459, 460, 0, 461, 0, 462, 463, 464, 465, 466,
	467, 468, 607, 470, 469, 471, 0, 472, 0, 0,
	0, 0, 0, 473, 0, 475, 476, 477, 474, 478,
	479, 480, 481, 0, 482, 483, 484, 0, 485, 486,
	487, 488, 608, 489, 0, 490, 491, 497, 498, 492,
	493, 499, 500, 501, 502, 503, 0, 505, 506, 504,
	507, 508, 509, 0, 510, 494, 495, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 609, 0, 519, 0,
	520, 521, 522, 523, 496, 524, 529, 610, 525, 526,
	527, 528, 611, 0, 531, 532, 0, 530, 0, 533,
	534, 535, 536, 537, 538, 328, 539, 0, 540, 612,
	613, 614, 615, 0, 549, 0, 541, 542, 543, 616,
	544, 617, 0, 545, 546, 547, 548, 0, 550, 551,
	0, 0, 552, 553, 554, 556, 557, 555, 558, 0,
	559, 0, 0, 560, 561, 562, 618, 619, 620, 0,
	564, 563, 565, 621, 676, 0, 245, 0, 566, 567,
	622, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 666, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 664, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 665,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 677,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 667, 489, 0, 490, 491, 497, 498, 492, 493,
	673, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	668, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 672, 613,
	614, 615, 0, 549, 0, 541, 670, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 0, 564,
	563, 565, 621, 658, 0, 245, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 572,
	573, 0, 266, 574, 267, 575, 0, 576, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 577, 578,
	579, 0, 275, 276, 580, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	581, 582, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 583, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 584,
	585, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 586, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 587, 588, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 589, 0, 590, 350, 0,
	351, 352, 353, 354, 355, 591, 592, 593, 429, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 594, 595, 0,
	596, 0, 366, 367, 0, 597, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 598, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 397, 410, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 412, 0, 411, 0,
	413, 414, 415, 420, 422, 423, 418, 419, 421, 424,
	425, 417, 0, 416, 0, 0, 0, 426, 427, 0,
	599, 428, 600, 430, 431, 0, 0, 432, 0, 0,
	0, 434, 435, 436, 0, 0, 437, 438, 601, 0,
	439, 0, 602, 440, 441, 433, 442, 443, 444, 445,
	446, 447, 448, 449, 0, 450, 451, 603, 452, 453,
	454, 604, 455, 456, 457, 605, 458, 606, 459, 460,
	0, 461, 0, 462, 463, 464, 465, 466, 467, 468,
	607, 470, 469, 471, 0, 472, 0, 0, 0, 0,
	0, 473, 0, 475, 476, 477, 474, 478, 479, 480,
	481, 0, 482, 483, 484, 0, 485, 486, 487, 488,
	608, 489, 0, 490, 491, 659, 498, 492, 493, 499,
	500, 501, 502, 503, 0, 505, 506, 504, 507, 508,
	509, 0, 510, 494, 495, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 609, 0, 519, 0, 520, 521,
	522, 523, 496, 524, 529, 610, 525, 526, 527, 528,
	611, 0, 531, 532, 0, 530, 0, 533, 534, 535,
	536, 537, 538, 328, 539, 0, 540, 612, 613, 614,
	615, 0, 549, 0, 541, 542, 543, 616, 544, 617,
	0, 545, 546, 547, 548, 0, 550, 551, 0, 0,
	552, 553, 554, 556, 557, 555, 558, 0, 559, 0,
	0, 560, 561, 562, 618, 619, 620, 0, 564, 563,
	565, 621, 656, 0, 245, 0, 566, 567, 622, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 0, 564, 563, 565,
	621, 650, 0, 245, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 572, 573, 0,
	266, 574, 267, 575, 0, 576, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 577, 578, 579, 0,
	275, 276, 580, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 581, 582,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 583, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 584, 585, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 586,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 587, 588, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 589, 0, 590, 350, 0, 351, 352,
	353, 354, 355, 591, 592, 593, 429, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 594, 595, 0, 596, 0,
	366, 367, 0, 597, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 598, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	397, 410, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 412, 0, 411, 0, 413, 414,
	415, 420, 422, 423, 418, 419, 421, 424, 425, 417,
	0, 416, 0, 0, 0, 426, 427, 0, 599, 428,
	600, 430, 431, 0, 0, 432, 0, 0, 0, 434,
	435, 436, 0, 0, 437, 438, 601, 0, 439, 0,
	602, 440, 441, 433, 442, 443, 444, 445, 446, 447,
	448, 449, 0, 450, 451, 603, 452, 453, 454, 604,
	455, 456, 457, 605, 458, 606, 459, 460, 0, 461,
	0, 462, 463, 464, 465, 466, 467, 468, 607, 470,
	469, 471, 0, 472, 0, 0, 0, 0, 0, 473,
	0, 475, 476, 477, 474, 478, 479, 480, 481, 0,
	482, 483, 484, 0, 485, 486, 487, 488, 608, 489,
	0, 490, 491, 497, 498, 492, 493, 499, 500, 501,
	502, 503, 0, 505, 506, 504, 507, 508, 509, 0,
	510, 494, 495, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 609, 0, 519, 0, 520, 521, 522, 523,
	496, 524, 529, 610, 525, 526, 527, 528, 611, 0,
	531, 532, 0, 530, 0, 533, 534, 535, 536, 537,
	538, 328, 539, 0, 540, 612, 613, 614, 615, 0,
	549, 0, 541, 542, 543, 616, 544, 617, 0, 545,
	546, 547, 548, 0, 550, 551, 0, 0, 552, 553,
	554, 556, 557, 555, 558, 0, 559, 0, 0, 560,
	561, 562, 618, 619, 620, 0, 564, 563, 565, 621,
	628, 0, 245, 0, 566, 567, 622, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 591, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 245, 564, 563, 565, 621, 0,
	0, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 591, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 245, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 3261, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 245, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 3209, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 0, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	3150, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	0, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 510, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 245, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 3148, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 245, 564, 563, 565, 621, 0,
	0, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 3134, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 245, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 2736, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 470, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 245, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 350, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 0, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 444, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	466, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 489, 0, 490, 491, 659, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	245, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 571, 0, 2084, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 572, 573, 0, 266, 574, 267,
	575, 0, 576, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 577, 578, 579, 0, 275, 276, 580,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 581, 582, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 583, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 584, 585, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 586, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 587, 588,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	589, 0, 590, 350, 0, 351, 352, 353, 354, 355,
	591, 592, 593, 429, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 594, 595, 0, 596, 0, 366, 367, 0,
	597, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 598, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 397, 410, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 412, 0, 411, 0, 413, 414, 415, 420, 422,
	423, 418, 419, 421, 424, 425, 417, 0, 416, 0,
	0, 0, 426, 427, 0, 599, 428, 600, 430, 431,
	0, 0, 432, 0, 0, 0, 434, 435, 436, 0,
	0, 437, 438, 601, 0, 439, 0, 602, 440, 441,
	433, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	450, 451, 603, 452, 453, 454, 604, 455, 456, 457,
	605, 458, 606, 459, 460, 0, 461, 0, 462, 463,
	464, 465, 466, 467, 468, 607, 470, 469, 471, 0,
	472, 0, 0, 0, 0, 0, 473, 0, 475, 476,
	477, 474, 478, 479, 480, 481, 0, 482, 483, 484,
	0, 485, 486, 487, 488, 608, 489, 0, 490, 491,
	497, 498, 492, 493, 499, 500, 501, 502, 503, 0,
	505, 506, 504, 507, 508, 509, 0, 0, 494, 495,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 609,
	0, 519, 0, 520, 521, 522, 523, 496, 524, 529,
	610, 525, 526, 527, 528, 611, 0, 531, 532, 0,
	530, 0, 533, 534, 535, 536, 537, 538, 328, 539,
	0, 540, 612, 613, 614, 615, 0, 549, 0, 541,
	542, 543, 616, 544, 617, 0, 545, 546, 547, 548,
	0, 550, 551, 0, 0, 552, 553, 554, 556, 557,
	555, 558, 0, 559, 0, 0, 560, 561, 562, 618,
	619, 620, 245, 564, 563, 565, 621, 0, 0, 0,
	0, 566, 567, 622, 568, 569, 570, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 572, 573, 0, 266,
	574, 267, 575, 0, 576, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 577, 578, 579, 0, 275,
	276, 580, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 581, 582, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 583, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 584, 585, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 586, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	587, 588, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 589, 0, 590, 350, 0, 351, 352, 353,
	354, 355, 1448, 592, 593, 429, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 594, 595, 0, 596, 0, 366,
	367, 0, 597, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 598, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 397,
	410, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 412, 0, 411, 0, 413, 414, 415,
	420, 422, 423, 418, 419, 421, 424, 425, 417, 0,
	416, 0, 0, 0, 426, 427, 0, 599, 428, 600,
	430, 431, 0, 0, 432, 0, 0, 0, 434, 435,
	436, 0, 0, 437, 438, 601, 0, 439, 0, 602,
	440, 441, 433, 442, 443, 444, 445, 446, 447, 448,
	449, 0, 450, 451, 603, 452, 453, 454, 604, 455,
	456, 457, 605, 458, 606, 459, 460, 0, 461, 0,
	462, 463, 464, 465, 466, 467, 468, 607, 470, 469,
	471, 0, 472, 0, 0, 0, 0, 0, 473, 0,
	475, 476, 477, 474, 478, 479, 480, 481, 0, 482,
	483, 484, 0, 485, 486, 487, 488, 608, 489, 0,
	490, 491, 497, 498, 492, 493, 499, 500, 501, 502,
	503, 0, 505, 506, 504, 507, 508, 509, 0, 510,
	494, 495, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 609, 0, 519, 0, 520, 521, 522, 523, 496,
	524, 529, 610, 525, 526, 527, 528, 611, 0, 531,
	532, 0, 530, 0, 533, 534, 535, 536, 537, 538,
	328, 539, 0, 540, 612, 613, 614, 615, 0, 549,
	0, 541, 542, 543, 616, 544, 617, 0, 545, 546,
	547, 548, 0, 550, 551, 0, 0, 552, 553, 554,
	556, 557, 555, 558, 0, 559, 0, 0, 560, 561,
	562, 618, 619, 620, 245, 564, 563, 565, 621, 0,
	0, 0, 0, 566, 567, 622, 568, 569, 570, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 572, 573,
	0, 266, 574, 267, 575, 0, 576, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 577, 578, 579,
	0, 275, 276, 580, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 581,
	582, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 583, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	586, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 587, 588, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 589, 0, 590, 350, 0, 351,
	352, 353, 354, 355, 1385, 592, 593, 429, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 594, 595, 0, 596,
	0, 366, 367, 0, 597, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 598, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 397, 410, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 412, 0, 411, 0, 413,
	414, 415, 420, 422, 423, 418, 419, 421, 424, 425,
	417, 0, 416, 0, 0, 0, 426, 427, 0, 599,
	428, 600, 430, 431, 0, 0, 432, 0, 0, 0,
	434, 435, 436, 0, 0, 437, 438, 601, 0, 439,
	0, 602, 440, 441, 433, 442, 443, 444, 445, 446,
	447, 448, 449, 0, 450, 451, 603, 452, 453, 454,
	604, 455, 456, 457, 605, 458, 606, 459, 460, 0,
	461, 0, 462, 463, 464, 465, 466, 467, 468, 607,
	470, 469, 471, 0, 472, 0, 0, 0, 0, 0,
	473, 0, 475, 476, 477, 474, 478, 479, 480, 481,
	0, 482, 483, 484, 0, 485, 486, 487, 488, 608,
	489, 0, 490, 491, 497, 498, 492, 493, 499, 500,
	501, 502, 503, 0, 505, 506, 504, 507, 508, 509,
	0, 510, 494, 495, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 609, 0, 519, 0, 520, 521, 522,
	523, 496, 524, 529, 610, 525, 526, 527, 528, 611,
	0, 531, 532, 0, 530, 0, 533, 534, 535, 536,
	537, 538, 328, 539, 0, 540, 612, 613, 614, 615,
	0, 549, 0, 541, 542, 543, 616, 544, 617, 0,
	545, 546, 547, 548, 0, 550, 551, 0, 0, 552,
	553, 554, 556, 557, 555, 558, 0, 559, 0, 0,
	560, 561, 562, 618, 619, 620, 245, 564, 563, 565,
	621, 0, 0, 0, 0, 566, 567, 622, 568, 569,
	570, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	572, 573, 0, 266, 574, 267, 575, 0, 576, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 577,
	578, 579, 0, 275, 276, 580, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 581, 582, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 583,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	584, 585, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 586, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 587, 588, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 589, 0, 590, 350,
	0, 351, 352, 353, 354, 355, 591, 592, 593, 429,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 594, 595,
	0, 596, 0, 366, 367, 0, 597, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 598, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 397, 410, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 412, 0, 411,
	0, 413, 414, 415, 420, 422, 423, 418, 419, 421,
	424, 425, 417, 0, 416, 0, 0, 0, 426, 427,
	0, 599, 428, 600, 430, 431, 0, 0, 432, 0,
	0, 0, 434, 435, 436, 0, 0, 437, 438, 601,
	0, 439, 0, 602, 440, 441, 433, 442, 443, 444,
	445, 446, 447, 448, 449, 0, 450, 451, 603, 452,
	453, 454, 604, 455, 456, 457, 605, 458, 606, 459,
	460, 0, 461, 0, 462, 463, 464, 465, 466, 467,
	468, 607, 1120, 469, 471, 0, 472, 0, 0, 0,
	0, 0, 473, 0, 475, 476, 477, 474, 478, 479,
	480, 481, 0, 482, 483, 484, 0, 485, 486, 487,
	488, 608, 489, 0, 490, 491, 497, 498, 492, 493,
	499, 500, 501, 502, 503, 0, 505, 506, 504, 507,
	508, 509, 0, 510, 494, 495, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 609, 0, 519, 0, 520,
	521, 522, 523, 496, 524, 529, 610, 525, 526, 527,
	528, 611, 0, 531, 532, 0, 530, 0, 533, 534,
	535, 536, 537, 538, 328, 539, 0, 540, 612, 613,
	614, 615, 0, 549, 0, 541, 542, 543, 616, 544,
	617, 0, 545, 546, 547, 548, 0, 550, 551, 0,
	0, 552, 553, 554, 556, 557, 555, 558, 0, 559,
	0, 0, 560, 561, 562, 618, 619, 620, 245, 564,
	563, 565, 621, 0, 0, 0, 0, 566, 567, 622,
	568, 569, 570, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 572, 573, 0, 266, 574, 267, 575, 0,
	576, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 577, 578, 579, 0, 275, 276, 580, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 581, 582, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 583, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 584, 585, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 586, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 587, 588, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 589, 0,
	590, 0, 0, 351, 352, 353, 354, 355, 591, 592,
	593, 429, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	594, 595, 0, 596, 0, 366, 367, 0, 597, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	598, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 397, 410, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 412,
	0, 411, 0, 413, 414, 415, 420, 422, 423, 418,
	419, 421, 424, 425, 417, 0, 416, 0, 0, 0,
	426, 427, 0, 599, 428, 600, 430, 431, 0, 0,
	432, 0, 0, 0, 434, 435, 436, 0, 0, 437,
	438, 601, 0, 439, 0, 602, 440, 441, 433, 442,
	443, 0, 445, 446, 447, 448, 449, 0, 450, 451,
	603, 452, 453, 454, 604, 455, 456, 457, 605, 458,
	606, 459, 460, 0, 461, 0, 462, 463, 464, 465,
	0, 467, 468, 607, 470, 469, 471, 0, 472, 0,
	0, 0, 0, 0, 473, 0, 475, 476, 477, 474,
	478, 479, 480, 481, 0, 482, 483, 484, 0, 485,
	486, 487, 488, 608, 0, 0, 490, 491, 497, 498,
	492, 493, 499, 500, 501, 502, 503, 0, 505, 506,
	504, 507, 508, 509, 0, 510, 494, 495, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 609, 0, 519,
	0, 520, 521, 522, 523, 496, 524, 529, 610, 525,
	526, 527, 528, 611, 0, 531, 532, 0, 530, 0,
	533, 534, 535, 536, 537, 538, 328, 539, 0, 540,
	612, 613, 614, 615, 0, 549, 0, 541, 542, 543,
	616, 544, 617, 0, 545, 546, 547, 548, 0, 550,
	551, 0, 0, 552, 553, 554, 556, 557, 555, 558,
	0, 559, 0, 0, 560, 561, 562, 618, 619, 620,
	0, 564, 563, 565, 621, 0, 0, 0, 0, 566,
	567, 622, 568, 569, 570, 1660, 1661, 0, 1693, 1694,
	1695, 1703, 1704, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 1691, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 1660, 1661, 0, 1693, 1694,
	1695, 1703, 1704, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 1691, 1662, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 1682, 0,
	0, 0, 1709, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 1700, 0, 0, 1710, 0, 1668, 0, 0,
	0, 1690, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 1707,
	0, 0, 0, 0, 0, 0, 1677, 1678, 0, 0,
	0, 0, 1700, 0, 0, 1710, 0, 0, 0, 0,
	0, 1690, 1692, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 1683, 1707,
	0, 0, 0, 0, 0, 0, 1677, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 1660, 1661, 0, 1693,
	1694, 1695, 1703, 1704, 1705, 0, 0, 0, 1683, 1708,
	0, 0, 0, 0, 0, 0, 0, 1696, 1691, 0,
	0, 0, 0, 0, 0, 1663, 0, 1697, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 1685, 1686,
	1687, 1688, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 1710, 0, 0, 0,
	0, 0, 1690, 1692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	1707, 0, 0, 0, 0, 1699, 0, 1677, 1678, 1674,
	1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 1698, 0, 0, 0, 3910,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 1674,
	1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 0, 1660, 1661, 3770,
	1693, 1694, 1695, 1703, 1704, 1705, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 1696, 1691,
	0, 0, 0, 0, 0, 0, 1663, 0, 1697, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705,
	1682, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 0, 1696, 1691, 0, 0, 1689, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 0, 0, 1685,
	1686, 1687, 1688, 0, 0, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 1710, 0, 0,
	0, 0, 0, 1690, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 1686, 1687, 1688, 0, 0, 1706,
	0, 1707, 0, 1668, 0, 0, 1699, 0, 1677, 1678,
	1674, 1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672,
	1664, 1665, 1666, 1667, 1669, 1670, 1698, 0, 0, 0,
	3713, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	1683, 1710, 0, 0, 0, 0, 0, 1690, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 1707, 0, 0, 0, 0,
	0, 0, 1677, 1678, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703, 1704,
	1705, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 1696, 1691, 0, 0, 1689, 0, 0,
	0, 1663, 0, 1697, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 1687, 1688, 0, 0,
	0, 0, 0, 0, 1668, 0, 0, 1699, 0, 0,
	0, 1674, 1675, 1681, 1702, 1680, 1676, 0, 1673, 1671,
	1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 0, 0,
	0, 3712, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 1710, 0, 0, 0, 0, 0, 1690, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 1707, 0, 0, 0,
	0, 1699, 0, 1677, 1678, 1674, 1675, 1681, 1702, 1680,
	1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669,
	1670, 1698, 0, 1660, 1661, 3711, 1693, 1694, 1695, 1703,
	1704, 1705, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 1691, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703,
	1704, 1705, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 1696, 1691, 1662, 0, 0, 0,
	0, 0, 1663, 0, 1697, 0, 1682, 0, 0, 0,
	1709, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 1685, 1686, 1687, 1688, 0,
	0, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 1686, 1687, 1688, 0,
	1700, 0, 0, 1710, 0, 1668, 0, 0, 0, 1690,
	1692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 1707, 0, 0,
	0, 0, 0, 0, 1677, 1678, 0, 0, 0, 0,
	1700, 0, 0, 1710, 0, 0, 0, 0, 0, 1690,
	1692, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1683, 1707, 0, 0,
	0, 0, 1699, 0, 1677, 1678, 1674, 1675, 1681, 1702,
	1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667,
	1669, 1670, 1698, 0, 1660, 1661, 3408, 1693, 1694, 1695,
	1703, 1704, 1705, 0, 0, 0, 1683, 1708, 0, 0,
	0, 0, 0, 0, 0, 1696, 1691, 0, 0, 0,
	0, 0, 0, 1663, 0, 1697, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 1685, 1686, 1687, 1688,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 1710, 0, 0, 0, 0, 0,
	1690, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 1707, 0,
	0, 0, 0, 1699, 0, 1677, 1678, 1674, 1675, 1681,
	1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666,
	1667, 1669, 1670, 1698, 0, 0, 0, 2944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1674, 1675, 1681,
	1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666,
	1667, 1669, 1670, 0, 0, 1660, 1661, 2943, 1693, 1694,
	1695, 1703, 1704, 1705, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 1696, 1691, 0, 0,
	0, 0, 0, 0, 1663, 0, 1697, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 1660,
	1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 1682, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	1696, 1691, 0, 0, 1689, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 1710, 0, 0, 0, 0,
	0, 1690, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 1687, 1688, 0, 0, 1706, 0, 1707,
	0, 1668, 0, 0, 1699, 0, 1677, 1678, 1674, 1675,
	1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 1698, 0, 0, 0, 2942, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 1683, 1710,
	0, 0, 0, 0, 0, 1690, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 1707, 0, 0, 0, 0, 0, 0,
	1677, 1678, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 1691, 1708, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 1689, 0, 1709, 0, 0,
	0, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	1701, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 1685, 1686, 1687, 1688, 0, 0, 0, 0,
	0, 0, 1668, 4276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 1674,
	1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 0, 0, 1700, 0, 2941,
	1710, 0, 0, 0, 0, 0, 1690, 1692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676, 1698,
	1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0,
	0, 2908, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 1661, 0, 1693, 1694,
	1695, 1703, 1704, 1705, 4275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 1691, 0, 0,
	0, 0, 2879, 0, 1663, 0, 0, 0, 0, 0,
	1689, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 1660, 1661, 1662, 1693,
	1694, 1695, 1703, 1704, 1705, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 1701, 1679, 1696, 1691, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2880, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1687,
	1688, 0, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 1700, 0, 0, 1710, 0, 0, 0, 0,
	0, 1690, 1692, 0, 0, 0, 0, 0, 1685, 1686,
	1687, 1688, 0, 0, 0, 0, 0, 1706, 1668, 1707,
	3028, 0, 0, 3027, 0, 0, 1677, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 1710, 0, 1683, 0,
	0, 0, 1690, 1692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	1707, 0, 0, 0, 0, 0, 0, 1677, 1678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 1697, 0, 1683,
	0, 68, 0, 44, 43, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	0, 46, 0, 143, 0, 1689, 0, 0, 1697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 0, 79, 0, 2477, 1684, 0, 0, 0, 0,
	0, 1660, 1661, 0, 1693, 1694, 1695, 1703, 1704, 1705,
	0, 0, 0, 0, 0, 0, 48, 64, 0, 0,
	1701, 0, 1696, 1691, 49, 0, 0, 2476, 0, 85,
	1663, 0, 0, 144, 0, 0, 1689, 0, 1709, 0,
	0, 47, 0, 100, 0, 0, 0, 0, 86, 97,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 1660, 1661, 1662, 1693, 1694, 1695, 1703, 1704,
	1705, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 1701, 1679, 1696, 1691, 50, 0, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 1674,
	1675, 1681, 1702, 1680, 1676, 1662, 1673, 1671, 1672, 1664,
	1665, 1666, 1667, 1669, 1670, 1682, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 1686, 1687, 1688, 0, 0, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	1674, 1675, 1681, 1702, 1680, 1676, 0, 1673, 1671, 1672,
	1664, 1665, 1666, 1667, 1669, 1670, 0, 0, 1700, 0,
	0, 1710, 0, 0, 0, 0, 0, 1690, 1692, 0,
	0, 0, 0, 0, 1685, 1686, 1687, 1688, 0, 0,
	0, 0, 0, 1706, 1668, 1707, 0, 0, 0, 0,
	0, 0, 1677, 1678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	51, 0, 1710, 0, 1683, 0, 0, 0, 1690, 1692,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	0, 0, 0, 65, 1706, 0, 1707, 0, 54, 173,
	93, 0, 96, 1677, 1678, 0, 52, 0, 0, 0,
	145, 0, 0, 0, 0, 1708, 0, 53, 0, 0,
	0, 1698, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 1697, 58, 1683, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 140, 1697, 976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 1684, 0, 0, 0, 0, 213, 1660, 1661, 0,
	1693, 1694, 1695, 1703, 1704, 1705, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 207, 1701, 0, 1696, 1691,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 1689, 0, 1709, 0, 0, 176, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 1660, 1661,
	1662, 1693, 1694, 1695, 1703, 1704, 1705, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 1701, 1679, 1696,
	1691, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680,
	1676, 1662, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669,
	1670, 1682, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	1686, 1687, 1688, 0, 0, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 1674, 1675, 1681, 1702,
	1680, 1676, 0, 1673, 1671, 1672, 1664, 1665, 1666, 1667,
	1669, 1670, 0, 0, 1700, 0, 0, 1710, 0, 0,
	0, 0, 0, 1690, 1692, 0, 0, 0, 0, 0,
	1685, 1686, 1687, 1688, 0, 0, 0, 0, 0, 1706,
	1668, 1707, 0, 0, 0, 3034, 0, 0, 1677, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 1710, 0,
	1683, 0, 0, 0, 1690, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 1707, 0, 0, 0, 0, 0, 0, 1677,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	1697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 1660, 1661, 0, 1693, 1694, 1695, 1703,
	1704, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 1696, 1691, 0, 0, 0, 3029,
	0, 0, 1663, 0, 0, 0, 0, 0, 1689, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	3389, 0, 0, 0, 1660, 1661, 1662, 1693, 1694, 1695,
	1703, 1704, 1705, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 1701, 1679, 1696, 1691, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 1674, 1675, 1681, 1702, 1680, 1676, 1662, 1673, 1671,
	1672, 1664, 1665, 1666, 1667, 1669, 1670, 1682, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 1686, 1687, 1688, 0,
	0, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 1674, 1675, 1681, 1702, 1680, 1676, 0, 1673,
	1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0, 0,
	1700, 0, 0, 1710, 0, 0, 0, 0, 0, 1690,
	1692, 0, 0, 0, 0, 0, 1685, 1686, 1687, 1688,
	0, 0, 0, 0, 0, 1706, 1668, 1707, 0, 0,
	0, 0, 0, 0, 1677, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 1710, 0, 1683, 0, 0, 0,
	1690, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 1707, 0,
	0, 0, 0, 0, 0, 1677, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 1697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 2996, 0, 0, 1660,
	1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	1696, 1691, 0, 0, 0, 2945, 0, 0, 1663, 0,
	0, 0, 0, 0, 1689, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	1660, 1661, 1662, 1693, 1694, 1695, 1703, 1704, 1705, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 1701,
	1679, 1696, 1691, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1674, 1675, 1681,
	1702, 1680, 1676, 1662, 1673, 1671, 1672, 1664, 1665, 1666,
	1667, 1669, 1670, 1682, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 1687, 1688, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 1674, 1675,
	1681, 1702, 1680, 1676, 0, 1673, 1671, 1672, 1664, 1665,
	1666, 1667, 1669, 1670, 0, 0, 1700, 0, 0, 1710,
	0, 0, 0, 0, 0, 1690, 1692, 0, 0, 0,
	0, 0, 1685, 1686, 1687, 1688, 0, 0, 0, 0,
	0, 1706, 1668, 1707, 0, 0, 0, 0, 0, 0,
	1677, 1678, 0, 0, 0, 0, 0, 0, 0, 1660,
	1661, 0, 1693, 1694, 1695, 1703, 1704, 1705, 1698, 0,
	0, 0, 0, 0, 0, 0, 869, 1700, 912, 0,
	1710, 1691, 1683, 0, 0, 0, 1690, 1692, 1663, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 877, 1706, 0, 1707, 0, 0, 0, 0, 0,
	0, 1677, 1678, 0, 0, 0, 0, 891, 875, 874,
	0, 0, 1662, 1708, 0, 0, 0, 0, 0, 1698,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	1679, 1697, 0, 1683, 0, 0, 876, 0, 0, 0,
	0, 879, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 888, 889, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 913,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 1687, 1688, 0, 882, 0, 0, 1684,
	0, 1668, 0, 0, 0, 911, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 1710,
	1689, 0, 0, 0, 0, 1690, 1692, 884, 0, 0,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	1684, 1706, 0, 1707, 0, 0, 0, 0, 0, 0,
	1677, 1678, 0, 885, 886, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1698, 0,
	0, 893, 892, 0, 0, 0, 0, 0, 0, 887,
	0, 0, 1683, 902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 917, 0, 1674, 1675, 1681, 1702, 1680, 1676, 0,
	1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 914, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1674, 1675, 1681, 1702, 1680, 1676,
	0, 1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670,
	0, 0, 880, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	909, 910, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 0, 1701, 0, 0, 918, 903, 0,
	896, 894, 0, 899, 0, 0, 0, 0, 0, 900,
	0, 0, 871, 0, 915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 0,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 906, 0, 1674, 1675, 1681, 1702, 1680, 1676, 0,
	1673, 1671, 1672, 1664, 1665, 1666, 1667, 1669, 1670, 0,
	0, 0, 0, 0, 908,
}
var sqlPact = [...]int{

	109073, -1000, -1000, -1000, -1000, 236, -1000, -1000, 235, 223,
	214, 211, 209, 208, 206, 205, 198, -1000, -1000, -1000,
	-1000, -1000, -1000, 196, -1000, -1000, 194, -1000, 193, 188,
	187, -1000, -1000, 186, -1000, 185, -1000, -1000, -1000, -1000,
	183, 182, 180, 81067, 80548, 81579, 2111, 99128, 87751, 1942,
	72272, 98609, 71753, 98090, 97571, 2533, 179, -1000, 97052, 176,
	175, 174, -1000, 96533, -1000, 1880, -1000, 173, 4269, 58761,
	169, 166, 165, 2189, 159, -1000, 157, 155, -1000, 10264,
	1429, -1000, 150, 148, -1000, 9594, 4452, 85682, 147, 146,
	2168, 142, 141, 58241, 139, 135, 2162, 2684, -1000, -1000,
	1962, -1000, -1000, 134, 133, 132, 131, 129, 128, 125,
	124, 123, 113, 112, -1000, 110, 106, 104, 103, 98,
	96, 95, 94, -1000, 89, 88, 87, 86, 85, 84,
	83, 82, 81, 76, 74, 69, 68, -1000, 110654, 67,
	1831, 1597, 1586, 1584, 1578, 1577, 980, 64, 63, 62,
	61, 60, 58, 57, 55, 54, -1000, 52, 51, 50,
	49, 48, 47, 46, 44, 164, 37, 35, 33, 32,
	26, 24, 19, 3022, -1000, 1516, 877, 27580, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 105272, 99640, 18, -89,
	17, -1000, 3090, 1046, 48879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 307, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 531, 1875, 786, -1000, -1000,
	-1000, 96021, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2109, -82, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 785,
	-1000, 2107, 283, 2056, -1000, -1000, -1000, -1000, -1000, 99640,
	-1000, 1007, -1000, -1000, 3536, 3535, 1947, 782, 87232, -1000,
	1804, -1000, 932, 29209, -1000, 1265, -1000, 29209, 300, -1000,
	-1000, -1000, -1000, -1000, -1000, 3534, 3533, 3530, 3529, -1000,
	-1000, 71234, 21010, 70715, 70196, 95509, 20481, 80029, 79510, 94990,
	65549, 1006, -1000, -1000, -1000, 1368, -1000, -1000, -1000, -1000,
	-1000, -1000, -9, 66588, 3267, 99640, -1000, 298, -1000, -1000,
	-1000, -1000, -1000, -1000, 41914, 632, 41359, 762, 40804, 647,
	-1000, -1000, -1000, 65020, -1000, 3527, 3521, 1084, 3520, 3011,
	104760, 1772, 3519, 1762, 1155, 3518, 3517, 3516, 3513, 3512,
	3511, 1382, 94471, 2719, 93952, 1587, 64491, 1003, 78991, 81579,
	2451, 93433, 1355, 1354, -1000, -1000, -1000, -1000, 2805, 2679,
	2598, 1385, -1000, -1000, 3510, 3509, 3508, 3507, 3506, 104248,
	1760, 3505, 2308, 3504, 3503, 3502, 3500, 3498, 3495, 3494,
	-1000, 78472, 1002, 77953, 77434, 3156, 92914, 76915, 92395, 63962,
	40249, 802, -1000, -1000, -1000, 50969, 9110, 8496, 91876, 53084,
	81579, 81579, -1000, -1000, -1000, -1000, -1000, 39694, 560, 39139,
	739, -1000, -1000, 51503, 2663, -1000, -1000, -1000, -1000, 38584,
	540, 38029, 704, 99640, -1000, 2718, 1837, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2157, 1549, 3277, 2492, 63433, 1926, 1345, 3102, 2804,
	2803, 1474, 3493, 3492, 2402, 2802, 2799, 2798, 2797, 2785,
	1397, 2361, 346, 27025, 2693, 1598, 37474, 1455, 1461, 2780,
	2765, 3318, 1812, 1897, 1933, 69677, 3491, 3490, 3042, 2746,
	2742, 2656, -1000, -1000, -1000, -1000, 1431, -1000, -1000, -1000,
	-1000, -1000, 72784, -1000, -1000, 1659, -1000, -1000, 1659, -1000,
	-1000, -1000, -1000, -1000, 1305, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1516, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2139, -1000, 1879,
	-1000, -1000, 2320, 3020, 3020, 3020, 3136, 510, 507, -1000,
	164, -1000, -1000, 110449, -1000, -1000, 42457, 42457, 42457, 42457,
	42457, 42457, 42457, 1936, -1000, 777, -1000, -1000, 816, -1000,
	776, 627, -1000, -1000, -1000, -1000, -1000, -1000, 770, -1000,
	-1000, -1000, -1000, -1000, -1000, 3267, -1000, 23707, -1000, -1000,
	-1000, 477, 767, 42457, -1000, -1000, 3332, 3330, 1027, -1000,
	292, 942, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2716, 765, 758, -1000, 756, 751,
	749, 748, 747, -1000, -1000, -1000, 744, 743, 737, 735,
	733, 731, 730, 728, -1000, 1822, -1000, -1000, -1000, -1000,
	-1000, -1000, 676, 675, 675, 675, -1000, 997, -1000, -1000,
	-1000, 317, 672, 314, 669, 667, 666, -1000, 727, 726,
	725, 724, 722, 720, 716, 715, 714, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 996, -1000, -1000, -1000, -1000, -10,
	99640, -1000, 531, -10, -1000, -1000, 712, -1000, 31393, 31393,
	31393, -1000, -1000, 2104, 42457, -1000, 2254, -1000, -1, -1,
	898, 49915, -1000, 47825, 898, 337, 846, 54632, -1000, 2655,
	-1000, -1000, 710, 291, -1000, -1000, -1000, -1000, 21537, 2649,
	99640, 99640, 81579, 81579, 81579, 2914, 42457, -1000, -1000, 62904,
	99640, 82091, 3223, 59273, 62387, 99640, 2712, -1000, 3054, -1000,
	-1000, 99640, -1000, 42457, -1000, 3222, 1629, 67105, 3168, -21,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2290, 2289, 1136,
	2137, -1000, 2934, 1324, -1000, 29209, 2998, -1000, -1000, -1000,
	288, 21537, -1000, -1000, -1000, -1000, -1000, 3125, 2887, 1304,
	-1000, 2128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1653, 2886, -1000, 1701, 2885, 1652, -1000, -1000, 2106,
	-1000, -1000, 3035, -1000, -1000, 1808, 2880, 0, -1000, -1000,
	2392, -1000, -1000, 1814, -1000, -1000, 968, 2878, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 76396, 52557, 51503,
	66588, -14, -1000, -1000, -1000, -1000, -63, -1000, 19952, 110449,
	-1000, -1000, -1000, -1000, 1681, 110449, 920, -1000, -1000, 2876,
	-1000, 110449, 754, -1000, -1000, 2875, -1000, 2701, -1000, -1000,
	-1000, -1000, 3489, -1000, 3486, 2221, 3483, 3482, 3481, -1000,
	1636, 1818, 3480, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	75884, 2102, -1000, -1000, 74846, -1000, 2219, 3167, -1000, -1000,
	-1000, 75365, 1000, -1000, 968, 2217, -1000, 85163, 1029, -1000,
	3479, 3154, 2469, 968, 2213, -1000, -1000, -1000, -1000, -1000,
	1017, -1000, 56179, -1000, 56179, -1000, 1509, -1000, 103736, -1,
	81579, 3267, -1000, -1000, -1000, -1000, -1000, -1000, 2873, 3477,
	3475, 3474, -1000, 99640, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 197, 2851, -1000, -1000, 84651, 197, 2849, -1000, 197,
	2847, -1000, 84139, -1000, -1000, 2098, 2842, -1000, 200, 2841,
	-1000, -1000, 199, 2839, -1000, -1000, -110, 2838, -1000, -1000,
	110449, -1000, -1000, -1000, -18, -1000, -1000, -1000, 1046, -1000,
	50435, -1000, 50435, 86713, 66076, 954, 784, 57721, 110449, -1000,
	-1000, -1000, -1000, 110449, -1000, -1000, -1000, -134, -1000, -1000,
	66076, 51503, 110449, -1000, -1000, -1000, -1000, 110449, -1000, -1000,
	-1000, 66076, 74846, -1000, 91357, 74334, -1000, -1000, 1370, 2336,
	-1000, -1000, -1000, 66076, 1275, 66076, 66076, 66076, -1000, 90838,
	-1000, -1000, 1917, 1381, 3044, 1900, 81579, -1000, 1927, -1000,
	-1000, -1000, 3089, -1000, -1000, 2700, -1000, 61870, 83627, -1000,
	83115, -1000, 82603, -1000, 81579, -1000, 81579, -1000, 3473, 3469,
	3468, 3465, -1000, 3463, 3078, -1000, 110449, 3066, -1000, 3461,
	3163, 2693, 110449, -1000, 2770, 1595, 1588, 99640, -1000, -1000,
	99640, -1000, 99640, -1000, -1000, -1000, 1441, -1000, -1000, 2288,
	-1000, -1000, -1000, -1000, 81579, -1000, -1000, -1000, -1000, -1000,
	-1000, 2690, -1000, 1682, -1000, 1923, -1000, 1365, -1000, -1000,
	202, -1000, -1000, -21, -1000, 103224, -1000, 2320, -1000, 99640,
	-1000, 2283, 2676, 2689, 1539, 2117, 2391, -1000, 36919, 2319,
	45172, 2122, 164, -1000, -1000, 164, 164, 28666, -1000, -1000,
	59273, 59273, 21537, 1337, 42457, 42457, 42457, 42457, 42457, 42457,
	42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457,
	42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457,
	42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, 2006,
	42457, 1273, 42457, 42457, 42457, 42457, 2005, -1000, -1000, 1855,
	563, 1931, -1000, 3283, 3283, 3283, 511, 511, 110628, 110628,
	612, 3459, 816, -1000, 42457, -1000, 78, 42457, 22066, -1000,
	507, 7052, 2225, -1000, 499, 22621, -1000, -1000, -1000, 23707,
	627, 36364, 42457, 989, 110449, -1000, -1000, 1686, 3279, 19425,
	2608, 2544, 700, 793, 752, 26470, 25915, 25360, 24805, 578,
	42457, 42457, 42457, 42457, 42457, 42457, 42457, 42457, -1000, -1000,
	3303, -1000, 3279, -1000, -1000, -1000, -1000, 3279, 1332, 1327,
	3279, -1000, 3279, 3279, 10649, 10649, 35821, 35266, 34711, 45715,
	34156, 42457, 24250, 33601, 33046, -1000, 99640, -10, 3216, 42457,
	256, -1000, 109170, -1000, 256, 256, 699, -23, 110449, 2349,
	2349, 49397, 2201, 1968, 1968, 1968, -1000, 898, 15180, 898,
	89809, 1982, 898, 898, 271, 297, 497, 47307, 2254, 89809,
	808, 695, 16, 9, 8, -1000, -1000, 4, 2, -1000,
	-1000, 81579, 691, 22066, 21537, 270, 1420, -25, 2395, 2390,
	2381, -1000, 2373, 1685, -28, 1272, 81579, 99640, -158, -1000,
	6138, -30, -1000, 1319, 269, 3279, -1000, -1000, -1000, -1000,
	-1000, 3458, 3457, -1000, 995, 680, 679, 466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 676, 675, 675, 675,
	-1000, 317, 672, 314, 669, 667, 666, -1000, -1000, -1000,
	-1000, -1000, 2648, 81579, 99640, -63, 82091, 81579, 923, -39,
	1093, -21, -1000, -1000, -1000, 1659, -1000, 1963, -1000, -1000,
	-1000, -1000, -1000, -1000, 1384, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1027, -1000, -1000, -1000, -1000, -1000, -1000,
	3299, 3297, -12, -1000, -1000, 21537, -1000, -40, 1651, 1670,
	-1000, 69158, 2169, 3045, 3029, 1495, -1000, 1437, 1269, 3135,
	72784, 3179, 3193, 648, -1000, 2647, -1000, -1000, 917, 1654,
	1668, 1267, 72784, 1701, -1000, 59273, -1000, 2433, 3133, 1376,
	1378, 1376, 1376, 1366, -1000, 72784, 1645, 1246, 1242, -1000,
	1237, 1230, -1000, -42, 3176, 3187, 163, -1000, 2644, 1179,
	-1000, -1000, 81579, 21537, 1496, 1498, 1628, 1177, -13, -1000,
	3172, 3171, 1175, 1173, -1000, 4964, -1000, 66076, 1635, 2832,
	2491, 895, 2485, -1000, -1000, 895, -14, 66588, 99640, 266,
	-1000, 78, 42457, 42457, 78, 42457, 78, 3162, -1000, -1000,
	2827, -1000, -1000, -1000, 3455, 1799, 2307, -1000, -1000, 662,
	2212, 2642, 99640, 2411, -19, 81579, -1000, 2826, 59792, 1701,
	2209, -1000, -1000, 73815, -1000, 2824, 531, 2206, -1000, 580,
	3454, -1000, 102712, -1000, 3054, 1165, 2822, 1037, 170, 3211,
	-1000, 170, 56697, -1000, 99640, -1000, -1, 99640, -1000, -1000,
	-1000, 3453, -1000, 81579, -1000, -1000, 81579, 197, 2820, -1000,
	81579, -1000, 81579, 190, 2819, -1000, -1000, 99640, -1000, 81579,
	81579, -1000, 99640, 99640, 66076, 66076, 7639, 68134, -41, -44,
	496, -1000, 90326, 99640, 1035, 68646, 99640, 2985, 964, 51503,
	-1000, -47, -134, 2484, 954, 954, 895, -1000, 895, -1000,
	81579, 2688, -1000, -1000, 66076, 954, 954, 954, -1000, -1000,
	-1000, -1000, 3452, 3451, 3447, -1000, -1000, -1000, 967, 81579,
	99640, 81579, -1000, -1000, 99640, -1000, 99640, -1000, 967, 99640,
	967, 99640, 967, 99640, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 78, 42457, -1000, -1000, 3444, 1542, -1000, 2682, -1000,
	2681, -1000, 40, -1000, -1000, -1000, -1000, -1000, 1866, 81579,
	81579, 81579, 81579, 99640, 81579, -1000, 72784, -1000, 2283, 2676,
	-1000, -1000, -1000, -1000, -1000, -1000, 1528, 2066, -1000, 2328,
	-1000, 1445, -1000, -1000, -1000, 110449, 46242, -1000, -1000, 110449,
	1742, -1000, 44629, 44086, -1000, -1000, 1517, 81579, 2415, -1000,
	2415, -218, -1000, 108764, 2327, 81579, -1000, -1000, -1000, -1000,
	-1000, 916, 1067, 1067, 1248, 1248, 1248, 1248, 3175, 289,
	1232, 1078, 4661, 4661, 493, 493, 493, 493, 493, 4661,
	454, 511, 511, 454, 454, 454, 454, 454, 511, 511,
	511, 4661, 4661, 4661, 110628, 9348, 6968, 42457, 42457, 1172,
	1817, 563, 6873, 42457, 5323, 5323, 5323, 5323, -1000, 2021,
	-1000, -1000, -1000, -1000, 2641, 661, 45715, 45715, -1000, -1000,
	-1000, -1000, 23164, 42457, -1000, -1000, -1000, -1000, 32491, -1000,
	-1000, 108138, -316, 495, -159, -59, -1000, 42457, 42457, 42457,
	494, -1000, 263, 42457, 99640, -1000, 13949, 801, -194, -1000,
	-57, 1372, -1000, 42457, -1000, -1000, 1170, -1000, 1164, 1157,
	1156, -1000, 657, 492, -1000, 261, -1000, 1966, 656, 653,
	42457, -1000, -1000, -1000, -1000, -1000, 108074, -1000, -1000, 107783,
	-1000, -1000, 107532, -1000, -1000, 107492, -1000, -1000, -1000, 110388,
	13784, 13379, 12709, 5907, 12067, 11071, -64, 491, -69, 490,
	911, 910, 489, 479, 475, -75, -1000, 3442, 3440, 3439,
	-1000, 3407, 3403, 3402, -1000, 3401, 3399, 3398, -1000, 3397,
	3395, 3394, -1000, 3393, 3390, 3389, -1000, 3386, 3385, 3383,
	-1000, 3381, 3380, 3379, -1000, 3378, 3376, 3374, -86, 467,
	-1000, 2639, -159, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 431, -1000, 430, -1000, 110043, -159, 426, 8751, -1000,
	45715, 45715, 45715, -1000, 425, -1000, 108825, -1000, 109982, 31948,
	31948, 31948, 423, 109637, 42457, -159, -88, -1000, -96, -1000,
	-1000, 547, -101, 982, 31393, 48359, 21537, -1000, 982, 982,
	42457, -1000, 42457, 2358, -1000, -1000, -1000, 2353, 2233, 2349,
	49397, -1000, -1000, -1000, -1000, 89809, -1000, 3267, 2783, -1000,
	89809, -1000, -1000, 99640, 531, -1000, 89809, 89809, 21537, 898,
	-1000, 898, 89809, 654, -1000, -1000, -1000, -1000, -1000, 421,
	53601, -59, 258, 21537, 968, -1000, 2463, 2463, 2463, 2463,
	-1000, -1000, 99640, 1150, -15, -122, 3242, -1000, 1845, -1000,
	59273, -1000, 815, 1195, 21537, -1000, -1000, -1000, 646, -1000,
	3279, 3279, -1000, 3279, 99640, 2637, 149, 114, 974, 29209,
	-1000, 1659, -1000, -1000, 1491, -1000, 1802, -1000, 1159, -1000,
	-1000, -1000, -1000, 29209, -1000, 2196, 99640, 99640, 81579, -1000,
	99640, -1000, 2202, 102200, 2200, 59273, 99640, -1000, -1000, 645,
	644, 2324, 2323, 1033, 99640, 99640, 2322, 101688, 101176, 99640,
	1878, 42457, 59792, 2124, 1920, 78, 78, -1000, -1000, 78,
	640, 1317, 81579, 81579, 99640, 81579, 1627, -1000, -1000, -1000,
	-1000, -1000, 73296, -1000, -1000, 3292, 3288, -1000, 1376, -1000,
	-1000, -1000, 1376, 1701, 1508, 99640, 81579, 59792, 1617, 99640,
	1921, 78, 78, -1000, -1000, 78, 639, 21537, 1826, -1000,
	2726, 99640, 3328, 99640, 99640, 99640, 59792, 3015, 100664, 99640,
	99640, 59792, 4964, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 61358, 1045, 968, 1613, 1149, 72784,
	51503, 963, 51503, 2467, -1000, -1000, 18898, -1000, 110449, 110449,
	-1000, 110449, -1000, 60831, 99640, -1000, 999, 99640, 68646, 949,
	2817, 55661, -63, 954, 66076, 81579, -19, 99640, -1000, -1000,
	-1000, -1000, -1000, 1701, 2815, 531, 2199, -1000, 66076, 3208,
	2814, 637, 3372, 3369, -1000, 2101, 2194, -1000, -1000, 100152,
	2784, 860, 99640, 982, 49397, 1820, -1000, 54120, 1015, 99640,
	1700, 105, -1000, -1000, -1000, 23, 99640, -1000, 844, 3368,
	-1000, -1000, 197, -1000, 81579, 197, 197, -1000, 81579, 81579,
	2098, -1000, 200, -1000, 199, -1000, -110, -1000, -1000, 7639,
	7639, 954, -266, 636, -1000, 885, 884, 52030, 66076, -104,
	-1000, -1000, -1000, -1000, -1000, 81579, 99640, 763, 2468, 99640,
	-107, -1000, 253, 633, -1000, 3212, -1000, -1000, 964, 51503,
	2633, -1000, -1000, 973, -1000, 1350, 954, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -2, -63, -63,
	-1000, 967, -1000, 967, -1000, 967, -1000, 110449, -1000, -1000,
	1529, 1525, 99640, -1000, 21537, 99640, 81579, 21537, 81579, 2675,
	2669, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1052,
	-1000, 1742, 2064, -1000, 627, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2272, -1000, -20, 28666, 2126, -1000,
	-1000, 81579, -3, 42457, 42457, 6157, 5934, 42457, 45715, 45715,
	-1000, 42457, 5867, -1000, -1000, -1000, -1000, -1000, 2614, 624,
	42457, 59273, 8571, 7161, -1000, 420, 8283, 454, -1000, 42457,
	-1000, 418, 30850, -1000, 109231, -66, -113, -1000, 15720, -159,
	-119, -1000, -1000, 814, -1000, 2896, -1000, 42457, 109576, 2220,
	1787, 1691, 1553, 3279, 3327, 18371, -1000, 57209, 986, 1988,
	107241, -1000, -1000, -1000, -1000, 59273, 59273, 42457, 42457, -1000,
	42457, 42457, 42457, -1000, -1000, -1000, 3279, 912, -1000, -1000,
	-1000, 912, -1000, -1000, 1376, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1376, -1000, 42457, -1000, -1000, 2601, 42457, -1000, 59273, 59273,
	45715, 45715, 45715, 45715, 45715, 45715, 45715, 45715, 45715, 45715,
	45715, 45715, 45715, 45715, 45715, 45715, 45715, 45715, 45715, 2334,
	45715, 3265, 3265, 3265, -1000, 2667, 2601, 42457, 42457, 59273,
	417, 416, 410, -1000, 42457, -159, -1000, -1000, 7639, 611,
	-1000, 2260, -1000, 2543, -1000, 42457, -1000, -118, -1000, 2254,
	-1000, -1000, 2543, 2543, -120, 110449, 49397, 49397, -1000, 604,
	42457, 2344, -1000, -1000, 798, -312, -1000, 883, -1000, -1000,
	-1000, -1000, -1000, 531, -1000, -1000, -1000, 252, 89809, 89809,
	794, -1000, -126, -1000, -1000, -127, -1000, 3207, 409, 21537,
	-1000, -1000, 3003, -1000, -1000, -1000, -1000, -1000, -1000, -63,
	99640, 99640, 2052, 3325, -1000, 3281, 813, 792, 249, 3279,
	404, 403, 402, -63, 99640, 99640, 99640, -1000, 2423, -1000,
	-21, -1000, -1000, -1000, 42457, -1000, -1000, 3040, 1139, 1128,
	-1000, -1000, 2810, -1000, 2192, -1000, 1019, -1000, 1924, -1000,
	42457, 42457, 603, 601, 3364, 1777, 3363, 1034, 2793, 2098,
	2792, 2098, -1000, -1000, 914, -1000, 110449, -1000, 600, 599,
	-1000, -40, 1544, 1602, 972, -1000, -1000, 42457, 42457, 89297,
	-1000, 436, 3035, -6, -1000, -1000, 1599, 1126, -1000, -1000,
	-1000, -1000, 1701, 1594, 1125, -1000, -1000, -1000, 971, -1000,
	-1000, 970, -1000, -1000, 42457, -1000, -42, 1123, 3180, 2186,
	81579, 1122, -1000, 1114, -1000, -1000, -1000, 3170, 2098, 2782,
	1153, -1000, -1000, -1000, -1000, -1000, 60319, -1000, 99640, 81579,
	1505, 895, -1000, 2367, 895, 963, 2595, -1000, 2352, 3361,
	81579, 3357, 391, -128, -50, 59273, 3205, -1000, 2084, 609,
	81579, 899, -1000, 3267, -1000, -1000, -1000, -1000, 3166, 81579,
	3203, 2778, 968, 78, 81579, 3324, -1000, -1000, 81579, 2769,
	2100, 2174, 2297, 860, 67622, -1000, 968, 1986, -99, -1000,
	1700, 30295, 3033, -129, -1000, -1000, -1000, 982, 56697, 49397,
	42457, 3354, -149, -1000, -1000, -1000, -1000, 197, -1000, -1000,
	-1000, 190, -1000, -1000, -1000, -1000, -1000, -1000, 88268, 88268,
	66076, 66076, 66076, 954, 99640, 99640, 68646, -1000, 597, 99640,
	99640, 596, -1000, 99640, 99640, 3348, 66076, -56, 595, -1000,
	879, 876, 875, -1000, -1000, -1000, -1000, -1000, -1000, -134,
	78, -1000, 2030, 81579, -1000, 17844, -1000, -1000, -1000, -1000,
	-1000, 967, -1000, -1000, 1922, 2121, 1922, 1729, 1713, -1000,
	2062, -1000, -1000, -1000, -1000, 2404, 3010, 21537, 3178, 5323,
	42457, 42457, 4904, 6934, 4558, 5323, 42457, 42457, 59273, 405,
	-166, 42457, 42457, -1000, 42457, 790, 110449, 3322, 42457, 384,
	377, -1000, -1000, -1000, 3274, -1000, -1000, -1000, 110449, 42457,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, -1000, 247,
	-1000, -1000, -1000, 105784, -1000, 42457, 364, 3126, -1000, 363,
	359, 7725, 239, 106950, 106886, 106595, 358, -1000, -1000, 347,
	344, 110449, 2667, 110449, -1000, -1000, 922, 922, 1377, 1377,
	1377, 1377, 3265, 1016, 1358, 362, 464, 464, 464, 909,
	1185, 1185, 464, 464, 464, 2587, 2337, 594, 9412, -1000,
	-1000, 110449, 110449, 341, -1000, -1000, -1000, -159, 340, 7639,
	-1000, 2539, 3121, 110449, -1000, 49397, 2539, 2539, -1000, -1000,
	2233, 99640, 110449, 49397, -1000, 2783, -1000, 16258, -1000, 21537,
	-1000, -1000, -1000, -1000, 3267, -1000, 53601, -1000, 592, -1000,
	243, 3003, -1000, 874, -1000, -63, -63, -1000, -1000, 788,
	3347, 811, 21537, 335, -1000, -1000, -1000, -63, -63, -63,
	-1000, 2983, 110449, 99640, 99640, 99640, 2760, -1000, 1737, -1000,
	1033, 106344, -169, -1000, 108764, 42457, 99640, -1000, -1000, 1738,
	2387, 1065, -1000, 3095, 99640, -1000, 99640, -1000, -1000, 99640,
	99640, 81579, 99640, 2750, -171, 110449, -71, -1000, 873, -1000,
	1369, -1000, 17317, 99640, 81579, 99640, 81579, 1954, 2749, -172,
	21537, -1000, 3320, 3317, 2759, 3099, 3313, 99640, -1000, 99640,
	81579, 2982, -1000, -1000, -1000, -1000, 1559, 1113, 963, -74,
	589, -1000, 870, -1000, -1000, 869, 963, -1000, 66076, 51503,
	-1000, 531, -1000, 2452, -1000, 86194, 2087, 78, -1000, 3346,
	88785, 586, -1000, 2022, -1000, 655, 59792, 1701, 78, 81579,
	-1000, -1000, 531, 334, -76, -1000, 1028, 21537, 81579, 2753,
	2299, 860, 67622, -1000, 1165, 2391, -1000, -81, -1000, 688,
	78, 1986, -1000, -99, 110449, -1000, 867, -1000, -1000, -1000,
	-174, -1000, -1000, 332, -1000, 2981, 2975, -1000, 2546, 42457,
	585, 584, 99640, 2971, -1000, -1000, -177, 2741, 2741, 66076,
	51503, 66076, 964, -1000, 2175, -1000, -1000, -1000, -1000, -1000,
	21537, 1644, -1000, 582, 574, -1000, -1000, -1000, -1000, 3010,
	5323, 5323, 42457, 42457, 42457, 5323, 405, -179, -1000, 5323,
	5323, -159, -1000, -1000, 109231, -1000, -1000, -1000, 110449, -1000,
	16790, 1928, -1000, 106304, -1000, 28666, -1000, -1000, 42457, 42457,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45715, 2582,
	572, 59273, -1000, -1000, 330, 979, 42457, 42457, 2254, 979,
	979, -1000, -180, -1000, -1000, -1000, 3267, 243, -1000, -1000,
	3345, 21537, -1000, 66076, 810, -1000, 3343, -1000, -1000, -1000,
	-1000, -1000, -1000, 99640, -1000, 99640, -1000, 21537, 99640, 2571,
	2156, -1000, -1000, 2315, 571, 45715, 81579, 880, -1000, 3233,
	2530, 1852, 42457, 2126, -187, -188, 2155, -1000, -1000, 2152,
	42457, -1000, 59273, 570, 2098, 2098, -195, -198, -1000, -1000,
	42457, 1112, 99640, 29752, -1000, 3341, 3035, -1000, -1000, -1000,
	-1000, 99640, 42457, 1107, -1000, -1000, -1000, 3307, 2098, 21537,
	-1000, 2098, 2098, 3099, 1063, 99640, 81579, -1000, 2277, 2277,
	66076, 51503, -1000, -110, 963, 3198, 1921, 2483, -1000, -1000,
	-1000, -1000, 2314, -1000, -1000, 99640, 2313, 957, -1000, -203,
	-1000, 865, 863, 68646, 949, 933, -1000, -1000, -1000, -1000,
	531, 3197, -1000, 3286, 567, 99640, 2096, 565, 21537, -1000,
	860, 67622, -1000, 2784, 1700, -1000, 2165, 99640, 3028, -1000,
	2391, 563, -1000, 954, 562, 561, 2775, 2775, -204, 42457,
	42457, -205, 552, 954, -1000, -206, -1000, -1000, -1000, -1000,
	-116, -1000, 854, 845, -1000, -1000, 81579, 81579, 42457, 42457,
	-1000, 5323, 5323, 5323, -1000, 325, -1000, -1000, 1986, 3117,
	-1000, -146, 14601, 14199, 380, 45715, 59273, -212, -1000, -1000,
	99640, 110449, -159, -1000, -1000, -1000, 579, -1000, -1000, 3339,
	-1000, -1000, 1969, -1000, -1000, -1000, 99640, 2173, -1000, 1032,
	42457, 9412, 551, 42457, -1000, 3191, -1000, 2437, 2594, 2452,
	549, -1000, -1000, -1000, -1000, -1000, 1025, 1788, -1000, -1000,
	110449, 3099, 42457, -1000, -1000, 548, 546, 110449, 545, 859,
	2580, -1000, -1000, -1000, -1000, 110449, 542, 3180, -1000, -1000,
	-1000, -1000, 2098, 81579, -1000, -1000, -1000, -213, -1000, -1000,
	1791, 78, 949, -1000, 1953, 2087, 539, -1000, -1000, 2069,
	2400, -1000, 88785, 29209, 29209, 319, 3186, 933, -1000, 3261,
	-1000, 3184, 78, -1000, 42457, -1000, 81579, 42457, 2093, 67622,
	-1000, 2297, -1000, -1000, -215, 99640, 1700, -1000, -1000, 66076,
	66076, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1025, -220, -221, -1000, 66076, -1000, -1000, 2175,
	-1000, 99640, -1000, 99640, -1000, -1000, -222, -223, -1000, 1915,
	42457, 28666, -1000, -1000, 380, -229, -1000, -152, -1000, 3181,
	-1000, -1000, -1000, -1000, 2615, 2535, 14034, 2265, 99640, 5293,
	-1000, 2584, -1000, -1000, 1921, 99640, 2452, 2529, 81579, 1030,
	-234, 1922, 1922, 42457, 28123, 1940, 42457, -1000, -1000, 3099,
	-1000, 2563, 3263, -1000, 2069, 81579, 99640, -1000, 3084, -1000,
	2951, -1000, -1000, -1000, 2452, 78, -1000, -1000, 78, -1000,
	-235, 1028, -240, 81579, -1000, 2299, 982, -1000, -1000, -241,
	-243, 1852, 1025, 953, -248, -1000, -249, -250, -1000, -1000,
	318, 43543, 43543, 43543, -159, -218, -1000, 99640, 534, 2698,
	960, -1000, 2075, 1741, 309, 1055, -1000, -1000, 2530, -251,
	-1000, 959, 531, -1000, 42457, 1025, -256, -1000, 1014, -257,
	-1000, 1012, -265, -1000, 2577, -1000, -271, 2098, 958, 3159,
	-1000, -1000, -1000, -1000, 527, -273, -1000, -1000, 2095, -1000,
	1921, 957, -1000, 1025, 526, 1852, 523, -1000, 2909, 954,
	954, 2452, 1852, 982, 522, 954, -1000, -1000, -1000, 2772,
	-1000, 46769, 2090, 1702, 108419, 2772, 2772, -1000, -1000, 99640,
	3144, -1000, 2086, 2085, 1443, -1000, -1000, -1000, -1000, -1000,
	-1000, 982, -1000, 3143, 2265, 110449, 2452, -1000, 1922, 2479,
	-1000, 1922, 2565, -1000, 1929, -1000, -1000, -1000, 1631, 3264,
	99640, -1000, 99640, 1679, 1667, 3338, 949, 2069, 1852, 42457,
	2452, 42457, 1244, -1000, -1000, 1921, 2452, -1000, -1000, -1000,
	1715, 3192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	858, -1000, 2928, -1000, 1050, 2003, 2003, -1000, 857, 2075,
	-1000, -1000, 520, -1000, 515, -1000, 2015, -1000, -1000, -274,
	-1000, -1000, 3337, -1000, 2069, -1000, 2452, -279, 1921, -281,
	-1000, 1478, 953, 1921, 1695, -1000, -1000, 1965, 43000, 42457,
	-1000, 3245, -1000, -1000, 2343, -1000, 42457, 2530, 42457, 42457,
	55149, 2082, -1000, -1000, 1921, 1025, 953, 1852, 56697, 982,
	953, -1000, -1000, -1000, 110449, -1000, -1000, -1000, 110449, -1000,
	-282, -289, -266, 88268, -1000, -1000, -1000, 953, 1852, 982,
	2452, -262, -1000, 982, 1921, 1098, -290, 982, 2452, -1000,
	1921, -1000, -1000, -1000, 514, -1000, -1000, 1921, 953, 42457,
	953, 982, -292, 982, -1000, 1921, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4163, 4159, 4158, 4156, 4155, 4153, 4152, 4151, 4149,
	4148, 4146, 4145, 4141, 4140, 4139, 4138, 4137, 4135, 4131,
	4129, 4127, 4126, 4125, 4123, 4122, 4121, 4119, 4118, 4117,
	4116, 4112, 4110, 4107, 4106, 4105, 4104, 4103, 4102, 4101,
	4100, 4093, 4092, 4091, 4090, 4088, 4087, 4086, 4083, 4082,
	4078, 4077, 4076, 4075, 34, 4074, 4073, 4072, 4067, 4065,
	4064, 4060, 4059, 4058, 4057, 4055, 4054, 4053, 4052, 4051,
	4046, 4045, 4043, 42, 4036, 235, 4035, 4033, 4032, 4029,
	4028, 4027, 4026, 4025, 4024, 4023, 4019, 4013, 234, 4012,
	161, 4011, 4010, 4009, 4003, 4002, 232, 4001, 4000, 3999,
	3998, 244, 3997, 3994, 3993, 3992, 3991, 3990, 3987, 3975,
	3974, 75, 134, 3973, 3972, 289, 3971, 3969, 3967, 3966,
	3965, 3960, 3958, 3957, 3956, 3955, 208, 3954, 230, 3953,
	3952, 3951, 3950, 3949, 3948, 3946, 3945, 3943, 3942, 3940,
	3939, 3938, 3937, 3933, 3927, 3922, 3914, 3912, 3911, 3909,
	3907, 3905, 3902, 3896, 3895, 3893, 3889, 3888, 3883, 3882,
	3879, 3878, 237, 147, 3874, 3873, 229, 227, 3870, 3869,
	3866, 3864, 3858, 103, 4, 50, 3852, 3849, 60, 58,
	56, 77, 81, 84, 3846, 93, 3845, 133, 39, 3843,
	15, 2, 220, 211, 8684, 196, 3842, 3839, 3838, 203,
	165, 3837, 198, 3833, 3832, 3830, 3828, 79, 66, 151,
	149, 136, 141, 106, 3827, 3826, 86, 46, 41, 31,
	3825, 3824, 3823, 3814, 3056, 137, 3813, 226, 201, 132,
	3812, 3808, 3807, 1485, 3806, 33, 3802, 69, 73, 130,
	13, 118, 3801, 115, 27, 3800, 162, 40, 3799, 125,
	78, 62, 8644, 6086, 3798, 88, 53, 231, 720, 148,
	139, 172, 90, 128, 167, 184, 179, 140, 113, 3795,
	213, 3793, 3201, 49, 135, 3792, 3790, 3789, 57, 164,
	92, 3788, 3787, 47, 6, 9, 14, 142, 16, 98,
	18, 3780, 25, 3779, 3777, 3776, 3775, 24, 126, 3774,
	238, 3768, 76, 36, 23, 3767, 61, 175, 3765, 191,
	104, 3764, 3763, 223, 173, 143, 3762, 89, 192, 3760,
	3757, 3753, 3747, 3746, 117, 3, 107, 3745, 3741, 112,
	200, 160, 3738, 43, 3737, 3735, 146, 85, 105, 243,
	205, 185, 100, 190, 152, 194, 3734, 3733, 3732, 189,
	3731, 3730, 182, 119, 3729, 3726, 174, 245, 32, 64,
	197, 52, 159, 122, 3724, 169, 3723, 3721, 239, 157,
	177, 1, 37, 80, 127, 3720, 5, 195, 121, 171,
	96, 3718, 5063, 409, 1709, 3717, 3715, 116, 101, 54,
	97, 120, 225, 63, 3713, 3712, 65, 3707, 3705, 3704,
	3703, 150, 3700, 3699, 3698, 109, 124, 168, 3697, 72,
	71, 10, 102, 207, 241, 87, 181, 163, 216, 3696,
	3695, 3687, 155, 3686, 48, 99, 3682, 166, 212, 3681,
	3678, 199, 3677, 114, 1493, 44, 129, 3676, 186, 3675,
	3672, 3670, 3669, 3668, 3666, 3664, 984, 188, 3663, 3657,
	3656, 123, 158, 3655, 222, 582, 145, 82, 35, 3649,
	68, 2837, 3648, 599, 217, 51, 95, 3643, 1292, 38,
	0, 11166, 9717, 7033, 9034, 3642, 4308, 3641, 3640, 3638,
	183, 108, 3635, 3632, 3631, 83, 3630, 55, 3628, 3626,
	45, 3625, 19, 7, 8, 22, 20, 295, 193, 3622,
	3619, 91, 110, 153, 3617, 236, 187, 3615, 3614, 3612,
	3611, 74, 3610, 28, 3608, 29, 3606, 3605, 30, 17,
	26, 3603, 3597, 202, 3595, 176, 206, 3594, 131, 3593,
	3202, 111, 3592, 3591, 224, 59, 3586, 219, 3584, 3157,
	3582, 3580, 11, 3573, 3566, 204, 144, 180, 3563, 3562,
	138, 3560, 3559, 3558, 221, 3557, 3555, 21, 3554, 12,
	3552, 3550, 170, 2918, 3542, 3541, 67, 3540, 156,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 534, 534, 21, 35, 22, 36,
	15, 535, 535, 535, 535, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 533, 533, 212, 212,
	211, 206, 206, 536, 536, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 435,
	435, 435, 466, 466, 466, 549, 549, 550, 550, 550,
	550, 550, 114, 114, 335, 335, 335, 43, 43, 43,
	43, 43, 528, 528, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 541, 541, 542, 542, 540,
	543, 543, 543, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 468,
	468, 469, 469, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 552,
	552, 553, 553, 554, 554, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 299, 299, 271, 271, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 526, 526, 314, 314,
	426, 426, 75, 75, 334, 334, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 525, 261, 261, 82, 82, 82, 264,
	264, 81, 81, 81, 315, 315, 87, 87, 87, 87,
	272, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 428, 428, 89, 89, 89, 394, 394, 93,
	93, 93, 350, 350, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 530, 530, 307, 307, 227, 227, 227, 227, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 546,
	546, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	460, 460, 323, 323, 458, 458, 477, 477, 459, 459,
	276, 276, 276, 276, 276, 277, 277, 277, 467, 467,
	467, 467, 467, 467, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 357, 357, 357,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 544, 544, 545,
	545, 155, 155, 155, 155, 155, 155, 408, 408, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 340, 340, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 556, 556, 556, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 527, 527, 523, 523, 523, 523,
	523, 523, 523, 523, 524, 524, 529, 529, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 65, 65, 14, 14, 14, 66, 66, 190,
	190, 190, 191, 191, 284, 284, 284, 284, 188, 188,
	189, 189, 67, 67, 557, 557, 557, 537, 537, 537,
	538, 538, 538, 538, 538, 538, 278, 278, 279, 279,
	374, 374, 374, 374, 374, 282, 282, 282, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 285, 285, 214,
	214, 214, 288, 289, 289, 286, 286, 287, 287, 287,
	291, 291, 290, 293, 293, 292, 373, 486, 486, 488,
	488, 488, 488, 488, 488, 488, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 558, 558, 484,
	484, 484, 485, 480, 480, 481, 481, 481, 481, 481,
	280, 280, 281, 281, 281, 281, 482, 483, 305, 305,
	411, 487, 487, 489, 489, 491, 559, 559, 559, 559,
	559, 559, 560, 560, 560, 372, 372, 371, 371, 297,
	297, 492, 492, 492, 492, 493, 493, 493, 493, 493,
	496, 495, 494, 494, 494, 494, 494, 69, 69, 69,
	337, 337, 336, 336, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 165,
	165, 230, 230, 63, 63, 63, 12, 12, 12, 539,
	539, 539, 68, 68, 68, 68, 68, 68, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 532, 532,
	531, 531, 231, 231, 562, 562, 74, 74, 74, 74,
	74, 74, 74, 429, 429, 430, 430, 62, 62, 62,
	62, 62, 358, 358, 356, 356, 355, 355, 304, 304,
	410, 235, 235, 207, 207, 207, 27, 26, 19, 19,
	24, 24, 39, 39, 39, 39, 42, 42, 38, 38,
	38, 38, 40, 40, 34, 34, 547, 547, 548, 548,
	102, 102, 107, 107, 107, 107, 107, 108, 108, 108,
	108, 109, 109, 109, 109, 118, 118, 164, 164, 164,
	164, 164, 164, 164, 44, 44, 44, 44, 56, 56,
	56, 56, 116, 564, 564, 564, 117, 117, 117, 563,
	563, 228, 228, 368, 368, 369, 369, 565, 565, 370,
	370, 370, 370, 370, 221, 220, 222, 222, 223, 223,
	61, 61, 61, 216, 216, 217, 217, 218, 218, 219,
	219, 566, 566, 96, 96, 96, 167, 167, 270, 270,
	270, 365, 365, 365, 298, 298, 241, 241, 367, 367,
	367, 367, 333, 333, 333, 166, 166, 312, 312, 325,
	325, 326, 326, 423, 423, 327, 115, 115, 194, 194,
	192, 192, 192, 192, 192, 192, 192, 192, 199, 199,
	200, 200, 201, 201, 202, 203, 203, 203, 203, 316,
	316, 204, 204, 204, 193, 193, 193, 195, 195, 195,
	195, 195, 195, 195, 198, 198, 198, 198, 205, 205,
	205, 197, 197, 503, 503, 503, 505, 505, 507, 507,
	506, 506, 502, 502, 504, 504, 561, 561, 339, 339,
	339, 295, 296, 294, 294, 302, 302, 300, 301, 301,
	303, 303, 409, 409, 409, 208, 208, 208, 330, 330,
	330, 330, 331, 331, 361, 361, 359, 359, 359, 359,
	360, 360, 362, 362, 362, 363, 363, 364, 364, 329,
	329, 390, 390, 196, 196, 196, 309, 309, 309, 310,
	310, 380, 380, 380, 380, 380, 380, 381, 381, 379,
	379, 379, 379, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 413, 414, 414, 311, 311, 415, 366, 366,
	521, 521, 521, 522, 522, 407, 407, 416, 416, 416,
	416, 416, 416, 405, 405, 406, 406, 424, 425, 425,
	343, 343, 343, 343, 341, 341, 344, 344, 344, 344,
	342, 342, 417, 417, 417, 417, 332, 332, 418, 418,
	418, 418, 419, 420, 420, 421, 421, 375, 376, 376,
	431, 431, 431, 431, 433, 308, 308, 308, 308, 308,
	479, 478, 478, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 448, 448, 448, 448, 448, 448,
	448, 434, 434, 434, 434, 434, 438, 438, 438, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	439, 439, 444, 444, 445, 445, 445, 440, 441, 446,
	446, 446, 446, 567, 567, 450, 450, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 436, 436, 436, 443,
	443, 443, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 351, 351, 353, 353, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 384, 384, 384, 384,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 497, 497, 497, 497, 497,
	497, 497, 497, 386, 386, 500, 500, 501, 501, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 508, 508,
	509, 509, 511, 511, 512, 512, 513, 514, 514, 514,
	515, 516, 516, 510, 510, 517, 517, 517, 517, 518,
	518, 519, 519, 519, 519, 519, 520, 520, 520, 520,
	520, 396, 396, 397, 397, 403, 403, 403, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 232, 232, 232, 232, 232, 321,
	321, 319, 319, 319, 322, 322, 320, 320, 318, 318,
	317, 317, 393, 393, 391, 391, 395, 395, 345, 345,
	449, 449, 449, 449, 449, 449, 449, 449, 346, 346,
	346, 354, 347, 347, 348, 348, 348, 348, 348, 387,
	388, 349, 349, 349, 389, 389, 398, 402, 402, 401,
	400, 400, 399, 399, 377, 377, 378, 378, 328, 328,
	568, 568, 324, 324, 422, 422, 422, 422, 274, 274,
	313, 313, 273, 273, 265, 265, 266, 266, 266, 266,
	306, 306, 404, 404, 451, 451, 452, 452, 453, 453,
	454, 454, 455, 456, 457, 392, 392, 251, 250, 238,
	239, 249, 248, 247, 237, 240, 244, 245, 246, 242,
	243, 257, 256, 255, 262, 263, 253, 254, 427, 236,
	267, 267, 268, 268, 268, 269, 269, 269, 269, 233,
	233, 234, 234, 258, 258, 259, 260, 260, 252, 252,
	252, 224, 224, 224, 225, 225, 226, 226, 465, 465,
	462, 462, 462, 463, 463, 463, 464, 464, 464, 464,
	461, 461, 461, 461, 461, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 471, 471, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 473, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 476, 476,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 11, 14, 1,
	2, 3, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 9, 9, 3,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 1, 2,
	8, 4, 2, 5, 5, 5, 2, 1, 3, 11,
	12, 8, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	3, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	8, 11, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 557, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 97, 78, 148, 123, 131,
	192, 367, 403, 414, 395, 384, -123, -124, 431, -44,
	-56, -117, -116, 71, 124, 390, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -551, 99,
	-504, -78, -81, -109, -555, 136, 155, 210, -99, -100,
	350, -104, -105, 397, -107, -108, 399, 156, -51, -50,
	150, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 435, -153,
	490, 47, 449, 80, 140, 407, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -503, -79, -80, -83, -85,
	-86, -82, -84, 396, -195, -193, 554, 505, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 524, 532, -198, -196,
	-197, -205, 423, 513, 465, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, -272, 2, -253, -258, -259,
	-260, -252, -224, -473, -476, 4, -470, -474, 161, 219,
	314, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 91, 93,
	94, 95, 96, 97, 98, 100, 101, 102, 104, 105,
	113, 114, 115, 116, 118, 123, 124, 127, 122, 126,
	129, 130, 131, 134, 135, 136, 138, 139, 141, 142,
	143, 145, 146, 148, 149, 150, 153, 151, 472, 152,
	154, 155, 156, 157, 167, 168, 169, 174, 176, 180,
	181, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	197, 199, 200, 201, 202, 203, 209, 210, 212, 213,
	214, 215, 220, 221, 225, 222, 231, 232, 236, 237,
	238, 240, 244, 245, 246, 247, 248, 249, 251, 253,
	252, 255, 258, 259, 262, 266, 267, 270, 271, 272,
	273, 275, 276, 279, 277, 280, 278, 281, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	282, 297, 295, 299, 300, 301, 312, 310, 305, 306,
	302, 307, 303, 304, 308, 309, 316, 317, 320, 207,
	322, 323, 326, 344, 330, 331, 332, 335, 336, 339,
	342, 343, 345, 346, 347, 348, 349, 350, 351, 352,
	354, 355, 357, 358, 359, 361, 362, 363, 365, 367,
	368, 370, 372, 373, 374, 375, 376, 377, 378, 381,
	380, 382, 384, 390, 395, 392, 393, 394, 396, 397,
	398, 399, 401, 402, 403, 405, 406, 407, 408, 410,
	412, 413, 416, 417, 432, 433, 451, 414, 415, 418,
	419, 420, 421, 422, 426, 424, 425, 427, 428, 429,
	431, 434, 435, 437, 438, 439, 440, 441, 442, 445,
	447, 448, 449, 450, 452, 455, 456, 457, 458, 453,
	464, 461, 462, 466, 467, 468, 469, 470, 471, 473,
	475, 483, 484, 485, 487, 490, 491, 492, 493, 481,
	495, 496, 499, 500, 501, 504, 502, 503, 505, 507,
	510, 511, 512, 518, 517, 519, 525, 526, 528, 529,
	530, 35, 48, 49, 52, 54, 56, 67, 68, 69,
	73, 119, 120, 147, 158, 159, 170, 182, 183, 194,
	196, 204, 205, 206, 226, 227, 229, 234, 256, 319,
	321, 337, 341, 356, 360, 364, 366, 379, 409, 443,
	454, 459, 476, 477, 478, 479, 486, 488, 513, 514,
	515, 520, 527, -272, 2, -253, 328, -246, 2, -224,
	-224, 367, 27, 2, 27, 355, 425, 467, 469, 2,
	-530, -307, 2, 27, -227, -224, 99, 192, 423, -246,
	2, -530, -307, 24, 2, -224, 2, -228, 2, 414,
	-224, 276, 2, 557, 91, 267, 72, 409, 428, -126,
	484, -125, 476, 418, -127, -460, 2, 297, -224, 557,
	557, 557, 27, -236, -224, 465, 219, 115, 462, 557,
	2, 465, 347, 517, 424, 115, 376, 219, 492, 418,
	-539, 276, 405, 195, 506, -528, 2, -523, 4, -474,
	-470, -266, -265, 465, 470, 115, -260, -252, 547, -259,
	557, 557, 557, 2, 237, 238, 375, 374, 428, 429,
	557, 557, 557, 416, 2, 26, 64, 90, 95, 121,
	157, 177, 180, 333, -552, 344, 373, 427, 464, 473,
	487, -538, 450, 66, 418, -537, -539, 276, 492, 134,
	-355, 115, 267, 191, 500, 469, 467, 498, 127, 225,
	503, 502, 557, 557, 26, 64, 75, 95, 134, 157,
	177, 180, -554, 344, 373, 412, 427, 464, 473, 487,
	2, 517, 276, 424, 465, 219, 115, 492, 418, -539,
	416, 417, 371, -90, 2, 554, 31, 30, 431, -187,
	465, 230, 2, -224, 557, 557, 2, 237, 238, 416,
	417, 557, 557, 178, -523, 2, 557, 557, 2, 237,
	238, 416, 417, 230, 2, 66, 420, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 2,
	-162, 428, 450, 201, 45, 44, 72, 27, 372, 77,
	348, 116, 142, 493, 193, 219, 220, 245, 90, 91,
	-357, 43, 238, 237, 417, -544, 416, -408, 466, 419,
	425, 461, 249, 414, 484, 99, 507, 406, 530, 376,
	377, 151, 4, 115, 297, 430, 476, 267, 413, 351,
	82, 557, -561, 2, 465, -563, 2, 484, 484, 2,
	-563, 2, -563, 2, -563, 2, -564, 484, 527, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, -193, -195, -194, 557,
	557, 557, 557, 557, 557, 557, -162, 428, 2, 72,
	27, -300, -302, 497, 228, 144, 334, -192, -194, 2,
	-503, -458, 2, -382, -477, -384, 545, 546, 538, 463,
	65, 313, 531, -396, 121, 498, 328, -476, -385, -398,
	147, 409, -322, 8, 9, 5, 6, 7, -233, -386,
	-392, 489, 160, 318, -269, 558, 10, 554, -500, -194,
	-397, 36, 196, 63, -462, -268, -234, -434, 229, -267,
	-252, -497, -498, 4, -470, -471, -463, -437, -445, -441,
	-442, -448, -224, -473, 75, 107, 108, 106, 111, 110,
	269, 268, 112, 109, 430, 506, 64, 35, 204, 205,
	234, 319, 206, 73, -499, 135, -472, 226, 227, 443,
	49, 379, 170, 120, 119, 321, 54, 52, 514, -446,
	117, 476, 477, 478, 479, 182, 183, 56, 158, 159,
	341, 364, 459, 486, 488, 194, 256, 42, 103, 179,
	224, 208, 233, 235, 239, 257, 260, 298, 311, 315,
	338, 340, 404, 436, -567, 515, 454, 67, 68, -505,
	380, -506, -246, -505, 557, 557, 559, 557, -294, -295,
	-296, 2, 27, 132, 554, 2, -412, 2, -413, -417,
	-194, 250, -416, 554, -414, 552, -253, 329, -501, 410,
	-497, -498, -233, -252, -268, 4, -470, -472, 556, -297,
	554, 115, 465, 76, 219, -350, 554, -224, 27, 328,
	480, 559, -394, 554, 328, 178, 331, -224, 517, 2,
	2, 432, 2, 554, -126, 69, 484, 42, 428, -369,
	2, -370, -220, -221, -222, -424, -223, 236, 370, 378,
	533, 125, 313, 530, -458, -546, 178, 537, 480, -458,
	-323, 556, 2, 2, 2, 2, 2, -417, 204, -253,
	2, -250, -461, 4, -470, -474, -471, -475, -473, 27,
	30, 31, 32, 34, 36, 37, 38, 39, 55, 63,
	64, 70, 74, 76, 85, 90, 99, 106, 107, 109,
	108, 110, 111, 112, 121, 125, 128, 132, 133, 137,
	140, 144, 160, 162, 175, 177, 178, 192, 195, 198,
	211, 223, 228, 230, 250, 254, 261, 268, 269, 313,
	318, 324, 328, 329, 333, 334, 353, 369, 383, 400,
	423, 430, 446, 460, 465, 474, 480, 482, 489, 497,
	498, 506, 508, 516, 521, 522, 523, 524, -476, 75,
	2, -417, 204, 2, -255, 204, -417, -258, 2, -237,
	-224, 2, -249, -461, 2, -273, 204, -253, -254, -258,
	-256, 2, -258, -262, 2, -224, -468, 204, 2, -465,
	10, -464, 5, 4, -470, -474, -471, 517, 230, 480,
	559, -313, -265, -266, -457, 8, -306, -224, 556, -382,
	2, -115, -101, 2, 175, -382, 204, 2, -115, 204,
	2, -382, 204, 2, -115, 204, 2, -541, 2, -468,
	2, 2, 487, 2, 95, 204, -224, 465, 114, 2,
	394, -553, 412, 491, 2, 2, 2, 2, 2, 2,
	465, -242, 2, -224, 175, -262, 204, -263, 2, -224,
	-225, 424, -562, 380, -468, 204, 2, 517, -256, 2,
	-256, 219, 232, -237, 204, 2, 469, 467, 469, 467,
	178, 2, 230, 2, 230, 2, -418, 2, -419, -413,
	-420, 552, 329, 2, 2, 2, 2, 2, 204, -224,
	465, 114, 2, 248, 2, 2, 2, 2, 2, 2,
	2, -315, 204, 2, -253, 517, -315, 204, 2, -315,
	204, 2, -356, 2, 85, -237, 204, 2, -261, 204,
	2, -256, -264, 204, 2, -262, -469, 204, 2, -468,
	-382, 2, -115, 2, -428, 2, -427, -464, 513, -90,
	554, -90, 554, 428, 554, -468, -253, -253, -382, 2,
	-115, -101, 2, -382, 2, -115, 2, -112, -111, -468,
	554, 178, -382, 2, -115, -101, 2, -382, 2, -115,
	2, -187, 175, 2, 115, 465, -162, 2, 175, 508,
	2, 8, 2, 211, -468, 419, 377, 167, 2, 432,
	2, 433, 72, -357, 530, 72, 178, 2, 178, 2,
	-340, 2, 524, 2, 2, -527, 2, 328, 178, 2,
	178, 2, 178, 2, 178, 2, 178, 2, 374, 429,
	485, 238, 2, -115, 521, -101, -382, 521, 2, -545,
	175, 417, -382, 2, 483, 247, 152, 178, -340, 2,
	178, 2, 178, 2, 5, 2, 375, 451, 2, 236,
	370, 451, 2, -253, -556, 2, 465, 517, 424, 2,
	2, 86, 87, 178, 2, 178, 2, 178, 530, 2,
	-332, -417, -368, -369, -368, 480, -300, -302, -162, 432,
	2, -199, -330, -201, 175, -359, -360, -202, 261, 162,
	324, -203, -339, 27, 132, -339, -339, 58, 555, 555,
	11, 12, 74, 40, 545, 546, 547, 548, 173, 549,
	550, 543, 544, 542, 535, 536, 540, 242, 243, 92,
	539, 537, 84, 274, 411, 163, 164, 165, 166, 391,
	217, 33, 218, 14, 15, 16, 32, 333, 260, 531,
	208, 436, 538, 17, 18, 19, 233, 235, 315, 48,
	211, -232, -275, -382, -382, -382, -382, -382, -382, -382,
	340, 554, -328, -377, 552, -194, 554, 554, 554, -457,
	-194, -382, -396, 555, -320, 554, -194, -396, -391, 554,
	409, 552, 554, -399, -382, 5, 5, 5, 554, 556,
	-508, 525, 175, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 366, -439,
	554, -438, 554, -438, -438, 518, -436, 554, 532, 526,
	554, -436, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 518, 559, -505, -297, 554,
	-324, -422, -382, 547, -324, -324, 328, -317, -382, 103,
	-343, 239, 298, 179, 257, 404, 224, -379, 558, -379,
	-407, 532, -194, -414, -252, -194, -416, 554, -412, -407,
	-91, -457, -75, -88, -96, -115, -128, -166, -167, 547,
	-253, 554, 178, 554, 556, -461, 178, -306, -237, -253,
	-267, -268, -273, 131, -317, -523, 492, 418, -306, -227,
	37, -393, -431, -432, -479, 558, -478, -434, -444, -440,
	-443, 356, 360, -463, 52, 514, -446, 229, 4, -470,
	-472, 226, 227, 443, 49, 379, 170, 120, 119, 321,
	54, 476, 477, 478, 479, 182, 183, 56, 515, 454,
	67, 68, -523, 492, 418, -306, 175, -356, -460, -317,
	37, -369, 2, 121, -465, -565, 559, 259, -277, 273,
	312, 200, 329, 528, 322, 125, -467, 5, 4, -392,
	-404, 121, 267, 229, -451, -453, 8, -452, 9, -454,
	545, 546, -459, -458, 105, 556, -461, -210, 392, 431,
	-209, 23, 28, 136, 511, 153, -287, 221, 343, 347,
	147, 447, 501, -534, -535, 415, 471, 472, 88, 322,
	431, 392, 147, -336, -338, 37, 113, 301, 342, 59,
	214, 278, 279, 449, 520, 147, 431, 392, 343, -535,
	96, 392, -535, -212, 447, 501, -534, -535, 415, 392,
	-211, -287, 147, 558, 23, 392, 431, 343, -549, -550,
	136, 28, 392, 343, -531, -502, 524, 147, -417, 204,
	-542, -111, 251, 5, 10, -111, -313, 559, 559, -461,
	547, 417, 416, 147, 147, 147, 147, 175, 2, 2,
	313, 2, 2, 2, 180, -537, -554, 2, 2, -253,
	204, -299, 328, -526, -314, 465, -253, 313, 42, -255,
	204, 2, -258, 517, -531, 313, -257, 204, -253, 37,
	554, 2, -356, 2, 219, -502, 313, -418, -270, -253,
	-413, -270, 431, -246, 37, -379, -253, 147, 2, 2,
	2, -224, -213, 559, 62, 398, 147, -315, 204, -213,
	147, -213, 147, -274, 204, -273, -213, 147, -213, 559,
	147, -213, 559, 147, 559, 147, 555, 559, -428, -428,
	-468, -175, 524, 178, 99, 554, 554, -187, -425, 559,
	-424, -469, -112, -468, -468, -526, -237, 2, -253, 2,
	465, 240, -468, -175, 211, -468, -468, -468, -460, 27,
	433, 2, 374, 429, 485, 87, 433, 2, -253, 465,
	115, 219, 78, -529, 175, -524, 405, -523, -253, 115,
	-253, 115, -253, 115, -253, -253, 2, 2, 2, 2,
	2, 83, 83, 2, 44, -545, 175, 2, 483, 2,
	483, 2, -224, -224, -224, 450, 259, -253, 175, 465,
	219, 465, 219, 115, 465, -213, 559, -228, -199, -330,
	-460, -331, -330, -200, -199, -202, 175, 378, 502, 301,
	434, 244, -360, -359, 27, -382, -364, 169, 300, -382,
	-362, -384, 545, 546, -452, -454, -316, 322, -193, -193,
	-193, -303, -409, -382, 369, 219, -433, -431, -431, -251,
	-461, 476, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, 260, 208, 436,
	48, 211, -382, 480, -382, -382, -382, -382, 295, 313,
	318, 489, 160, 499, 132, 322, -568, 460, 39, -389,
	-194, -321, 554, -403, 34, 446, 27, -396, 554, 2,
	-377, -382, -378, -318, -317, -317, 555, 516, 27, 132,
	547, 2, 555, 559, 37, 555, -382, -318, -395, -391,
	-317, -402, -401, 521, -351, -352, 529, 282, 118, 202,
	280, -353, 422, -455, 8, -461, 547, -509, 168, 195,
	554, 555, 2, 555, 2, 555, -382, 2, 555, -382,
	2, 555, -382, 2, 555, -382, 2, 555, 2, -382,
	-382, -382, -382, -382, -382, -382, -317, 8, -455, -455,
	476, 476, -455, -455, -455, -447, 356, 357, 358, 359,
	262, 263, 264, 265, 360, 361, 362, 363, 287, 288,
	289, 290, 283, 284, 285, 286, 291, 292, 293, 294,
	187, 188, 189, 190, 183, 184, 185, 186, -447, -345,
	2, -449, -317, 4, 529, 282, 118, 202, 280, 422,
	5, -345, 2, -346, 2, -382, -317, -347, -383, -384,
	545, 546, 538, -396, -348, 2, -382, -318, -382, 55,
	254, 482, -349, -382, 178, -317, -317, 2, -317, 2,
	-506, 37, -317, -309, 559, 178, 37, 4, -309, -309,
	554, 555, 559, -344, 199, 277, 272, -344, -412, -343,
	239, -341, 338, -341, -341, -407, -238, 552, 560, -461,
	-407, -406, -405, 37, -246, 335, -407, -407, 556, 555,
	-406, 553, -521, 554, 557, 557, 557, 557, 557, -253,
	554, -317, -461, 556, 452, 555, 233, 233, 233, 233,
	410, 555, 480, -525, -261, -264, 524, -90, 330, 555,
	559, -308, 36, 552, 556, -455, 2, 2, -450, 518,
	554, 554, -352, 554, 178, -525, -264, -307, -257, -546,
	555, 484, -370, -276, 378, 445, 393, 426, 462, 8,
	9, 8, 9, 559, -461, 559, -547, 90, 480, 76,
	418, -373, 204, 76, -480, -240, 90, -481, -224, 70,
	498, 369, 177, 145, -547, 90, 369, -547, 90, 90,
	431, 450, 480, 58, -417, 40, 40, 27, -115, 255,
	178, 530, 465, 219, 418, 480, -417, -338, -431, 113,
	278, 279, 58, -456, -451, 545, 546, -456, 58, -456,
	-456, -456, 524, -255, -417, 418, 480, 480, 480, 480,
	559, 40, 40, 27, -115, 255, 178, 480, -273, -238,
	512, 41, 512, 480, 41, 418, 480, 559, 41, 41,
	480, 480, -532, -229, 102, 307, 271, 308, 94, 304,
	93, 303, 100, 305, 101, 306, 519, 316, 61, 302,
	281, 309, -230, -231, 349, 510, -468, 431, 392, 147,
	211, -425, 211, -425, -265, -224, 556, -115, -382, -382,
	-115, -382, -115, 44, 147, 2, -562, 248, 554, -280,
	313, 178, -306, -426, 230, 559, -314, 147, -466, -465,
	112, 430, -337, -336, 313, -257, 204, 2, 147, -297,
	313, 141, 554, 376, 2, -239, 204, -225, -224, -356,
	-216, 468, 147, -334, 508, -365, -115, 554, 121, 37,
	-365, -325, -326, -423, -327, -240, 554, -246, -379, -224,
	2, -253, -315, -213, 147, -315, -315, -213, 559, 147,
	-237, -256, -261, -262, -264, -468, -469, -90, -427, 555,
	555, 555, -174, 332, -173, -224, 5, -187, 508, -279,
	-374, -373, -484, -485, -480, 260, 219, 498, 232, 161,
	-298, -241, -240, 114, -181, 524, -111, 555, -425, 211,
	-175, -175, -425, -425, -253, 175, -468, -175, -175, -175,
	2, 2, 2, -340, -253, -237, -273, -253, -306, -306,
	-340, -237, -340, -237, -340, -237, -115, -382, 2, 428,
	175, 175, 556, -340, 376, 115, 465, 347, 219, -253,
	-273, -253, -273, -237, -253, -417, -331, -200, 329, 244,
	434, -362, -363, -384, 409, 410, -363, 409, 410, 8,
	9, 8, 9, -204, 438, 317, -315, 559, -207, 38,
	128, 244, -253, 530, 143, -382, -382, 480, -568, 460,
	-389, 143, -382, 295, 318, 489, 160, 499, 132, 322,
	178, 554, -383, -383, 555, -319, -382, -382, 553, 562,
	555, -302, 559, -300, -382, -317, -317, 555, 556, -317,
	-306, 553, 553, 559, 555, -400, -401, 137, -382, 480,
	480, 480, 480, 554, 555, 556, -514, 339, 554, 554,
	-382, 555, 555, 555, 555, 37, 559, 559, 559, 555,
	559, 559, 559, 555, 555, 555, 559, 555, 530, 530,
	555, 555, 555, 555, 559, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 555,
	559, 555, 178, 555, 555, -354, 353, 555, 11, 12,
	545, 546, 547, 548, 173, 549, 550, 543, 544, 542,
	535, 536, 537, 84, 274, 411, 14, 15, 16, 233,
	211, -383, -383, -383, 555, -387, -388, 178, 175, 37,
	-349, -349, -349, 555, 178, -317, 555, 555, 554, -507,
	276, 313, 555, -376, -375, 522, -422, -310, 2, -412,
	-248, -461, -376, -376, -317, -382, 239, 239, -342, 508,
	328, -344, -412, -406, -457, -381, -380, 176, 38, 128,
	310, 207, -406, -246, -297, -406, -406, -461, -407, -407,
	-405, 555, -522, -457, 555, -311, -415, -501, -302, 556,
	-461, -184, -502, -163, 5, 318, -163, -163, -163, -306,
	480, 480, 24, 354, -431, 552, 553, 8, -461, 554,
	-455, -455, -455, -306, 178, 178, 178, -335, 524, -458,
	-369, 496, 81, 378, 476, -458, -209, 392, -240, -240,
	-253, -262, 313, -373, 204, -215, 313, -431, -247, -224,
	554, 554, 244, 244, 508, -240, -247, 244, 204, -240,
	204, -247, -247, -533, 378, 323, -382, -466, 266, 376,
	314, -210, 392, 431, -115, -115, -115, 554, -546, 508,
	131, -253, -273, -253, -262, -257, 431, 392, 311, -267,
	-456, -456, -336, 431, 392, -262, -255, -466, 418, -237,
	-211, -115, -115, -115, 554, -238, -212, 392, 5, 204,
	-240, 5, -224, -240, -262, -466, -550, 23, -240, 204,
	-240, -262, -466, -229, -468, 318, 504, -531, 418, 480,
	-417, -111, -178, 524, -111, -172, 215, 547, -528, -224,
	517, -224, -278, -281, -279, -240, -190, -191, 526, 524,
	147, -271, -253, 552, -175, -468, -253, -262, -263, 147,
	-297, 313, -468, 37, 147, 554, 2, 2, 328, 313,
	-239, 204, -217, 138, -566, 537, -237, -376, -310, -333,
	-367, 400, 328, -298, 513, -246, -333, -312, 559, 178,
	537, 556, -298, -421, 547, 2, -213, -315, -213, -213,
	-273, -274, -213, -213, -213, -90, -90, -175, 559, 554,
	537, 537, 554, -468, -468, 555, 559, -253, -239, 219,
	219, -245, -225, 555, 559, 556, 554, -183, 332, -182,
	139, 246, 231, 439, 440, 441, 442, 130, -181, -112,
	178, -52, 524, 465, -175, 558, -340, -340, -340, 428,
	428, -224, -249, -237, -253, -250, -273, 175, 175, 502,
	-363, 329, 270, -409, -208, 320, -253, 558, -382, -382,
	143, 143, -382, -383, -383, -382, 143, 178, 554, -382,
	-393, 32, 32, 555, 559, -378, -382, 555, 516, -302,
	-302, 555, 547, -461, 558, 555, -391, 140, -382, 474,
	282, 202, 280, -353, 280, -353, -353, -455, 5, -461,
	547, -515, -243, 554, -224, 522, -301, 334, 555, -433,
	-431, -382, -382, -382, -382, -382, -455, -436, -436, -451,
	-451, -382, -387, -382, -433, -431, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, 132, 313, 322, -383, -388,
	-387, -382, -382, -431, 555, 555, 555, -317, -90, 554,
	276, -329, 195, -382, -425, 559, -329, -329, 555, -412,
	-412, 554, -382, 239, 553, 559, 561, 537, -297, 556,
	-405, -406, 553, 555, 559, 555, 559, -366, 37, 555,
	-461, -186, -185, 129, 51, -306, -306, 331, 5, 8,
	552, 553, 556, -455, 555, 555, 555, -306, -306, -306,
	114, 301, -382, 480, 480, 147, 313, 510, -486, -481,
	145, -382, -304, -410, -382, 554, 554, 2, -206, 136,
	431, -548, 2, 508, 147, -213, 147, -213, 528, 554,
	554, 480, 418, 524, -317, -382, -176, 121, -460, -535,
	558, -535, 558, 418, 480, 418, 480, 524, 524, -317,
	480, -435, 46, 25, 313, -256, 480, 480, -213, 147,
	492, 431, -468, 318, -262, -257, 431, 392, -425, -180,
	332, -179, 139, 402, 130, 246, -425, -178, 178, 230,
	2, -257, 2, 555, 555, 559, -487, 37, 326, 326,
	554, -253, -71, 524, -424, -457, 42, -255, 37, 147,
	-531, -115, -257, -429, -430, 5, -253, 147, 328, 313,
	-218, 253, -566, -465, -502, -302, -333, -324, 314, 89,
	555, -376, -326, -310, -382, 2, 555, -213, -213, -173,
	-174, -468, -468, -468, -175, -187, -187, -374, -282, 554,
	-239, -225, 554, -187, -241, 2, -469, 559, 554, 537,
	537, 537, -425, -115, 332, -253, 547, -340, -289, -288,
	347, 322, -289, 409, 409, 329, 169, 249, -207, -238,
	-382, -382, 143, 32, 32, -382, -382, -393, 555, -382,
	-382, -317, 553, 5, -382, 555, 555, 8, -382, 555,
	556, -516, -224, -382, 555, 58, 555, 555, 559, 559,
	555, 555, 555, 555, 555, 555, 555, -388, 178, 132,
	322, 554, 555, 555, -90, -390, 198, 58, -412, -390,
	-390, -342, -306, -412, -380, -238, 552, -461, -457, -415,
	554, 556, -185, 537, 553, 2, 552, -461, 555, 114,
	-240, -240, -373, 147, -488, 90, -490, 74, 161, 99,
	313, 318, 498, 369, 70, 121, 383, -558, 37, 534,
	555, 555, 559, -207, -304, -306, 313, 457, 121, 313,
	121, 114, 492, 77, -240, -247, -306, -306, -253, -262,
	154, 555, 559, 537, 2, 547, 547, -262, -257, -262,
	-255, 345, 154, 555, -238, 5, 5, 147, -235, 74,
	5, -240, -240, -256, 114, 418, 480, -178, 559, 554,
	537, 537, -178, -469, -111, -297, -285, 222, -240, -485,
	-482, -483, 369, -489, -491, 161, 369, -115, 2, -189,
	-188, -224, 5, 554, -280, 332, 553, -466, -337, -115,
	-257, -297, 555, 559, -358, 508, -238, -253, 147, -219,
	252, -566, -465, -216, -361, -359, 133, 554, 328, -115,
	-302, 537, 555, 555, 114, 114, 213, 146, -304, 554,
	554, -306, 114, 555, -182, -183, -468, -111, -468, -181,
	-53, -54, 219, 90, 352, -250, 465, 219, 554, 554,
	-207, -382, -382, -382, 555, -302, -461, 547, -510, 347,
	555, -409, -382, -382, -383, 178, 554, -393, 555, -511,
	523, -382, -317, -511, -511, 555, -457, 2, -468, 552,
	2, -373, -247, -251, -244, -224, 161, 204, 318, 244,
	554, -383, -253, 554, 2, 29, -559, 125, 223, -372,
	-560, 98, 458, 212, -410, -208, 555, 555, 318, 318,
	-382, -431, 554, -213, -213, 555, 555, -382, 480, -460,
	97, -458, 2, -535, -237, -382, 480, 5, -213, -251,
	-213, -213, -235, 492, -262, -257, -179, -180, -468, -111,
	-178, 37, -286, -287, 211, -487, 244, -244, 244, -557,
	524, 555, 559, 537, 537, -278, -190, -72, -73, 481,
	-424, -297, 37, 5, 554, -224, 328, 554, -238, -566,
	-465, -217, -333, 314, -306, 90, -361, -389, -175, 554,
	554, -283, 79, 91, 122, 203, 181, 220, 450, 455,
	27, -283, 555, -304, -304, 555, 554, -175, 555, 559,
	27, 554, 27, 554, -253, -273, -317, -317, 555, -302,
	58, 559, 555, 555, -383, -393, 555, -512, -513, -243,
	553, 2, -490, -244, 313, 508, -382, -226, 554, -382,
	37, 223, 126, 209, -285, 554, -371, 508, 383, -235,
	-304, 554, 554, 554, 537, 178, 554, -435, -213, -256,
	555, -540, 381, -115, -190, 345, 554, -284, 328, 114,
	301, -188, -458, -458, 555, 37, -73, 9, 37, -115,
	-304, -253, -304, 328, -465, -218, 555, -247, -333, -469,
	-469, -371, 555, 555, -469, -54, -306, -306, 555, 555,
	-517, 376, 410, 197, -317, -303, 555, 559, 37, 147,
	199, 555, -492, 275, -224, 555, 126, 209, -286, -306,
	-285, 199, -253, -536, 508, 555, -291, -290, -288, -293,
	-292, -288, -317, -458, 97, 345, -317, -235, -543, 179,
	-542, 5, 10, -284, -253, -305, -411, -240, 80, 114,
	-285, -115, -115, 555, -358, 555, -253, -219, -376, 555,
	555, -372, -371, -191, 524, 555, 555, 555, 555, -518,
	-519, 48, 495, 105, -382, -518, -518, -513, -515, 161,
	524, -493, -496, -495, 328, 437, 179, 346, 555, 457,
	520, -559, 555, 524, -297, -382, -371, 555, 559, 513,
	555, 559, 513, 555, 178, 555, -213, -177, 524, 44,
	554, 555, 559, 368, 127, 136, -286, -557, -371, 554,
	-372, 554, 133, -175, -175, -285, -372, -376, -175, -520,
	145, -519, 365, 174, 409, 365, 174, -520, -520, -244,
	53, -495, 328, -496, 328, 502, 127, -376, 53, -492,
	-285, -290, 211, -292, 178, 345, 416, -542, 29, -306,
	-411, 410, 410, 2, -190, -284, -372, -304, -285, -304,
	314, 502, -286, -285, 105, 195, 475, 301, 32, 537,
	-494, 301, 398, 62, 431, -494, 537, -493, 554, 554,
	332, 555, 2, -284, -285, 555, -286, 555, 431, -191,
	-286, 409, 336, -519, -382, 22, 318, 121, -382, -559,
	-317, -317, -174, 554, -214, 62, 398, -286, -371, -191,
	-372, -325, -376, -191, 555, 555, -174, -191, -372, -376,
	-285, -376, -376, -286, 480, 555, -376, -285, -286, 554,
	-286, -191, -317, -191, -376, 555, -376, -286,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1197,
	1199, 1201, 1203, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 878, 880,
	0, 559, 561, 0, 883, 885, 0, 0, 581, 582,
	0, 1286, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1215, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1344, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1356, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1317, 1319,
	1321, 1323, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 2006, 2023,
	2024, 2025, 2028, 2029, 2030, 2031, 2032, 2033, 2447, 2528,
	2529, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 468, 469, 1040, 0, 533, 531, 1998,
	534, 2263, 536, 538, 406, 407, 408, 409, 410, 411,
	0, 552, 544, 551, 553, 555, 556, 557, 558, 528,
	526, 0, 552, 2058, 550, 1195, 1196, 1180, 1181, 2301,
	1222, 0, 193, 571, -2, -2, -2, 2412, -2, 603,
	-2, 610, 2416, 2303, 615, 0, 617, -2, 620, 1198,
	1200, 1202, 708, 709, 2009, 0, 0, 0, 0, 34,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 1090, 1091, 0, 201, 203, -2, -2,
	-2, -2, 0, 0, 2341, 2106, 1966, 2025, 1969, 1964,
	282, 284, 286, 287, 0, 0, 0, 0, 0, 0,
	312, 315, 317, -2, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 935, 927, 928, 1146, 0, 0,
	0, -2, 414, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 343, 471, 472, 0, 1345, 1345, 0, 0,
	0, 0, 256, 247, 879, 881, 882, 0, 0, 0,
	0, 560, 562, 0, 0, 229, 884, 886, 887, 0,
	0, 0, 0, 0, 258, 0, 0, 576, 578, 580,
	645, 647, 649, 651, 653, 655, 657, 659, 662, 664,
	666, 668, 670, 672, 674, 676, 679, 681, 683, 685,
	687, 689, 691, 693, 695, 697, 699, 701, 703, 705,
	715, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 799, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 718, 720, 721, 722, 0, 779, 797, 798,
	807, 707, 0, 1080, 1346, 1224, 1205, 1219, 1224, 1207,
	1208, 1209, 1210, 1211, 1216, 1218, 1212, 1213, 1214, 37,
	39, 41, 43, 45, 47, 49, 51, 53, 365, 367,
	369, 371, 373, 376, 378, 380, -2, 1315, 1316, 420,
	422, 424, 426, 428, 430, 432, 563, 0, 565, 0,
	719, -2, 0, 1350, 1350, 1350, 0, 0, 1316, 1314,
	0, 568, 569, 624, 625, 1609, 0, 0, 0, 0,
	0, 0, 0, 1863, 1695, 0, 626, -2, 1726, 1728,
	2387, 2412, 1862, 1730, 1731, 1732, 1733, 1734, 0, 1736,
	1737, 1738, 1739, 1740, 1741, 0, 1743, 0, 1748, 1749,
	1750, 0, 2394, 1943, 2019, -2, 0, 0, 2400, 2015,
	0, 1829, 1766, -2, -2, 2042, 2021, 1541, 1542, 1543,
	1544, 1545, -2, -2, 2430, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 0, 2375, 2395, 2396,
	2401, 2403, 2397, 2384, 1791, 2118, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1568,
	1577, -2, -2, -2, -2, -2, -2, -2, 2388, 2389,
	2406, 2409, 2415, 2420, 2421, 2393, 2402, 2429, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 1569, -2, -2, -2, -2, 1333,
	2274, 1336, 1040, 1334, 1318, 1320, 0, 1322, 0, 0,
	0, 1327, 1353, 1351, 0, 1394, 1331, 1332, 1412, 1412,
	1436, 0, 1417, 0, 1436, 1345, 1462, 0, 1423, 2293,
	1767, 1768, 0, 2025, 2020, -2, -2, 2427, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 535, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 1221, 1145, 573,
	574, 0, 598, 0, 602, 2383, -2, 0, 2312, -2,
	606, 1225, 1229, 1230, 1231, 1232, 1233, 0, 0, 0,
	0, 1238, 0, 0, 612, 0, 0, 599, 600, 618,
	621, 0, 711, 712, 713, 714, 63, 0, 2395, 1462,
	65, 0, 1988, 2050, 2051, 2052, 2053, 2054, 2428, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2430,
	68, 0, 2395, 72, 0, 2395, 0, -2, 79, 0,
	1994, 82, 0, 1991, 91, 0, 2395, 0, 1963, -2,
	0, 178, 2002, 0, 906, 2004, -2, 2395, 1088, 259,
	260, 2038, 2039, 2046, 2047, 2048, 2049, 0, 0, 0,
	0, 871, 1960, 1965, 872, 1984, 873, 1970, 0, 288,
	289, 290, 291, 292, 0, 293, 2395, 295, 296, 0,
	298, 299, 2395, 301, 302, 0, 304, 0, 214, 215,
	320, 321, 0, 323, 0, 2395, 0, 0, 0, 329,
	-2, 344, 0, 341, 332, 333, 335, 336, 337, 338,
	0, 384, 382, 1999, 0, 899, 2395, 0, 903, -2,
	2005, 0, 0, 1125, -2, 2395, 1085, 0, 1131, 1127,
	0, -2, 0, 1343, 2395, 1242, 931, 932, 933, 934,
	1474, 403, 0, 1255, 0, 1257, 0, 1276, 1468, 1412,
	0, 0, 1473, 345, 346, 347, 348, 349, 2395, 0,
	0, 0, 354, 0, 356, 357, 358, 359, 360, 361,
	362, 167, 2395, 437, 464, 0, 167, 2395, 440, 167,
	2395, 443, 0, 446, 1144, 167, 2395, 449, 167, 2395,
	452, 454, 167, 2395, 458, 459, 461, 2395, 463, 261,
	1191, 1192, 1193, 1194, 0, -2, 522, 2008, -2, 474,
	0, 475, 0, -2, 0, 273, 0, 0, 888, 889,
	890, 891, 892, 895, 896, 897, 898, 1449, 232, 230,
	0, 0, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 0, 0, 583, 0, 0, 716, 717, 0, 0,
	727, 728, 729, 0, 273, 2304, 2271, 2138, 736, 0,
	739, 742, -2, 0, 0, 0, 0, 746, 0, 751,
	752, 753, 0, 755, 757, 877, 759, 0, 0, 761,
	0, 765, 0, 768, 0, 770, 0, 772, -2, -2,
	-2, -2, 783, -2, 0, 786, 788, 0, 790, -2,
	0, 799, 795, 796, 0, 0, 0, 0, 815, 816,
	0, 825, 0, 828, 829, 830, 0, 832, 833, 0,
	835, 836, 837, 838, 0, 840, 841, -2, -2, 845,
	847, 0, 854, 0, 858, 0, 862, 0, 723, 724,
	167, 1466, 1204, -2, 1206, 0, -2, 0, 564, 0,
	567, 1373, 1301, 1298, 0, 1370, 1371, 1302, 0, 0,
	0, 1309, 0, 1348, 1349, 0, 0, 0, 1288, 1289,
	0, 0, 0, 0, 1868, 1869, 1870, 1871, 1872, 1873,
	1876, 1877, 1874, 1875, 1878, 1879, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 1882, 1883, 0, 0, 1885, 0,
	1887, 0, 0, 0, 0, 0, 0, 1674, 1676, 1951,
	0, 0, 1884, 1614, 1615, 1616, 1617, 1618, 1653, 1654,
	0, 0, 1727, 1948, 1947, 1729, 0, 1899, 0, 1742,
	-2, 0, 1863, 1894, 0, 0, 1751, 1752, 1753, 0,
	0, 1899, 0, 0, 1942, 1763, 1764, 1606, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 1554,
	0, 1556, 0, 1557, 1558, 1565, 1578, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 1923,
	-2, 0, 0, 0, 0, 1570, 0, 1335, 0, 0,
	1398, 1952, 1956, 1957, 1398, 1398, 0, 0, 1900, 1459,
	1459, 0, 0, 1455, 1455, 1455, 1453, 1436, 0, 1436,
	1446, 0, 1436, 1436, 0, -2, 1417, 0, 0, 1446,
	0, 1430, 510, 512, 514, 516, 517, 518, 520, 1463,
	1464, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 2351, 2303, 540, 554,
	1345, 0, 1902, 1489, 1493, 0, 1495, 1496, 1497, 1498,
	1499, 0, 0, 1490, -2, 1566, 1568, 1589, 2043, 2044,
	2045, 1549, 1550, 1551, 1552, 1553, 1561, 1548, 1548, 1548,
	1559, 1588, 1580, 1588, 1584, 1534, 1535, 1536, 1571, 1572,
	1573, 1574, 0, 2351, 2303, 546, 0, 0, 0, 0,
	0, -2, 608, 613, 614, 0, 1227, 0, 1234, 635,
	636, 637, 1236, 1237, 0, 1239, 611, 638, 639, 640,
	641, 642, 643, 0, 1972, 1973, 1974, 1975, 1978, 1979,
	0, 0, 609, 628, 616, 0, 622, 92, 1177, 0,
	131, 0, 1177, 1177, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 116, 127, 104, 105, 0, 0,
	0, 0, 0, 73, 1062, 0, 1065, 0, 0, 0,
	0, 0, 0, 0, 1078, 0, 0, 0, 0, 115,
	0, 0, 110, 94, 0, 0, 0, 117, 129, 0,
	158, 160, 0, 0, 0, 0, 0, 0, 177, 185,
	0, 0, 0, 0, 1086, 0, 1342, 0, 0, 2395,
	0, 1449, 2182, -2, -2, 1449, 870, 0, 0, 2026,
	1968, 0, 0, 0, 0, 0, 0, 0, 322, 324,
	0, 326, 327, 328, 0, 1124, 0, 334, 374, 1011,
	2395, 0, 0, 401, 396, 0, 398, 0, 0, 1061,
	2395, 1059, 2003, 0, 1083, 0, 1040, 2395, 2001, 0,
	0, 1132, 2035, 1141, 1145, 1244, 0, 405, 0, 1258,
	1260, 0, 0, 1469, 0, 1471, 1412, 0, 351, 352,
	353, 0, 433, 0, 165, 166, 0, 167, 2395, 438,
	0, 441, 0, 167, 2395, 1958, 447, 0, 450, 0,
	0, 456, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 236, 0,
	1448, 0, 1449, 230, 273, 273, 1449, 585, 1449, 587,
	0, 0, 730, 731, 0, 273, 273, 273, 737, 738,
	740, 741, -2, -2, -2, 855, 743, 744, 822, 0,
	0, 0, 821, 758, 0, 864, 2289, 875, 822, 2106,
	822, 2106, 822, 2106, 769, 771, 774, 810, 818, 782,
	787, 0, 0, 792, 800, -2, 0, 802, 0, 804,
	0, 806, 822, 823, 826, 831, 834, 839, 0, 0,
	0, 0, 0, 0, 0, 1079, 0, 1217, 1373, 1301,
	566, 1292, 1372, 1293, 1300, 1303, 0, 0, 1305, 0,
	1307, 0, 1368, 1369, 1376, 1377, 0, 1387, 1388, 1380,
	0, -2, 0, 0, 1383, 1384, 1311, 0, 1328, 1329,
	1330, 1357, 1360, 1155, 0, 2528, 1610, 1484, 1611, 1612,
	1987, 0, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, -2, -2, -2, -2, -2, -2, -2, -2,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, -2, -2, -2, 1651, 1652, -2, 1886, 1888, 0,
	1951, 0, -2, 0, -2, -2, -2, -2, 1671, 0,
	1673, 1678, 1680, 1682, 0, 0, 0, 0, 1950, 1692,
	1934, 1935, 0, 0, 1865, 1866, 1867, 1677, 0, 1696,
	1949, 1946, 0, 0, 1898, 1356, 1755, 0, 0, 0,
	0, 1762, 1747, 1896, 0, 1895, 0, 0, 0, 1906,
	0, 1941, 1937, 0, 1985, 1605, 1592, 1593, 1594, 1595,
	1596, 1597, 1607, 0, 1982, 2012, 2018, 1839, 0, 0,
	0, 1792, 1793, 1794, 1795, 1796, 0, 1798, 1799, 0,
	1801, 1802, 0, 1804, 1805, 0, 1807, 1808, 1809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	1506, 0, 0, 0, 1510, 0, 0, 0, 1514, 0,
	0, 0, 1518, 0, 0, 0, 1522, 0, 0, 0,
	1526, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	1811, 0, 1909, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1813, 0, 1815, 1900, 1920, 0, 0, 1697,
	0, 0, 0, 1863, 0, 1818, 1900, 1928, 0, 0,
	0, 0, 0, 1900, 0, 1933, 0, 1825, 0, 1827,
	1337, 0, 0, 1479, 0, 0, 0, 1955, 1479, 1479,
	0, 1393, 0, 0, 1456, 1457, 1458, 0, 0, 1459,
	0, 1450, 1454, 1451, 1452, 1446, 1409, 0, 0, 1989,
	1446, 1415, 1445, 0, 1040, 1435, 1446, 1446, 0, -2,
	1419, 1436, 0, 0, 511, 513, 515, 519, 521, 0,
	0, 1356, -2, 0, -2, 1039, 0, 0, 0, 0,
	530, 532, 0, 0, 453, 0, 0, 524, 0, 527,
	0, 1480, 1483, 0, 0, 1494, 1500, 1501, 0, -2,
	0, 0, 1590, 0, 0, 0, 0, 0, 196, 0,
	601, 0, 1226, 1235, 0, 632, 0, 634, 0, 1976,
	1980, 1977, 1981, 0, 623, 0, 0, 0, 0, 1176,
	0, 135, 2395, 0, 169, 0, 0, 1004, 1995, 0,
	0, 0, 0, 2125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1063, 1064, 1066,
	1073, 1075, 0, 1069, 1983, 0, 0, 1070, 0, 1072,
	1074, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 107, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 1118, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 0, 0, -2, 0, 0, 0,
	0, 206, 0, 264, 1961, 1971, 0, 893, 894, 294,
	297, 300, 303, 202, 0, 330, 0, 0, 937, 912,
	0, 0, 383, 273, 0, 0, 397, 2035, 901, 182,
	183, 184, 1057, 1060, 0, 1040, 2395, 1097, 0, 0,
	0, 0, 0, 0, 1130, 0, 2395, 1990, 2034, 2035,
	1246, 1252, 0, 1479, 0, 1274, 1261, 0, 0, 0,
	1274, 1278, 1279, 1281, 1282, 0, 0, 1470, 1476, 0,
	355, 465, 167, 435, 0, 167, 167, 444, 0, 0,
	167, 455, 167, 460, 167, 262, 462, 473, 523, 1345,
	1345, 273, 271, 2240, 269, 266, 268, 0, 0, 0,
	938, 940, 941, 942, 943, 0, 2035, 0, 2171, 2035,
	0, 1264, 1266, 0, 226, 0, 233, 231, 236, 0,
	0, 395, 584, 589, 725, 0, 273, 733, 734, 735,
	776, 812, 820, 745, 747, 748, 749, 0, 876, 874,
	760, 822, 763, 822, 766, 822, 785, 789, 794, 801,
	0, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 859, 860, 861, 863, 1467, 1296, 1297, 1299, 0,
	1308, 0, 0, 1382, -2, -2, 1381, 1385, 1386, -2,
	-2, -2, -2, 1304, 0, 1313, 1310, 0, 1367, 1153,
	1154, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1693, 0, -2, 1672, 1675, 1679, 1681, 1683, 0, 0,
	0, 0, 0, 0, 1889, 0, 1891, 1694, 1944, 1947,
	1861, 0, 0, 1355, 1356, 1356, 0, 1761, 0, 1897,
	0, 1904, 1905, 0, 1754, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 1797, 1800, 1803, 1806, 0, 0, 0, 0, 1786,
	0, 0, 0, 1790, 1560, 1546, 0, 1588, 1586, 1587,
	1581, 1588, 1585, 1538, 0, 1503, 1504, 1505, 1507, 1508,
	1509, 1511, 1512, 1513, 1515, 1516, 1517, 1519, 1520, 1521,
	1523, 1524, 1525, 1527, 1528, 1529, 1531, 1532, 1533, 1537,
	0, 1810, 0, 1812, 1814, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 1701, 1702, 1817, 1926, 1927, 0, 0, 0,
	0, 0, 0, 1823, 0, 1932, 1824, 1826, 1345, 0,
	1338, 0, 1395, 1390, 1478, 0, 1953, 1449, 1397, 1399,
	1954, 1992, 1390, 1390, 0, 1901, 0, 0, 1440, 0,
	0, 0, 1442, 1413, 0, 0, 1407, 0, 1403, 1404,
	1405, 1406, 1414, 1040, 1444, 1416, 1420, 2012, 0, 1446,
	0, 1431, 0, 1433, 1465, 0, 1425, 1428, 0, 0,
	2027, 274, 0, 305, 309, 310, 306, 307, 308, 539,
	0, 0, 0, 0, 1903, 0, 1485, 0, 1491, 0,
	0, 0, 0, 545, 0, 0, 0, 192, 0, 597,
	-2, 630, 631, 633, 0, 629, 132, 1177, 0, 0,
	1158, 1160, 0, 137, 2395, 146, 0, 978, 0, 1993,
	0, 0, 0, 0, 0, 1179, 0, 0, 2395, 167,
	2395, 167, 149, 152, 0, 157, 154, 155, 0, 0,
	969, 93, 1177, 0, 96, 100, 108, 0, 0, 0,
	114, 0, 0, 0, 1162, 1168, 0, 0, 1067, 1068,
	1071, 1077, 74, 0, 0, 1166, 1172, 80, 0, 1157,
	159, 98, 102, 109, 0, 1174, 95, 0, 181, 0,
	0, 0, 173, 0, 174, 175, 186, 0, 167, 2395,
	0, 904, 905, 1119, 1081, 1082, 0, 1087, 0, 0,
	0, 1449, 198, 0, 1449, 206, 0, 1967, 0, 0,
	0, 0, 0, 0, 936, 1022, 0, 909, 0, 0,
	0, 389, 385, 0, 394, 400, 399, 900, 0, 0,
	0, 0, -2, 0, 0, 1134, 1128, 1129, 0, 0,
	0, 2395, 1248, 1252, 0, 1251, 1343, 1356, 404, 1253,
	1274, 0, 0, 0, 1263, 1259, 1256, 1479, 0, 0,
	0, 0, 0, 1472, 1475, 350, 434, 167, 439, 442,
	1959, 167, 448, 451, 457, 476, 477, 248, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 947, 0, 2035,
	2035, 0, 1997, 0, 0, 0, 0, 234, 0, 237,
	0, 0, 0, 242, 243, 244, 245, 246, 227, 1449,
	0, 586, 0, 0, 732, 0, 762, 764, 767, 803,
	805, 822, 848, 849, 964, 0, 964, 0, 0, 1306,
	0, 1379, 1312, 1361, 1362, 0, 1155, 0, 1613, 1656,
	0, 0, -2, 0, 0, 1660, 0, 0, 0, -2,
	0, 0, 0, 1890, 1892, 0, 1946, 1756, 0, 0,
	0, 1760, 1744, 1745, 0, 1864, 1907, 1936, 1940, 0,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 0, 1986, 2013,
	2017, 1837, 1838, 1842, 2000, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 1583, 0,
	0, 1908, 1919, 1921, 1698, 1699, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, -2, -2, -2, 1716,
	1717, 1718, -2, -2, -2, 0, 0, 0, 1922, 1924,
	1925, 1929, 1930, 0, 1820, 1821, 1822, 1931, 0, 1345,
	1339, 1392, 0, 1477, 1396, 0, 1392, 1392, 1352, 1438,
	0, 0, 1461, 0, 1410, 0, 1411, 0, 1443, 0,
	1418, 1421, 1422, 1432, 0, 1424, 0, 1427, 0, 1756,
	-2, 275, 277, 0, 280, 542, 543, 541, 525, 0,
	0, 1487, 0, 0, 1563, 1567, 1591, 548, 549, 547,
	194, 0, 1447, 0, 0, 0, 0, 168, 976, 1003,
	0, 0, 0, 1148, 1155, 0, 0, 1009, 139, 0,
	0, 0, 147, 0, 0, 144, 0, 151, 156, 0,
	0, 0, 0, 0, 0, 111, 112, 113, 0, 118,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 1152, 0, 0, 188, 0,
	0, 0, 1122, 1123, 1163, 1169, 0, 0, 206, 204,
	0, 207, 0, 210, 211, 0, 206, 200, 0, 0,
	325, 1040, 331, 958, 1010, 0, 1012, 0, 910, 0,
	0, 1011, 381, 0, 388, 0, 0, 1061, 0, 0,
	1084, 1095, 1040, 0, 1133, 1135, 1143, 0, 0, 0,
	1250, 1252, 0, 1243, 1244, 1375, 1254, 1272, -2, 0,
	0, 1356, 1280, 1277, 1283, 1284, 0, 436, 445, 270,
	0, 265, 267, 0, 251, 0, 0, 939, 944, 0,
	0, 0, 0, 0, 1265, 1267, 0, 0, 0, 0,
	0, 0, 236, 257, 0, 726, 750, 813, 850, 963,
	0, 0, 852, 0, 0, 1378, 1365, 1366, 1363, 1155,
	1658, 1662, 0, 0, 0, 1664, -2, 0, 1686, -2,
	-2, 1893, 1945, 1735, 1356, 1757, 1759, 1746, 1939, 1608,
	0, 1844, 1841, 0, 1828, 0, 1781, 1782, 0, 0,
	1785, 1787, 1788, 1789, 1547, 1540, 1539, 1918, 0, 0,
	0, 0, 1819, 1340, 0, 1833, 0, 0, 1400, 1833,
	1833, 1439, 0, 1441, 1408, 1401, 0, 2013, 1434, 1426,
	0, 0, 278, 0, 1481, 1486, 0, 1492, 1562, 195,
	133, 134, 136, 0, 977, 0, 980, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 997, 0,
	1026, 1036, 0, 1367, 0, 0, 0, 141, 162, 0,
	0, 1178, 0, 0, 167, 167, 0, 0, 1159, 1161,
	0, 0, 0, 0, 121, 0, 0, 1164, 1170, 1167,
	1173, 0, 0, 0, 1175, 179, 180, 0, 167, 0,
	172, 167, 167, 1152, 0, 0, 0, 197, 0, 0,
	0, 0, 199, 263, 206, 0, 966, 0, 1022, 1014,
	1015, 1016, 0, 1021, 1023, 0, 0, 924, 911, 0,
	920, 0, 0, 937, 912, 0, 386, 902, 1058, 1092,
	1040, 0, 1126, 0, 0, 0, 0, 0, 0, 1240,
	1252, 0, 1245, 1246, 1274, 1374, 0, 0, 0, 1262,
	1375, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 238, 0, 239, 240, 241, 228,
	588, 590, 0, 0, 596, 962, 0, 0, 0, 0,
	1364, 1666, -2, -2, 1687, 0, 2014, 2016, 1356, 0,
	1830, 1358, 0, 0, -2, 0, 0, 0, 1341, 1324,
	0, 1391, 1389, 1325, 1326, 1460, 0, 1429, 279, 0,
	1488, 138, 0, 981, 982, 1996, 984, 0, 986, 989,
	0, 992, 2037, 0, 996, 0, 1005, 1027, 0, 958,
	0, 1032, 1033, 1034, 1149, 1150, 1038, 0, 140, 142,
	161, 1152, 0, 143, 150, 0, 0, 97, 0, 0,
	2097, 124, 122, 120, 1156, 99, 0, 181, 187, 1151,
	176, 189, 167, 0, 1165, 1171, 208, 0, 209, 212,
	0, 0, 912, 965, 0, 1013, 0, 1024, 1025, 914,
	0, 913, 0, 0, 0, 0, 0, 387, 390, 0,
	393, 0, 0, 1136, 0, 1142, 0, 0, 0, 0,
	1247, 1248, 402, 1268, 0, 0, 1274, 1285, 250, 0,
	0, 945, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 946, 1038, 0, 0, 1002, 0, 255, 235, 0,
	592, 0, 594, 0, 851, 853, 0, 0, 1758, 1848,
	0, 0, 1783, 1784, -2, 0, 1724, 1832, 1834, 0,
	1402, 1482, 979, 983, 0, 0, 0, 1044, 0, 0,
	998, 0, 1030, 1031, 966, 0, 958, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 171, 190, 1152,
	205, 222, 0, 1093, 914, 0, 0, 922, 0, 925,
	0, 921, 918, 919, 958, 0, 391, 392, 0, 1096,
	0, 1143, 0, 0, 1249, 1250, 1479, 1271, 1275, 0,
	0, 1036, 1038, 912, 0, 591, 0, 0, 856, 857,
	0, 0, 0, 0, 1843, 1359, 1725, 0, 0, 0,
	0, 991, 1049, 0, 0, 0, 1028, 1029, 1026, 0,
	1007, 0, 1040, 145, 0, 1038, 0, 970, 0, 0,
	973, 0, 0, 125, 2097, 123, 0, 167, 225, 0,
	219, 217, 218, 907, 0, 0, 1018, 1020, 0, 926,
	966, 924, 1094, 1038, 0, 1036, 0, 1241, 0, 273,
	273, 958, 1036, 1479, 0, 273, 593, 595, 1840, 1860,
	1849, -2, 2354, 2103, 0, 1860, 1860, 1835, 1836, 0,
	0, 993, 1045, 1046, 0, 1041, 1042, 1043, 2036, 994,
	995, 1479, 1035, 0, 1044, 163, 958, 967, 0, 0,
	968, 0, 0, 128, 0, 130, 191, 213, 0, 0,
	0, 1017, 0, 0, 0, 0, 912, 914, 1036, 0,
	958, 0, 0, 252, 253, 966, 958, 1001, 254, 1845,
	0, 0, 1851, 1852, 1853, 1854, 1855, 1846, 1847, 985,
	0, 1047, 0, 1048, 0, 0, 0, 1006, 0, 1049,
	148, 971, 0, 974, 0, 126, 0, 220, 221, 0,
	1019, 915, 0, 917, 914, 923, 958, 0, 966, 0,
	1269, 0, 912, 966, 0, 1857, 1858, 0, 0, 0,
	1050, 0, 1053, 1054, 0, 1051, 0, 1026, 0, 0,
	0, 961, 916, 908, 966, 1038, 912, 1036, 0, 1479,
	912, 1856, 1859, 1850, 990, 1052, 1055, 1056, 1037, 1008,
	0, 0, 223, 0, 957, 959, 960, 912, 1036, 1479,
	958, 1479, 999, 1479, 966, 0, 0, 1479, 958, 1139,
	966, 1270, 1000, 972, 0, 224, 1137, 966, 912, 0,
	912, 1479, 0, 1479, 1140, 966, 1138, 975,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 543, 3, 549, 544, 3,
	554, 555, 547, 545, 559, 546, 556, 548, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 562, 3,
	535, 537, 536, 540, 558, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 552, 3, 553, 550, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 560, 542, 561, 538,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 539, 57878, 541, 57879, 551,
	57880, 557, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1231
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1256
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1333
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1359
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1372
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1393
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1397
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1414
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1418
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1485
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1495
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1504
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1525
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1533
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1543
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1557
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1568
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1575
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1587
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1594
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1602
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1611
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1622
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1641
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1651
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1661
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1670
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1681
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1687
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1718
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1838
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1887
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2011
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2048
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2052
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2106
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2189
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2197
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2224
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2450
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2494
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2574
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2583
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2589
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2604
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2609
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2613
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2632
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2686
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2716
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2876
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3015
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3028
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3062
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3090
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3125
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3153
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3179
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3389
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3445
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3454
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3486
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3563
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3596
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3740
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4309
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4357
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4366
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4483
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4685
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4704
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4826
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4852
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4895
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4903
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4940
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4954
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4963
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4975
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "RESUME")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5395
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5410
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{

			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5455
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5460
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5465
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5492
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5506
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5521
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5523
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5619
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.str = ""
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5829
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5843
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5854
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5855
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5953
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5991
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6071
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6072
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6074
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6232
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6241
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6265
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = true
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{

			sqlVAL.union.val = true
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = false
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6368
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6382
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6394
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6406
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6416
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = nil
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6555
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6557
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6559
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6563
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6601
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6619
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6638
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6655
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6672
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6676
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = true
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = false
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = false
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.str = ""
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6783
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6789
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6859
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6865
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6877
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6883
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6897
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6903
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6920
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6921
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6925
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7036
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7062
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7091
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7111
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7112
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7153
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7155
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.str = ""
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7329
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7342
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7422
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7460
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7492
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7678
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7740
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7800
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = true
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7854
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = nil
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7867
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = true
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = false
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = false
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = true
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7965
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8027
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8082
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8086
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8140
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8142
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8157
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8179
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8184
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8231
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8270
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8280
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8326
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8356
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = nil
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = true
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = false
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.str = tree.AstFull
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.str = tree.AstRight
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.str = tree.AstInner
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8509
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.str = tree.AstHash
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.str = ""
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8600
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8616
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = false
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8665
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8678
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8686
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8687
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8705
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8715
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8735
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8784
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8796
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8810
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8817
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8825
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = types.Geography
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8846
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8854
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8888
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = nil
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = types.Int2
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = types.Int
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = types.Float4
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = types.Float
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = types.Bool
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = types.Float
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8980
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8986
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9008
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = types.String
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = true
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = false
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = types.Date
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9065
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9079
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9096
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9113
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = false
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = types.Interval
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9137
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = nil
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9644
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9860
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9865
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9915
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9945
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9956
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9957
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10047
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10243
		{
			return unimplemented(sqllex, "treat")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.str = ""
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10418
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10515
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.Any
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.Some
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.All
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = tree.Div
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = tree.LT
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = tree.GT
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = tree.LE
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.GE
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = tree.NE
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = tree.Like
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10876
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10877
		{
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11030
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11046
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11075
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11095
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11295
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.str = ""
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
