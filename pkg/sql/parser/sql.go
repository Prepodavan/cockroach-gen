// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12537

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1432,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 369,
	-2, 0,
	-1, 73,
	236, 221,
	497, 221,
	-2, 0,
	-1, 84,
	224, 1193,
	238, 1193,
	254, 365,
	380, 365,
	390, 973,
	425, 365,
	437, 973,
	481, 973,
	508, 365,
	534, 973,
	-2, 0,
	-1, 90,
	130, 1432,
	231, 1432,
	519, 1432,
	520, 1432,
	-2, 0,
	-1, 106,
	147, 1403,
	166, 1403,
	179, 1403,
	234, 1403,
	267, 1403,
	332, 1403,
	342, 1403,
	514, 1403,
	-2, 1374,
	-1, 145,
	155, 838,
	253, 838,
	383, 807,
	442, 807,
	500, 838,
	502, 807,
	-2, 0,
	-1, 147,
	4, 1434,
	21, 1434,
	22, 1434,
	23, 1434,
	24, 1434,
	25, 1434,
	26, 1434,
	27, 1434,
	28, 1434,
	30, 1434,
	31, 1434,
	37, 1434,
	42, 1434,
	43, 1434,
	45, 1434,
	46, 1434,
	47, 1434,
	48, 1434,
	49, 1434,
	50, 1434,
	51, 1434,
	53, 1434,
	54, 1434,
	55, 1434,
	56, 1434,
	58, 1434,
	59, 1434,
	60, 1434,
	61, 1434,
	62, 1434,
	63, 1434,
	64, 1434,
	68, 1434,
	69, 1434,
	70, 1434,
	71, 1434,
	73, 1434,
	74, 1434,
	75, 1434,
	79, 1434,
	80, 1434,
	81, 1434,
	82, 1434,
	83, 1434,
	84, 1434,
	85, 1434,
	88, 1434,
	89, 1434,
	90, 1434,
	91, 1434,
	92, 1434,
	94, 1434,
	96, 1434,
	97, 1434,
	98, 1434,
	99, 1434,
	100, 1434,
	101, 1434,
	103, 1434,
	104, 1434,
	105, 1434,
	107, 1434,
	108, 1434,
	116, 1434,
	117, 1434,
	118, 1434,
	119, 1434,
	121, 1434,
	122, 1434,
	123, 1434,
	125, 1434,
	126, 1434,
	127, 1434,
	129, 1434,
	130, 1434,
	132, 1434,
	133, 1434,
	134, 1434,
	137, 1434,
	138, 1434,
	139, 1434,
	141, 1434,
	142, 1434,
	144, 1434,
	145, 1434,
	146, 1434,
	148, 1434,
	149, 1434,
	150, 1434,
	151, 1434,
	152, 1434,
	153, 1434,
	154, 1434,
	155, 1434,
	156, 1434,
	157, 1434,
	158, 1434,
	159, 1434,
	160, 1434,
	161, 1434,
	162, 1434,
	163, 1434,
	165, 1434,
	171, 1434,
	172, 1434,
	173, 1434,
	174, 1434,
	178, 1434,
	180, 1434,
	184, 1434,
	185, 1434,
	186, 1434,
	187, 1434,
	188, 1434,
	189, 1434,
	190, 1434,
	191, 1434,
	192, 1434,
	193, 1434,
	194, 1434,
	195, 1434,
	196, 1434,
	198, 1434,
	199, 1434,
	201, 1434,
	202, 1434,
	204, 1434,
	205, 1434,
	206, 1434,
	207, 1434,
	208, 1434,
	209, 1434,
	210, 1434,
	211, 1434,
	212, 1434,
	214, 1434,
	215, 1434,
	217, 1434,
	218, 1434,
	219, 1434,
	220, 1434,
	224, 1434,
	225, 1434,
	226, 1434,
	227, 1434,
	228, 1434,
	231, 1434,
	232, 1434,
	233, 1434,
	235, 1434,
	237, 1434,
	238, 1434,
	240, 1434,
	242, 1434,
	243, 1434,
	244, 1434,
	246, 1434,
	250, 1434,
	251, 1434,
	252, 1434,
	253, 1434,
	254, 1434,
	255, 1434,
	257, 1434,
	258, 1434,
	259, 1434,
	261, 1434,
	262, 1434,
	264, 1434,
	265, 1434,
	268, 1434,
	272, 1434,
	273, 1434,
	274, 1434,
	277, 1434,
	278, 1434,
	279, 1434,
	280, 1434,
	282, 1434,
	283, 1434,
	284, 1434,
	285, 1434,
	286, 1434,
	287, 1434,
	288, 1434,
	289, 1434,
	290, 1434,
	291, 1434,
	292, 1434,
	293, 1434,
	294, 1434,
	295, 1434,
	296, 1434,
	297, 1434,
	298, 1434,
	299, 1434,
	300, 1434,
	301, 1434,
	302, 1434,
	303, 1434,
	305, 1434,
	307, 1434,
	308, 1434,
	309, 1434,
	310, 1434,
	311, 1434,
	312, 1434,
	313, 1434,
	314, 1434,
	315, 1434,
	316, 1434,
	317, 1434,
	318, 1434,
	320, 1434,
	322, 1434,
	324, 1434,
	325, 1434,
	327, 1434,
	328, 1434,
	329, 1434,
	330, 1434,
	331, 1434,
	334, 1434,
	337, 1434,
	338, 1434,
	339, 1434,
	340, 1434,
	343, 1434,
	344, 1434,
	345, 1434,
	347, 1434,
	349, 1434,
	350, 1434,
	351, 1434,
	352, 1434,
	353, 1434,
	354, 1434,
	355, 1434,
	356, 1434,
	357, 1434,
	358, 1434,
	359, 1434,
	360, 1434,
	362, 1434,
	363, 1434,
	364, 1434,
	365, 1434,
	366, 1434,
	367, 1434,
	368, 1434,
	369, 1434,
	370, 1434,
	371, 1434,
	372, 1434,
	373, 1434,
	374, 1434,
	375, 1434,
	376, 1434,
	378, 1434,
	379, 1434,
	381, 1434,
	382, 1434,
	383, 1434,
	384, 1434,
	385, 1434,
	386, 1434,
	387, 1434,
	388, 1434,
	389, 1434,
	390, 1434,
	391, 1434,
	392, 1434,
	394, 1434,
	396, 1434,
	397, 1434,
	398, 1434,
	403, 1434,
	405, 1434,
	406, 1434,
	407, 1434,
	408, 1434,
	409, 1434,
	410, 1434,
	411, 1434,
	412, 1434,
	414, 1434,
	415, 1434,
	416, 1434,
	418, 1434,
	419, 1434,
	420, 1434,
	421, 1434,
	422, 1434,
	423, 1434,
	425, 1434,
	426, 1434,
	427, 1434,
	428, 1434,
	429, 1434,
	430, 1434,
	431, 1434,
	432, 1434,
	433, 1434,
	434, 1434,
	435, 1434,
	437, 1434,
	438, 1434,
	439, 1434,
	440, 1434,
	441, 1434,
	442, 1434,
	444, 1434,
	445, 1434,
	446, 1434,
	447, 1434,
	448, 1434,
	449, 1434,
	451, 1434,
	452, 1434,
	453, 1434,
	454, 1434,
	455, 1434,
	456, 1434,
	457, 1434,
	459, 1434,
	461, 1434,
	462, 1434,
	463, 1434,
	464, 1434,
	465, 1434,
	466, 1434,
	467, 1434,
	468, 1434,
	469, 1434,
	470, 1434,
	471, 1434,
	472, 1434,
	473, 1434,
	474, 1434,
	475, 1434,
	477, 1434,
	478, 1434,
	480, 1434,
	482, 1434,
	483, 1434,
	484, 1434,
	485, 1434,
	486, 1434,
	487, 1434,
	488, 1434,
	489, 1434,
	490, 1434,
	492, 1434,
	493, 1434,
	494, 1434,
	495, 1434,
	496, 1434,
	498, 1434,
	500, 1434,
	501, 1434,
	502, 1434,
	503, 1434,
	504, 1434,
	505, 1434,
	507, 1434,
	508, 1434,
	509, 1434,
	510, 1434,
	512, 1434,
	513, 1434,
	516, 1434,
	517, 1434,
	518, 1434,
	519, 1434,
	520, 1434,
	521, 1434,
	522, 1434,
	524, 1434,
	527, 1434,
	528, 1434,
	529, 1434,
	530, 1434,
	531, 1434,
	532, 1434,
	534, 1434,
	535, 1434,
	536, 1434,
	537, 1434,
	542, 1434,
	543, 1434,
	544, 1434,
	545, 1434,
	546, 1434,
	547, 1434,
	-2, 0,
	-1, 148,
	1, 1290,
	128, 1290,
	242, 1290,
	321, 1290,
	378, 1290,
	387, 1290,
	551, 1290,
	575, 1290,
	-2, 0,
	-1, 150,
	1, 1290,
	575, 1290,
	-2, 0,
	-1, 151,
	1, 1290,
	575, 1290,
	-2, 0,
	-1, 152,
	1, 1290,
	497, 1290,
	575, 1290,
	-2, 0,
	-1, 181,
	147, 1402,
	166, 1402,
	179, 1402,
	234, 1402,
	267, 1402,
	332, 1402,
	342, 1402,
	514, 1402,
	-2, 1377,
	-1, 224,
	4, 1441,
	5, 1441,
	6, 1441,
	7, 1441,
	8, 1441,
	9, 1441,
	10, 1441,
	21, 1441,
	22, 1441,
	23, 1441,
	24, 1441,
	25, 1441,
	26, 1441,
	27, 1441,
	28, 1441,
	30, 1441,
	31, 1441,
	37, 1441,
	38, 1441,
	42, 1441,
	43, 1441,
	44, 1441,
	45, 1441,
	46, 1441,
	47, 1441,
	48, 1441,
	49, 1441,
	50, 1441,
	51, 1441,
	53, 1441,
	54, 1441,
	55, 1441,
	56, 1441,
	58, 1441,
	59, 1441,
	60, 1441,
	61, 1441,
	62, 1441,
	63, 1441,
	64, 1441,
	65, 1441,
	66, 1441,
	67, 1441,
	68, 1441,
	69, 1441,
	70, 1441,
	71, 1441,
	73, 1441,
	74, 1441,
	75, 1441,
	77, 1441,
	79, 1441,
	80, 1441,
	81, 1441,
	82, 1441,
	83, 1441,
	84, 1441,
	85, 1441,
	88, 1441,
	89, 1441,
	90, 1441,
	91, 1441,
	92, 1441,
	94, 1441,
	96, 1441,
	97, 1441,
	98, 1441,
	99, 1441,
	100, 1441,
	101, 1441,
	103, 1441,
	104, 1441,
	105, 1441,
	106, 1441,
	107, 1441,
	108, 1441,
	109, 1441,
	110, 1441,
	111, 1441,
	112, 1441,
	113, 1441,
	114, 1441,
	115, 1441,
	116, 1441,
	117, 1441,
	118, 1441,
	119, 1441,
	120, 1441,
	121, 1441,
	122, 1441,
	123, 1441,
	124, 1441,
	125, 1441,
	126, 1441,
	127, 1441,
	129, 1441,
	130, 1441,
	132, 1441,
	133, 1441,
	134, 1441,
	137, 1441,
	138, 1441,
	139, 1441,
	141, 1441,
	142, 1441,
	144, 1441,
	145, 1441,
	146, 1441,
	148, 1441,
	149, 1441,
	150, 1441,
	151, 1441,
	152, 1441,
	153, 1441,
	154, 1441,
	155, 1441,
	156, 1441,
	157, 1441,
	158, 1441,
	159, 1441,
	160, 1441,
	161, 1441,
	162, 1441,
	163, 1441,
	164, 1441,
	165, 1441,
	171, 1441,
	172, 1441,
	173, 1441,
	174, 1441,
	178, 1441,
	180, 1441,
	183, 1441,
	184, 1441,
	185, 1441,
	186, 1441,
	187, 1441,
	188, 1441,
	189, 1441,
	190, 1441,
	191, 1441,
	192, 1441,
	193, 1441,
	194, 1441,
	195, 1441,
	196, 1441,
	198, 1441,
	199, 1441,
	201, 1441,
	202, 1441,
	204, 1441,
	205, 1441,
	206, 1441,
	207, 1441,
	208, 1441,
	209, 1441,
	210, 1441,
	211, 1441,
	212, 1441,
	213, 1441,
	214, 1441,
	215, 1441,
	217, 1441,
	218, 1441,
	219, 1441,
	220, 1441,
	224, 1441,
	225, 1441,
	226, 1441,
	227, 1441,
	228, 1441,
	230, 1441,
	231, 1441,
	232, 1441,
	233, 1441,
	235, 1441,
	237, 1441,
	238, 1441,
	239, 1441,
	240, 1441,
	241, 1441,
	242, 1441,
	243, 1441,
	244, 1441,
	245, 1441,
	246, 1441,
	250, 1441,
	251, 1441,
	252, 1441,
	253, 1441,
	254, 1441,
	255, 1441,
	257, 1441,
	258, 1441,
	259, 1441,
	261, 1441,
	262, 1441,
	263, 1441,
	264, 1441,
	265, 1441,
	266, 1441,
	268, 1441,
	272, 1441,
	273, 1441,
	274, 1441,
	275, 1441,
	276, 1441,
	277, 1441,
	278, 1441,
	279, 1441,
	280, 1441,
	282, 1441,
	283, 1441,
	284, 1441,
	285, 1441,
	286, 1441,
	287, 1441,
	288, 1441,
	289, 1441,
	290, 1441,
	291, 1441,
	292, 1441,
	293, 1441,
	294, 1441,
	295, 1441,
	296, 1441,
	297, 1441,
	298, 1441,
	299, 1441,
	300, 1441,
	301, 1441,
	302, 1441,
	303, 1441,
	305, 1441,
	306, 1441,
	307, 1441,
	308, 1441,
	309, 1441,
	310, 1441,
	311, 1441,
	312, 1441,
	313, 1441,
	314, 1441,
	315, 1441,
	316, 1441,
	317, 1441,
	318, 1441,
	319, 1441,
	320, 1441,
	321, 1441,
	322, 1441,
	323, 1441,
	324, 1441,
	325, 1441,
	326, 1441,
	327, 1441,
	328, 1441,
	329, 1441,
	330, 1441,
	331, 1441,
	334, 1441,
	338, 1441,
	339, 1441,
	340, 1441,
	343, 1441,
	344, 1441,
	345, 1441,
	346, 1441,
	347, 1441,
	348, 1441,
	349, 1441,
	350, 1441,
	351, 1441,
	352, 1441,
	353, 1441,
	354, 1441,
	355, 1441,
	356, 1441,
	357, 1441,
	358, 1441,
	359, 1441,
	360, 1441,
	362, 1441,
	363, 1441,
	364, 1441,
	365, 1441,
	366, 1441,
	367, 1441,
	368, 1441,
	369, 1441,
	370, 1441,
	371, 1441,
	372, 1441,
	373, 1441,
	374, 1441,
	375, 1441,
	376, 1441,
	378, 1441,
	379, 1441,
	381, 1441,
	382, 1441,
	383, 1441,
	384, 1441,
	385, 1441,
	386, 1441,
	387, 1441,
	388, 1441,
	389, 1441,
	390, 1441,
	391, 1441,
	392, 1441,
	394, 1441,
	396, 1441,
	397, 1441,
	398, 1441,
	403, 1441,
	405, 1441,
	406, 1441,
	407, 1441,
	408, 1441,
	409, 1441,
	410, 1441,
	411, 1441,
	412, 1441,
	414, 1441,
	415, 1441,
	416, 1441,
	417, 1441,
	418, 1441,
	419, 1441,
	420, 1441,
	421, 1441,
	422, 1441,
	423, 1441,
	425, 1441,
	426, 1441,
	427, 1441,
	428, 1441,
	429, 1441,
	430, 1441,
	431, 1441,
	432, 1441,
	433, 1441,
	434, 1441,
	435, 1441,
	437, 1441,
	438, 1441,
	439, 1441,
	440, 1441,
	441, 1441,
	442, 1441,
	443, 1441,
	444, 1441,
	445, 1441,
	446, 1441,
	447, 1441,
	448, 1441,
	449, 1441,
	450, 1441,
	451, 1441,
	452, 1441,
	453, 1441,
	454, 1441,
	455, 1441,
	456, 1441,
	457, 1441,
	459, 1441,
	461, 1441,
	462, 1441,
	463, 1441,
	464, 1441,
	465, 1441,
	466, 1441,
	467, 1441,
	468, 1441,
	469, 1441,
	470, 1441,
	471, 1441,
	472, 1441,
	473, 1441,
	474, 1441,
	475, 1441,
	477, 1441,
	478, 1441,
	479, 1441,
	480, 1441,
	482, 1441,
	483, 1441,
	484, 1441,
	485, 1441,
	486, 1441,
	487, 1441,
	488, 1441,
	489, 1441,
	490, 1441,
	492, 1441,
	493, 1441,
	494, 1441,
	495, 1441,
	496, 1441,
	498, 1441,
	500, 1441,
	501, 1441,
	502, 1441,
	503, 1441,
	504, 1441,
	505, 1441,
	506, 1441,
	507, 1441,
	508, 1441,
	509, 1441,
	510, 1441,
	512, 1441,
	513, 1441,
	515, 1441,
	516, 1441,
	517, 1441,
	518, 1441,
	519, 1441,
	520, 1441,
	521, 1441,
	522, 1441,
	523, 1441,
	524, 1441,
	527, 1441,
	528, 1441,
	529, 1441,
	530, 1441,
	531, 1441,
	532, 1441,
	534, 1441,
	535, 1441,
	536, 1441,
	537, 1441,
	542, 1441,
	543, 1441,
	544, 1441,
	545, 1441,
	546, 1441,
	547, 1441,
	548, 1441,
	556, 1441,
	563, 1441,
	564, 1441,
	565, 1441,
	572, 1441,
	576, 1441,
	-2, 0,
	-1, 711,
	4, 1191,
	21, 1191,
	22, 1191,
	23, 1191,
	24, 1191,
	25, 1191,
	26, 1191,
	27, 1191,
	28, 1191,
	30, 1191,
	31, 1191,
	37, 1191,
	42, 1191,
	43, 1191,
	45, 1191,
	46, 1191,
	47, 1191,
	48, 1191,
	49, 1191,
	50, 1191,
	51, 1191,
	53, 1191,
	54, 1191,
	55, 1191,
	56, 1191,
	58, 1191,
	59, 1191,
	60, 1191,
	61, 1191,
	62, 1191,
	63, 1191,
	64, 1191,
	68, 1191,
	69, 1191,
	70, 1191,
	71, 1191,
	73, 1191,
	74, 1191,
	75, 1191,
	79, 1191,
	80, 1191,
	81, 1191,
	82, 1191,
	83, 1191,
	84, 1191,
	85, 1191,
	88, 1191,
	89, 1191,
	90, 1191,
	91, 1191,
	92, 1191,
	94, 1191,
	96, 1191,
	97, 1191,
	98, 1191,
	99, 1191,
	100, 1191,
	101, 1191,
	103, 1191,
	104, 1191,
	105, 1191,
	107, 1191,
	108, 1191,
	116, 1191,
	117, 1191,
	118, 1191,
	119, 1191,
	121, 1191,
	122, 1191,
	123, 1191,
	125, 1191,
	126, 1191,
	127, 1191,
	129, 1191,
	130, 1191,
	132, 1191,
	133, 1191,
	134, 1191,
	137, 1191,
	138, 1191,
	139, 1191,
	141, 1191,
	142, 1191,
	144, 1191,
	145, 1191,
	146, 1191,
	148, 1191,
	149, 1191,
	150, 1191,
	151, 1191,
	152, 1191,
	153, 1191,
	154, 1191,
	155, 1191,
	156, 1191,
	157, 1191,
	158, 1191,
	159, 1191,
	160, 1191,
	161, 1191,
	162, 1191,
	163, 1191,
	165, 1191,
	171, 1191,
	172, 1191,
	173, 1191,
	174, 1191,
	178, 1191,
	180, 1191,
	184, 1191,
	185, 1191,
	186, 1191,
	187, 1191,
	188, 1191,
	189, 1191,
	190, 1191,
	191, 1191,
	192, 1191,
	193, 1191,
	194, 1191,
	195, 1191,
	196, 1191,
	198, 1191,
	199, 1191,
	201, 1191,
	202, 1191,
	204, 1191,
	205, 1191,
	206, 1191,
	207, 1191,
	208, 1191,
	209, 1191,
	210, 1191,
	211, 1191,
	212, 1191,
	214, 1191,
	215, 1191,
	217, 1191,
	218, 1191,
	219, 1191,
	220, 1191,
	224, 1191,
	225, 1191,
	226, 1191,
	227, 1191,
	228, 1191,
	231, 1191,
	232, 1191,
	233, 1191,
	235, 1191,
	237, 1191,
	238, 1191,
	240, 1191,
	242, 1191,
	243, 1191,
	244, 1191,
	246, 1191,
	250, 1191,
	251, 1191,
	252, 1191,
	253, 1191,
	254, 1191,
	255, 1191,
	257, 1191,
	258, 1191,
	259, 1191,
	261, 1191,
	262, 1191,
	264, 1191,
	265, 1191,
	268, 1191,
	272, 1191,
	273, 1191,
	274, 1191,
	277, 1191,
	278, 1191,
	279, 1191,
	280, 1191,
	282, 1191,
	283, 1191,
	284, 1191,
	285, 1191,
	286, 1191,
	287, 1191,
	288, 1191,
	289, 1191,
	290, 1191,
	291, 1191,
	292, 1191,
	293, 1191,
	294, 1191,
	295, 1191,
	296, 1191,
	297, 1191,
	298, 1191,
	299, 1191,
	300, 1191,
	301, 1191,
	302, 1191,
	303, 1191,
	305, 1191,
	307, 1191,
	308, 1191,
	309, 1191,
	310, 1191,
	311, 1191,
	312, 1191,
	313, 1191,
	314, 1191,
	315, 1191,
	316, 1191,
	317, 1191,
	318, 1191,
	320, 1191,
	322, 1191,
	324, 1191,
	325, 1191,
	327, 1191,
	328, 1191,
	329, 1191,
	330, 1191,
	331, 1191,
	334, 1191,
	338, 1191,
	339, 1191,
	340, 1191,
	343, 1191,
	344, 1191,
	345, 1191,
	347, 1191,
	349, 1191,
	350, 1191,
	351, 1191,
	352, 1191,
	353, 1191,
	354, 1191,
	355, 1191,
	356, 1191,
	357, 1191,
	358, 1191,
	359, 1191,
	360, 1191,
	362, 1191,
	363, 1191,
	364, 1191,
	365, 1191,
	366, 1191,
	367, 1191,
	368, 1191,
	369, 1191,
	370, 1191,
	371, 1191,
	372, 1191,
	373, 1191,
	374, 1191,
	375, 1191,
	376, 1191,
	378, 1191,
	379, 1191,
	381, 1191,
	382, 1191,
	383, 1191,
	384, 1191,
	385, 1191,
	386, 1191,
	387, 1191,
	388, 1191,
	389, 1191,
	390, 1191,
	391, 1191,
	392, 1191,
	394, 1191,
	396, 1191,
	397, 1191,
	398, 1191,
	403, 1191,
	405, 1191,
	406, 1191,
	407, 1191,
	408, 1191,
	409, 1191,
	410, 1191,
	411, 1191,
	412, 1191,
	414, 1191,
	415, 1191,
	416, 1191,
	418, 1191,
	419, 1191,
	420, 1191,
	421, 1191,
	422, 1191,
	423, 1191,
	425, 1191,
	426, 1191,
	427, 1191,
	428, 1191,
	429, 1191,
	430, 1191,
	431, 1191,
	432, 1191,
	433, 1191,
	434, 1191,
	435, 1191,
	437, 1191,
	438, 1191,
	439, 1191,
	440, 1191,
	441, 1191,
	442, 1191,
	444, 1191,
	445, 1191,
	446, 1191,
	447, 1191,
	448, 1191,
	449, 1191,
	451, 1191,
	452, 1191,
	453, 1191,
	454, 1191,
	455, 1191,
	456, 1191,
	457, 1191,
	459, 1191,
	461, 1191,
	462, 1191,
	463, 1191,
	464, 1191,
	465, 1191,
	466, 1191,
	467, 1191,
	468, 1191,
	469, 1191,
	470, 1191,
	471, 1191,
	472, 1191,
	473, 1191,
	474, 1191,
	475, 1191,
	477, 1191,
	478, 1191,
	480, 1191,
	482, 1191,
	483, 1191,
	484, 1191,
	485, 1191,
	486, 1191,
	487, 1191,
	488, 1191,
	489, 1191,
	490, 1191,
	492, 1191,
	493, 1191,
	494, 1191,
	495, 1191,
	496, 1191,
	498, 1191,
	500, 1191,
	501, 1191,
	502, 1191,
	503, 1191,
	504, 1191,
	505, 1191,
	507, 1191,
	508, 1191,
	509, 1191,
	510, 1191,
	512, 1191,
	513, 1191,
	516, 1191,
	517, 1191,
	518, 1191,
	519, 1191,
	520, 1191,
	521, 1191,
	522, 1191,
	524, 1191,
	527, 1191,
	528, 1191,
	529, 1191,
	530, 1191,
	531, 1191,
	532, 1191,
	534, 1191,
	535, 1191,
	536, 1191,
	537, 1191,
	542, 1191,
	543, 1191,
	544, 1191,
	545, 1191,
	546, 1191,
	547, 1191,
	-2, 0,
	-1, 730,
	182, 2198,
	497, 2198,
	555, 2198,
	574, 2198,
	-2, 0,
	-1, 731,
	182, 2299,
	497, 2299,
	555, 2299,
	574, 2299,
	-2, 0,
	-1, 732,
	182, 2185,
	497, 2185,
	555, 2185,
	574, 2185,
	-2, 0,
	-1, 734,
	182, 2428,
	497, 2428,
	555, 2428,
	574, 2428,
	-2, 0,
	-1, 736,
	182, 2466,
	497, 2466,
	555, 2466,
	574, 2466,
	-2, 0,
	-1, 743,
	182, 2326,
	497, 2326,
	555, 2326,
	574, 2326,
	-2, 643,
	-1, 772,
	574, 2134,
	577, 2134,
	-2, 904,
	-1, 773,
	574, 2136,
	577, 2136,
	-2, 905,
	-1, 774,
	574, 2135,
	577, 2135,
	-2, 906,
	-1, 775,
	577, 2061,
	-2, 907,
	-1, 798,
	179, 235,
	-2, 0,
	-1, 821,
	44, 2108,
	-2, 0,
	-1, 822,
	534, 1170,
	-2, 974,
	-1, 838,
	4, 1570,
	21, 1570,
	22, 1570,
	23, 1570,
	24, 1570,
	25, 1570,
	26, 1570,
	27, 1570,
	28, 1570,
	30, 1570,
	31, 1570,
	37, 1570,
	42, 1570,
	43, 1570,
	45, 1570,
	46, 1570,
	47, 1570,
	48, 1570,
	49, 1570,
	50, 1570,
	51, 1570,
	53, 1570,
	54, 1570,
	55, 1570,
	56, 1570,
	58, 1570,
	59, 1570,
	60, 1570,
	61, 1570,
	62, 1570,
	63, 1570,
	64, 1570,
	68, 1570,
	69, 1570,
	70, 1570,
	71, 1570,
	73, 1570,
	74, 1570,
	75, 1570,
	79, 1570,
	80, 1570,
	81, 1570,
	82, 1570,
	83, 1570,
	84, 1570,
	85, 1570,
	88, 1570,
	89, 1570,
	90, 1570,
	91, 1570,
	92, 1570,
	94, 1570,
	96, 1570,
	97, 1570,
	98, 1570,
	99, 1570,
	100, 1570,
	101, 1570,
	103, 1570,
	104, 1570,
	105, 1570,
	107, 1570,
	108, 1570,
	116, 1570,
	117, 1570,
	118, 1570,
	119, 1570,
	121, 1570,
	122, 1570,
	123, 1570,
	125, 1570,
	126, 1570,
	127, 1570,
	129, 1570,
	130, 1570,
	132, 1570,
	133, 1570,
	134, 1570,
	137, 1570,
	138, 1570,
	139, 1570,
	141, 1570,
	142, 1570,
	144, 1570,
	145, 1570,
	146, 1570,
	148, 1570,
	149, 1570,
	150, 1570,
	151, 1570,
	152, 1570,
	153, 1570,
	154, 1570,
	155, 1570,
	156, 1570,
	157, 1570,
	158, 1570,
	159, 1570,
	160, 1570,
	161, 1570,
	162, 1570,
	163, 1570,
	165, 1570,
	171, 1570,
	172, 1570,
	173, 1570,
	174, 1570,
	178, 1570,
	180, 1570,
	184, 1570,
	185, 1570,
	186, 1570,
	187, 1570,
	188, 1570,
	189, 1570,
	190, 1570,
	191, 1570,
	192, 1570,
	193, 1570,
	194, 1570,
	195, 1570,
	196, 1570,
	198, 1570,
	199, 1570,
	201, 1570,
	202, 1570,
	204, 1570,
	205, 1570,
	206, 1570,
	207, 1570,
	208, 1570,
	209, 1570,
	210, 1570,
	211, 1570,
	212, 1570,
	214, 1570,
	215, 1570,
	217, 1570,
	218, 1570,
	219, 1570,
	220, 1570,
	224, 1570,
	225, 1570,
	226, 1570,
	227, 1570,
	228, 1570,
	231, 1570,
	232, 1570,
	233, 1570,
	235, 1570,
	237, 1570,
	238, 1570,
	240, 1570,
	242, 1570,
	243, 1570,
	244, 1570,
	246, 1570,
	250, 1570,
	251, 1570,
	252, 1570,
	253, 1570,
	254, 1570,
	255, 1570,
	257, 1570,
	258, 1570,
	259, 1570,
	261, 1570,
	262, 1570,
	264, 1570,
	265, 1570,
	268, 1570,
	272, 1570,
	273, 1570,
	274, 1570,
	277, 1570,
	278, 1570,
	279, 1570,
	280, 1570,
	282, 1570,
	283, 1570,
	284, 1570,
	285, 1570,
	286, 1570,
	287, 1570,
	288, 1570,
	289, 1570,
	290, 1570,
	291, 1570,
	292, 1570,
	293, 1570,
	294, 1570,
	295, 1570,
	296, 1570,
	297, 1570,
	298, 1570,
	299, 1570,
	300, 1570,
	301, 1570,
	302, 1570,
	303, 1570,
	305, 1570,
	307, 1570,
	308, 1570,
	309, 1570,
	310, 1570,
	311, 1570,
	312, 1570,
	313, 1570,
	314, 1570,
	315, 1570,
	316, 1570,
	317, 1570,
	318, 1570,
	320, 1570,
	322, 1570,
	324, 1570,
	325, 1570,
	327, 1570,
	328, 1570,
	329, 1570,
	330, 1570,
	331, 1570,
	334, 1570,
	338, 1570,
	339, 1570,
	340, 1570,
	343, 1570,
	344, 1570,
	345, 1570,
	347, 1570,
	349, 1570,
	350, 1570,
	351, 1570,
	352, 1570,
	353, 1570,
	354, 1570,
	355, 1570,
	356, 1570,
	357, 1570,
	358, 1570,
	359, 1570,
	360, 1570,
	362, 1570,
	363, 1570,
	364, 1570,
	365, 1570,
	366, 1570,
	367, 1570,
	368, 1570,
	369, 1570,
	370, 1570,
	371, 1570,
	372, 1570,
	373, 1570,
	374, 1570,
	375, 1570,
	376, 1570,
	378, 1570,
	379, 1570,
	381, 1570,
	382, 1570,
	383, 1570,
	384, 1570,
	385, 1570,
	386, 1570,
	387, 1570,
	388, 1570,
	389, 1570,
	390, 1570,
	391, 1570,
	392, 1570,
	394, 1570,
	396, 1570,
	397, 1570,
	398, 1570,
	403, 1570,
	405, 1570,
	406, 1570,
	407, 1570,
	408, 1570,
	409, 1570,
	410, 1570,
	411, 1570,
	412, 1570,
	414, 1570,
	415, 1570,
	416, 1570,
	418, 1570,
	419, 1570,
	420, 1570,
	421, 1570,
	422, 1570,
	423, 1570,
	425, 1570,
	426, 1570,
	427, 1570,
	428, 1570,
	429, 1570,
	430, 1570,
	431, 1570,
	432, 1570,
	433, 1570,
	434, 1570,
	435, 1570,
	437, 1570,
	438, 1570,
	439, 1570,
	440, 1570,
	441, 1570,
	442, 1570,
	444, 1570,
	445, 1570,
	446, 1570,
	447, 1570,
	448, 1570,
	449, 1570,
	451, 1570,
	452, 1570,
	453, 1570,
	454, 1570,
	455, 1570,
	456, 1570,
	457, 1570,
	459, 1570,
	461, 1570,
	462, 1570,
	463, 1570,
	464, 1570,
	465, 1570,
	466, 1570,
	467, 1570,
	468, 1570,
	469, 1570,
	470, 1570,
	471, 1570,
	472, 1570,
	473, 1570,
	474, 1570,
	475, 1570,
	477, 1570,
	478, 1570,
	480, 1570,
	482, 1570,
	483, 1570,
	484, 1570,
	485, 1570,
	486, 1570,
	487, 1570,
	488, 1570,
	489, 1570,
	490, 1570,
	492, 1570,
	493, 1570,
	494, 1570,
	495, 1570,
	496, 1570,
	498, 1570,
	500, 1570,
	501, 1570,
	502, 1570,
	503, 1570,
	504, 1570,
	505, 1570,
	507, 1570,
	508, 1570,
	509, 1570,
	510, 1570,
	512, 1570,
	513, 1570,
	516, 1570,
	517, 1570,
	518, 1570,
	519, 1570,
	520, 1570,
	521, 1570,
	522, 1570,
	524, 1570,
	527, 1570,
	528, 1570,
	529, 1570,
	530, 1570,
	531, 1570,
	532, 1570,
	534, 1570,
	535, 1570,
	536, 1570,
	537, 1570,
	542, 1570,
	543, 1570,
	544, 1570,
	545, 1570,
	546, 1570,
	547, 1570,
	-2, 0,
	-1, 846,
	254, 369,
	-2, 0,
	-1, 916,
	383, 808,
	442, 808,
	502, 808,
	-2, 0,
	-1, 917,
	383, 807,
	442, 807,
	502, 807,
	-2, 747,
	-1, 921,
	1, 852,
	571, 852,
	573, 852,
	575, 852,
	-2, 0,
	-1, 922,
	1, 782,
	571, 782,
	573, 782,
	575, 782,
	-2, 0,
	-1, 923,
	1, 786,
	571, 786,
	573, 786,
	575, 786,
	-2, 0,
	-1, 924,
	1, 903,
	179, 903,
	571, 903,
	573, 903,
	575, 903,
	-2, 0,
	-1, 932,
	1, 811,
	571, 811,
	573, 811,
	575, 811,
	-2, 0,
	-1, 938,
	1, 852,
	571, 852,
	573, 852,
	575, 852,
	-2, 0,
	-1, 939,
	1, 854,
	571, 854,
	573, 854,
	575, 854,
	-2, 0,
	-1, 940,
	1, 857,
	571, 857,
	573, 857,
	575, 857,
	-2, 0,
	-1, 946,
	1, 874,
	571, 874,
	573, 874,
	575, 874,
	-2, 0,
	-1, 947,
	1, 876,
	571, 876,
	573, 876,
	575, 876,
	-2, 0,
	-1, 998,
	166, 1445,
	179, 1445,
	267, 1445,
	332, 1445,
	-2, 1381,
	-1, 1013,
	166, 1444,
	179, 1444,
	267, 1444,
	332, 1444,
	-2, 1378,
	-1, 1039,
	574, 2133,
	-2, 651,
	-1, 1067,
	5, 2125,
	572, 2123,
	-2, 2114,
	-1, 1075,
	5, 2146,
	572, 2143,
	-2, 2134,
	-1, 1076,
	5, 2147,
	572, 2144,
	-2, 2135,
	-1, 1084,
	574, 2131,
	-2, 2113,
	-1, 1085,
	572, 2548,
	-2, 2132,
	-1, 1108,
	572, 2547,
	-2, 2148,
	-1, 1109,
	5, 1645,
	-2, 2518,
	-1, 1110,
	5, 1646,
	-2, 2519,
	-1, 1111,
	5, 1647,
	-2, 2533,
	-1, 1112,
	5, 1648,
	-2, 2497,
	-1, 1113,
	5, 1649,
	-2, 2531,
	-1, 1114,
	5, 1657,
	-2, 2510,
	-1, 1115,
	5, 1644,
	-2, 2506,
	-1, 1116,
	5, 1644,
	-2, 2505,
	-1, 1117,
	5, 1644,
	-2, 2524,
	-1, 1118,
	5, 1655,
	-2, 2499,
	-1, 1119,
	5, 1660,
	-2, 2498,
	-1, 1120,
	5, 1662,
	-2, 2543,
	-1, 1123,
	5, 1684,
	-2, 2536,
	-1, 1124,
	5, 1676,
	-2, 2537,
	-1, 1125,
	5, 1684,
	-2, 2538,
	-1, 1126,
	5, 1680,
	-2, 2539,
	-1, 1127,
	5, 1630,
	-2, 2511,
	-1, 1128,
	5, 1631,
	-2, 2512,
	-1, 1129,
	5, 1632,
	-2, 2500,
	-1, 1157,
	5, 1667,
	-2, 2544,
	-1, 1158,
	5, 1668,
	-2, 2534,
	-1, 1159,
	5, 1669,
	535, 1669,
	-2, 2501,
	-1, 1160,
	5, 1670,
	535, 1670,
	-2, 2502,
	-1, 1197,
	572, 2143,
	-2, 2134,
	-1, 1198,
	572, 2144,
	-2, 2135,
	-1, 1297,
	182, 2466,
	497, 2466,
	555, 2466,
	574, 2466,
	-2, 0,
	-1, 1300,
	1, 629,
	575, 629,
	-2, 1298,
	-1, 1427,
	405, 2109,
	444, 2109,
	565, 2109,
	-2, 2099,
	-1, 1438,
	576, 2109,
	-2, 2110,
	-1, 1443,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1430,
	-1, 1491,
	390, 973,
	534, 973,
	-2, 364,
	-1, 1507,
	44, 2107,
	-2, 939,
	-1, 1514,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1430,
	-1, 1521,
	4, 1191,
	21, 1191,
	22, 1191,
	23, 1191,
	24, 1191,
	25, 1191,
	26, 1191,
	27, 1191,
	28, 1191,
	30, 1191,
	31, 1191,
	37, 1191,
	42, 1191,
	43, 1191,
	45, 1191,
	46, 1191,
	47, 1191,
	48, 1191,
	49, 1191,
	50, 1191,
	51, 1191,
	53, 1191,
	54, 1191,
	55, 1191,
	56, 1191,
	58, 1191,
	59, 1191,
	60, 1191,
	61, 1191,
	62, 1191,
	63, 1191,
	64, 1191,
	68, 1191,
	69, 1191,
	70, 1191,
	71, 1191,
	73, 1191,
	74, 1191,
	75, 1191,
	79, 1191,
	80, 1191,
	81, 1191,
	82, 1191,
	83, 1191,
	84, 1191,
	85, 1191,
	88, 1191,
	89, 1191,
	90, 1191,
	91, 1191,
	92, 1191,
	94, 1191,
	96, 1191,
	97, 1191,
	98, 1191,
	99, 1191,
	100, 1191,
	101, 1191,
	103, 1191,
	104, 1191,
	105, 1191,
	107, 1191,
	108, 1191,
	116, 1191,
	117, 1191,
	118, 1191,
	119, 1191,
	121, 1191,
	122, 1191,
	123, 1191,
	125, 1191,
	126, 1191,
	127, 1191,
	129, 1191,
	130, 1191,
	132, 1191,
	133, 1191,
	134, 1191,
	137, 1191,
	138, 1191,
	139, 1191,
	141, 1191,
	142, 1191,
	144, 1191,
	145, 1191,
	146, 1191,
	148, 1191,
	149, 1191,
	150, 1191,
	151, 1191,
	152, 1191,
	153, 1191,
	154, 1191,
	155, 1191,
	156, 1191,
	157, 1191,
	158, 1191,
	159, 1191,
	160, 1191,
	161, 1191,
	162, 1191,
	163, 1191,
	171, 1191,
	172, 1191,
	173, 1191,
	174, 1191,
	178, 1191,
	180, 1191,
	184, 1191,
	185, 1191,
	186, 1191,
	187, 1191,
	188, 1191,
	189, 1191,
	190, 1191,
	191, 1191,
	192, 1191,
	193, 1191,
	194, 1191,
	195, 1191,
	196, 1191,
	198, 1191,
	199, 1191,
	201, 1191,
	202, 1191,
	204, 1191,
	205, 1191,
	206, 1191,
	207, 1191,
	208, 1191,
	209, 1191,
	210, 1191,
	211, 1191,
	212, 1191,
	214, 1191,
	215, 1191,
	217, 1191,
	218, 1191,
	219, 1191,
	220, 1191,
	225, 1191,
	226, 1191,
	227, 1191,
	228, 1191,
	231, 1191,
	232, 1191,
	233, 1191,
	235, 1191,
	237, 1191,
	238, 1191,
	240, 1191,
	242, 1191,
	243, 1191,
	244, 1191,
	246, 1191,
	250, 1191,
	251, 1191,
	252, 1191,
	253, 1191,
	254, 1191,
	255, 1191,
	257, 1191,
	258, 1191,
	259, 1191,
	261, 1191,
	262, 1191,
	264, 1191,
	265, 1191,
	268, 1191,
	272, 1191,
	273, 1191,
	274, 1191,
	277, 1191,
	278, 1191,
	279, 1191,
	280, 1191,
	282, 1191,
	283, 1191,
	284, 1191,
	285, 1191,
	286, 1191,
	287, 1191,
	288, 1191,
	289, 1191,
	290, 1191,
	291, 1191,
	292, 1191,
	293, 1191,
	294, 1191,
	295, 1191,
	296, 1191,
	297, 1191,
	298, 1191,
	299, 1191,
	300, 1191,
	301, 1191,
	302, 1191,
	303, 1191,
	305, 1191,
	307, 1191,
	308, 1191,
	309, 1191,
	310, 1191,
	311, 1191,
	312, 1191,
	313, 1191,
	314, 1191,
	315, 1191,
	316, 1191,
	317, 1191,
	318, 1191,
	320, 1191,
	324, 1191,
	325, 1191,
	327, 1191,
	328, 1191,
	329, 1191,
	330, 1191,
	331, 1191,
	334, 1191,
	336, 1191,
	338, 1191,
	339, 1191,
	340, 1191,
	343, 1191,
	344, 1191,
	345, 1191,
	347, 1191,
	349, 1191,
	350, 1191,
	351, 1191,
	352, 1191,
	353, 1191,
	354, 1191,
	355, 1191,
	356, 1191,
	357, 1191,
	358, 1191,
	359, 1191,
	360, 1191,
	362, 1191,
	363, 1191,
	364, 1191,
	365, 1191,
	366, 1191,
	367, 1191,
	368, 1191,
	369, 1191,
	370, 1191,
	371, 1191,
	372, 1191,
	373, 1191,
	374, 1191,
	375, 1191,
	376, 1191,
	378, 1191,
	379, 1191,
	381, 1191,
	382, 1191,
	383, 1191,
	384, 1191,
	385, 1191,
	386, 1191,
	387, 1191,
	388, 1191,
	389, 1191,
	390, 1191,
	391, 1191,
	392, 1191,
	394, 1191,
	396, 1191,
	397, 1191,
	398, 1191,
	403, 1191,
	405, 1191,
	406, 1191,
	407, 1191,
	408, 1191,
	409, 1191,
	410, 1191,
	411, 1191,
	412, 1191,
	414, 1191,
	415, 1191,
	416, 1191,
	418, 1191,
	419, 1191,
	420, 1191,
	421, 1191,
	422, 1191,
	423, 1191,
	425, 1191,
	426, 1191,
	427, 1191,
	428, 1191,
	429, 1191,
	430, 1191,
	431, 1191,
	432, 1191,
	433, 1191,
	434, 1191,
	435, 1191,
	437, 1191,
	438, 1191,
	439, 1191,
	440, 1191,
	441, 1191,
	442, 1191,
	444, 1191,
	445, 1191,
	446, 1191,
	447, 1191,
	448, 1191,
	449, 1191,
	451, 1191,
	452, 1191,
	453, 1191,
	454, 1191,
	455, 1191,
	456, 1191,
	457, 1191,
	459, 1191,
	461, 1191,
	462, 1191,
	463, 1191,
	464, 1191,
	465, 1191,
	466, 1191,
	467, 1191,
	468, 1191,
	469, 1191,
	470, 1191,
	471, 1191,
	472, 1191,
	473, 1191,
	474, 1191,
	475, 1191,
	477, 1191,
	478, 1191,
	480, 1191,
	482, 1191,
	483, 1191,
	484, 1191,
	485, 1191,
	486, 1191,
	487, 1191,
	488, 1191,
	489, 1191,
	490, 1191,
	492, 1191,
	493, 1191,
	494, 1191,
	495, 1191,
	496, 1191,
	498, 1191,
	500, 1191,
	501, 1191,
	502, 1191,
	503, 1191,
	504, 1191,
	505, 1191,
	507, 1191,
	508, 1191,
	509, 1191,
	510, 1191,
	512, 1191,
	513, 1191,
	516, 1191,
	517, 1191,
	518, 1191,
	519, 1191,
	520, 1191,
	521, 1191,
	522, 1191,
	524, 1191,
	527, 1191,
	528, 1191,
	529, 1191,
	530, 1191,
	531, 1191,
	532, 1191,
	534, 1191,
	535, 1191,
	536, 1191,
	537, 1191,
	542, 1191,
	543, 1191,
	544, 1191,
	545, 1191,
	546, 1191,
	547, 1191,
	-2, 0,
	-1, 1544,
	1, 502,
	571, 502,
	573, 502,
	575, 502,
	-2, 1401,
	-1, 1547,
	4, 2542,
	11, 2542,
	12, 2542,
	14, 2542,
	15, 2542,
	16, 2542,
	17, 2542,
	18, 2542,
	19, 2542,
	21, 2542,
	22, 2542,
	23, 2542,
	24, 2542,
	25, 2542,
	26, 2542,
	27, 2542,
	28, 2542,
	30, 2542,
	31, 2542,
	34, 2542,
	35, 2542,
	37, 2542,
	39, 2542,
	42, 2542,
	43, 2542,
	45, 2542,
	46, 2542,
	47, 2542,
	48, 2542,
	49, 2542,
	50, 2542,
	51, 2542,
	53, 2542,
	54, 2542,
	55, 2542,
	56, 2542,
	58, 2542,
	59, 2542,
	60, 2542,
	61, 2542,
	62, 2542,
	63, 2542,
	64, 2542,
	68, 2542,
	69, 2542,
	70, 2542,
	71, 2542,
	73, 2542,
	74, 2542,
	75, 2542,
	76, 2542,
	79, 2542,
	80, 2542,
	81, 2542,
	82, 2542,
	83, 2542,
	84, 2542,
	85, 2542,
	86, 2542,
	88, 2542,
	89, 2542,
	90, 2542,
	91, 2542,
	92, 2542,
	94, 2542,
	95, 2542,
	96, 2542,
	97, 2542,
	98, 2542,
	99, 2542,
	100, 2542,
	101, 2542,
	103, 2542,
	104, 2542,
	105, 2542,
	106, 2542,
	107, 2542,
	108, 2542,
	116, 2542,
	117, 2542,
	118, 2542,
	119, 2542,
	121, 2542,
	122, 2542,
	123, 2542,
	125, 2542,
	126, 2542,
	127, 2542,
	129, 2542,
	130, 2542,
	132, 2542,
	133, 2542,
	134, 2542,
	137, 2542,
	138, 2542,
	139, 2542,
	141, 2542,
	142, 2542,
	144, 2542,
	145, 2542,
	146, 2542,
	148, 2542,
	149, 2542,
	150, 2542,
	151, 2542,
	152, 2542,
	153, 2542,
	154, 2542,
	155, 2542,
	156, 2542,
	157, 2542,
	158, 2542,
	159, 2542,
	160, 2542,
	161, 2542,
	162, 2542,
	163, 2542,
	167, 2542,
	168, 2542,
	169, 2542,
	170, 2542,
	171, 2542,
	172, 2542,
	173, 2542,
	174, 2542,
	177, 2542,
	178, 2542,
	180, 2542,
	183, 2542,
	184, 2542,
	185, 2542,
	186, 2542,
	187, 2542,
	188, 2542,
	189, 2542,
	190, 2542,
	191, 2542,
	192, 2542,
	193, 2542,
	194, 2542,
	195, 2542,
	196, 2542,
	198, 2542,
	199, 2542,
	201, 2542,
	202, 2542,
	204, 2542,
	205, 2542,
	206, 2542,
	207, 2542,
	208, 2542,
	209, 2542,
	210, 2542,
	211, 2542,
	212, 2542,
	213, 2542,
	214, 2542,
	215, 2542,
	216, 2542,
	217, 2542,
	218, 2542,
	219, 2542,
	220, 2542,
	222, 2542,
	223, 2542,
	225, 2542,
	226, 2542,
	227, 2542,
	228, 2542,
	230, 2542,
	231, 2542,
	232, 2542,
	233, 2542,
	235, 2542,
	237, 2542,
	238, 2542,
	239, 2542,
	240, 2542,
	241, 2542,
	242, 2542,
	243, 2542,
	244, 2542,
	245, 2542,
	246, 2542,
	248, 2542,
	249, 2542,
	250, 2542,
	251, 2542,
	252, 2542,
	253, 2542,
	254, 2542,
	255, 2542,
	257, 2542,
	258, 2542,
	259, 2542,
	261, 2542,
	262, 2542,
	263, 2542,
	264, 2542,
	265, 2542,
	266, 2542,
	268, 2542,
	272, 2542,
	273, 2542,
	274, 2542,
	277, 2542,
	278, 2542,
	279, 2542,
	280, 2542,
	281, 2542,
	282, 2542,
	283, 2542,
	284, 2542,
	285, 2542,
	286, 2542,
	287, 2542,
	288, 2542,
	289, 2542,
	290, 2542,
	291, 2542,
	292, 2542,
	293, 2542,
	294, 2542,
	295, 2542,
	296, 2542,
	297, 2542,
	298, 2542,
	299, 2542,
	300, 2542,
	301, 2542,
	302, 2542,
	303, 2542,
	305, 2542,
	306, 2542,
	307, 2542,
	308, 2542,
	309, 2542,
	310, 2542,
	311, 2542,
	312, 2542,
	313, 2542,
	314, 2542,
	315, 2542,
	316, 2542,
	317, 2542,
	318, 2542,
	320, 2542,
	323, 2542,
	324, 2542,
	325, 2542,
	327, 2542,
	328, 2542,
	329, 2542,
	330, 2542,
	331, 2542,
	334, 2542,
	338, 2542,
	339, 2542,
	340, 2542,
	341, 2542,
	343, 2542,
	344, 2542,
	345, 2542,
	347, 2542,
	349, 2542,
	350, 2542,
	351, 2542,
	352, 2542,
	353, 2542,
	354, 2542,
	355, 2542,
	356, 2542,
	357, 2542,
	358, 2542,
	359, 2542,
	360, 2542,
	362, 2542,
	363, 2542,
	364, 2542,
	365, 2542,
	366, 2542,
	367, 2542,
	368, 2542,
	369, 2542,
	370, 2542,
	371, 2542,
	372, 2542,
	373, 2542,
	374, 2542,
	375, 2542,
	376, 2542,
	378, 2542,
	379, 2542,
	381, 2542,
	382, 2542,
	383, 2542,
	384, 2542,
	385, 2542,
	386, 2542,
	387, 2542,
	388, 2542,
	389, 2542,
	390, 2542,
	391, 2542,
	392, 2542,
	394, 2542,
	396, 2542,
	397, 2542,
	398, 2542,
	403, 2542,
	404, 2542,
	405, 2542,
	406, 2542,
	407, 2542,
	408, 2542,
	409, 2542,
	410, 2542,
	411, 2542,
	412, 2542,
	414, 2542,
	415, 2542,
	416, 2542,
	417, 2542,
	418, 2542,
	419, 2542,
	420, 2542,
	421, 2542,
	422, 2542,
	423, 2542,
	424, 2542,
	425, 2542,
	426, 2542,
	427, 2542,
	428, 2542,
	429, 2542,
	430, 2542,
	431, 2542,
	432, 2542,
	433, 2542,
	434, 2542,
	435, 2542,
	437, 2542,
	438, 2542,
	439, 2542,
	440, 2542,
	441, 2542,
	442, 2542,
	444, 2542,
	445, 2542,
	446, 2542,
	447, 2542,
	448, 2542,
	449, 2542,
	450, 2542,
	451, 2542,
	452, 2542,
	453, 2542,
	454, 2542,
	455, 2542,
	456, 2542,
	457, 2542,
	459, 2542,
	461, 2542,
	462, 2542,
	463, 2542,
	464, 2542,
	465, 2542,
	466, 2542,
	467, 2542,
	468, 2542,
	469, 2542,
	470, 2542,
	471, 2542,
	472, 2542,
	473, 2542,
	474, 2542,
	475, 2542,
	477, 2542,
	478, 2542,
	480, 2542,
	482, 2542,
	483, 2542,
	484, 2542,
	485, 2542,
	486, 2542,
	487, 2542,
	488, 2542,
	489, 2542,
	490, 2542,
	492, 2542,
	493, 2542,
	494, 2542,
	495, 2542,
	496, 2542,
	498, 2542,
	500, 2542,
	501, 2542,
	502, 2542,
	503, 2542,
	504, 2542,
	505, 2542,
	507, 2542,
	508, 2542,
	509, 2542,
	510, 2542,
	512, 2542,
	513, 2542,
	516, 2542,
	517, 2542,
	518, 2542,
	519, 2542,
	520, 2542,
	521, 2542,
	522, 2542,
	524, 2542,
	527, 2542,
	528, 2542,
	529, 2542,
	530, 2542,
	531, 2542,
	532, 2542,
	534, 2542,
	535, 2542,
	536, 2542,
	537, 2542,
	542, 2542,
	543, 2542,
	544, 2542,
	545, 2542,
	546, 2542,
	547, 2542,
	548, 2542,
	550, 2542,
	553, 2542,
	554, 2542,
	555, 2542,
	556, 2542,
	557, 2542,
	558, 2542,
	560, 2542,
	561, 2542,
	562, 2542,
	563, 2542,
	564, 2542,
	565, 2542,
	566, 2542,
	567, 2542,
	568, 2542,
	570, 2542,
	573, 2542,
	574, 2542,
	576, 2542,
	577, 2542,
	-2, 0,
	-1, 1552,
	182, 2428,
	497, 2428,
	555, 2428,
	574, 2428,
	-2, 0,
	-1, 1601,
	383, 808,
	442, 808,
	502, 808,
	-2, 0,
	-1, 1628,
	1, 803,
	571, 803,
	573, 803,
	575, 803,
	-2, 0,
	-1, 1629,
	1, 839,
	571, 839,
	573, 839,
	575, 839,
	-2, 0,
	-1, 1630,
	1, 847,
	571, 847,
	573, 847,
	575, 847,
	-2, 0,
	-1, 1631,
	1, 810,
	571, 810,
	573, 810,
	575, 810,
	-2, 0,
	-1, 1633,
	1, 814,
	571, 814,
	573, 814,
	575, 814,
	-2, 0,
	-1, 1639,
	1, 821,
	571, 821,
	573, 821,
	575, 821,
	-2, 0,
	-1, 1667,
	1, 2488,
	571, 2488,
	573, 2488,
	574, 2488,
	575, 2488,
	-2, 872,
	-1, 1668,
	1, 2425,
	571, 2425,
	573, 2425,
	574, 2425,
	575, 2425,
	-2, 873,
	-1, 1686,
	1, 1293,
	575, 1293,
	-2, 1298,
	-1, 1689,
	166, 1444,
	179, 1444,
	267, 1444,
	332, 1444,
	-2, 1382,
	-1, 1783,
	147, 1403,
	166, 1403,
	179, 1403,
	234, 1403,
	267, 1403,
	332, 1403,
	342, 1403,
	514, 1403,
	-2, 1845,
	-1, 1843,
	573, 1995,
	-2, 0,
	-1, 1878,
	147, 1403,
	166, 1403,
	179, 1403,
	234, 1403,
	267, 1403,
	332, 1403,
	342, 1403,
	514, 1403,
	-2, 1531,
	-1, 1927,
	572, 1672,
	-2, 1660,
	-1, 2005,
	1, 631,
	575, 631,
	-2, 1298,
	-1, 2125,
	216, 236,
	-2, 2142,
	-1, 2126,
	216, 237,
	-2, 280,
	-1, 2227,
	1, 805,
	571, 805,
	573, 805,
	575, 805,
	-2, 0,
	-1, 2228,
	1, 841,
	571, 841,
	573, 841,
	575, 841,
	-2, 0,
	-1, 2229,
	1, 849,
	571, 849,
	573, 849,
	575, 849,
	-2, 0,
	-1, 2263,
	1, 823,
	571, 823,
	573, 823,
	575, 823,
	-2, 0,
	-1, 2313,
	422, 1471,
	423, 1471,
	-2, 1705,
	-1, 2344,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1725,
	-1, 2345,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1726,
	-1, 2346,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1727,
	-1, 2347,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1728,
	-1, 2348,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1729,
	-1, 2349,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1730,
	-1, 2350,
	95, 0,
	248, 0,
	249, 0,
	557, 0,
	558, 0,
	-2, 1731,
	-1, 2351,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1732,
	-1, 2363,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1744,
	-1, 2364,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1745,
	-1, 2365,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1746,
	-1, 2368,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1751,
	-1, 2374,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1755,
	-1, 2376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1763,
	-1, 2377,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1764,
	-1, 2378,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1765,
	-1, 2379,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1766,
	-1, 2515,
	5, 2146,
	182, 2006,
	572, 2143,
	-2, 2134,
	-1, 2516,
	182, 2007,
	-2, 2493,
	-1, 2517,
	182, 2008,
	-2, 2325,
	-1, 2518,
	182, 2009,
	-2, 2214,
	-1, 2519,
	182, 2010,
	-2, 2266,
	-1, 2520,
	182, 2011,
	-2, 2310,
	-1, 2521,
	182, 2012,
	-2, 2423,
	-1, 2522,
	182, 2013,
	-2, 1828,
	-1, 2592,
	1, 1532,
	2, 1532,
	106, 1532,
	147, 1532,
	166, 1532,
	179, 1532,
	183, 1532,
	200, 1532,
	203, 1532,
	230, 1532,
	234, 1532,
	245, 1532,
	263, 1532,
	267, 1532,
	306, 1532,
	332, 1532,
	336, 1532,
	342, 1532,
	413, 1532,
	417, 1532,
	514, 1532,
	525, 1532,
	539, 1532,
	540, 1532,
	541, 1532,
	551, 1532,
	571, 1532,
	573, 1532,
	575, 1532,
	577, 1532,
	-2, 1531,
	-1, 2605,
	572, 2115,
	-2, 2129,
	-1, 2607,
	53, 1430,
	132, 1430,
	-2, 296,
	-1, 2632,
	572, 1671,
	-2, 1661,
	-1, 2804,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1430,
	-1, 2968,
	337, 1474,
	-2, 2532,
	-1, 2969,
	337, 1475,
	-2, 2409,
	-1, 2973,
	422, 2072,
	423, 2072,
	-2, 1826,
	-1, 2974,
	422, 2076,
	423, 2076,
	-2, 1827,
	-1, 2975,
	422, 2073,
	423, 2073,
	-2, 1826,
	-1, 2976,
	422, 2077,
	423, 2077,
	-2, 1827,
	-1, 2989,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1753,
	-1, 2990,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1757,
	-1, 2996,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1759,
	-1, 3236,
	1, 628,
	571, 628,
	573, 628,
	575, 628,
	-2, 1298,
	-1, 3378,
	44, 2107,
	-2, 940,
	-1, 3383,
	1, 1167,
	571, 1167,
	573, 1167,
	575, 1167,
	-2, 1430,
	-1, 3486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1761,
	-1, 3493,
	239, 0,
	241, 0,
	323, 0,
	-2, 1780,
	-1, 3560,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1809,
	-1, 3561,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1810,
	-1, 3562,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1811,
	-1, 3566,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1815,
	-1, 3567,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1816,
	-1, 3568,
	14, 0,
	15, 0,
	16, 0,
	553, 0,
	554, 0,
	555, 0,
	-2, 1817,
	-1, 3614,
	572, 2116,
	-2, 2130,
	-1, 3767,
	574, 2649,
	-2, 1356,
	-1, 3824,
	239, 0,
	241, 0,
	323, 0,
	-2, 1781,
	-1, 3827,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1784,
	-1, 3828,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1786,
	-1, 3923,
	574, 2131,
	-2, 1201,
	-1, 4052,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1785,
	-1, 4053,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 1787,
	-1, 4064,
	239, 0,
	-2, 1818,
	-1, 4226,
	239, 0,
	-2, 1819,
	-1, 4404,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	548, 0,
	556, 0,
	-2, 2496,
}

const sqlPrivate = 57344

const sqlLast = 119629

var sqlAct = [...]int{
	260, 4499, 4262, 3368, 2879, 3147, 4106, 4280, 2696, 2866,
	4284, 4456, 4385, 4403, 4152, 4254, 4414, 4525, 4301, 4374,
	2122, 3367, 4338, 4415, 4358, 3807, 4416, 4468, 1455, 4355,
	3919, 2737, 4093, 4179, 4159, 2195, 3525, 1201, 4230, 4402,
	2755, 4009, 4004, 4111, 3976, 3478, 4073, 4041, 2323, 4168,
	3958, 3261, 1273, 3759, 1023, 1262, 3399, 3990, 3701, 3920,
	3904, 4193, 2391, 1190, 1914, 3719, 1698, 2982, 3313, 4014,
	2767, 3393, 3721, 3735, 774, 2547, 3363, 3264, 2060, 2204,
	3438, 2324, 2888, 3353, 1333, 1974, 1987, 1884, 3440, 2855,
	1255, 741, 2827, 2331, 2901, 4069, 1568, 2890, 774, 2837,
	1424, 4, 3190, 3170, 3617, 3162, 3863, 3130, 3806, 2898,
	1609, 2867, 2887, 2585, 2169, 3151, 2117, 1014, 2850, 2852,
	2070, 2698, 3129, 2116, 1853, 4500, 1275, 1829, 2881, 3585,
	1791, 4231, 2328, 2404, 1431, 3258, 2966, 848, 1267, 2433,
	1962, 1566, 254, 769, 3153, 1509, 2897, 2111, 2781, 2095,
	4281, 1071, 2102, 2838, 1316, 2565, 2736, 105, 2041, 2435,
	1035, 1022, 172, 1686, 1985, 2044, 2584, 2424, 1181, 1854,
	2295, 2031, 2388, 2312, 2293, 2617, 253, 3197, 3365, 2860,
	1264, 1545, 3247, 1512, 1252, 1076, 2157, 2544, 1241, 775,
	1302, 776, 841, 2681, 2616, 1184, 2891, 1269, 672, 2427,
	2574, 1824, 2555, 1163, 1863, 2511, 2477, 2405, 1776, 1699,
	2294, 1873, 2296, 1700, 771, 1870, 780, 723, 1639, 2156,
	181, 735, 1536, 1543, 698, 1450, 182, 1198, 2059, 2587,
	1180, 4457, 4302, 2317, 1052, 2181, 1963, 1960, 1915, 675,
	780, 44, 43, 41, 32, 1161, 1705, 30, 28, 910,
	783, 3017, 172, 683, 1186, 1685, 1461, 930, 3102, 3103,
	3599, 3013, 3600, 2202, 4596, 1976, 3149, 1311, 2564, 4586,
	822, 1976, 1976, 3418, 783, 1976, 4572, 1311, 4571, 658,
	2564, 72, 2564, 680, 1976, 3409, 3220, 4561, 4543, 1067,
	1976, 2131, 4110, 2203, 4541, 1018, 3219, 73, 4110, 1074,
	842, 4487, 1078, 3589, 3408, 2131, 4445, 1632, 1018, 3205,
	4446, 4438, 863, 77, 4436, 2564, 4433, 4430, 2564, 4400,
	4434, 4431, 4399, 2131, 2763, 4398, 2131, 2557, 72, 1997,
	845, 844, 4393, 3117, 4392, 4383, 1997, 3418, 1997, 4110,
	1219, 1019, 2131, 4381, 73, 4353, 1454, 4110, 4326, 4110,
	4319, 4318, 2623, 84, 2564, 2564, 2642, 4313, 4312, 4306,
	77, 4110, 4110, 2131, 4276, 4228, 4210, 1073, 3968, 2623,
	3794, 1178, 4207, 4204, 4161, 4126, 2131, 4110, 4162, 2131,
	4125, 4117, 4116, 1575, 2131, 2131, 4110, 3102, 3103, 1994,
	846, 4109, 4080, 999, 4054, 4110, 2131, 4033, 2623, 998,
	84, 1997, 4022, 3953, 104, 2981, 3418, 2564, 3941, 90,
	101, 3826, 2564, 3775, 3769, 2623, 3733, 3435, 3435, 3609,
	3734, 3607, 3592, 3610, 3108, 3608, 2564, 3509, 3505, 3434,
	1008, 2131, 2564, 3435, 1013, 3026, 2641, 846, 2619, 1713,
	1714, 3027, 1746, 1747, 1748, 1756, 1757, 1758, 1164, 1164,
	3425, 104, 2564, 4327, 3426, 3146, 90, 101, 1212, 2564,
	3141, 4232, 1749, 1744, 2564, 1165, 91, 1713, 1714, 3140,
	1716, 3093, 3067, 2564, 2131, 3094, 3068, 3059, 1762, 3057,
	4223, 3060, 3028, 2564, 1463, 2905, 2564, 4211, 2877, 1997,
	2876, 1744, 2191, 2665, 2191, 1997, 90, 2564, 1716, 224,
	3589, 2556, 3102, 3103, 1715, 3120, 3121, 3122, 2622, 4003,
	3968, 2614, 2623, 91, 1735, 2564, 1196, 1167, 2608, 1168,
	3102, 3103, 2131, 1732, 3942, 3822, 1193, 2563, 3118, 2190,
	2564, 2564, 1715, 2191, 3794, 3426, 3102, 3103, 1213, 3120,
	3121, 3122, 1735, 3016, 226, 2758, 2680, 2010, 1975, 1991,
	2064, 1732, 1994, 3108, 2833, 1713, 1714, 2130, 2775, 2678,
	1463, 224, 1849, 1449, 3689, 3481, 3457, 1871, 2105, 3410,
	1611, 2601, 2600, 2599, 2598, 2597, 1169, 3117, 1166, 1744,
	1007, 1006, 1005, 1004, 1713, 1714, 1716, 2430, 3411, 2621,
	1003, 1002, 1001, 225, 1192, 1738, 1739, 1740, 1741, 3102,
	3103, 997, 3820, 2943, 218, 1721, 226, 2722, 1744, 94,
	996, 3117, 1977, 219, 1050, 1716, 1121, 995, 1977, 1977,
	1715, 994, 1977, 1738, 1739, 1740, 1741, 993, 992, 991,
	1735, 1977, 990, 1721, 989, 183, 1069, 1977, 3879, 224,
	988, 1753, 987, 986, 1763, 985, 984, 983, 982, 1715,
	1743, 1745, 981, 908, 907, 225, 94, 3118, 906, 905,
	180, 97, 904, 100, 903, 902, 218, 1759, 3108, 1760,
	901, 3119, 900, 2431, 899, 219, 1730, 1731, 1743, 1745,
	3408, 1213, 898, 897, 226, 896, 3108, 224, 895, 1454,
	894, 1994, 893, 892, 1751, 847, 891, 183, 890, 889,
	145, 888, 3108, 887, 1730, 1731, 886, 180, 97, 1736,
	100, 1738, 1739, 1740, 1741, 885, 1278, 1076, 1713, 1714,
	3838, 1721, 2556, 884, 883, 882, 881, 880, 879, 878,
	3123, 877, 226, 225, 224, 1213, 876, 1736, 866, 865,
	1076, 224, 847, 861, 1076, 860, 854, 145, 853, 1716,
	1721, 1761, 840, 839, 2432, 797, 2429, 796, 147, 1561,
	1336, 795, 794, 786, 1336, 3108, 1743, 1745, 1278, 1750,
	785, 784, 3118, 184, 224, 183, 2460, 756, 2652, 226,
	747, 225, 224, 1715, 1975, 1994, 226, 145, 1991, 1076,
	3118, 1076, 218, 1076, 1315, 1743, 1745, 2641, 1320, 1278,
	3119, 219, 746, 2288, 745, 147, 3118, 3113, 3111, 3112,
	3104, 3105, 3106, 3107, 3109, 3110, 1306, 224, 729, 226,
	184, 1439, 3627, 183, 1278, 1736, 4016, 226, 225, 248,
	247, 246, 1742, 245, 1475, 225, 244, 243, 242, 218,
	241, 1194, 240, 1634, 1278, 239, 218, 238, 219, 1278,
	237, 1434, 1737, 1429, 1736, 219, 236, 1076, 235, 1076,
	1742, 234, 226, 1278, 233, 232, 1453, 231, 225, 1076,
	843, 1076, 230, 3603, 1469, 229, 225, 183, 1754, 218,
	1737, 1518, 1520, 2863, 1721, 228, 227, 218, 219, 1259,
	3436, 3193, 3039, 3022, 2926, 2814, 219, 1832, 1246, 1249,
	1300, 2434, 2627, 2606, 1831, 1441, 2846, 3144, 2591, 1874,
	183, 225, 4421, 2446, 2039, 3119, 1278, 1462, 183, 1523,
	780, 1832, 218, 1996, 1579, 1897, 1835, 1329, 1831, 1421,
	1426, 219, 1712, 3119, 1076, 2444, 1463, 1076, 3112, 3104,
	3105, 3106, 3107, 3109, 3110, 3145, 1548, 1550, 1742, 3119,
	1830, 1802, 4401, 183, 783, 4291, 1295, 2198, 1457, 1322,
	1507, 1200, 3102, 3103, 4220, 1793, 4214, 1452, 1737, 1451,
	1546, 4068, 4023, 4104, 4235, 4002, 1752, 3102, 3103, 4212,
	3886, 1727, 1728, 1734, 1755, 1733, 1729, 3861, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 1737, 3860, 3854,
	3853, 1019, 3852, 3102, 3103, 3846, 172, 172, 3845, 3844,
	1580, 3842, 2428, 1733, 1729, 3837, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 3834, 4018, 3833, 1565, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 3687, 2197, 2636, 3738,
	3732, 1474, 3631, 3630, 3114, 3115, 3116, 1306, 3629, 1648,
	1306, 3113, 3111, 3112, 3104, 3105, 3106, 3107, 3109, 3110,
	1076, 3613, 1286, 1021, 1800, 3580, 1076, 1713, 1714, 1539,
	3111, 3112, 3104, 3105, 3106, 3107, 3109, 3110, 3114, 3115,
	3116, 1468, 2138, 3579, 3578, 3113, 3111, 3112, 3104, 3105,
	3106, 3107, 3109, 3110, 1463, 3501, 3497, 3188, 1716, 1713,
	1714, 1795, 1177, 3137, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1794, 1560, 1792, 1690, 39, 3128, 3101,
	3098, 3097, 3095, 1744, 3066, 3065, 1574, 3064, 3108, 3061,
	1716, 3058, 1715, 1684, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 3038, 3108, 3021, 1782, 2172, 2848, 3014, 2878,
	2592, 3104, 3105, 3106, 3107, 3109, 3110, 2417, 1712, 1711,
	2136, 1585, 1793, 4590, 1715, 4535, 4534, 4501, 3739, 3108,
	4455, 1076, 1076, 1076, 1735, 1602, 4453, 1076, 1202, 3527,
	4345, 4283, 4272, 1732, 1198, 4269, 1198, 4268, 4267, 1635,
	4248, 4234, 4233, 224, 4208, 224, 3142, 4192, 4191, 2394,
	4177, 1336, 1851, 4174, 4122, 4100, 4066, 4049, 4048, 1076,
	4030, 4029, 774, 3993, 3969, 3878, 3859, 1019, 1932, 774,
	1785, 3795, 1278, 3789, 1790, 1695, 1687, 1694, 3786, 3676,
	3675, 1900, 3118, 1721, 3490, 3662, 3661, 3659, 226, 3595,
	226, 1911, 3583, 999, 3492, 1780, 3437, 3118, 1958, 998,
	1689, 3419, 1860, 1834, 3185, 1738, 1739, 1740, 1741, 1691,
	3386, 3325, 4017, 1708, 1709, 1721, 3292, 3263, 224, 3213,
	1717, 1718, 1719, 1720, 1722, 1723, 3211, 3739, 3043, 4532,
	3042, 3037, 3005, 2826, 1907, 1838, 1837, 225, 1278, 225,
	1836, 1833, 1825, 1905, 1901, 1076, 1857, 1858, 218, 1278,
	218, 1823, 1713, 1714, 2634, 2633, 2603, 219, 224, 219,
	1743, 1745, 2400, 226, 2596, 2562, 2442, 1076, 1826, 1827,
	1896, 1852, 1847, 1336, 1846, 1845, 1844, 1843, 1842, 183,
	1881, 2862, 1981, 1716, 2847, 1983, 1730, 1731, 1841, 1840,
	1839, 1988, 1820, 1019, 1819, 1990, 2028, 2459, 1966, 172,
	1993, 224, 1818, 226, 780, 1817, 1816, 1903, 224, 1815,
	1814, 780, 225, 1813, 1812, 1811, 1810, 1715, 1809, 1736,
	2003, 2037, 1808, 218, 1807, 3119, 1806, 1306, 1795, 1781,
	1779, 1879, 219, 1774, 2002, 1294, 1217, 1208, 783, 4236,
	3119, 3996, 1164, 3882, 3830, 783, 226, 1872, 1882, 3626,
	3606, 3598, 225, 226, 183, 3025, 2625, 2594, 1850, 1542,
	4084, 3884, 3625, 218, 1966, 1794, 3102, 3103, 3209, 1777,
	3944, 3414, 219, 2030, 1892, 1966, 1908, 2199, 1319, 1891,
	1890, 1889, 1887, 1955, 1979, 1886, 1885, 1537, 1876, 4524,
	2756, 4270, 3295, 4164, 183, 225, 4163, 4021, 1278, 1278,
	3971, 2030, 225, 1912, 3970, 2030, 218, 3943, 1336, 3881,
	3798, 2005, 224, 218, 1317, 219, 3479, 3797, 3796, 3601,
	4169, 3421, 219, 1196, 2001, 1196, 3420, 1311, 1874, 3742,
	2052, 1601, 3063, 1193, 2445, 1193, 1318, 183, 1682, 1311,
	3062, 1832, 1742, 2064, 183, 1904, 224, 224, 1831, 2987,
	2724, 1314, 2016, 2741, 1815, 3674, 2443, 226, 2089, 4215,
	2094, 3430, 1737, 2099, 3104, 3105, 3106, 3107, 3109, 3110,
	1926, 979, 4213, 1311, 3265, 1999, 3113, 3111, 3112, 3104,
	3105, 3106, 3107, 3109, 3110, 2008, 3318, 3370, 1610, 3369,
	1804, 226, 226, 4103, 2123, 2128, 4397, 2196, 2033, 2023,
	1278, 1192, 1278, 1192, 1278, 2219, 225, 3106, 3107, 3109,
	3110, 3031, 4160, 4441, 980, 4426, 4413, 218, 3354, 2902,
	1278, 1278, 1611, 2118, 3698, 3694, 219, 3680, 2069, 3454,
	3234, 1278, 1815, 4070, 3149, 2103, 3916, 3529, 2425, 2632,
	225, 225, 780, 1278, 4422, 1278, 1278, 1278, 183, 1312,
	1848, 218, 218, 1649, 1828, 3361, 4435, 2166, 1517, 1446,
	219, 219, 2162, 1289, 1245, 2120, 4432, 3404, 774, 3912,
	3654, 1719, 1720, 1722, 1723, 2769, 783, 1589, 4263, 2218,
	4005, 1801, 183, 183, 4352, 4245, 2772, 3268, 2167, 1452,
	2178, 1451, 1541, 3669, 2885, 1733, 1729, 2859, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 3347, 4515, 4485,
	4423, 2087, 2088, 2098, 4484, 3473, 4143, 3238, 3932, 2666,
	1485, 3913, 1176, 977, 2211, 2129, 1546, 2269, 1546, 2173,
	960, 2267, 975, 4585, 2684, 4136, 973, 3319, 1493, 971,
	2223, 4128, 1646, 2684, 2201, 4089, 968, 3966, 3707, 2682,
	2430, 3706, 1076, 3700, 1076, 1447, 2175, 1019, 2682, 1019,
	2017, 1076, 2207, 1308, 1932, 1932, 1336, 2149, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 2180, 1076, 2188, 1076, 1076, 1076, 1076,
	780, 1539, 2148, 2183, 2006, 2183, 2305, 2206, 2186, 2287,
	2184, 1494, 1542, 2192, 1295, 2193, 835, 3693, 1076, 1319,
	3691, 1076, 1076, 1647, 2292, 3711, 2431, 3641, 3240, 1076,
	1645, 3640, 1313, 1076, 783, 1076, 1076, 3350, 1194, 3204,
	1194, 2210, 3036, 1336, 1587, 1319, 3035, 3034, 3033, 1076,
	1076, 1076, 1076, 2991, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 2779, 2022, 2021, 2303, 2778, 2030, 2032, 2774,
	3265, 2061, 2245, 3294, 1929, 1285, 2303, 1318, 2473, 3210,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1309,
	3710, 2765, 2754, 1076, 1920, 4516, 2406, 2407, 1310, 1723,
	2263, 1017, 2753, 1318, 2057, 1198, 2750, 2432, 3908, 2429,
	2406, 2422, 1336, 3909, 2749, 2316, 2728, 836, 2715, 2615,
	2196, 1198, 2700, 2375, 2301, 1688, 2472, 2333, 2281, 2856,
	1312, 2062, 2063, 1205, 3455, 2301, 2468, 1076, 1336, 2147,
	2286, 2291, 2227, 2290, 3891, 1628, 2289, 1460, 2304, 1467,
	2297, 1473, 1529, 2127, 1528, 2514, 2514, 2528, 670, 2406,
	4519, 2058, 2548, 2550, 3911, 2421, 999, 965, 2554, 999,
	999, 1489, 2320, 1203, 2399, 2321, 2322, 1019, 2626, 1527,
	3914, 1526, 2579, 2025, 2215, 665, 1019, 1502, 1016, 1785,
	1019, 754, 2329, 2330, 1603, 1231, 2745, 2673, 3657, 2425,
	2607, 2228, 2299, 3890, 1629, 4047, 1448, 2726, 1892, 2278,
	1301, 2092, 2604, 3110, 2390, 1559, 2714, 1564, 2738, 2739,
	2946, 1658, 2273, 3945, 2402, 2470, 2390, 1573, 1582, 1578,
	2471, 2703, 4256, 2474, 2280, 2475, 2476, 2372, 1278, 1278,
	2964, 3928, 2419, 2535, 1308, 1541, 2738, 2739, 2979, 2571,
	2738, 2739, 4520, 2232, 2434, 2620, 1926, 1926, 4545, 2570,
	1693, 2229, 1311, 2302, 1630, 1881, 1293, 3102, 3103, 3665,
	3120, 3121, 3122, 1681, 2302, 2235, 2226, 1644, 1019, 1206,
	1336, 2713, 1713, 1714, 1599, 2510, 2523, 2655, 4484, 2593,
	1633, 2539, 2398, 2552, 2027, 2185, 1018, 752, 3463, 2396,
	2560, 2561, 3910, 1662, 3462, 2647, 1744, 2940, 2576, 2577,
	2572, 2651, 1932, 1716, 1834, 172, 1879, 1611, 2628, 1164,
	2654, 2530, 2578, 1313, 2583, 2662, 2949, 2589, 2590, 1306,
	2771, 2618, 2026, 3717, 2300, 3002, 1312, 3237, 2434, 3917,
	3965, 4419, 3117, 3677, 1583, 2300, 1336, 1715, 4258, 3309,
	4496, 2768, 2683, 3302, 2806, 3518, 2663, 2083, 4504, 874,
	1278, 4522, 2770, 2064, 3000, 2428, 1027, 1513, 2692, 3692,
	2635, 3690, 3716, 2657, 3349, 2978, 1076, 1076, 2639, 1076,
	1309, 2236, 1611, 1826, 1827, 2135, 2134, 2067, 3308, 1310,
	1588, 2638, 3301, 2805, 1196, 3316, 2082, 2664, 2640, 2669,
	2370, 2071, 1278, 2373, 1193, 838, 837, 2646, 2656, 2686,
	1196, 2649, 969, 2650, 1511, 2268, 2658, 2773, 2671, 2266,
	1193, 969, 2746, 2075, 2830, 969, 2066, 2702, 970, 2748,
	2730, 2766, 1278, 3108, 2870, 969, 2661, 2727, 3926, 833,
	2667, 832, 3515, 1641, 1278, 867, 1278, 2844, 1721, 2899,
	1308, 2672, 1010, 2369, 955, 4503, 4323, 2948, 2971, 2972,
	1278, 2106, 4046, 2613, 2725, 2717, 2277, 2113, 1015, 1862,
	4548, 2670, 1192, 2740, 2742, 2743, 2744, 2729, 2072, 1012,
	2705, 2708, 2695, 2687, 4473, 2908, 2909, 2945, 1192, 3401,
	2747, 2279, 3895, 1743, 1745, 3123, 2915, 2916, 2917, 4528,
	3402, 1076, 2434, 2997, 753, 2386, 3812, 3811, 4575, 2927,
	2582, 2928, 4420, 780, 1491, 3651, 1976, 2055, 2689, 666,
	4387, 2840, 4388, 3516, 1011, 2115, 2998, 4264, 1966, 1313,
	3003, 3249, 2874, 3650, 2384, 1488, 1204, 3118, 3252, 4334,
	2903, 4333, 2836, 1659, 4521, 1888, 1866, 783, 955, 1076,
	2731, 755, 1736, 1311, 751, 1076, 1076, 4087, 1546, 1230,
	1452, 4278, 2812, 2924, 3896, 2701, 2923, 3328, 956, 1513,
	1929, 1929, 2824, 1012, 3666, 2884, 2112, 3401, 2932, 2114,
	2934, 2076, 2936, 2947, 2921, 2834, 1309, 2904, 3927, 2757,
	1920, 1920, 172, 1869, 667, 1310, 1656, 2931, 1586, 2933,
	955, 2935, 2854, 4257, 2865, 2951, 2688, 2953, 1864, 4418,
	1076, 1076, 2954, 2875, 1926, 2956, 1076, 2752, 2886, 2687,
	2687, 2944, 2034, 2035, 2751, 1012, 1867, 2809, 2055, 1076,
	1076, 2691, 2811, 3239, 1215, 1076, 1076, 2371, 2234, 4321,
	668, 1076, 669, 3283, 4448, 2873, 966, 2077, 2078, 2993,
	1076, 1076, 1076, 4449, 2689, 2689, 1076, 2872, 719, 3724,
	2930, 2389, 956, 3985, 2929, 2093, 1076, 1821, 3722, 1865,
	2434, 2073, 4472, 2380, 3280, 3207, 2994, 4322, 2101, 1660,
	3119, 2055, 3808, 1076, 1657, 3024, 868, 869, 4059, 2970,
	2690, 2381, 1866, 3285, 4495, 1737, 2382, 2959, 2231, 3164,
	2387, 2100, 2961, 4372, 1692, 2960, 2999, 1584, 4363, 2535,
	1292, 2906, 2074, 3951, 956, 2910, 3001, 2911, 688, 1194,
	2316, 2225, 2965, 2397, 875, 2684, 3019, 3020, 1598, 1600,
	3279, 3023, 1773, 3250, 2096, 1194, 2416, 3041, 2575, 1869,
	2706, 4549, 2688, 2688, 4526, 2588, 4043, 1018, 2980, 3531,
	4536, 855, 3995, 3802, 2573, 957, 3284, 3622, 1220, 1311,
	3813, 2062, 2063, 1862, 3475, 3015, 1661, 2691, 2691, 2962,
	3724, 1616, 1867, 1076, 1076, 1076, 3678, 2685, 3725, 3722,
	1868, 4285, 1076, 1076, 1076, 2992, 1703, 1076, 2109, 2535,
	2535, 2097, 1019, 4417, 4483, 4481, 4300, 1076, 1198, 1336,
	4176, 3757, 3389, 1076, 2155, 1076, 3156, 3157, 1859, 3114,
	3115, 3116, 1218, 1211, 1198, 657, 3113, 3111, 3112, 3104,
	3105, 3106, 3107, 3109, 3110, 2079, 2690, 2690, 1702, 1713,
	1714, 3030, 1336, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	1866, 1697, 2107, 3809, 1198, 3737, 4527, 1336, 2319, 957,
	2085, 2065, 3857, 1744, 2018, 4576, 4119, 4554, 4118, 3198,
	1716, 4097, 3139, 1977, 1932, 3178, 3720, 4471, 1336, 1272,
	4185, 4202, 870, 871, 4244, 3986, 2383, 4042, 3158, 4529,
	3758, 2108, 1278, 1278, 3203, 2015, 2385, 1869, 3163, 3725,
	4447, 1009, 3704, 958, 1715, 3653, 3259, 3390, 1702, 2080,
	3382, 957, 1864, 3255, 2845, 1076, 3217, 3191, 3168, 2839,
	2828, 2179, 2168, 2160, 2141, 3569, 2064, 3514, 1482, 1076,
	1867, 1443, 2732, 4194, 3187, 2090, 1868, 1222, 1929, 1701,
	3244, 3245, 3931, 2535, 2535, 2535, 4195, 1932, 4286, 3930,
	3637, 3723, 728, 959, 2309, 3476, 3584, 4339, 1920, 3184,
	4303, 4088, 1478, 1702, 3269, 1076, 1278, 3273, 3166, 3235,
	2013, 3897, 3192, 1865, 3196, 2086, 3150, 4196, 3165, 3134,
	3135, 3136, 3224, 3241, 3254, 3226, 3227, 1514, 3253, 3228,
	3230, 2274, 3231, 2011, 3232, 3167, 1306, 958, 3760, 4010,
	3176, 1278, 856, 857, 1703, 1721, 3179, 3180, 3270, 1701,
	2014, 3275, 1554, 2216, 3277, 3448, 1336, 2825, 1966, 1966,
	3448, 3814, 1233, 4044, 3441, 1278, 1567, 3256, 3331, 3441,
	1278, 3334, 3221, 3222, 2707, 3339, 3341, 4198, 3200, 3201,
	3202, 4158, 4156, 3214, 3215, 4099, 3216, 959, 3320, 958,
	1743, 1745, 3271, 1278, 3182, 1773, 3183, 3858, 3267, 1278,
	4197, 1278, 3723, 3297, 1701, 1336, 3177, 3266, 3229, 4553,
	2985, 3315, 774, 787, 1703, 3597, 2963, 4199, 1631, 1593,
	3236, 2052, 3161, 1278, 1868, 3366, 3326, 3225, 2566, 2310,
	3160, 1535, 1966, 3300, 1278, 3317, 3242, 1196, 2612, 959,
	3311, 2733, 2734, 3815, 2611, 2610, 3282, 1193, 2609, 1736,
	1198, 3570, 3208, 1196, 3397, 1617, 3729, 3375, 2052, 3443,
	3571, 2899, 2569, 1193, 3443, 2045, 3286, 1966, 3381, 3293,
	2899, 2046, 2832, 1016, 3442, 1278, 1278, 3304, 4251, 3442,
	4287, 3312, 3638, 1196, 1533, 873, 3929, 3395, 3305, 4107,
	3307, 1966, 3306, 1193, 4153, 3352, 1966, 3355, 1278, 2103,
	3299, 3321, 3977, 2568, 3417, 3336, 3327, 2103, 2567, 1521,
	3343, 3660, 3406, 3337, 2711, 1192, 1926, 3431, 3348, 3344,
	2177, 3310, 3357, 1522, 4027, 3260, 4492, 2084, 858, 859,
	3199, 1192, 4282, 4086, 2907, 2810, 1336, 2808, 3396, 1336,
	3456, 2205, 1592, 4095, 4349, 4336, 3335, 4342, 3864, 2730,
	3586, 3342, 3329, 2093, 780, 3359, 2441, 4367, 1677, 4252,
	3132, 1192, 3439, 3391, 3378, 3398, 3351, 1679, 3415, 3416,
	4494, 3379, 1076, 727, 4437, 4271, 4065, 1676, 1076, 1076,
	2047, 2091, 1076, 1076, 1076, 3856, 1076, 4096, 783, 1926,
	4108, 3450, 1737, 4026, 1674, 1076, 1932, 2051, 3728, 3403,
	1653, 1651, 3429, 3131, 1076, 1627, 3433, 1076, 3412, 1625,
	1019, 2265, 3471, 1336, 3491, 1904, 3452, 3427, 1623, 1621,
	1334, 1619, 1076, 3468, 1432, 3218, 3469, 3466, 172, 172,
	1336, 1613, 4343, 3459, 1608, 3460, 3472, 3461, 1606, 3451,
	1932, 1932, 1076, 1076, 4253, 1076, 1076, 1076, 1531, 3096,
	2092, 3004, 2829, 3477, 788, 789, 4200, 2764, 2723, 2637,
	3494, 4201, 2282, 3172, 3470, 1534, 1899, 2048, 2053, 1895,
	3465, 1680, 1570, 1697, 2942, 3444, 3445, 3446, 3447, 2941,
	3444, 3445, 3446, 3447, 3405, 2913, 2298, 1076, 2276, 1640,
	3543, 1076, 3474, 1932, 1932, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 2240, 1076, 3544, 2140, 1532, 872,
	1959, 1805, 1076, 1076, 1932, 1581, 3503, 3504, 1506, 1076,
	2440, 1717, 1718, 1719, 1720, 1722, 1723, 3499, 4412, 1196,
	1076, 3696, 3695, 2535, 2535, 3952, 3940, 1678, 3510, 1193,
	2049, 1198, 1198, 4469, 3173, 1076, 3330, 1675, 3449, 2019,
	252, 967, 1194, 3526, 3517, 3519, 3520, 2721, 4335, 3394,
	4008, 3957, 3533, 3511, 1673, 3901, 3756, 3748, 1194, 3541,
	1652, 1650, 1906, 3542, 1336, 1626, 4485, 3521, 2264, 1624,
	3709, 3615, 2054, 3672, 791, 790, 2055, 3670, 1622, 1620,
	3652, 1618, 3385, 3171, 3581, 3602, 2762, 3380, 1194, 3371,
	3540, 1612, 3546, 2857, 1607, 2843, 2835, 1192, 1605, 2822,
	2807, 2653, 2648, 3620, 3621, 3548, 2139, 3573, 1530, 2137,
	1929, 1076, 2119, 2104, 3582, 3175, 2081, 3632, 3633, 3634,
	2068, 2056, 2815, 3574, 1998, 2818, 3287, 2820, 1995, 1992,
	1920, 1989, 792, 793, 1076, 2535, 2535, 2535, 2535, 2535,
	2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535,
	2535, 2535, 2535, 2535, 1984, 2535, 3590, 3591, 2329, 3534,
	1982, 1978, 1969, 1076, 1076, 3288, 3604, 3338, 1173, 2861,
	4461, 1706, 2861, 2113, 172, 3593, 3594, 2983, 1926, 3619,
	2285, 3635, 2957, 1929, 2955, 3636, 4377, 4032, 4025, 4024,
	3646, 3964, 972, 974, 976, 1174, 1076, 3887, 2900, 2038,
	1487, 2684, 2684, 1920, 4187, 2712, 4180, 3768, 2064, 1671,
	1672, 2329, 3549, 2260, 2230, 2176, 2682, 2709, 1278, 1253,
	3605, 3174, 1926, 1926, 715, 2283, 1254, 2237, 4376, 3671,
	2259, 3673, 3933, 3959, 1713, 1714, 1604, 1932, 3681, 4222,
	3865, 3843, 3577, 3628, 3642, 3686, 3688, 2937, 2735, 2050,
	1713, 1714, 2716, 3656, 1710, 1287, 3685, 3705, 3618, 3697,
	1221, 4488, 4479, 3745, 671, 1716, 1278, 3703, 2984, 2284,
	249, 3699, 1076, 4442, 2821, 1926, 1926, 1707, 2262, 2161,
	1198, 1076, 2112, 3770, 3679, 3588, 1298, 2870, 3702, 2769,
	2777, 1278, 1278, 1278, 3777, 3708, 2776, 767, 2730, 1715,
	1254, 1175, 2759, 2761, 1254, 3761, 1926, 2718, 1278, 823,
	3727, 2720, 4328, 4523, 2899, 1715, 2760, 654, 3762, 682,
	1196, 1196, 3743, 4295, 2719, 4292, 4250, 3765, 1336, 3781,
	1193, 1193, 3744, 4172, 4151, 3715, 3747, 2194, 3736, 3612,
	3384, 1898, 2864, 2553, 1194, 2004, 3730, 1913, 4105, 3899,
	3898, 3746, 1336, 1272, 2208, 1076, 1076, 1084, 3649, 3251,
	4369, 1076, 1076, 1932, 2209, 4370, 1076, 1076, 3206, 1076,
	3751, 4552, 1454, 1076, 3102, 3103, 2217, 3749, 2220, 2221,
	2222, 1713, 1714, 3763, 1076, 3764, 4498, 4369, 2676, 2677,
	3771, 3835, 4370, 2674, 2675, 3772, 3766, 4294, 1192, 1192,
	1076, 2436, 3714, 256, 256, 256, 3624, 660, 661, 3784,
	676, 660, 676, 686, 3799, 3791, 726, 3776, 3816, 3787,
	744, 3788, 3817, 1591, 2676, 750, 2674, 3825, 2469, 1590,
	4173, 256, 3782, 3783, 1655, 4137, 3960, 1654, 3956, 3955,
	3831, 3754, 3790, 3623, 3829, 3805, 3522, 3332, 3810, 852,
	1799, 1798, 4538, 4505, 4332, 256, 4331, 4330, 4237, 4154,
	1198, 4132, 4085, 2040, 4082, 3988, 3883, 3792, 1198, 3774,
	3731, 3668, 1336, 3663, 1336, 3260, 3388, 3387, 3276, 3223,
	3092, 1198, 3091, 3090, 3089, 3088, 3718, 3087, 3086, 3726,
	3085, 3084, 1929, 3083, 3870, 3082, 3081, 3080, 1336, 3079,
	3078, 3077, 3076, 3075, 3074, 3793, 3073, 3072, 3071, 3070,
	3069, 2939, 1920, 2920, 2919, 2918, 2849, 2823, 2710, 3888,
	3889, 2644, 2630, 2629, 3855, 2401, 2261, 2258, 2257, 2256,
	1198, 2255, 1198, 2254, 2174, 2150, 1929, 1929, 2146, 1926,
	2145, 2144, 3873, 2143, 3191, 2142, 1972, 1971, 1970, 3934,
	1968, 1670, 1669, 1614, 1501, 3862, 1920, 1920, 1500, 1499,
	1336, 3925, 3924, 1498, 1497, 1496, 3876, 3867, 3868, 1196,
	3869, 1336, 1495, 3872, 3936, 3937, 660, 660, 1490, 1193,
	1486, 1484, 3893, 3877, 256, 3800, 3961, 1483, 3962, 1929,
	1929, 3880, 1327, 3921, 3935, 3921, 1326, 1325, 2132, 1278,
	1278, 1324, 1323, 1291, 3866, 3900, 1290, 1240, 1239, 1920,
	1920, 1238, 3871, 3978, 1237, 172, 1278, 1236, 1235, 1234,
	1929, 1232, 1227, 1226, 1225, 1224, 1223, 1336, 1156, 2009,
	978, 964, 1278, 4255, 3915, 1664, 3963, 89, 3975, 1492,
	1920, 3954, 810, 83, 2110, 1194, 1194, 1192, 3667, 935,
	4366, 1476, 4277, 818, 4351, 3278, 2780, 1198, 2239, 4001,
	1615, 2241, 3186, 2595, 3950, 1926, 4320, 1278, 1278, 1278,
	3839, 4011, 3967, 3040, 4229, 4058, 3948, 2439, 1803, 1336,
	3972, 3143, 85, 1060, 4012, 1106, 3984, 4028, 4031, 3983,
	3902, 1076, 1076, 1076, 3655, 2889, 3974, 4006, 3981, 3980,
	2313, 4015, 3979, 3994, 1917, 1919, 3289, 3290, 1026, 1336,
	3291, 1339, 4386, 2020, 1076, 1066, 3998, 1076, 1076, 2036,
	3921, 2029, 2631, 4013, 2513, 1083, 1080, 1076, 1921, 1923,
	1932, 3939, 1082, 4000, 1081, 1076, 1076, 1922, 1822, 1079,
	1916, 3753, 1966, 3947, 3752, 3949, 4035, 3322, 3323, 1196,
	1336, 3324, 1278, 4034, 1263, 4050, 3997, 1196, 4020, 1193,
	2831, 2868, 3413, 4045, 4037, 4039, 1540, 1193, 1538, 937,
	1196, 2024, 2395, 2423, 3029, 1796, 1336, 1041, 1062, 2420,
	1193, 2660, 1272, 1216, 1076, 1051, 1040, 3169, 3148, 3400,
	3611, 2308, 827, 1076, 4067, 4061, 3973, 3099, 2426, 1207,
	2536, 1076, 1427, 1932, 2529, 1438, 1263, 2525, 3233, 2858,
	1683, 1076, 4072, 1775, 1076, 2869, 1321, 1044, 2393, 1196,
	4055, 1196, 1787, 1076, 3009, 4091, 2318, 1192, 3407, 1193,
	1336, 1193, 4081, 4078, 4079, 1192, 3189, 4115, 2624, 2531,
	4373, 1278, 1278, 3530, 2154, 1172, 1171, 1214, 1192, 1170,
	4357, 4354, 3785, 1929, 4090, 3364, 2332, 2012, 4098, 2668,
	1765, 3372, 1056, 1437, 3154, 3432, 1263, 1263, 4131, 4092,
	1503, 749, 3366, 1920, 4112, 1068, 1764, 2801, 2800, 1336,
	4247, 1307, 1278, 1305, 4142, 1304, 4166, 2535, 4157, 1303,
	4123, 4124, 4512, 4574, 1194, 4133, 3664, 1192, 223, 1192,
	1198, 1198, 2977, 2804, 4129, 4147, 1704, 1696, 4171, 220,
	222, 4146, 4134, 221, 4138, 3989, 4186, 4140, 4141, 1076,
	1076, 4181, 4155, 4139, 3616, 3195, 4440, 3683, 4150, 4190,
	4205, 4206, 3356, 23, 4182, 22, 1076, 1932, 4149, 4209,
	4165, 4184, 21, 2437, 2535, 4170, 1196, 109, 42, 4178,
	20, 4145, 125, 144, 4189, 4183, 1193, 4015, 143, 4203,
	4188, 117, 142, 3921, 3921, 141, 140, 139, 146, 138,
	137, 1076, 132, 136, 1076, 135, 134, 133, 131, 1929,
	129, 1198, 130, 124, 128, 127, 126, 123, 122, 121,
	120, 119, 118, 1198, 4218, 4219, 116, 115, 4243, 1920,
	114, 4227, 113, 2914, 4217, 112, 111, 110, 740, 737,
	61, 60, 108, 107, 19, 40, 14, 65, 4144, 66,
	1209, 18, 4242, 4266, 1192, 4238, 13, 35, 4240, 88,
	99, 98, 1926, 36, 1076, 1076, 96, 95, 2605, 34,
	4259, 4121, 4265, 17, 3921, 1198, 4221, 16, 1198, 15,
	4260, 93, 1278, 1229, 92, 33, 3921, 31, 11, 9,
	8, 37, 1278, 1278, 1883, 256, 4273, 256, 256, 4275,
	1258, 256, 1268, 12, 1194, 4297, 5, 4311, 4299, 1278,
	177, 176, 1194, 1288, 179, 175, 178, 4293, 4289, 4290,
	4288, 87, 744, 1076, 1076, 1194, 2535, 174, 4274, 173,
	86, 29, 10, 1076, 4304, 1926, 169, 4305, 3921, 4307,
	4167, 3921, 4316, 3741, 4317, 4308, 256, 4170, 256, 256,
	1258, 80, 256, 256, 1268, 171, 170, 168, 167, 4315,
	166, 81, 78, 165, 82, 256, 164, 1456, 79, 4344,
	1076, 1076, 4325, 1076, 1194, 163, 1194, 4348, 27, 4329,
	6, 64, 7, 4040, 3453, 102, 103, 38, 1480, 76,
	75, 74, 4375, 4356, 4359, 26, 63, 25, 4324, 4368,
	207, 206, 4371, 205, 204, 4347, 4346, 1505, 203, 1268,
	2679, 202, 4391, 256, 256, 4395, 1258, 4396, 197, 1196,
	1196, 196, 1076, 1076, 1076, 4361, 4365, 4394, 201, 1193,
	1193, 757, 199, 198, 200, 744, 4378, 256, 256, 195,
	210, 4382, 209, 215, 4389, 4360, 214, 4390, 4364, 213,
	212, 211, 4424, 1076, 208, 217, 4429, 194, 193, 191,
	852, 187, 4408, 4409, 186, 4411, 4410, 190, 192, 1926,
	189, 188, 185, 216, 4425, 161, 162, 1438, 71, 160,
	159, 158, 4443, 157, 4452, 156, 155, 154, 4427, 4309,
	4310, 70, 24, 4450, 2, 1, 0, 1192, 1192, 4454,
	1196, 1194, 4466, 0, 0, 1076, 4314, 0, 0, 4464,
	1193, 4465, 1196, 0, 4451, 0, 0, 0, 4470, 0,
	0, 4459, 1193, 1438, 4460, 0, 0, 4458, 4462, 4463,
	0, 4486, 0, 256, 4467, 2967, 4476, 4477, 0, 0,
	4482, 0, 4480, 0, 4490, 4478, 0, 762, 0, 0,
	4489, 4439, 256, 0, 1198, 4375, 1198, 4356, 4506, 4493,
	4359, 4491, 4507, 4497, 1196, 0, 4502, 1196, 4508, 4510,
	3006, 3007, 4517, 0, 1193, 0, 1929, 1193, 1192, 4514,
	4518, 0, 0, 0, 4509, 0, 4511, 4513, 0, 0,
	1192, 0, 4531, 0, 0, 0, 1920, 0, 0, 0,
	0, 0, 3750, 4530, 0, 0, 4533, 0, 3102, 3103,
	0, 3120, 3121, 3122, 0, 2531, 2531, 3921, 4542, 3921,
	0, 4546, 0, 4540, 1076, 1076, 4547, 4544, 4539, 721,
	4537, 3821, 0, 1076, 0, 1076, 1076, 4550, 0, 0,
	4556, 4559, 1192, 0, 4564, 1192, 4565, 0, 4563, 1929,
	4562, 4570, 4569, 764, 2870, 4568, 4567, 0, 0, 4566,
	0, 0, 0, 0, 4577, 4573, 0, 4578, 0, 1920,
	3801, 4580, 0, 0, 4582, 0, 4583, 0, 0, 4584,
	4579, 4581, 0, 3117, 4587, 0, 0, 0, 0, 4589,
	0, 1076, 0, 4592, 4588, 4594, 4591, 0, 4595, 0,
	4597, 0, 3916, 0, 4598, 0, 0, 0, 0, 0,
	4557, 4558, 768, 0, 3125, 3126, 3127, 2045, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3912, 0, 0, 0, 3905,
	0, 0, 0, 0, 1194, 1194, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 3903, 0, 0, 2531,
	2531, 2531, 0, 0, 2045, 3907, 4593, 0, 0, 0,
	2046, 256, 0, 256, 3108, 0, 0, 256, 2796, 0,
	0, 0, 2165, 1929, 759, 0, 0, 3913, 0, 0,
	1456, 1258, 256, 0, 256, 0, 0, 0, 0, 256,
	1456, 676, 0, 1920, 0, 0, 256, 1456, 0, 0,
	0, 2788, 2786, 0, 763, 0, 3345, 0, 2790, 2792,
	2782, 1973, 0, 0, 0, 1194, 0, 0, 3906, 0,
	1713, 1714, 2047, 256, 0, 0, 3123, 1194, 0, 0,
	256, 0, 0, 1196, 0, 1196, 3376, 720, 0, 2051,
	0, 1713, 1714, 1193, 1744, 1193, 0, 3383, 0, 0,
	766, 1716, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 3118, 2047,
	744, 0, 1716, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 1194, 0, 0, 1715, 2051, 0, 3423, 3424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 0, 0, 0, 1715, 0, 0, 2048,
	2053, 1192, 0, 1192, 0, 0, 1735, 0, 0, 3155,
	0, 0, 0, 0, 0, 1732, 0, 0, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 3987, 0, 0, 0, 0, 0,
	0, 0, 3181, 760, 0, 3999, 2048, 2053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3194, 0, 0,
	0, 0, 0, 0, 3908, 0, 3485, 4019, 0, 3909,
	0, 0, 0, 2784, 0, 0, 1721, 0, 3212, 0,
	0, 0, 2049, 0, 2798, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 3119, 0, 0, 0, 2797, 2789, 2787, 2791, 2793,
	2783, 2785, 2799, 0, 256, 0, 0, 256, 0, 2795,
	3911, 1743, 1745, 0, 2054, 0, 0, 0, 2055, 2049,
	0, 0, 0, 0, 0, 0, 3914, 0, 0, 0,
	0, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 2802, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 1731,
	256, 2054, 0, 0, 256, 2055, 0, 0, 2042, 256,
	1736, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 1736, 256, 0, 0, 0, 660, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 0,
	744, 0, 0, 0, 852, 3243, 0, 0, 0, 0,
	3114, 3115, 3116, 0, 0, 0, 0, 3113, 3111, 3112,
	3104, 3105, 3106, 3107, 3109, 3110, 0, 0, 1194, 256,
	1194, 1258, 256, 0, 3487, 3488, 0, 0, 3910, 0,
	1263, 0, 0, 0, 0, 3194, 744, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 256, 256, 0, 256, 0,
	256, 0, 256, 0, 256, 3917, 0, 0, 0, 2531,
	2531, 2050, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 2270, 0, 0, 2271, 0,
	2272, 0, 2803, 1737, 1742, 0, 0, 0, 0, 0,
	0, 2794, 256, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 1263, 1263, 1737, 1061, 106, 0, 2050, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 3550, 3551, 3552, 3553,
	3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563,
	3564, 3565, 3566, 3567, 3568, 0, 3572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
	2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
	0, 2531, 1427, 0, 0, 0, 106, 0, 0, 0,
	0, 3712, 0, 0, 0, 0, 0, 0, 0, 4279,
	0, 0, 0, 0, 0, 1438, 0, 0, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	4296, 0, 0, 3507, 0, 0, 0, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	3523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 0, 0,
	0, 0, 0, 0, 3778, 3779, 3780, 660, 1000, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 1020,
	0, 1272, 256, 0, 0, 0, 0, 0, 0, 77,
	0, 660, 1713, 1714, 0, 0, 0, 0, 256, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 1182, 1716, 0, 0, 0, 256, 1268, 84,
	0, 0, 0, 0, 0, 0, 0, 1438, 0, 0,
	4379, 0, 0, 4380, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 1735, 0, 0,
	0, 0, 0, 0, 256, 1268, 1732, 676, 0, 1438,
	104, 1438, 0, 0, 0, 90, 101, 2643, 0, 0,
	0, 0, 0, 256, 3614, 0, 256, 0, 0, 0,
	256, 0, 256, 0, 72, 0, 0, 1258, 0, 256,
	256, 0, 1268, 1268, 2659, 0, 0, 0, 0, 256,
	73, 0, 0, 0, 0, 0, 0, 3484, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 2699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 104, 0, 1730,
	1731, 0, 90, 101, 0, 1713, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 2813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1744,
	0, 0, 1736, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 1272, 1456, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 256, 94, 0, 0, 0, 91,
	0, 0, 0, 2853, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 2699, 0, 660, 0, 0, 0, 0,
	1735, 0, 0, 0, 2882, 852, 0, 2699, 2699, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 180, 97, 0, 100,
	4036, 0, 4038, 0, 1039, 0, 0, 0, 1039, 0,
	0, 0, 256, 1258, 256, 0, 0, 0, 1456, 0,
	1456, 1268, 256, 224, 1419, 1258, 0, 1258, 1419, 1258,
	2995, 847, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 256, 256, 256, 256, 1258,
	0, 1721, 1258, 0, 256, 1737, 256, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4083, 0, 0, 0, 0,
	0, 0, 94, 0, 147, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 256, 1743, 1745, 0, 184,
	0, 0, 0, 1438, 1438, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 1730, 1731, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 180, 97, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 3875, 1736, 0, 0, 0, 0,
	224, 0, 0, 106, 4148, 0, 0, 0, 847, 0,
	0, 0, 0, 145, 0, 0, 0, 1438, 3885, 0,
	0, 0, 0, 0, 1456, 72, 0, 0, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	2165, 73, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 4064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 0, 0, 106, 0, 106, 0, 106,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 84, 0, 0,
	0, 0, 0, 2531, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 4101, 0, 0, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	106, 106, 0, 0, 846, 0, 1551, 0, 1737, 0,
	0, 0, 0, 106, 0, 106, 0, 0, 104, 0,
	0, 0, 0, 90, 101, 106, 0, 106, 0, 0,
	2531, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 660, 0, 0, 660, 0, 0, 660, 660, 1334,
	0, 0, 0, 660, 0, 0, 0, 0, 1713, 1714,
	91, 256, 0, 0, 1756, 1757, 1758, 0, 106, 0,
	0, 0, 0, 1456, 0, 1272, 1272, 0, 0, 4056,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 1716,
	1438, 0, 1272, 0, 0, 1456, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	256, 256, 0, 0, 0, 0, 0, 4226, 0, 0,
	4056, 1733, 1729, 1715, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 1735, 0, 0, 0, 0, 0, 2699,
	2699, 256, 1732, 3248, 0, 1419, 2332, 0, 0, 0,
	0, 0, 2699, 0, 0, 3262, 0, 0, 1000, 0,
	0, 0, 2531, 2699, 3262, 0, 2699, 3262, 0, 0,
	3262, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 256, 256, 3248, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 1789,
	2332, 0, 0, 94, 0, 0, 3248, 256, 0, 3314,
	3314, 0, 1258, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 2699, 0, 3333,
	2699, 3248, 0, 0, 2699, 2699, 3248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 97, 0, 100, 0, 0,
	1753, 1039, 0, 1763, 0, 256, 0, 1419, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	3360, 224, 0, 3362, 2699, 0, 0, 256, 0, 847,
	0, 256, 0, 1268, 145, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2853, 1751, 0, 1258, 0, 256, 0, 1875,
	2699, 1878, 660, 106, 0, 0, 226, 0, 1736, 2699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 2853, 147, 1861, 2853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 3458, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 3464, 1419, 0, 1258, 256, 0, 256, 0, 0,
	0, 3102, 3103, 1258, 3120, 3121, 3122, 1549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3496, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3117, 0, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 1754, 0, 3528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 2165, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 3102, 3103, 0, 3120, 3121, 3122, 0, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 3495, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 3108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 0, 0, 1755, 1733, 1729, 3117, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 256, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3123,
	660, 660, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	1419, 0, 1456, 1456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1456, 1456, 1456, 0,
	0, 3118, 0, 0, 0, 1020, 0, 1020, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 3108, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 3314,
	0, 0, 0, 0, 0, 0, 1759, 0, 1760, 0,
	0, 0, 0, 0, 0, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 1419, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 1736, 3123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3314, 0,
	0, 1713, 1714, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 3118, 0, 0, 0, 1744, 0, 3248, 256, 0,
	0, 0, 1716, 0, 0, 0, 1419, 0, 1750, 256,
	0, 0, 0, 0, 3119, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 2165, 0, 0, 0, 256, 0,
	0, 1000, 1419, 256, 1000, 1000, 1715, 256, 0, 0,
	0, 1263, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 2699, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 2882, 2882, 0, 0,
	0, 1742, 852, 852, 2699, 0, 0, 0, 2853, 2853,
	0, 0, 852, 2699, 0, 0, 0, 0, 0, 2392,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 1020, 2988, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1754, 1783, 0,
	0, 0, 1108, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 3119, 0, 0, 1721, 0, 0,
	0, 0, 0, 3114, 3115, 3116, 0, 0, 0, 0,
	3113, 3111, 3112, 3104, 3105, 3106, 3107, 3109, 3110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 3840, 0, 0, 0, 0,
	0, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 1730, 1731,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 256, 0, 106,
	1419, 1736, 0, 1456, 3498, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	1283, 0, 0, 3114, 3115, 3116, 0, 0, 0, 0,
	3113, 3111, 3112, 3104, 3105, 3106, 3107, 3109, 3110, 0,
	0, 0, 0, 1025, 0, 0, 0, 1025, 2699, 2699,
	0, 3314, 0, 0, 0, 0, 0, 0, 0, 0,
	2699, 0, 0, 0, 0, 0, 0, 3923, 0, 3923,
	1456, 0, 0, 0, 0, 0, 0, 0, 2699, 0,
	3262, 0, 0, 1456, 1456, 256, 3248, 0, 0, 0,
	0, 0, 1458, 0, 1464, 0, 1470, 0, 3248, 256,
	3248, 256, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 2699, 0, 2699, 256, 0,
	0, 0, 0, 0, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1438, 0,
	0, 0, 2699, 0, 1737, 106, 0, 3991, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	1557, 0, 1562, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 1571, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3923, 0, 0, 1456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 106, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 1263, 0, 0, 1636, 0, 0,
	1642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	106, 0, 0, 0, 0, 0, 106, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2699,
	0, 3262, 0, 0, 4094, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 4113,
	0, 4113, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 3248, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 4094, 0, 0, 72, 0, 46, 45,
	0, 2699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 4175, 0, 148, 0, 0, 0, 0,
	1713, 1714, 0, 0, 0, 1456, 0, 0, 77, 2506,
	2507, 2508, 2509, 2502, 2503, 2504, 2505, 3923, 3923, 67,
	0, 0, 0, 0, 1744, 0, 48, 0, 150, 0,
	0, 1716, 0, 1419, 256, 256, 0, 0, 0, 2392,
	0, 0, 0, 0, 0, 0, 47, 0, 84, 0,
	0, 0, 0, 0, 1855, 1855, 1855, 0, 3528, 0,
	1783, 0, 0, 0, 0, 1715, 1419, 0, 0, 0,
	0, 0, 50, 68, 3314, 1735, 0, 3314, 0, 0,
	51, 1419, 0, 4094, 1732, 57, 0, 0, 0, 151,
	2482, 2483, 2484, 2485, 0, 0, 0, 49, 3923, 104,
	0, 0, 1419, 0, 90, 101, 0, 0, 0, 0,
	3923, 0, 0, 2494, 2495, 2496, 2497, 2490, 2491, 2492,
	2493, 2498, 2499, 2500, 2501, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 1039,
	0, 0, 0, 52, 0, 0, 0, 0, 0, 0,
	3991, 0, 0, 1039, 0, 0, 1738, 1739, 1740, 1741,
	0, 91, 3923, 0, 256, 3923, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 3262, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 2478, 2479, 2480, 2481,
	2486, 2487, 2488, 2489, 0, 0, 0, 0, 0, 0,
	1025, 1456, 0, 1456, 0, 0, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 1182, 0, 0, 1199, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 4340, 1730, 1731, 1182,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 4113,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 3102, 3103, 0, 3120, 3121, 3122, 0, 0,
	1736, 2699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 256, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 1199, 0, 0, 0,
	0, 1199, 0, 0, 0, 3528, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 1456, 0, 56, 0, 3117, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 58, 180, 97, 0, 100, 0,
	256, 0, 54, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 0, 0, 1199, 0,
	0, 0, 224, 0, 106, 106, 0, 0, 106, 0,
	62, 0, 0, 1742, 0, 145, 0, 0, 0, 0,
	4094, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 1419, 0, 106, 106, 226, 3108, 106,
	0, 0, 0, 0, 2699, 0, 0, 0, 0, 0,
	0, 3923, 0, 3923, 0, 0, 1456, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3124, 184, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 1456,
	3123, 0, 0, 0, 0, 0, 219, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 183, 0,
	0, 3, 0, 0, 2882, 1182, 0, 0, 1020, 0,
	0, 0, 3118, 2699, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 106, 0, 0, 1733, 1729, 2882, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2307, 0, 2311, 0, 0,
	0, 0, 0, 0, 2325, 0, 0, 0, 0, 0,
	0, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 0, 2374, 0, 2376,
	2377, 2378, 2379, 0, 0, 0, 1199, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2403, 0, 1199, 0, 0, 0, 0, 1419, 0,
	0, 0, 1784, 0, 0, 3119, 2418, 0, 0, 0,
	1933, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 2448, 2451, 2454, 2457, 0, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2527, 0, 2538, 2540, 2545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3114, 3115, 3116, 0, 106, 0,
	0, 3113, 3111, 3112, 3104, 3105, 3106, 3107, 3109, 3110,
	0, 0, 0, 0, 0, 0, 1182, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1072,
	0, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 917, 0, 0, 0, 0,
	1199, 1199, 0, 0, 0, 255, 255, 255, 0, 0,
	1199, 931, 915, 914, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 0, 0, 0, 0, 0, 0,
	916, 0, 0, 0, 0, 919, 1419, 0, 0, 0,
	963, 0, 0, 0, 0, 0, 0, 781, 0, 928,
	929, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 1199, 0, 1199, 0, 0, 2816,
	2817, 922, 2819, 0, 0, 0, 0, 0, 0, 0,
	954, 0, 1199, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 1199, 0, 1199, 1199, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 924, 1182, 1419, 0, 1419, 0,
	0, 0, 913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	925, 926, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 933,
	932, 0, 0, 0, 0, 0, 0, 927, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2938, 0, 0, 0, 0, 960,
	953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 1933, 1933, 1199, 0,
	0, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 920, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 2989, 2990, 1182, 0, 918, 0, 2996,
	0, 949, 950, 1182, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 952, 0, 0, 0, 3010, 3011,
	0, 0, 0, 1419, 2418, 0, 0, 0, 0, 0,
	0, 0, 0, 3018, 0, 947, 0, 0, 0, 0,
	0, 0, 961, 943, 0, 936, 934, 0, 939, 3032,
	0, 0, 0, 1419, 940, 0, 0, 911, 0, 958,
	0, 0, 0, 0, 0, 0, 3044, 1199, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	912, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 941, 1419, 0, 0, 0, 938, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	1419, 0, 0, 0, 0, 0, 923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 1039, 0,
	0, 0, 0, 948, 0, 2545, 2545, 2545, 0, 0,
	0, 0, 0, 0, 1419, 106, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 1713, 1714, 3159, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	1199, 1199, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 1419, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1025, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 255,
	255, 0, 1199, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3281, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 255, 0,
	255, 255, 0, 0, 255, 255, 0, 0, 1039, 1039,
	0, 0, 0, 0, 0, 0, 0, 781, 1753, 0,
	0, 1763, 0, 0, 1199, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 1199, 0,
	0, 0, 0, 0, 1759, 0, 1760, 0, 0, 0,
	0, 0, 1199, 1730, 1731, 0, 0, 2392, 0, 0,
	0, 0, 0, 0, 0, 255, 255, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 255,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1039, 0, 706, 0, 689,
	0, 0, 0, 0, 0, 690, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 0, 0, 690, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 692, 0, 0, 0, 0, 0,
	0, 691, 0, 0, 0, 255, 0, 106, 0, 0,
	0, 0, 692, 0, 0, 693, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 106, 1742,
	0, 0, 0, 693, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 712, 694, 2325, 0, 0, 0, 0,
	0, 3482, 3483, 0, 0, 3486, 0, 0, 0, 3489,
	0, 0, 694, 0, 0, 1754, 0, 695, 3493, 0,
	0, 0, 0, 0, 0, 0, 0, 3500, 0, 0,
	3159, 0, 0, 0, 0, 695, 0, 0, 696, 0,
	0, 697, 0, 0, 0, 3512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 721, 0, 697,
	0, 0, 0, 0, 0, 3535, 3536, 0, 3537, 3538,
	3539, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3545, 0, 0, 1752, 3547, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 3848, 0,
	708, 0, 3847, 0, 0, 3575, 3576, 0, 0, 0,
	1199, 1199, 0, 0, 0, 0, 0, 0, 708, 0,
	0, 0, 0, 3587, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3596, 0,
	0, 0, 0, 1877, 1199, 1195, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 1199,
	0, 0, 0, 0, 255, 1877, 255, 718, 0, 699,
	0, 781, 0, 0, 0, 0, 1933, 0, 781, 0,
	1199, 0, 0, 0, 0, 0, 0, 699, 0, 0,
	0, 0, 0, 0, 1199, 1199, 0, 719, 0, 700,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 255, 0, 3639, 719, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 3658, 0, 0,
	0, 0, 701, 0, 0, 0, 716, 717, 714, 1933,
	0, 0, 0, 720, 709, 0, 0, 702, 0, 0,
	701, 0, 0, 0, 716, 717, 714, 3682, 1199, 0,
	0, 0, 709, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 710, 0,
	0, 0, 0, 1199, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 0, 0, 703, 710, 0, 1199, 0,
	0, 705, 0, 0, 0, 704, 713, 1199, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 705,
	722, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 1199, 0, 0, 722, 0,
	0, 1199, 0, 1199, 0, 0, 0, 1199, 0, 707,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 3773, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 781,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3818, 3819,
	1199, 0, 255, 0, 3823, 3824, 255, 0, 0, 3827,
	3828, 255, 0, 0, 0, 0, 3832, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3836, 0, 0,
	0, 0, 255, 0, 255, 0, 0, 0, 1199, 0,
	255, 1199, 0, 3841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 781, 255, 0,
	255, 0, 255, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 251,
	251, 656, 1933, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 1199, 0, 0, 0, 0, 0,
	0, 0, 257, 257, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4051, 4052, 4053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2325, 0, 0,
	4062, 4063, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4071, 4074,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4114, 0, 0, 0,
	1199, 0, 0, 0, 4120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4127, 0, 255, 1025, 0, 1933,
	0, 0, 0, 0, 0, 0, 4135, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 255, 0,
	0, 0, 255, 0, 255, 0, 0, 0, 1199, 0,
	0, 255, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 1199, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4246, 0, 0, 4249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1025, 1025, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 1199, 0, 1199, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 255, 2325, 0, 0,
	0, 0, 0, 0, 255, 0, 4074, 0, 0, 0,
	0, 0, 1199, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 255, 255,
	255, 0, 1199, 0, 1025, 0, 255, 0, 255, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 1244, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 1199, 1199, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 4407, 4407, 4407, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 1331, 0, 1199, 0, 0, 0, 1436, 0,
	0, 0, 0, 0, 0, 0, 4428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	1199, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4407, 0,
	0, 0, 0, 0, 257, 0, 257, 257, 0, 0,
	257, 1199, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 1556, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 1199, 257, 1281, 257, 257, 0,
	1281, 257, 257, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4407, 4551, 1663,
	1281, 0, 257, 257, 0, 0, 4555, 0, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 1195, 0, 0,
	1281, 0, 0, 1199, 1199, 1281, 257, 257, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 1877, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	799, 0, 1199, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	801, 0, 0, 0, 0, 0, 802, 0, 255, 0,
	0, 0, 255, 255, 0, 0, 0, 0, 0, 1933,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 255, 803, 0, 820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 1199, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 255, 0, 255, 0,
	0, 0, 0, 0, 0, 1877, 828, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	1199, 0, 0, 0, 1199, 0, 0, 0, 800, 0,
	0, 0, 0, 1893, 1199, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 807,
	1436, 1199, 808, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 0, 721, 0,
	0, 781, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 1436, 0, 0, 0,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1749, 1744, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 1762,
	0, 829, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 1281, 0, 0,
	0, 257, 257, 257, 0, 1735, 0, 0, 257, 0,
	0, 0, 0, 0, 1732, 257, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 257,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 1281, 0, 1738, 1739, 1740, 1741,
	0, 0, 0, 0, 0, 1281, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 1199, 798, 1199, 821,
	0, 0, 1753, 0, 0, 1763, 0, 0, 813, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 0, 819, 0, 0, 0, 0, 1730, 1731, 0,
	0, 0, 0, 0, 0, 0, 2152, 0, 814, 0,
	2159, 815, 833, 0, 832, 1751, 0, 0, 816, 0,
	0, 2171, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 817, 0, 0, 0, 2182, 825, 2182, 0,
	0, 0, 0, 834, 2189, 831, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1195, 1761, 257, 1281, 1281, 257, 0, 0, 0,
	0, 0, 0, 0, 1281, 2159, 0, 0, 2213, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 2248, 0, 2250, 0, 2252, 257,
	2253, 0, 0, 257, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 0, 0, 0, 0, 0, 257,
	0, 257, 0, 0, 0, 0, 0, 257, 2275, 0,
	0, 0, 0, 1737, 0, 0, 1281, 0, 1281, 0,
	1281, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 1281, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 1281, 257, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 1281, 1281, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 257, 257, 0, 257, 0, 257,
	0, 257, 0, 257, 0, 773, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 773,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 0, 0, 0, 255, 0, 1752, 0, 255,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 1195,
	0, 0, 3053, 0, 0, 0, 3054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2602, 1077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2645,
	0, 0, 1244, 0, 0, 0, 1244, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1195,
	0, 0, 0, 0, 0, 2171, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 257, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 1877,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 257, 0, 0, 0, 255, 1716, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 0, 0,
	0, 255, 257, 255, 0, 257, 0, 0, 1436, 257,
	0, 257, 0, 0, 0, 0, 0, 0, 257, 257,
	255, 0, 1715, 0, 1281, 1281, 0, 0, 257, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 2159, 0, 0, 0, 1281, 255, 0, 0,
	2171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 2912,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 257, 1281, 0, 0, 0, 0, 0, 2922, 0,
	2925, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2950, 1436, 2952, 1436, 257, 0, 0, 1281, 0,
	2958, 0, 0, 257, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 1244, 255, 0, 0, 1736, 0, 0,
	1281, 2986, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 257, 257, 257, 257, 0, 0,
	0, 0, 0, 257, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	1877, 1337, 0, 0, 0, 1337, 257, 0, 0, 1279,
	1742, 0, 0, 0, 257, 0, 255, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 1744, 1754, 0, 0, 0,
	0, 0, 1716, 0, 0, 1279, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	1279, 0, 1877, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 1735, 0, 0, 0,
	0, 0, 0, 255, 0, 1732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 255, 1877, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 1279, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 1436, 1436, 0, 1338,
	0, 0, 0, 1338, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 1753, 255, 0, 1763, 0, 0, 0,
	0, 0, 1743, 1745, 0, 1281, 0, 3246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 1759,
	0, 1760, 0, 0, 0, 0, 0, 0, 1730, 1731,
	255, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 1280, 0, 0, 1751, 0, 0, 3296,
	3298, 0, 2171, 1281, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 1280, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 1281, 1281,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 257,
	257, 0, 255, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3373, 0, 0, 0, 3377, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 257, 0, 257, 0, 0, 0, 0,
	0, 0, 257, 1877, 1742, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 1281, 0, 0,
	0, 0, 1337, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 1281, 773, 0, 0, 3428, 0, 0, 0,
	773, 1281, 0, 1279, 0, 0, 1281, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 257, 1281, 0, 1281, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 3467, 0, 1436, 0, 0, 257, 0, 0, 1281,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 3480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 0, 0, 0, 1752, 0,
	0, 1281, 1281, 1727, 1728, 1734, 1755, 1733, 1729, 257,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 0, 0, 2414, 1281, 0, 0, 2415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 257, 1281, 257, 0, 0, 0,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 1749, 1744, 0, 0, 0, 0, 0,
	0, 1716, 257, 0, 0, 0, 0, 0, 0, 1762,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 1279,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 1279, 0, 1279, 1738, 1739, 1740, 1741,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 1279, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 1279, 1279, 1279, 0,
	0, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 0, 0, 0, 0, 0, 0, 1730, 1731, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	1736, 0, 0, 0, 2171, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 2171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2171,
	0, 0, 1761, 3755, 0, 0, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 1280, 0, 1280, 0, 0, 0, 0, 257, 3803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1280, 0, 0, 1742, 1281, 0, 0, 257, 0, 0,
	1280, 0, 0, 0, 1337, 0, 0, 0, 257, 0,
	0, 0, 1280, 1737, 1280, 1280, 1280, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 257, 0, 0, 0, 257, 0, 0, 1754,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 1281, 1281,
	0, 0, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 257, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 1338, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 3056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	1279, 3938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2171, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 1281, 0,
	1281, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 2171, 0, 1281, 0, 0, 0, 0, 0,
	0, 4007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 1337, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 1338, 0, 0,
	0, 1279, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 257, 0,
	257, 0, 0, 0, 0, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 1281, 1279, 1721, 257, 0, 0, 0, 0,
	0, 0, 0, 1281, 257, 1279, 0, 1279, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 1280, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 4102, 1743,
	1745, 0, 0, 1281, 1281, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1759, 0, 1760, 1338,
	0, 0, 0, 0, 0, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 1281, 0, 0, 0, 0,
	2171, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 1281, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 1750, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	4216, 1436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 1280, 0, 257, 0, 0, 0, 1281, 1281, 0,
	0, 1742, 0, 1280, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 257, 0, 0, 0, 0, 0,
	4298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	1337, 0, 0, 0, 0, 1752, 1762, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 4350, 0,
	257, 0, 1715, 1337, 3055, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 1337, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 4384, 0, 0, 0, 1281, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 1281,
	0, 0, 0, 1279, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 4444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 1763, 0, 0, 0, 0, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 1279, 0, 0, 1759, 0, 1760, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 1337, 0, 0,
	0, 0, 0, 0, 0, 0, 1279, 0, 1338, 0,
	0, 1279, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 0,
	1279, 1338, 1279, 0, 0, 0, 1337, 0, 0, 257,
	0, 0, 0, 773, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 1279, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 1280, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1279, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 1337, 0, 0,
	1337, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	1280, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 1338, 0, 0, 0, 0,
	1762, 0, 0, 0, 1280, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 1280, 0, 1337, 0, 1735, 0, 1280, 0,
	1280, 0, 0, 0, 1338, 1732, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 0,
	0, 0, 0, 3052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 1280, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 1753, 0, 0, 1763, 1762, 0, 0,
	0, 0, 1743, 1745, 0, 1338, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 1760, 0, 1715, 0, 0, 0, 0, 1730, 1731,
	0, 0, 0, 1735, 0, 1337, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 1750, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 1759, 0, 1760, 1279,
	0, 0, 0, 0, 0, 1730, 1731, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	1754, 0, 0, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 1279, 1279, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 0,
	0, 1742, 0, 0, 0, 0, 0, 3051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 1713,
	1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 1280, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 1715, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 1280, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 1280, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 1338, 0, 0,
	0, 0, 0, 0, 3050, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 1338, 1337, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 1763, 0, 0, 1279, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 0, 1279, 0, 0, 0, 1759, 0, 1760,
	0, 0, 0, 0, 0, 0, 1730, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 1279, 1279,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 1280,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 1279, 1279, 0, 0, 1338, 0, 1754, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 1279, 0, 0, 1280, 1280, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 1338,
	0, 1280, 0, 0, 0, 2415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	1280, 1280, 0, 1279, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1280, 1280, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1340, 273, 274, 1341, 1342, 1343, 1280, 1344,
	602, 1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	1349, 607, 284, 285, 286, 287, 288, 289, 1350, 1351,
	0, 290, 608, 609, 610, 1352, 291, 292, 611, 1353,
	1282, 1354, 293, 294, 295, 296, 297, 298, 299, 0,
	1355, 301, 302, 303, 300, 304, 1356, 305, 0, 306,
	307, 308, 309, 310, 311, 1357, 312, 313, 314, 1140,
	315, 316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317,
	318, 319, 320, 0, 321, 612, 613, 1365, 325, 322,
	323, 1366, 326, 324, 1367, 327, 328, 329, 1368, 1369,
	330, 331, 332, 1370, 333, 334, 1371, 335, 336, 337,
	1372, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 1373, 262, 1374,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 1375, 356, 1376, 1377, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1378, 368, 620, 1379, 621, 369, 1380, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 1381,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1382, 1142, 384, 625, 626, 1383, 627, 1384,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1385,
	398, 400, 399, 1386, 401, 629, 1147, 402, 403, 1148,
	1387, 404, 0, 0, 0, 405, 406, 409, 1388, 1389,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1390, 264, 1151, 448, 449, 1391,
	630, 450, 631, 452, 453, 1392, 0, 454, 0, 1393,
	1394, 456, 457, 458, 1395, 1396, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1397, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	1398, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 1399, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1400, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1401,
	532, 533, 531, 534, 535, 536, 1402, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 1403, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 1404,
	561, 562, 0, 558, 1405, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 1406, 571, 643, 644, 645, 646,
	1407, 580, 1408, 572, 573, 574, 647, 575, 648, 1409,
	576, 577, 578, 579, 0, 581, 582, 1410, 1411, 583,
	584, 585, 587, 588, 586, 589, 1412, 590, 1413, 0,
	591, 592, 593, 649, 650, 651, 1414, 595, 594, 596,
	652, 1415, 1416, 1417, 1418, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 0, 0,
	0, 2581, 265, 267, 266, 268, 269, 270, 271, 272,
	1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602, 1345,
	1346, 1347, 1348, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 1349, 607,
	284, 285, 286, 287, 288, 289, 1350, 1351, 0, 290,
	608, 609, 610, 1352, 291, 292, 611, 1353, 1282, 1354,
	293, 294, 295, 296, 297, 298, 299, 0, 1355, 301,
	302, 303, 300, 304, 1356, 305, 0, 306, 307, 308,
	309, 310, 311, 1357, 312, 313, 314, 1140, 315, 316,
	1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318, 319,
	320, 0, 321, 612, 613, 1365, 325, 322, 323, 1366,
	326, 324, 1367, 327, 328, 329, 1368, 1369, 330, 331,
	332, 1370, 333, 334, 1371, 335, 336, 337, 1372, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 1373, 262, 1374, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	1375, 356, 1376, 1377, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1378, 368,
	620, 1379, 621, 369, 1380, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 1381, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1382, 1142, 384, 625, 626, 1383, 627, 1384, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1385, 398, 400,
	399, 1386, 401, 629, 1147, 402, 403, 1148, 1387, 404,
	0, 0, 0, 405, 406, 409, 1388, 1389, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1390, 264, 1151, 448, 449, 1391, 630, 450,
	631, 452, 453, 1392, 0, 454, 0, 1393, 1394, 456,
	457, 458, 1395, 1396, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1397, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 1398, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 1399, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1400, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1401, 532, 533,
	531, 534, 535, 536, 1402, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 1403, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 1404, 561, 562,
	0, 558, 1405, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 1406, 571, 643, 644, 645, 646, 1407, 580,
	1408, 572, 573, 574, 647, 575, 648, 1409, 576, 577,
	578, 579, 0, 581, 582, 1410, 1411, 583, 584, 585,
	587, 588, 586, 589, 1412, 590, 1413, 0, 591, 592,
	593, 649, 650, 651, 1414, 595, 594, 596, 652, 1415,
	1416, 1417, 1418, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 3506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3508, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3874, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4057, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3946, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3804, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3524, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3358, 265, 267, 266, 268, 269, 270, 271,
	272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344, 602,
	1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 1349,
	607, 284, 285, 286, 287, 288, 289, 1350, 1351, 0,
	290, 608, 609, 610, 1352, 291, 292, 611, 1353, 1282,
	1354, 293, 294, 295, 296, 297, 298, 299, 0, 1355,
	301, 302, 303, 300, 304, 1356, 305, 0, 306, 307,
	308, 309, 310, 311, 1357, 312, 313, 314, 1140, 315,
	316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317, 318,
	319, 320, 0, 321, 612, 613, 1365, 325, 322, 323,
	1366, 326, 324, 1367, 327, 328, 329, 1368, 1369, 330,
	331, 332, 1370, 333, 334, 1371, 335, 336, 337, 1372,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 1373, 262, 1374, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 1375, 356, 1376, 1377, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1378,
	368, 620, 1379, 621, 369, 1380, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 1381, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1382, 1142, 384, 625, 626, 1383, 627, 1384, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1385, 398,
	400, 399, 1386, 401, 629, 1147, 402, 403, 1148, 1387,
	404, 0, 0, 0, 405, 406, 409, 1388, 1389, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1390, 264, 1151, 448, 449, 1391, 630,
	450, 631, 452, 453, 1392, 0, 454, 0, 1393, 1394,
	456, 457, 458, 1395, 1396, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1397, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 1398,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 1399, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1400, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1401, 532,
	533, 531, 534, 535, 536, 1402, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 1403, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 1404, 561,
	562, 0, 558, 1405, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 1406, 571, 643, 644, 645, 646, 1407,
	580, 1408, 572, 573, 574, 647, 575, 648, 1409, 576,
	577, 578, 579, 0, 581, 582, 1410, 1411, 583, 584,
	585, 587, 588, 586, 589, 1412, 590, 1413, 0, 591,
	592, 593, 649, 650, 651, 1414, 595, 594, 596, 652,
	1415, 1416, 1417, 1418, 597, 598, 653, 599, 600, 601,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2438, 265, 267,
	266, 268, 269, 270, 271, 272, 1340, 273, 274, 1341,
	1342, 1343, 0, 1344, 602, 1345, 1346, 1347, 1348, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 1349, 607, 284, 285, 286, 287,
	288, 289, 1350, 1351, 0, 290, 608, 609, 610, 1352,
	291, 292, 611, 1353, 1282, 1354, 293, 294, 295, 296,
	297, 298, 299, 0, 1355, 301, 302, 303, 300, 304,
	1356, 305, 0, 306, 307, 308, 309, 310, 311, 1357,
	312, 313, 314, 1140, 315, 316, 1358, 1359, 1361, 1360,
	1362, 1363, 1364, 317, 318, 319, 320, 0, 321, 612,
	613, 1365, 325, 322, 323, 1366, 326, 324, 1367, 327,
	328, 329, 1368, 1369, 330, 331, 332, 1370, 333, 334,
	1371, 335, 336, 337, 1372, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 1373, 262, 1374, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 1375, 356, 1376, 1377,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1378, 368, 620, 1379, 621, 369,
	1380, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 1381, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1382, 1142, 384, 625,
	626, 1383, 627, 1384, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1385, 398, 400, 399, 1386, 401, 629,
	1147, 402, 403, 1148, 1387, 404, 0, 0, 0, 405,
	406, 409, 1388, 1389, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1390, 264,
	1151, 448, 449, 1391, 630, 450, 631, 452, 453, 1392,
	0, 454, 0, 1393, 1394, 456, 457, 458, 1395, 1396,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1397, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 1398, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	1399, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1400, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1401, 532, 533, 531, 534, 535, 536,
	1402, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 1403, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 1404, 561, 562, 0, 558, 1405, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 1406, 571,
	643, 644, 645, 646, 1407, 580, 1408, 572, 573, 574,
	647, 575, 648, 1409, 576, 577, 578, 579, 0, 581,
	582, 1410, 1411, 583, 584, 585, 587, 588, 586, 589,
	1412, 590, 1413, 0, 591, 592, 593, 649, 650, 651,
	1414, 595, 594, 596, 652, 1415, 1416, 1417, 1418, 597,
	598, 653, 599, 600, 601, 1430, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2133, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344,
	602, 1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	1349, 607, 284, 285, 286, 287, 288, 289, 1350, 1351,
	0, 290, 608, 609, 610, 1352, 291, 292, 611, 1353,
	1282, 1354, 293, 294, 295, 296, 297, 298, 299, 0,
	1355, 301, 302, 303, 300, 304, 1356, 305, 0, 306,
	307, 308, 309, 310, 311, 1357, 312, 313, 314, 1140,
	315, 316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317,
	318, 319, 320, 0, 321, 612, 613, 1365, 325, 322,
	323, 1366, 326, 324, 1367, 327, 328, 329, 1368, 1369,
	330, 331, 332, 1370, 333, 334, 1371, 335, 336, 337,
	1372, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 1373, 262, 1374,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 1375, 356, 1376, 1377, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1378, 368, 620, 1379, 621, 369, 1380, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 1381,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1382, 1142, 384, 625, 626, 1383, 627, 1384,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1385,
	398, 400, 399, 1386, 401, 629, 1147, 402, 403, 1148,
	1387, 404, 0, 0, 0, 405, 406, 409, 1388, 1389,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1390, 264, 1151, 448, 449, 1391,
	630, 450, 631, 452, 453, 1392, 0, 454, 0, 1393,
	1394, 456, 457, 458, 1395, 1396, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1397, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	1398, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 1399, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1400, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1401,
	532, 533, 531, 534, 535, 536, 1402, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 1403, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 1404,
	561, 562, 0, 558, 1405, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 1406, 571, 643, 644, 645, 646,
	1407, 580, 1408, 572, 573, 574, 647, 575, 648, 1409,
	576, 577, 578, 579, 0, 581, 582, 1410, 1411, 583,
	584, 585, 587, 588, 586, 589, 1412, 590, 1413, 0,
	591, 592, 593, 649, 650, 651, 1414, 595, 594, 596,
	652, 1415, 1416, 1417, 1418, 597, 598, 653, 599, 600,
	601, 1332, 0, 1335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 1340, 273,
	274, 1341, 1342, 1343, 0, 1344, 602, 1345, 1346, 1347,
	1348, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 1349, 607, 284, 285,
	286, 287, 288, 289, 1350, 1351, 0, 290, 608, 609,
	610, 1352, 291, 292, 611, 1353, 1282, 1354, 293, 294,
	295, 296, 297, 298, 299, 0, 1355, 301, 302, 303,
	300, 304, 1356, 305, 0, 306, 307, 308, 309, 310,
	311, 1357, 312, 313, 314, 1140, 315, 316, 1358, 1359,
	1361, 1360, 1362, 1363, 1364, 317, 318, 319, 320, 0,
	321, 612, 613, 1365, 325, 322, 323, 1366, 326, 324,
	1367, 327, 328, 329, 1368, 1369, 330, 331, 332, 1370,
	333, 334, 1371, 335, 336, 337, 1372, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 1373, 262, 1374, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 1375, 356,
	1376, 1377, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 1378, 368, 620, 1379,
	621, 369, 1380, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 1381, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 1382, 1142,
	384, 625, 626, 1383, 627, 1384, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1385, 398, 400, 399, 1386,
	401, 629, 1147, 402, 403, 1148, 1387, 404, 0, 0,
	0, 405, 406, 409, 1388, 1389, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1390, 264, 1151, 448, 449, 1391, 630, 450, 631, 452,
	453, 1392, 0, 454, 0, 1393, 1394, 456, 457, 458,
	1395, 1396, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	1397, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 1398, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 1399, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 1400, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 1401, 532, 533, 531, 534,
	535, 536, 1402, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 1403,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 1404, 561, 562, 0, 558,
	1405, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	1406, 571, 643, 644, 645, 646, 1407, 580, 1408, 572,
	573, 574, 647, 575, 648, 1409, 576, 577, 578, 579,
	0, 581, 582, 1410, 1411, 583, 584, 585, 587, 588,
	586, 589, 1412, 590, 1413, 0, 591, 592, 593, 649,
	650, 651, 1414, 595, 594, 596, 652, 1415, 1416, 1417,
	1418, 597, 598, 653, 599, 600, 601, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1340, 273, 274, 1341, 1342, 1343, 0, 1344,
	602, 1345, 1346, 1347, 1348, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	1349, 607, 284, 285, 286, 287, 288, 289, 1350, 1351,
	0, 290, 608, 609, 610, 1352, 291, 292, 611, 1353,
	1282, 1354, 293, 294, 295, 296, 297, 298, 299, 0,
	1355, 301, 302, 303, 300, 304, 1356, 305, 0, 306,
	307, 308, 309, 310, 311, 1357, 312, 313, 314, 1140,
	315, 316, 1358, 1359, 1361, 1360, 1362, 1363, 1364, 317,
	318, 319, 320, 0, 321, 612, 613, 1365, 325, 322,
	323, 1366, 326, 324, 1367, 327, 328, 329, 1368, 1369,
	330, 331, 332, 1370, 333, 334, 1371, 335, 336, 337,
	1372, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 1373, 262, 1374,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 1375, 356, 1376, 1377, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1378, 368, 620, 1379, 621, 369, 1380, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 1381,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1382, 1142, 384, 625, 626, 1383, 627, 1384,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1385,
	398, 400, 399, 1386, 401, 629, 1147, 402, 403, 1148,
	1387, 404, 0, 0, 0, 405, 406, 409, 1388, 1389,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1390, 264, 1151, 448, 449, 1391,
	630, 450, 631, 452, 453, 1392, 0, 454, 0, 1393,
	1394, 456, 457, 458, 1395, 1396, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1397, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	1398, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 1399, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1400, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1401,
	532, 533, 531, 534, 535, 536, 1402, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 1403, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 1404,
	561, 562, 0, 558, 1405, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 1406, 571, 643, 644, 645, 646,
	1407, 580, 1408, 572, 573, 574, 647, 575, 648, 1409,
	576, 577, 578, 579, 0, 581, 582, 1410, 1411, 583,
	584, 585, 587, 588, 586, 589, 1412, 590, 1413, 0,
	591, 592, 593, 649, 650, 651, 1414, 595, 594, 596,
	652, 1415, 1416, 1417, 1418, 597, 598, 653, 599, 600,
	601, 2413, 0, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 2410, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 2411, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 2409, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 2412, 0, 0, 0, 0, 0,
	0, 1059, 2408, 0, 1021, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 224, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 226, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 1547, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 218, 597, 598, 653, 599, 600, 601,
	1034, 0, 219, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1788, 1786, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 226, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 1547, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 218, 597, 598, 653, 599, 600,
	601, 1034, 0, 219, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1788, 3008, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	224, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 226, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 1547, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 218, 597, 598, 653, 599,
	600, 601, 1034, 0, 219, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1788, 1786, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 2541, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 2546, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 2542, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 2543, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	2458, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 2456, 0, 2455, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 2453, 0, 2452, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 2450, 0, 2449,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	2447, 0, 1638, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 1637, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1024, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 1038,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 4362, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	1038, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 2327,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 2326, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 1038, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 4130, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 1038, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	3767, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1856, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 3502, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 1856, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 0, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 2546, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 1786,
	0, 2551, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 2549, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 2537, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	2526, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 2524, 1057, 2515, 2522, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 2518, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 2519, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 2520,
	419, 2517, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 2521, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 2516, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 2512, 1057, 2515, 2522,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 2518, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 2519, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 2520, 419, 2517, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 2521,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	2516, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 1794, 0, 1059, 0, 0,
	0, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 2306, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	581, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 1643, 1057, 1075, 1047, 1048, 1049, 1045,
	1046, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 1577, 1057, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 1032, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 1036, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 1033, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 1043, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 1031, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 1037,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 1034, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 0, 1028, 1029, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 1572,
	1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 581,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 1563, 1057, 1075, 1047, 1048, 1049, 1045, 1046,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 1558, 1057, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	1032, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 1036, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 1033, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 1031, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 1037, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1034, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 0, 0, 0, 0, 0, 1028, 1029, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1472, 1057,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1471, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	0, 1466, 1057, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	1064, 369, 0, 370, 371, 372, 373, 374, 1465, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 1459, 1057, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 0, 1059, 0, 0, 1284, 1057, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 1151, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 581, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1034, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1099, 1063, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 1112, 0, 282,
	1119, 283, 1118, 0, 1129, 284, 285, 286, 287, 288,
	289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291,
	292, 1105, 0, 1086, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091,
	1090, 1094, 317, 318, 319, 320, 1122, 321, 1116, 1115,
	1036, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1107, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1042, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1130, 1131, 351,
	1054, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1114, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 1127, 1128, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1137, 0, 1064, 369, 0,
	370, 371, 372, 373, 374, 1100, 1101, 1104, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1142, 384, 1109, 1110,
	0, 1070, 0, 386, 387, 1144, 1102, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1138, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 1093, 1092, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 1033, 264, 1151,
	448, 449, 1055, 1103, 450, 1117, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 1132, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 1133, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1113, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 1043, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1096,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 1111, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 1158, 553, 554, 555, 556, 1134,
	559, 560, 0, 561, 562, 1031, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 1123,
	1124, 1125, 1126, 0, 580, 0, 572, 573, 574, 1135,
	575, 1136, 1053, 576, 577, 578, 579, 0, 581, 582,
	0, 1037, 583, 584, 585, 587, 588, 586, 589, 1097,
	590, 0, 0, 591, 592, 593, 649, 1120, 1157, 0,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 1034, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 1028,
	1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1099, 1063, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 1112, 0,
	282, 1119, 283, 1118, 0, 1129, 284, 285, 286, 287,
	288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 4406, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 1122, 321, 1116,
	1115, 1036, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 1107, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 1042, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 1054, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 1114, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 1127, 1128, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 1064, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 1109,
	1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 1033, 264,
	1151, 448, 449, 1055, 1103, 450, 1117, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 1113, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 1043,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 1111, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 1158, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 1031, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	1123, 1124, 1125, 1126, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 1053, 576, 577, 578, 579, 0, 4405,
	582, 0, 1037, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 1120, 1157,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1034, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058, 1059,
	0, 0, 0, 1057, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1099, 1063, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 4404, 1112,
	0, 282, 1119, 283, 1118, 0, 1129, 284, 285, 286,
	287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160, 610,
	0, 291, 292, 1105, 0, 1086, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 4406, 1089, 1087, 1088,
	1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122, 321,
	1116, 1115, 1036, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1042, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1130,
	1131, 351, 1054, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1114, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1127, 1128, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1137, 0, 1064,
	369, 0, 370, 371, 372, 373, 374, 1100, 1101, 1104,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1142, 384,
	1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1138, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 1093, 1092, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 1033,
	264, 1151, 448, 449, 1055, 1103, 450, 1117, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 1132, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	1133, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1113, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	1043, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1096, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1111, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1158, 553, 554, 555,
	556, 1134, 559, 560, 0, 561, 562, 1031, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1123, 1124, 1125, 1126, 0, 580, 0, 572, 573,
	574, 1135, 575, 1136, 1053, 576, 577, 578, 579, 0,
	4405, 582, 0, 1037, 583, 584, 585, 587, 588, 586,
	589, 1097, 590, 0, 0, 591, 592, 593, 649, 1120,
	1157, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1034, 0, 0, 0,
	0, 0, 0, 0, 1030, 0, 0, 0, 0, 0,
	0, 1028, 1029, 1075, 1047, 1048, 1049, 1045, 1046, 1058,
	1059, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 1063, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	1112, 0, 282, 1119, 283, 1118, 0, 1129, 284, 285,
	286, 287, 288, 289, 1065, 1098, 1032, 290, 1159, 1160,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 4076, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 1122,
	321, 1116, 1115, 1036, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 1107, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 1042,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 1054, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 1114, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 1127, 1128, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	4077, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 1109, 1110, 0, 1070, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 1113, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	4075, 1043, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 1111, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 1158, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 1031, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 1123, 1124, 1125, 1126, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 1053, 576, 577, 578, 579,
	0, 581, 582, 0, 1037, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	1120, 1157, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1034, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 2975, 2976,
	1058, 1059, 0, 0, 0, 1057, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1099, 1063, 0,
	0, 0, 275, 276, 1139, 277, 278, 279, 280, 281,
	603, 1112, 0, 282, 1119, 283, 1118, 0, 1129, 284,
	285, 286, 287, 288, 289, 1065, 1098, 1032, 290, 1159,
	1160, 610, 0, 291, 292, 1105, 0, 1086, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1140, 315, 316, 1089,
	1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320,
	1122, 321, 1116, 1115, 1036, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1107, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1042, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1130, 1131, 351, 1054, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1114, 0, 0, 0, 355, 0,
	356, 0, 0, 1141, 357, 358, 1127, 1128, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1137,
	0, 1064, 369, 0, 370, 371, 372, 373, 374, 1100,
	1101, 1104, 451, 1143, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1142, 384, 1109, 1110, 0, 1070, 0, 386, 387, 1144,
	1102, 1145, 388, 389, 390, 1146, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1138, 1147, 402, 403, 1148, 0, 404, 0,
	0, 0, 405, 406, 409, 1093, 1092, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1149, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1150,
	438, 1033, 264, 1151, 448, 449, 1055, 1103, 450, 1117,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 1152, 461, 1153, 1132,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 1133, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1113, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1154, 512, 513,
	514, 515, 1043, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1096, 537, 538, 521, 522, 539, 540,
	1155, 541, 542, 543, 544, 545, 546, 1111, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 1158, 553,
	554, 555, 556, 1134, 559, 560, 0, 561, 562, 1031,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 1123, 1124, 1125, 1126, 0, 580, 0,
	572, 573, 574, 1135, 575, 1136, 1053, 576, 577, 578,
	579, 0, 581, 582, 0, 1037, 583, 584, 585, 587,
	588, 586, 589, 1097, 590, 0, 0, 591, 592, 593,
	649, 1120, 1157, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1034, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049, 2973,
	2974, 1058, 1059, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 1063,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 1112, 0, 282, 1119, 283, 1118, 0, 1129,
	284, 285, 286, 287, 288, 289, 1065, 1098, 1032, 290,
	1159, 1160, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 1122, 321, 1116, 1115, 1036, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 1107,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 1042, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 1054, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 1114, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 1127, 1128, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 1064, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 1109, 1110, 0, 1070, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103, 450,
	1117, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 1113,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 1043, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 1111, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 1158,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	1031, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 1123, 1124, 1125, 1126, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 1053, 576, 577,
	578, 579, 0, 581, 582, 0, 1037, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 1120, 1157, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1034,
	0, 0, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 0, 0, 0, 1028, 1029, 1075, 1047, 1048, 1049,
	1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1099,
	1063, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 1112, 0, 282, 1119, 283, 1118, 0,
	1129, 284, 285, 286, 287, 288, 289, 1065, 1098, 1032,
	290, 1159, 1160, 610, 0, 291, 292, 1105, 0, 1086,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318,
	319, 320, 1122, 321, 1116, 1115, 1036, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1107, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1042, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1130, 1131, 351, 1054, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1114, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 1127, 1128,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1137, 0, 1064, 369, 0, 370, 371, 372, 373,
	374, 1100, 1101, 1104, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1142, 384, 1109, 1110, 0, 1070, 0, 386,
	387, 1144, 1102, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1138, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 1093, 1092, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 1033, 264, 1151, 448, 449, 1055, 1103,
	450, 1117, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 1132, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 1133, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1113, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 1043, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1096, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 1111,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	1158, 553, 554, 555, 556, 1134, 559, 560, 0, 561,
	562, 1031, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 1123, 1124, 1125, 1126, 0,
	580, 0, 572, 573, 574, 1135, 575, 1136, 1053, 576,
	577, 578, 579, 0, 581, 582, 0, 1037, 583, 584,
	585, 587, 588, 586, 589, 1097, 590, 0, 0, 591,
	592, 593, 649, 1120, 1157, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1034, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 2314, 2315, 1075, 1047, 1048,
	1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1063, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 1112, 0, 282, 1119, 283, 1118,
	0, 1129, 284, 285, 286, 287, 288, 289, 1065, 1098,
	0, 290, 1159, 1160, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 1122, 321, 1116, 1115, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 1107, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 1042, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 1054, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 1114, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 1127,
	1128, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 1064, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 1109, 1110, 0, 1070, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 264, 1151, 448, 449, 1055,
	1103, 450, 1117, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 1113, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 1043, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	1111, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 1158, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 1123, 1124, 1125, 1126,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 1053,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 1120, 1157, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 2534,
	0, 0, 0, 0, 0, 0, 2532, 2533, 1075, 1047,
	1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1099, 1063, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 1112, 0, 282, 1119, 283,
	1118, 0, 1129, 284, 285, 286, 287, 288, 289, 1065,
	1098, 0, 290, 1159, 1160, 610, 0, 291, 292, 1105,
	0, 1086, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094,
	317, 318, 319, 320, 1122, 321, 1116, 1115, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1107, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1042, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1130, 1131, 351, 1054, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1114, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	1127, 1128, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1137, 0, 1064, 369, 0, 370, 371,
	372, 373, 374, 1100, 1101, 1104, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1142, 384, 1109, 1110, 0, 1070,
	0, 386, 387, 1144, 1102, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1138, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 1093,
	1092, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 264, 1151, 448, 449,
	1055, 1103, 450, 1117, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 1132, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 1133, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1113, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 2968, 2969, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1096, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 1111, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 1158, 553, 554, 555, 556, 1134, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 1123, 1124, 1125,
	1126, 0, 580, 0, 572, 573, 574, 1135, 575, 1136,
	1053, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 1097, 590, 0,
	0, 591, 592, 593, 649, 1120, 1157, 0, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 2035, 1075,
	1047, 1048, 1049, 1045, 1046, 1058, 1059, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1099, 1063, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 0, 1112, 0, 282, 1119,
	283, 1118, 0, 1129, 284, 285, 286, 287, 288, 289,
	1065, 1098, 1032, 290, 1159, 1160, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 4406, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 1122, 321, 1116, 1115, 1036,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 1107, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 1042, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 1054,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 1114,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 1127, 1128, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 1064, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 1109, 1110, 0,
	1070, 0, 386, 387, 0, 1102, 0, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 1033, 264, 0, 448,
	449, 1055, 1103, 450, 1117, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 1113, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 1043, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 1111, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 1158, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 1031, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 1123, 1124,
	1125, 1126, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 1053, 576, 577, 578, 579, 0, 4405, 582, 0,
	1037, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 1120, 1157, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 1197, 0, 0, 1028, 1029,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 1057, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 1098, 0, 290,
	608, 609, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1183, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 264, 1151, 448, 449, 0, 1103, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 1191, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 224, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	0, 558, 226, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 1547, 650, 651, 0, 595, 594, 596, 652, 1197,
	0, 0, 218, 597, 598, 653, 599, 600, 601, 0,
	0, 219, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 1187, 1099, 1880, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1183, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 1189, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 1191, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 3152, 0, 1197, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 1187, 0, 1880, 1099, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 1098, 0, 290,
	608, 609, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1183, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 264, 1151, 448, 449, 0, 1103, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 1191, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1179,
	0, 1197, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 1187, 0, 1185, 1099, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 1098, 0, 290, 608, 609, 610, 0,
	291, 292, 1105, 0, 1086, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 1089, 1087, 1088, 1095,
	1091, 1090, 1094, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1130, 1131,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1137, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1100, 1101, 1104, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 1102, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1183, 398, 400, 399, 0, 401, 1138,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 1093, 1092, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 264,
	1151, 448, 449, 0, 1103, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 1189, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 1132, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 1133,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	1191, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1096, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	1134, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	1135, 575, 1136, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	1097, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 1197, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 1187, 1099, 1185,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 1098, 0, 290,
	608, 609, 610, 0, 291, 292, 1105, 0, 1086, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	1089, 1087, 1088, 1095, 1091, 1090, 1094, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 1130, 1131, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	1137, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	1100, 1101, 1104, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 1102, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1183, 398, 400,
	399, 0, 401, 1138, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 1093, 1092, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 264, 1151, 448, 449, 0, 1103, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 1189, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	1132, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 1133, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 1191, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1096, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 1134, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 1135, 575, 1136, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 1097, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 1197,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 1187, 1099, 1185, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 1098, 0, 290, 608, 609, 610, 0, 291, 292,
	1105, 0, 1086, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 1089, 1087, 1088, 1095, 1091, 1090,
	1094, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1130, 1131, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1137, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1100, 1101, 1104, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 1102, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 1138, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	1093, 1092, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 264, 1151, 448,
	449, 0, 1103, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 1132, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 1133, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1096, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 1134, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 1135, 575,
	1136, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 1097, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 1197, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1099, 3922, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 1098, 0, 290, 608, 609,
	610, 0, 291, 292, 1105, 0, 1086, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 1089, 1087,
	1088, 1095, 1091, 1090, 1094, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1130, 1131, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1137, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1100, 1101,
	1104, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 1102,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1138, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 1093, 1092, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 264, 1151, 448, 449, 0, 1103, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 1132, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 1133, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 1191, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1096, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 1134, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 1135, 575, 1136, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 1097, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1021, 0, 1277,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 1779, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 226, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 1547, 650, 651, 0, 595,
	594, 596, 652, 1544, 0, 1277, 218, 597, 598, 653,
	599, 600, 601, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 183, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 224, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 226, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 1547, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 218, 597, 598, 653, 599, 600, 601, 0,
	0, 219, 0, 0, 0, 0, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 2125, 0, 0, 0, 0, 2126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3422, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 2124, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1197, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1099, 1553, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 1098,
	0, 290, 608, 609, 610, 0, 291, 292, 1105, 0,
	1086, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 1089, 1087, 1088, 1095, 1091, 1090, 1094, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1130, 1131, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1137, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 1100, 1101, 1104, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 1102, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 1138, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 1093, 1092,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 264, 1151, 448, 449, 0,
	1103, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 1132, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 1133, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1096, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 1134, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 1135, 575, 1136, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 1097, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1021, 0, 259, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 224, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	226, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 1547,
	650, 651, 0, 595, 594, 596, 652, 259, 0, 0,
	218, 597, 598, 653, 599, 600, 601, 0, 0, 219,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 183, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 259, 2883, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 1894, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 4560,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 3374, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	1541, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 259, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 2871, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 259, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 3527, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 864, 0, 772, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 2200,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 779, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 862, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 777, 563, 564, 565, 566, 567,
	778, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 770, 0, 772, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 782, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 779, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	777, 563, 564, 565, 566, 567, 778, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 1931, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 782, 0, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 0, 1937,
	0, 282, 1927, 283, 1943, 0, 1950, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 1953, 1954, 0,
	0, 291, 292, 0, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 1122, 321,
	1941, 1940, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1107, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 0, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 1939, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 1948, 1949, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 0, 0, 0,
	369, 0, 370, 371, 372, 373, 374, 0, 0, 0,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	1934, 1935, 0, 1930, 0, 386, 387, 1144, 0, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	0, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 0, 450, 1942, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 0, 1152, 461, 1153, 0, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 1924, 474, 475, 476, 1925, 477, 478, 479,
	0, 480, 0, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1938, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	0, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 1936, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 1952, 553, 554, 555,
	556, 0, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 1944, 1945, 1946, 1947, 0, 580, 0, 572, 573,
	574, 0, 575, 0, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 0, 1928,
	1951, 0, 595, 594, 596, 0, 0, 772, 0, 0,
	597, 598, 0, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 1918, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 779, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 777, 563, 564, 565, 566, 567,
	778, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 772, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 782, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	779, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	2242, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 2243, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 777, 563, 564, 565, 566, 567, 778,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 2244, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	2000, 0, 1277, 1967, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 782, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 1964, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1965, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1961, 0, 1277, 1967,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 1139, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 1282, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1140, 315, 316, 0, 0, 0, 0, 0, 0, 1964,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 1141, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 1143, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1142, 384, 625, 626, 0, 627,
	0, 386, 387, 1144, 628, 1145, 388, 389, 390, 1146,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 1147, 402, 403,
	1148, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1149, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1150, 438, 0, 0, 1151, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	1152, 461, 1153, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1154, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1965, 537, 538,
	521, 522, 539, 540, 1155, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 772, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 779, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 1957, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 777, 563, 564, 565, 566, 567,
	778, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 1956, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 772, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 782, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	779, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 1910, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 777, 563, 564, 565, 566, 567, 778,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 1909, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 1277, 1967, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 782, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 1139, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 1282, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1140, 315, 316, 0, 0, 0,
	0, 0, 0, 1964, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 1141, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 1143, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1142, 384,
	625, 626, 0, 627, 0, 386, 387, 1144, 628, 1145,
	388, 389, 390, 1146, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 1147, 402, 403, 1148, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1149, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1150, 438, 0,
	0, 1151, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 1152, 461, 1153, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1154, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1965, 537, 538, 521, 522, 539, 540, 1155, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 1277, 1276, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 1139, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 1282,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1140, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 1141, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 1143, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1142, 384, 625, 626, 0, 627, 0, 386,
	387, 1144, 628, 1145, 388, 389, 390, 1146, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 1147, 402, 403, 1148, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1149, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1150, 438, 0, 0, 1151, 448, 449, 3713, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 1152, 461,
	1153, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1154,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1155, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	1277, 1276, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 3346, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1597, 0, 1277, 1276, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1139, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 1282, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1140, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 1596, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 1141, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 1143, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1142, 384, 625, 626, 0, 627, 0, 386, 387,
	1144, 628, 1145, 388, 389, 390, 1146, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 1147, 402, 403, 1148, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1149, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1150, 438, 0, 0, 1151, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 1152, 461, 1153,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 1595, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1154, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 1594, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1155, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 1516,
	0, 1277, 1276, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 1515, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 1477, 0, 1277, 1276, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 1445, 0, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 1444, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 1271, 0, 1277,
	1276, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1139,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 1282, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1140, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 1141, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1270, 623, 624, 451, 1143, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1142, 384, 625, 626, 0,
	627, 0, 386, 387, 1144, 628, 1145, 388, 389, 390,
	1146, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 1147, 402,
	403, 1148, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1149, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1150, 438, 0, 0, 1151, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 1152, 461, 1153, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1154, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1155, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 1277, 1276, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 1139, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 1282, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1140, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 1141, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 1143, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1142,
	384, 625, 626, 0, 627, 0, 386, 387, 1144, 628,
	1145, 388, 389, 390, 1146, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 1147, 402, 403, 1148, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1149, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1150, 438,
	0, 0, 1151, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 1152, 461, 1153, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1154, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1155,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 1277, 1967, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 1139, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	1282, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1140,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 2007, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 1141, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 1143, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1142, 384, 625, 626, 0, 627, 0,
	386, 387, 1144, 628, 1145, 388, 389, 390, 1146, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 1147, 402, 403, 1148,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1149,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1150, 438, 0, 0, 1151, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 1152,
	461, 1153, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1154, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1155, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 0, 595, 594, 596,
	652, 1277, 1276, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 1139, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 1282, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1140, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	1141, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	1143, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1142, 384, 625,
	626, 0, 627, 0, 386, 387, 1144, 628, 1145, 388,
	389, 390, 1146, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	1147, 402, 403, 1148, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1149, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1150, 438, 0, 0,
	1151, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 1152, 461, 1153, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1154, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1155, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	1277, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	1139, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 1282, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1140, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 1141,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 1143,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1142, 384, 625, 626,
	0, 627, 0, 386, 387, 1144, 628, 1145, 388, 389,
	390, 1146, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 1147,
	402, 403, 1148, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1149, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1150, 438, 0, 0, 1151,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 1152, 461, 1153, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1154, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1155, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 2700, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 2697, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 2704, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	2896, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 2703, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 2893,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 2895, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 2892, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 2702, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	2894, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 2700, 291, 292, 611,
	0, 0, 2694, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 2697, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 2704, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 2703, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2693, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 2702, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 2701,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1665, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 1668, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 1666, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 1667, 594, 596, 652, 1423, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1425, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 1189, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1420, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1422, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 1189,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1328, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1330, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 1189, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 685, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 684,
	270, 271, 272, 674, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 677, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 678, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	679, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 673, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 674,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 677, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 678, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 679, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 1189, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 3303, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 2842, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 2841, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 2214, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	2158, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 2164, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 2163, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 2151, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	2153, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 2121,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 1189, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1519, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1440, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1433, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1435, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1261, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1260, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1251, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1250,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1248, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1247, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1243, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1242, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	655, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 250, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 3644, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 3645, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 3647,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 3648, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 3643,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 677, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 678, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 679, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 2251, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 2249, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 2247, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 2170, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 1986, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 1980, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 851, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 850, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 849, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 2896, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 3982, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 622, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 3892, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 3894, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 0, 595, 594, 596, 652, 742, 0, 259,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 1298,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 1296, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	743, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 739, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 1299, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 738, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 0, 595,
	594, 596, 652, 742, 0, 259, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 1298, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 1296, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 743, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 739, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 1299, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 738, 644, 645, 646, 0, 580,
	0, 572, 1297, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 664,
	0, 259, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 663, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 622, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 662, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	0, 595, 594, 596, 652, 259, 2883, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	3992, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 4241, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	4239, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 3684, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	2586, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 0, 595, 594, 596, 652, 259,
	2883, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 622, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 2880, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 2224, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 2212, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 742, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	732, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 743, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 739, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 1552, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 738,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1525, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1524, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1510, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1508, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1504, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 1481, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 1479,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 1442, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 1428, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	1266, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 1265, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 1257, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 1256, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 1210, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 748, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 0, 595, 594, 596, 652,
	742, 0, 259, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 732, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 730, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 622, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 731, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 743, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	733, 516, 0, 517, 518, 524, 525, 519, 520, 739,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 734,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 738, 644, 645, 646, 0, 580, 0, 572, 736,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 0, 595, 594, 596, 652, 724, 0, 259, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 725, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 0, 595, 594,
	596, 652, 687, 0, 259, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 681, 0,
	259, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 622, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 0,
	595, 594, 596, 652, 659, 0, 259, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 622, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 369, 0, 370, 371, 372, 373, 374, 3392,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 259, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 603,
	604, 0, 282, 605, 283, 606, 0, 607, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 608, 609,
	610, 0, 291, 292, 611, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 612, 613, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 614,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	615, 616, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 617, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 618, 619, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 620, 0,
	621, 369, 0, 370, 371, 372, 373, 374, 3340, 623,
	624, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 625, 626, 0, 627, 0, 386, 387, 0, 628,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 629, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 630, 450, 631, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 632, 0, 461, 0, 633, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 634, 474, 475, 476, 635, 477, 478,
	479, 636, 480, 637, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 638, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 639, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 640, 0, 547, 0,
	548, 549, 550, 551, 523, 552, 557, 641, 553, 554,
	555, 556, 642, 559, 560, 0, 561, 562, 0, 558,
	0, 563, 564, 565, 566, 567, 568, 569, 345, 570,
	0, 571, 643, 644, 645, 646, 0, 580, 0, 572,
	573, 574, 647, 575, 648, 0, 576, 577, 578, 579,
	0, 581, 582, 0, 0, 583, 584, 585, 587, 588,
	586, 589, 0, 590, 0, 0, 591, 592, 593, 649,
	650, 651, 259, 595, 594, 596, 652, 0, 0, 0,
	0, 597, 598, 653, 599, 600, 601, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 603, 604,
	0, 282, 605, 283, 606, 0, 607, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 608, 609, 610,
	0, 291, 292, 611, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	612, 613, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 614, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 615,
	616, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 617, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 618, 619, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 620, 0, 621,
	369, 0, 370, 371, 372, 373, 374, 3274, 623, 624,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	625, 626, 0, 627, 0, 386, 387, 0, 628, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	629, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 630, 450, 631, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 632, 0, 461, 0, 633, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 634, 474, 475, 476, 635, 477, 478, 479,
	636, 480, 637, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 638, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	639, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 640, 0, 547, 0, 548,
	549, 550, 551, 523, 552, 557, 641, 553, 554, 555,
	556, 642, 559, 560, 0, 561, 562, 0, 558, 0,
	563, 564, 565, 566, 567, 568, 569, 345, 570, 0,
	571, 643, 644, 645, 646, 0, 580, 0, 572, 573,
	574, 647, 575, 648, 0, 576, 577, 578, 579, 0,
	581, 582, 0, 0, 583, 584, 585, 587, 588, 586,
	589, 0, 590, 0, 0, 591, 592, 593, 649, 650,
	651, 259, 595, 594, 596, 652, 0, 0, 0, 0,
	597, 598, 653, 599, 600, 601, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 603, 604, 0,
	282, 605, 283, 606, 0, 607, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 608, 609, 610, 0,
	291, 292, 611, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 612,
	613, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 614, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 615, 616,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 617, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 618, 619, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 620, 0, 621, 369,
	0, 370, 371, 372, 373, 374, 3272, 623, 624, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 625,
	626, 0, 627, 0, 386, 387, 0, 628, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 629,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 630, 450, 631, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 632, 0, 461, 0, 633, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 634, 474, 475, 476, 635, 477, 478, 479, 636,
	480, 637, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 638, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 639,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 640, 0, 547, 0, 548, 549,
	550, 551, 523, 552, 557, 641, 553, 554, 555, 556,
	642, 559, 560, 0, 561, 562, 0, 558, 0, 563,
	564, 565, 566, 567, 568, 569, 345, 570, 0, 571,
	643, 644, 645, 646, 0, 580, 0, 572, 573, 574,
	647, 575, 648, 0, 576, 577, 578, 579, 0, 581,
	582, 0, 0, 583, 584, 585, 587, 588, 586, 589,
	0, 590, 0, 0, 591, 592, 593, 649, 650, 651,
	259, 595, 594, 596, 652, 0, 0, 0, 0, 597,
	598, 653, 599, 600, 601, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 603, 604, 0, 282,
	605, 283, 606, 0, 607, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 608, 609, 610, 0, 291,
	292, 611, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 612, 613,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 614, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 615, 616, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	617, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 618, 619, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 620, 0, 621, 369, 0,
	370, 371, 372, 373, 374, 3257, 623, 624, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 625, 626,
	0, 627, 0, 386, 387, 0, 628, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 629, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 630, 450, 631, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 632, 0, 461, 0, 633, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	634, 474, 475, 476, 635, 477, 478, 479, 636, 480,
	637, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 638, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 639, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 640, 0, 547, 0, 548, 549, 550,
	551, 523, 552, 557, 641, 553, 554, 555, 556, 642,
	559, 560, 0, 561, 562, 0, 558, 0, 563, 564,
	565, 566, 567, 568, 569, 345, 570, 0, 571, 643,
	644, 645, 646, 0, 580, 0, 572, 573, 574, 647,
	575, 648, 0, 576, 577, 578, 579, 0, 581, 582,
	0, 0, 583, 584, 585, 587, 588, 586, 589, 0,
	590, 0, 0, 591, 592, 593, 649, 650, 651, 259,
	595, 594, 596, 652, 0, 0, 0, 0, 597, 598,
	653, 599, 600, 601, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 603, 604, 0, 282, 605,
	283, 606, 0, 607, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 608, 609, 610, 0, 291, 292,
	611, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 612, 613, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 614, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 615, 616, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 617,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 618, 619, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 620, 0, 621, 369, 0, 370,
	371, 372, 373, 374, 2851, 623, 624, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 625, 626, 0,
	627, 0, 386, 387, 0, 628, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 629, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 630, 450, 631, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	632, 0, 461, 0, 633, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 634,
	474, 475, 476, 635, 477, 478, 479, 636, 480, 637,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 638, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 639, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 640, 0, 547, 0, 548, 549, 550, 551,
	523, 552, 557, 641, 553, 554, 555, 556, 642, 559,
	560, 0, 561, 562, 0, 558, 0, 563, 564, 565,
	566, 567, 568, 569, 345, 570, 0, 571, 643, 644,
	645, 646, 0, 580, 0, 572, 573, 574, 647, 575,
	648, 0, 576, 577, 578, 579, 0, 581, 582, 0,
	0, 583, 584, 585, 587, 588, 586, 589, 0, 590,
	0, 0, 591, 592, 593, 649, 650, 651, 259, 595,
	594, 596, 652, 0, 0, 0, 0, 597, 598, 653,
	599, 600, 601, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 603, 604, 0, 282, 605, 283,
	606, 0, 607, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 608, 609, 610, 0, 291, 292, 611,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 612, 613, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 614, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 615, 616, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 617, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	618, 619, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 620, 0, 621, 369, 0, 370, 371,
	372, 373, 374, 622, 623, 624, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 625, 626, 0, 627,
	0, 386, 387, 0, 628, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 629, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 630, 450, 631, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 632,
	0, 461, 0, 633, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 634, 474,
	475, 476, 635, 477, 478, 479, 636, 480, 637, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 638, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 639, 516, 0, 517,
	518, 725, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 640, 0, 547, 0, 548, 549, 550, 551, 523,
	552, 557, 641, 553, 554, 555, 556, 642, 559, 560,
	0, 561, 562, 0, 558, 0, 563, 564, 565, 566,
	567, 568, 569, 345, 570, 0, 571, 643, 644, 645,
	646, 0, 580, 0, 572, 573, 574, 647, 575, 648,
	0, 576, 577, 578, 579, 0, 581, 582, 0, 0,
	583, 584, 585, 587, 588, 586, 589, 0, 590, 0,
	0, 591, 592, 593, 649, 650, 651, 259, 595, 594,
	596, 652, 0, 0, 0, 0, 597, 598, 653, 599,
	600, 601, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	602, 0, 2187, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 603, 604, 0, 282, 605, 283, 606,
	0, 607, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 608, 609, 610, 0, 291, 292, 611, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 612, 613, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 614, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 615, 616, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 617, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 618,
	619, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 620, 0, 621, 369, 0, 370, 371, 372,
	373, 374, 622, 623, 624, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 625, 626, 0, 627, 0,
	386, 387, 0, 628, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 629, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	630, 450, 631, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 632, 0,
	461, 0, 633, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 634, 474, 475,
	476, 635, 477, 478, 479, 636, 480, 637, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 638, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 639, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 0, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	640, 0, 547, 0, 548, 549, 550, 551, 523, 552,
	557, 641, 553, 554, 555, 556, 642, 559, 560, 0,
	561, 562, 0, 558, 0, 563, 564, 565, 566, 567,
	568, 569, 345, 570, 0, 571, 643, 644, 645, 646,
	0, 580, 0, 572, 573, 574, 647, 575, 648, 0,
	576, 577, 578, 579, 0, 581, 582, 0, 0, 583,
	584, 585, 587, 588, 586, 589, 0, 590, 0, 0,
	591, 592, 593, 649, 650, 651, 259, 595, 594, 596,
	652, 0, 0, 0, 0, 597, 598, 653, 599, 600,
	601, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 603, 604, 0, 282, 605, 283, 606, 0,
	607, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 608, 609, 610, 0, 291, 292, 611, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 612, 613, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 614, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 615, 616, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 617, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 618, 619,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 620, 0, 621, 369, 0, 370, 371, 372, 373,
	374, 1228, 623, 624, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 625, 626, 0, 627, 0, 386,
	387, 0, 628, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 629, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 630,
	450, 631, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 632, 0, 461,
	0, 633, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 634, 474, 475, 476,
	635, 477, 478, 479, 636, 480, 637, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	638, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 639, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 640,
	0, 547, 0, 548, 549, 550, 551, 523, 552, 557,
	641, 553, 554, 555, 556, 642, 559, 560, 0, 561,
	562, 0, 558, 0, 563, 564, 565, 566, 567, 568,
	569, 345, 570, 0, 571, 643, 644, 645, 646, 0,
	580, 0, 572, 573, 574, 647, 575, 648, 0, 576,
	577, 578, 579, 0, 581, 582, 0, 0, 583, 584,
	585, 587, 588, 586, 589, 0, 590, 0, 0, 591,
	592, 593, 649, 650, 651, 259, 595, 594, 596, 652,
	0, 0, 0, 0, 597, 598, 653, 599, 600, 601,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 603, 604, 0, 282, 605, 283, 606, 0, 607,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	608, 609, 610, 0, 291, 292, 611, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 612, 613, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 614, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 615, 616, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 617, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 618, 619, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	620, 0, 621, 369, 0, 370, 371, 372, 373, 374,
	622, 623, 624, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 625, 626, 0, 627, 0, 386, 387,
	0, 628, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 629, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 630, 450,
	631, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 632, 0, 461, 0,
	633, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 634, 474, 475, 476, 635,
	477, 478, 479, 636, 480, 637, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 638,
	492, 1162, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 639, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 640, 0,
	547, 0, 548, 549, 550, 551, 523, 552, 557, 641,
	553, 554, 555, 556, 642, 559, 560, 0, 561, 562,
	0, 558, 0, 563, 564, 565, 566, 567, 568, 569,
	345, 570, 0, 571, 643, 644, 645, 646, 0, 580,
	0, 572, 573, 574, 647, 575, 648, 0, 576, 577,
	578, 579, 0, 581, 582, 0, 0, 583, 584, 585,
	587, 588, 586, 589, 0, 590, 0, 0, 591, 592,
	593, 649, 650, 651, 259, 595, 594, 596, 652, 0,
	0, 0, 0, 597, 598, 653, 599, 600, 601, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	603, 604, 0, 282, 605, 283, 606, 0, 607, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 608,
	609, 610, 0, 291, 292, 611, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 612, 613, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	614, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 615, 616, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 617, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 618, 619, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 620,
	0, 621, 0, 0, 370, 371, 372, 373, 374, 622,
	623, 624, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 625, 626, 0, 627, 0, 386, 387, 0,
	628, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 629, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 630, 450, 631,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 632, 0, 461, 0, 633,
	462, 463, 455, 464, 465, 0, 467, 468, 469, 470,
	471, 0, 472, 473, 634, 474, 475, 476, 635, 477,
	478, 479, 636, 480, 637, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 0, 490, 491, 638, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 639, 0, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 640, 0, 547,
	0, 548, 549, 550, 551, 523, 552, 557, 641, 553,
	554, 555, 556, 642, 559, 560, 0, 561, 562, 0,
	558, 0, 563, 564, 565, 566, 567, 568, 569, 345,
	570, 0, 571, 643, 644, 645, 646, 0, 580, 0,
	572, 573, 574, 647, 575, 648, 0, 576, 577, 578,
	579, 0, 581, 582, 0, 0, 583, 584, 585, 587,
	588, 586, 589, 0, 590, 0, 0, 591, 592, 593,
	649, 650, 651, 0, 595, 594, 596, 652, 0, 0,
	0, 0, 597, 598, 653, 599, 600, 601, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748,
	1756, 1757, 1758, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 1749, 1744, 0,
	0, 0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 1762, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 1715,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753,
	1721, 0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721,
	0, 0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763,
	0, 0, 0, 0, 0, 1743, 1745, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0,
	0, 1730, 1731, 0, 1743, 1745, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 1759, 0, 1760, 0, 0, 0, 0, 1750, 0,
	1730, 1731, 0, 0, 1736, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	4341, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 4337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 0, 0, 0, 4261, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 1713, 1714, 4225, 1746, 1747, 1748, 1756,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 1713,
	1714, 1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714,
	1716, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 1715, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1715, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0,
	1759, 0, 1760, 0, 1721, 0, 0, 0, 0, 1730,
	1731, 1753, 0, 1736, 1763, 0, 0, 0, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 1760,
	1753, 0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743,
	1745, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 1759, 0, 1760, 0,
	0, 0, 0, 1750, 0, 1730, 1731, 0, 0, 1736,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 4224, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 4060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 3918, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 1713, 1714,
	3851, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 1713, 1714, 1716,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 1715, 1713, 1714, 1762, 1746, 1747, 1748,
	1756, 1757, 1758, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 1749, 1744, 0,
	0, 0, 1715, 1713, 1714, 1716, 1746, 1747, 1748, 1756,
	1757, 1758, 1735, 1762, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 1715,
	0, 0, 1762, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 1715, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1739, 1740, 1741, 0, 0, 1759, 0, 1760, 1753,
	1721, 0, 1763, 0, 0, 1730, 1731, 0, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1751, 0, 1759, 0, 1760, 0, 1721,
	0, 0, 0, 0, 1730, 1731, 1753, 0, 1736, 1763,
	0, 0, 0, 0, 0, 1743, 1745, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 1760, 1753, 0, 1736, 1763, 0,
	0, 1730, 1731, 0, 1743, 1745, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 1759, 0, 1760, 0, 0, 0, 0, 1750, 0,
	1730, 1731, 0, 0, 1736, 0, 0, 0, 0, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	3850, 0, 0, 0, 1752, 0, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0, 3849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755,
	1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720,
	1722, 1723, 0, 0, 0, 0, 3532, 0, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 1713, 1714, 3048, 1746, 1747, 1748, 1756,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 0, 1713, 1714, 1716, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1715, 1713,
	1714, 1762, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 1749, 1744, 0, 0, 0, 1715, 1713, 1714,
	1716, 1746, 1747, 1748, 1756, 1757, 1758, 1735, 1762, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 1715, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1715, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1739, 1740, 1741, 0,
	0, 1759, 0, 1760, 1753, 1721, 0, 1763, 0, 0,
	1730, 1731, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1739, 1740, 1741, 1751, 0,
	1759, 0, 1760, 0, 1721, 0, 0, 0, 0, 1730,
	1731, 1753, 0, 1736, 1763, 0, 0, 0, 0, 0,
	1743, 1745, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 1760,
	1753, 0, 1736, 1763, 0, 0, 1730, 1731, 0, 1743,
	1745, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 1759, 0, 1760, 0,
	0, 0, 0, 1750, 0, 1730, 1731, 0, 0, 1736,
	0, 0, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	1752, 0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 0, 0, 0, 0, 3047, 0, 0, 0, 1752,
	0, 0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	0, 0, 0, 0, 3046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724,
	1725, 1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0,
	0, 3045, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 1713, 1714, 3012, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 0, 1713, 1714, 1716, 1746, 1747,
	1748, 1756, 1757, 1758, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1744,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 1715, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 1749, 1744, 0, 0, 0, 0,
	2983, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 1715, 0, 0, 0,
	0, 0, 1721, 4475, 0, 0, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 0, 3132, 0, 0, 3131, 0, 1753, 0,
	0, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 2984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 1760, 1753, 0, 0,
	1763, 0, 0, 1730, 1731, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 1751, 0, 1759, 0, 1760, 0, 1721, 0, 0,
	0, 0, 1730, 1731, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 1736, 1763, 0, 0, 0,
	0, 0, 1743, 1745, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 1760, 0, 0, 0, 0, 1750, 0, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 4474, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 1737, 0,
	2559, 0, 0, 0, 0, 0, 0, 1713, 1714, 0,
	1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	1749, 1744, 0, 0, 0, 2558, 0, 0, 1716, 0,
	0, 0, 0, 0, 1742, 0, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 0,
	1754, 1732, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 1738, 1739, 1740, 1741, 0, 0, 0,
	0, 0, 0, 1721, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1752, 0,
	0, 1762, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1753,
	0, 0, 1763, 0, 0, 0, 0, 1715, 1743, 1745,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 1759, 1732, 1760, 0, 0,
	0, 0, 0, 0, 1730, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 1761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758, 0,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 1749, 1744, 0, 0, 0, 0, 0,
	1742, 1716, 0, 0, 0, 0, 0, 1751, 0, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 1754, 0, 0, 0,
	0, 0, 0, 0, 1732, 1713, 1714, 0, 1746, 1747,
	1748, 1756, 1757, 1758, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1749, 1744,
	0, 0, 1750, 1018, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	1735, 0, 0, 0, 0, 0, 1721, 0, 0, 1732,
	0, 0, 0, 0, 1752, 1742, 0, 0, 0, 1727,
	1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717,
	1718, 1719, 1720, 1722, 1723, 1737, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1763, 0, 0, 0, 0,
	0, 1743, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 0, 0, 0, 0, 0, 0, 1730, 1731, 0,
	0, 1738, 1739, 1740, 1741, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 1751, 3138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	1763, 0, 0, 0, 0, 0, 1743, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1759, 0, 1760, 0, 0, 0, 1752,
	0, 0, 1730, 1731, 1727, 1728, 1734, 1755, 1733, 1729,
	1750, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1749,
	1744, 0, 0, 0, 3133, 0, 0, 1716, 0, 0,
	0, 0, 0, 1742, 0, 1762, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 1750, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 1754,
	1732, 0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1749, 1744, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 1742, 0,
	3513, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 1738, 1739, 1740, 1741, 0, 1735, 0, 0,
	0, 0, 1721, 0, 1754, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0, 1726,
	1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723, 1753, 0,
	0, 1763, 0, 0, 0, 0, 0, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 1760, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 0, 1738, 1739,
	1740, 1741, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 1736, 1727, 1728, 1734,
	1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718, 1719,
	1720, 1722, 1723, 0, 1753, 0, 0, 1763, 0, 0,
	0, 0, 0, 1743, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	1759, 0, 1760, 0, 0, 0, 0, 0, 0, 1730,
	1731, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 1713, 1714, 0, 1746, 1747, 1748, 1756,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1749, 1744, 0, 0,
	0, 3049, 0, 0, 1716, 0, 0, 0, 0, 1742,
	0, 0, 1762, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 1750, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 0, 3100, 0, 0, 1754, 0, 1732, 1713, 1714,
	0, 1746, 1747, 1748, 1756, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1744, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 1742, 0, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 1738,
	1739, 1740, 1741, 1735, 0, 0, 0, 0, 0, 1721,
	0, 1754, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 0, 1753, 0, 0, 1763, 0,
	0, 0, 0, 0, 1743, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1760, 0, 0, 0, 0, 0, 0,
	1730, 1731, 0, 0, 1738, 1739, 1740, 1741, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 0, 1736, 1727, 1728, 1734, 1755, 1733, 1729,
	0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
	1753, 0, 0, 1763, 0, 0, 0, 0, 0, 1743,
	1745, 0, 0, 0, 0, 0, 1713, 1714, 0, 1746,
	1747, 1748, 1756, 1757, 1758, 1761, 1759, 0, 1760, 0,
	0, 0, 0, 0, 0, 1730, 1731, 0, 0, 1749,
	1744, 0, 0, 1750, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 1751, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 1714, 0, 1746, 1747, 1748, 1756, 1757, 1758,
	0, 0, 1738, 1739, 1740, 1741, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 1744, 0, 0, 0, 0,
	0, 1742, 1716, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1763, 0, 0, 0, 0, 1715, 1743, 1745, 0,
	0, 0, 0, 0, 0, 0, 1735, 1754, 0, 0,
	0, 0, 0, 0, 1759, 1732, 1760, 0, 0, 0,
	1752, 0, 0, 1730, 1731, 1727, 1728, 1734, 1755, 1733,
	1729, 0, 1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722,
	1723, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1739, 1740,
	1741, 0, 0, 0, 0, 0, 0, 1721, 1761, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	1727, 1728, 1734, 1755, 1733, 1729, 0, 1726, 1724, 1725,
	1717, 1718, 1719, 1720, 1722, 1723, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 1763, 0, 0, 0,
	0, 0, 1743, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 1760, 0, 0, 0, 0, 0, 0, 1730, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 1742, 0, 0, 0, 1727, 1728,
	1734, 1755, 1733, 1729, 0, 1726, 1724, 1725, 1717, 1718,
	1719, 1720, 1722, 1723, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 0, 0, 1727, 1728, 1734, 1755, 1733, 1729, 0,
	1726, 1724, 1725, 1717, 1718, 1719, 1720, 1722, 1723,
}

var sqlPact = [...]int{
	7446, -1000, -1000, -1000, -1000, 311, -1000, -1000, 310, 300,
	297, 292, 290, 289, 286, 283, 281, 275, 272, -1000,
	-1000, -1000, -1000, -1000, -1000, 270, -1000, -1000, 267, -1000,
	265, 263, 262, -1000, -1000, 261, -1000, 258, -1000, -1000,
	-1000, -1000, 256, 255, 254, 86274, 85738, 86803, 2239, 107582,
	94237, 1916, 77190, 107046, 76654, 106510, 2128, 9227, 105974, 2700,
	243, -1000, 105438, 229, 227, 205, -1000, 104902, -1000, 1833,
	-1000, 202, 4329, 62169, 196, 195, 188, 2821, 187, -1000,
	186, 182, 180, -1000, 10988, 1646, -1000, 178, 177, -1000,
	298, 91571, 173, 171, 2509, 170, 168, 61633, 164, 163,
	2203, 2893, -1000, -1000, 2051, -1000, -1000, 161, 156, 154,
	153, 152, 151, 150, 149, 148, 140, 131, -1000, 128,
	126, 124, 123, 121, -1000, 118, 117, 115, -1000, 113,
	-1000, 110, 108, 107, 99, 97, 95, 90, 89, 87,
	84, 83, 79, 78, -1000, 8376, -1000, 1925, 1694, 1687,
	1684, 1680, 1671, 1020, 77, 73, 72, 71, 70, 68,
	67, 65, 59, -1000, 57, 54, 53, 52, 46, 42,
	35, 26, 203, 17, 16, 15, 8, 7, 6, 5,
	2210, -1000, 1714, 1061, 28843, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 113401, 108111,
	3, -58, 1, -1000, 3296, 1100, 51417, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 387, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 606, 1815, 815, -1000,
	-1000, -1000, 104373, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2237, -39, -1000, 2015, -1000, -1000, -1000, -1000, -1000,
	814, -1000, 2236, 158, 2179, -1000, -1000, -1000, 3330, 2400,
	3754, 3753, 3752, 3751, 3750, 112872, 1838, 3749, 2518, 3747,
	3746, 3745, 3742, 3739, 3736, 3735, -1000, 85202, 1080, 84666,
	84130, 3347, 103844, 83594, 103308, 70775, 43645, 1060, 3325, -1000,
	-1000, -1000, -1000, -1000, -1000, 108111, -1000, 1079, -1000, -1000,
	3734, 3731, 2024, 813, 93701, -1000, 1968, -1000, 954, 30526,
	-1000, 1282, -1000, 30526, 385, -1000, -1000, -1000, -1000, -1000,
	-1000, 3730, 3729, 3725, 3724, 3720, -1000, -1000, 76118, 22059,
	75582, 75046, 102772, 21513, 83058, 82522, 102236, 70229, 1075, 1469,
	-1000, -1000, -1000, -1000, -1000, -1000, -14, 68045, 3494, 108111,
	-1000, 384, -1000, -1000, -1000, -1000, -1000, -1000, 43072, 915,
	42499, 872, 41926, 832, -1000, -1000, -1000, -1000, 69683, -1000,
	101700, 2391, 3715, 3709, 1166, 3708, 3232, 1814, 3706, 1867,
	1263, 3700, 3693, 3692, 3691, 3687, 3686, 3682, 1466, 101164,
	2959, 100628, 1737, 69137, 1074, 81986, 86803, 2695, 100092, 1455,
	1428, -1000, -1000, -1000, -1000, 3056, 2892, 2839, 1435, -1000,
	-1000, -1000, -1000, 54091, 5875, 5444, 9245, 99556, 56299, 86803,
	86803, -1000, -1000, -1000, -1000, -1000, 41353, 757, 40780, 1026,
	-1000, -1000, 54643, 2900, -1000, -1000, -1000, -1000, 40207, 381,
	39634, 922, 108111, -1000, 2956, 1986, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2356, 1625, 3551, 2736, 68591, 2042, 1407, 3292, 3046,
	3042, 1536, 3039, 3681, 2529, 3029, 3027, 3026, 3017, 3013,
	1522, 2584, 305, 28270, 2920, 1773, 39061, 1537, 1601, 3009,
	3008, 3562, 1972, 1979, 2061, 74510, 3680, 3679, 3251, 3002,
	2985, 2772, 2975, -1000, 2899, -1000, -1000, -1000, -1000, 1486,
	-1000, -1000, -1000, -1000, 77719, -1000, -1000, 1471, -1000, -1000,
	1471, -1000, -1000, -1000, -1000, -1000, 1388, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1714, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2304,
	-1000, 2018, -1000, -1000, 2422, 3272, 3272, 3272, 3324, 586,
	585, -1000, 203, -1000, -1000, 118697, -1000, -1000, 44206, 44206,
	44206, 44206, 44206, 44206, 44206, 2144, -1000, 811, -1000, -1000,
	849, -1000, 808, 673, -1000, -1000, -1000, -1000, -1000, -1000,
	807, -1000, -1000, -1000, -1000, -1000, -1000, 3494, -1000, 24844,
	-1000, -1000, -1000, 543, 806, 44206, -1000, -1000, 3576, 3575,
	1059, -1000, 377, 998, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2952, 804, 802, -1000,
	800, 796, 794, 793, 792, -1000, -1000, -1000, 791, 788,
	787, 784, 783, 780, 772, 770, -1000, 2053, -1000, -1000,
	-1000, -1000, -1000, -1000, 729, 720, 720, 720, -1000, 1069,
	-1000, -1000, -1000, 378, 719, 354, 718, 714, 713, -1000,
	768, 767, 766, 756, 755, 754, 753, 752, 750, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1065, -1000, -1000, -1000,
	-1000, -15, 108111, -1000, 606, -15, -1000, -1000, 749, -1000,
	32782, 32782, 32782, -1000, -1000, 2232, 44206, -1000, 2417, -1000,
	-9, -9, 928, 53019, -1000, 50345, 928, 338, 859, 57903,
	-1000, 2897, -1000, -1000, 748, 351, -1000, -1000, -1000, -1000,
	22603, 2894, 108111, 108111, 86803, 86803, 86803, 3058, 44206, -1000,
	-1000, 65892, 108111, 87861, -1000, -1000, 3438, 62698, 65363, 108111,
	2951, 64834, 3678, -1000, -1000, -1000, -1000, -1000, 3142, 3676,
	3675, 3674, -1000, 108111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 207, 3141, -1000, -1000, 91035, 207, 3140, -1000, 207,
	3134, -1000, 90506, -1000, -1000, 2212, 3111, -1000, -1000, 211,
	3109, -1000, -1000, -1000, 208, 3108, -1000, -1000, 349, -82,
	3104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 118697, -1000, -1000, -1000, 64298, -1000, 3269,
	-1000, -1000, 108111, -1000, 44206, -1000, 3436, 1762, 71853, 3372,
	-30, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2478, 2440,
	1165, 2284, -1000, 3041, 1819, -1000, 30526, 3221, -1000, -1000,
	-1000, 340, 22603, -1000, -1000, -1000, -1000, -1000, -1000, 4593,
	3101, 1403, -1000, 2281, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1742, 3100, -1000, 2122, 3096, 1712, -1000, -1000, 2586,
	-1000, 3248, -1000, -1000, 2033, 3093, -8, -1000, -1000, 2197,
	-1000, 1934, -1000, 1032, 3092, -1000, 81450, 55747, 54643, 68045,
	-20, -1000, -1000, -1000, -1000, -235, -1000, 20967, 118697, -1000,
	-1000, -1000, -1000, 1716, 118697, 1010, -1000, -1000, 3089, -1000,
	118697, 932, -1000, -1000, 3086, -1000, 2948, -1000, -1000, 2353,
	-1000, -1000, 3673, -1000, -1000, 3671, -1000, 3669, 3668, 3666,
	-1000, 1715, 2038, 3663, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 80921, 2228, -1000, -1000, 79849, -1000, 2352, 3365,
	-1000, 80385, 1073, -1000, 1032, 2351, -1000, 89977, 1107, -1000,
	3662, 3343, 2706, 1032, 2350, -1000, -1000, -1000, -1000, -1000,
	1072, -1000, 59500, -1000, 59500, -1000, 1611, -1000, 112343, -9,
	86803, 3494, -1000, -44, -1000, -1000, -1000, 1100, -1000, 53555,
	-1000, 53555, 93165, 71319, 1006, 855, 61097, 118697, -1000, -1000,
	-1000, -1000, 118697, -1000, -1000, -1000, -284, 2735, -1000, 71319,
	54643, 118697, -1000, -1000, -1000, -1000, 118697, -1000, -1000, -1000,
	71319, 79849, -1000, 99020, 79320, -1000, -1000, 1463, 2517, -1000,
	-1000, -1000, 71319, 1339, 71319, 71319, 71319, -1000, 98484, -1000,
	-1000, 2034, 1519, 3255, 2011, 86803, -1000, 1917, -1000, -1000,
	-1000, 3277, 108111, -1000, -1000, 2945, -1000, 63762, 89448, -1000,
	88919, -1000, 88390, -1000, 86803, -1000, 86803, -1000, 3661, 3659,
	3657, 3656, -1000, 3655, 3275, -1000, 118697, 3258, -1000, 3654,
	3362, 2920, 118697, -1000, 3019, 1679, 1675, 108111, -1000, -1000,
	108111, -1000, 108111, -1000, -1000, -1000, 1518, -1000, -1000, 2476,
	-1000, -1000, -1000, -1000, 86803, -1000, -1000, -1000, -1000, -1000,
	-1000, 2919, -1000, 1745, -1000, 1770, -1000, 2890, 3281, -1000,
	1419, -1000, -1000, 226, -1000, -1000, -30, -1000, 111814, -1000,
	2422, -1000, 108111, -1000, 2492, 2904, 2917, 1575, 2214, 2547,
	-1000, 38488, 2531, 47572, 2278, 203, -1000, -1000, 203, 203,
	29965, -1000, -1000, 62698, 62698, 22603, 1394, 44206, 44206, 44206,
	44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206,
	44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206,
	44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206, 44206,
	44206, 44206, 1947, 44206, 1386, 44206, 44206, 44206, 44206, 2130,
	-1000, -1000, 1945, 627, 2023, -1000, 3500, 3500, 3500, 707,
	707, 119060, 119060, 740, 3653, 849, -1000, 44206, -1000, 125,
	44206, 23149, -1000, 585, 12420, 2457, -1000, 584, 23722, -1000,
	-1000, -1000, 24844, 673, 37915, 44206, 1050, 118697, -1000, -1000,
	1579, 3523, 20422, 2968, 2766, 744, 933, 911, 27697, 27124,
	26551, 25978, 774, 44206, 44206, 44206, 44206, 44206, 44206, 44206,
	44206, -1000, -1000, 3550, -1000, 3523, -1000, -1000, -1000, -1000,
	3523, 1393, 1345, 3523, -1000, 3523, 3523, 7322, 7322, 37354,
	36781, 36208, 48133, 35635, 44206, 25405, 35062, 34489, -1000, 108111,
	-15, 3434, 44206, 145, -1000, 117536, -1000, 145, 145, 743,
	-46, 118697, 2634, 2634, 51951, 2269, 2152, 2152, 2152, -1000,
	928, 16033, 928, 97421, 2162, 928, 928, 334, 359, 577,
	49811, 2417, 97421, 836, 742, 0, -1, -2, -1000, -1000,
	-3, -4, -1000, -1000, 86803, 734, 23149, 22603, 329, 1494,
	-55, 2619, 2616, 2615, -1000, 2609, 1800, -62, 1382, 86803,
	108111, -103, -1000, 251, -65, -1000, 1368, 328, 3523, -1000,
	-1000, -1000, -1000, -1000, 3651, 3650, -1000, 1054, 733, 732,
	466, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 729,
	720, 720, 720, -1000, 378, 719, 354, 718, 714, 713,
	-1000, -1000, -1000, -1000, -1000, 2887, 86803, 108111, -235, 87861,
	-141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 108111,
	-1000, -1000, -1000, 3649, -1000, 86803, -1000, -1000, 86803, 207,
	3082, -1000, 86803, -1000, 86803, 201, 3081, -1000, -1000, 108111,
	-1000, 86803, 86803, -1000, 108111, 108111, 108111, 71319, 71319, 220,
	-1000, 86803, 931, -80, 1168, -30, -1000, -1000, -1000, 1471,
	-1000, 1772, -1000, -1000, -1000, -1000, -1000, -1000, 1479, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1059, -1000, -1000,
	-1000, -1000, -1000, -1000, 3515, 3510, -18, -1000, -1000, 22603,
	-1000, -31, 1615, 2106, -1000, 73974, 2407, 3254, 3646, 2698,
	3242, 1597, -1000, 1512, 1381, 3322, 77719, 3395, 3412, 346,
	-1000, 2886, -1000, -1000, 953, 1743, 1766, 1379, 77719, 2122,
	-1000, 62698, -1000, 2566, 3318, 1447, 1443, 1447, 1447, 1415,
	-1000, 77719, 1758, 1377, 1369, 1988, 1981, -1000, -1000, -1000,
	1365, 1355, 885, 1953, -1000, -32, 3390, 3404, 63, -1000,
	2885, 1354, -1000, -1000, 86803, 22603, 1582, 1593, 1746, 1332,
	-19, -1000, 3383, 3377, 1329, 1325, -1000, 4615, -1000, 71319,
	1709, 3080, 2731, 926, 2729, -1000, -1000, -1000, 926, -20,
	68045, 108111, 321, -1000, 125, 44206, 44206, 125, 44206, 125,
	3358, 3079, -1000, -1000, -1000, -1000, -1000, 3645, 1939, 2513,
	-1000, -1000, 711, 2349, 2880, 108111, 2646, -23, 86803, -1000,
	3076, 66428, 2122, 2348, -1000, -1000, 78784, -1000, 3075, 606,
	2343, -1000, 762, 3644, -1000, 111285, -1000, 3269, 1404, 3073,
	1122, 759, 3433, -1000, 759, 60029, -1000, 108111, -1000, -9,
	5297, 72916, -83, -85, 576, -1000, 97955, 108111, 1119, 73445,
	108111, 3211, 1028, 54643, -1000, 54643, -88, -284, 2728, 1006,
	1006, 926, -1000, 926, -1000, 86803, 2916, -1000, -1000, 71319,
	1006, 1006, 1006, -1000, -1000, -1000, -1000, 3643, 3642, 3641,
	-1000, -1000, -1000, 1031, 86803, 108111, 86803, -1000, 320, -1000,
	108111, -1000, 108111, 108111, 86803, -1000, 1031, 108111, 1031, 108111,
	1031, 108111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 125,
	44206, -1000, -1000, 3639, 1626, -1000, 2910, -1000, 2905, -1000,
	29, -1000, -1000, -1000, -1000, -1000, 1862, 86803, 86803, 86803,
	86803, 108111, 3196, -1000, 108111, 3193, 86803, -1000, 77719, -1000,
	2492, 2904, -1000, -1000, -1000, -1000, -1000, -1000, 1586, 2192,
	-1000, 2576, -1000, 1552, -1000, -1000, -1000, 118697, 48694, -1000,
	-1000, 118697, 1796, -1000, 47011, 46450, -1000, -1000, 1683, 86803,
	2649, -1000, 2649, -172, -1000, 117180, 2570, 86803, -1000, -1000,
	-1000, -1000, -1000, 952, 1056, 1056, 1291, 1291, 1291, 1291,
	3353, 2031, 2578, 573, 6077, 6077, 544, 544, 544, 544,
	544, 6077, 4719, 707, 707, 4719, 4719, 4719, 4719, 4719,
	707, 707, 707, 6077, 6077, 6077, 119060, 118915, 6800, 44206,
	44206, 1316, 1933, 627, 5594, 44206, 7489, 7489, 7489, 7489,
	-1000, 1960, -1000, -1000, -1000, -1000, 2879, 710, 48133, 48133,
	-1000, -1000, -1000, -1000, 24283, 44206, -1000, -1000, -1000, -1000,
	33916, -1000, -1000, 116527, -319, 575, -125, -34, -1000, 44206,
	44206, 44206, 571, -1000, 319, 44206, 108111, -1000, 15168, 834,
	-136, -1000, -91, 1421, -1000, 44206, -1000, -1000, 1311, -1000,
	1310, 1309, 1305, -1000, 709, 569, -1000, 318, -1000, 2150,
	708, 706, 44206, -1000, -1000, -1000, -1000, -1000, 116498, -1000,
	-1000, 116461, -1000, -1000, 116432, -1000, -1000, 115872, -1000, -1000,
	-1000, 118612, 14747, 14580, 14156, 11209, 13657, 13029, -94, 558,
	-96, 556, 943, 935, 554, 552, 551, -101, -1000, 3638,
	3637, 3636, -1000, 3635, 3634, 3632, -1000, 3631, 3630, 3629,
	-1000, 3628, 3627, 3625, -1000, 3624, 3623, 3621, -1000, 3619,
	3618, 3616, -1000, 3615, 3613, 3612, -1000, 3611, 3610, 3608,
	-102, 549, -1000, 2877, -125, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 548, -1000, 547, -1000, 118341, -125, 546,
	7751, -1000, 48133, 48133, 48133, -1000, 545, -1000, 117114, -1000,
	118255, 33355, 33355, 33355, 530, 117984, 44206, -125, -104, -1000,
	-113, -1000, -1000, 624, -118, 1045, 32782, 50881, 22603, -1000,
	1045, 1045, 44206, -1000, 44206, 2595, -1000, -1000, -1000, -1000,
	2587, 2123, 2634, 51951, -1000, -1000, -1000, -1000, 97421, -1000,
	3494, 3033, -1000, 97421, -1000, -1000, 108111, 606, -1000, 97421,
	97421, 22603, 928, -1000, 928, 97421, 681, -1000, -1000, -1000,
	-1000, -1000, 524, 56833, -34, 317, 22603, 1032, -1000, 2614,
	2614, 2614, 2614, -1000, -1000, 108111, 1302, -28, -188, 3473,
	-1000, 2073, -1000, 62698, -1000, 848, 1268, 22603, -1000, -1000,
	-1000, 697, -1000, 3523, 3523, -1000, 3523, 108111, 2853, 114,
	104, 66428, 66428, 3607, -1000, -1000, 207, -1000, 86803, 207,
	207, -1000, 86803, 86803, 2212, -1000, 211, -1000, 208, -1000,
	-1000, -82, -1000, 1039, 30526, -1000, 1471, -1000, -1000, 1584,
	-1000, 2006, -1000, 1295, -1000, -1000, -1000, -1000, 30526, -1000,
	4640, 108111, 108111, 86803, -1000, 108111, -1000, 2096, 3463, 1901,
	2473, 2469, -1000, 2342, 110756, 2335, 62698, 108111, -1000, -1000,
	695, 981, 2567, 2558, 1112, 108111, 108111, 2552, 110227, 109698,
	-1000, 3606, 108111, 2103, 44206, 66428, 2131, 2851, 125, 125,
	-1000, -1000, 125, 694, 1308, 86803, 86803, 108111, 86803, 1708,
	-1000, -1000, -1000, -1000, -1000, 78248, -1000, -1000, 3548, 3546,
	-1000, 1447, -1000, -1000, -1000, 1447, 2122, 1704, 108111, 86803,
	66428, 108111, 108111, 1724, 108111, 1140, -1000, 885, 2086, 125,
	125, -1000, -1000, 125, 689, 22603, 1922, -1000, 2957, 108111,
	3572, 108111, 108111, 108111, 66428, 3273, 109169, 108111, 108111, 66428,
	4615, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 67516, 1136, 1032, 1703, 1300, 77719, 54643, 1027,
	54643, 2712, -1000, -1000, 19877, -1000, 118697, 118697, -1000, 118697,
	-1000, 63233, 108111, -1000, 1071, 108111, 73445, 996, 3069, 58971,
	-235, 1006, 71319, 86803, -23, 108111, -1000, -1000, 2122, 3067,
	606, 2339, -1000, 71319, 3431, 3062, 688, 3605, 3604, -1000,
	2226, 2336, -1000, -1000, 108640, 3038, 885, 108111, 1045, 51951,
	1924, -1000, 57369, 1087, 108111, 1836, 103, -1000, -1000, -1000,
	14, 108111, -1000, 856, -1000, -1000, 5297, 5297, 1006, -240,
	679, -1000, 921, 916, 55195, 71319, -123, -1000, -1000, -1000,
	-1000, 2335, 86803, 108111, 1287, 2703, 108111, -144, -1000, 316,
	674, -1000, 2632, -1000, -284, -1000, 1028, 54643, 2844, -1000,
	-1000, 1038, -1000, 1413, 1006, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -10, 108111, -235, -235, -25,
	-28, -1000, 1031, -1000, 1031, -1000, 1031, -1000, 118697, -1000,
	-1000, 1623, 1617, 108111, -1000, 22603, 108111, 86803, 22603, 86803,
	2895, 2843, -1000, -1000, -1000, 108111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1146, -1000, 1796, 2187, -1000, 673, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2428, -1000,
	-29, 29965, 917, -1000, -1000, 86803, -11, 44206, 44206, 5351,
	4740, 44206, 48133, 48133, -1000, 44206, 1088, -1000, -1000, -1000,
	-1000, -1000, 2842, 672, 44206, 62698, 6550, 6430, -1000, 523,
	6507, 4719, -1000, 44206, -1000, 522, 32221, -1000, 117681, -47,
	-145, -1000, 16591, -125, -146, -1000, -1000, 845, -1000, 3040,
	-1000, 44206, 117899, 2387, 1995, 1827, 1663, 3523, 3571, 19332,
	-1000, 60563, 1048, 2167, 115843, -1000, -1000, -1000, -1000, 62698,
	62698, 44206, 44206, -1000, 44206, 44206, 44206, -1000, -1000, -1000,
	3523, 948, -1000, -1000, -1000, 948, -1000, -1000, 1447, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1447, -1000, 44206, -1000, -1000, 2831,
	44206, -1000, 62698, 62698, 48133, 48133, 48133, 48133, 48133, 48133,
	48133, 48133, 48133, 48133, 48133, 48133, 48133, 48133, 48133, 48133,
	48133, 48133, 48133, 2540, 48133, 3493, 3493, 3493, -1000, 2791,
	2831, 44206, 44206, 62698, 511, 510, 492, -1000, 44206, -125,
	-1000, -1000, 5297, 670, -1000, 2423, -1000, 2760, -1000, 44206,
	-1000, -274, -1000, 2417, -1000, -1000, 2760, 2760, -151, 118697,
	51951, 51951, -1000, 667, 44206, 2580, -1000, -1000, 830, -317,
	-1000, 914, -1000, -1000, -1000, -1000, -1000, 606, -1000, -1000,
	-1000, 299, 97421, 97421, 829, -1000, -152, -1000, -1000, -154,
	-1000, 3430, 488, 22603, -1000, 1045, 3256, -1000, -1000, -1000,
	-1000, -1000, -1000, -235, 108111, 108111, 2178, 3568, -1000, 3528,
	842, 828, 248, 3523, 475, 470, 469, -235, 108111, 108111,
	108111, -1000, -1000, -1000, -1000, 207, -1000, -1000, -1000, 201,
	-1000, -1000, -1000, -1000, 2583, -1000, -30, -1000, -1000, -1000,
	44206, -1000, -1000, 3253, 1294, 1290, -1000, -1000, -1000, -1000,
	3314, 87332, 3462, 1896, 1878, 3060, -1000, 2334, -1000, 1093,
	-1000, 1810, -1000, 44206, 665, 2697, 664, 663, 3601, 1890,
	3599, 1118, 3057, 2212, 3053, 2212, -1000, -1000, -1000, 960,
	-1000, 118697, -1000, 658, 657, -1000, -31, 1606, 2105, 1036,
	-1000, -1000, 44206, 44206, 96892, -1000, 460, 3248, -12, -1000,
	-1000, 1700, 1283, -1000, -1000, -1000, -1000, 2122, 1698, 1280,
	-1000, -1000, -1000, -1000, -1000, -1000, 1034, -1000, 2989, 2988,
	108111, -1000, 1033, -1000, -1000, 44206, -1000, -32, 1206, 3370,
	2331, 86803, 1204, -1000, 1201, -1000, -1000, -1000, 3376, 2212,
	3050, 1341, -1000, -1000, -1000, -1000, -1000, 66972, -1000, 108111,
	86803, 1688, 926, -1000, 2286, 926, 1027, 2826, -1000, 2630,
	-1000, 86803, 3598, 467, -157, -42, 62698, 3429, -1000, 2271,
	705, 86803, 938, -1000, 3494, -1000, -1000, -1000, -1000, 3349,
	86803, 3427, 3037, 1032, 125, 86803, 3566, -1000, -1000, 86803,
	3036, 2225, 2319, 2489, 885, 72387, 1032, 2165, -77, -1000,
	1836, 31648, 3246, -159, -1000, -1000, -1000, 1045, 60029, 51951,
	44206, 3597, -160, -1000, -1000, -1000, -1000, -1000, 94771, 94771,
	71319, 71319, 71319, 1006, 108111, 108111, 73445, -1000, -1000, 656,
	108111, 108111, 651, -1000, 108111, 108111, 3595, 71319, -43, 649,
	-1000, 913, 912, 905, -1000, -1000, -1000, -1000, -1000, 1028,
	-1000, -284, 125, -1000, 2173, 86803, -1000, 18787, -1000, -1000,
	-1000, -1000, -1000, -1000, 1031, -1000, -1000, 2087, 2273, 2087,
	1845, 1844, -1000, -1000, 2183, -1000, -1000, -1000, -1000, 2598,
	3267, 22603, 3369, 7489, 44206, 44206, 456, 4497, 491, 7489,
	44206, 44206, 62698, 12006, -162, 44206, 44206, -1000, 44206, 823,
	118697, 3565, 44206, 454, 452, -1000, -1000, -1000, 3513, -1000,
	-1000, -1000, 118697, 44206, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 442, -1000, 146, -1000, -1000, -1000, 113930, -1000, 44206,
	438, 3311, -1000, 436, 435, 428, 8935, 115806, 115777, 115217,
	429, -1000, -1000, 427, 426, 118697, 2791, 118697, -1000, -1000,
	992, 992, 1405, 1405, 1405, 1405, 3493, 376, 951, 509,
	247, 247, 247, 966, 588, 588, 247, 247, 247, 2813,
	2477, 644, 2016, -1000, -1000, 118697, 118697, 425, -1000, -1000,
	-1000, -125, 414, 5297, -1000, 2755, 3310, 118697, -1000, 51951,
	2755, 2755, -1000, -1000, 2123, 108111, 118697, 51951, -1000, 3033,
	-1000, 17147, -1000, 22603, -1000, -1000, -1000, -1000, 3494, -1000,
	56833, -1000, 643, -1000, 64, -1000, 3256, -1000, 904, -1000,
	-235, -235, -1000, -1000, 822, 3594, 841, 22603, 407, -1000,
	-1000, -1000, -235, -235, -235, -1000, -1000, -1000, 3210, 118697,
	108111, 108111, 1482, 92629, 1830, -1000, -1000, 1928, 2456, -1000,
	3454, 3453, 108111, 3035, -1000, 4563, -1000, 1112, 115188, 52485,
	-1000, 52485, 108111, -1000, -1000, 1877, 2575, 1159, -1000, 3283,
	108111, -1000, 108111, -1000, -1000, 108111, 108111, 86803, 108111, -1000,
	2999, -165, 118697, -53, -1000, 902, -1000, 1418, -1000, 18242,
	108111, 86803, 108111, 86803, 2120, -1000, -1000, -1000, 2998, -170,
	22603, -1000, 3564, 3563, 3031, 3287, 3561, 108111, -1000, 108111,
	86803, 3204, -1000, -1000, -1000, -1000, 1669, 1200, 1027, -67,
	642, -1000, 899, -1000, -1000, 895, 1027, -1000, 71319, 54643,
	606, -1000, 2686, -1000, 92100, 2258, 125, -1000, 3593, 95305,
	641, -1000, 2172, -1000, 820, 66428, 2122, 125, 86803, -1000,
	-1000, 606, 402, -68, -1000, 1105, 22603, 86803, 3030, 2491,
	885, 72387, -1000, 1404, 2547, -1000, -76, -1000, 690, 125,
	2165, -1000, -77, 118697, -1000, 892, -1000, -171, -1000, -1000,
	399, -1000, 3202, 3201, -1000, 2785, 52485, 639, 638, 108111,
	3200, -1000, -1000, -176, 2637, 2637, 71319, 54643, 71319, -1000,
	1028, -1000, 2413, -1000, -1000, -1000, -1000, -1000, 22603, 1741,
	-1000, 636, 635, -1000, -1000, -1000, -1000, 3267, 7489, 7489,
	44206, 44206, 44206, 7489, 12006, -179, -1000, 7489, 7489, -125,
	-1000, -1000, 117681, -1000, -1000, -1000, 118697, -1000, 17697, 2093,
	-1000, 115151, -1000, 29965, -1000, -1000, 44206, 44206, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48133, 2804, 634, 62698,
	-1000, -1000, 398, 1043, 44206, 45889, 2417, 1043, 1043, -1000,
	-181, -1000, -1000, -1000, 3494, 64, -1000, -1000, 3592, 22603,
	-1000, 71319, 840, -1000, 3590, -1000, -1000, -1000, -1000, -1000,
	2727, -1000, -1000, -1000, 1921, 2446, -1000, -1000, 1198, -1000,
	-1000, 108111, -1000, 108111, -1000, 22603, 108111, 2788, 2295, -1000,
	981, 2545, 633, 48133, 86803, 971, -1000, 3447, 2771, -182,
	-1000, 108111, 44206, 108111, -191, -192, 2292, -1000, -1000, 2290,
	44206, -1000, 62698, 632, 2212, 2212, -193, -198, -1000, -1000,
	44206, 1194, 108111, 31087, -1000, 3589, 3248, -1000, -1000, -1000,
	-1000, 108111, 44206, 1188, -1000, -1000, -1000, 3560, 2212, 22603,
	-1000, 2212, 2212, 3287, 1157, 108111, 86803, -1000, 2397, 2397,
	71319, 54643, -1000, -82, 1027, 3425, 2676, 3587, -1000, -1000,
	-1000, -1000, 2542, -1000, -1000, 108111, 2541, 1021, -1000, -199,
	-1000, 891, 888, 73445, 996, 972, -1000, -1000, -1000, -1000,
	606, 3424, -1000, 3555, 631, 108111, 2224, 628, 22603, 3244,
	885, 72387, -1000, 3038, 1836, -1000, 2308, 108111, 3241, -1000,
	2547, 627, -1000, 1006, 626, 625, 2602, 2602, -200, 52485,
	52485, -201, 622, 1006, -1000, -207, -1000, -1000, -1000, -1000,
	-90, -1000, 950, 937, -1000, -1000, 86803, 86803, 44206, 44206,
	-1000, 7489, 7489, 7489, -1000, 391, -1000, -1000, 2165, 3309,
	-1000, -97, 115122, 114562, 525, 48133, 62698, -208, -1000, -1000,
	108111, 118697, -116, -1000, 118697, 620, 619, 529, -1000, -1000,
	-1000, 818, -1000, -1000, 3586, -1000, 96363, -1000, -1000, 95834,
	-1000, 1547, -1000, -1000, -1000, 108111, 2313, -1000, -1000, 1110,
	44206, 2016, 618, 44206, -1000, 3417, -1000, 2659, 2840, 1891,
	52485, -1000, 3267, -1000, 114533, -1000, 1103, 1894, -1000, -1000,
	118697, 3287, 52485, -1000, -1000, 616, 615, 118697, 613, 886,
	2803, -1000, -1000, -1000, -1000, 118697, 610, 3370, -1000, -1000,
	-1000, -1000, 2212, 86803, -1000, -1000, -1000, -209, -1000, -1000,
	1930, 125, 2086, 2726, -1000, 2258, 609, -1000, -1000, 2205,
	2581, -1000, 95305, 30526, 30526, 382, 3416, 972, -1000, 3518,
	-1000, 3414, 125, -1000, 52485, -1000, 86803, 52485, 2220, 2048,
	2443, 72387, -1000, 2489, -1000, -1000, -214, 108111, 1836, -1000,
	-1000, 71319, 71319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1103, -215, -216, -1000, 71319, -1000,
	-1000, 2413, -1000, 108111, -1000, 108111, -1000, -1000, -222, -223,
	-1000, 2014, 44206, 29965, -1000, -1000, 525, -225, -1000, -124,
	-1000, 3403, 45889, 3585, 3584, 3582, -1000, -1000, -1000, 1905,
	-1000, 1903, -1000, -1000, 3028, 2751, 114496, 2425, 108111, 114467,
	-1000, 2828, -1000, -1000, 2676, 608, -1000, -1000, -1000, -1000,
	917, 108111, 2676, 2750, 86803, 1109, -228, 2087, 2087, 44206,
	29404, 2115, 44206, -1000, -1000, 3287, -1000, 2784, 3512, -1000,
	996, -1000, 2110, 108111, -1000, 3276, -1000, 3199, -1000, -1000,
	-1000, 2686, 125, -1000, -1000, 125, -1000, -230, 1105, -238,
	86803, 1884, -1000, 885, -1000, 2491, 1045, -1000, -1000, -239,
	-241, 1891, 1103, 1005, -248, -1000, -251, -254, -1000, -1000,
	379, 45328, 45328, 45328, -125, -172, -1000, 108111, 607, -1000,
	-1000, -1000, -1000, -1000, -1000, 2983, 1025, -1000, 2217, 1918,
	339, 1123, -1000, -1000, 2086, 108111, -1000, -1000, -1000, 1024,
	606, -1000, 44206, 1103, -256, -1000, 1086, -257, -1000, 1076,
	-259, -1000, 2802, -1000, -262, 2212, 1022, 3357, -1000, -1000,
	-1000, 2205, 86803, -267, -1000, -1000, 2274, -1000, 2676, 1021,
	-1000, 1103, 604, 1891, 598, 1497, 885, -1000, -1000, 1447,
	3244, 3164, 1006, 1006, 2676, 1891, 1045, 596, 1006, -1000,
	-1000, -1000, 3015, -1000, 49255, 2254, 1822, 117085, 3015, 3015,
	-1000, -1000, 108111, 3337, -1000, 2219, 2218, 1529, -1000, -1000,
	-1000, -1000, -1000, -1000, 2771, -272, 3336, 2425, 118697, 2676,
	-1000, 2087, 2720, -1000, 2087, 2798, -1000, 2101, -1000, -1000,
	-1000, 1681, 3485, 1969, 595, -1000, 108111, 1792, 1695, 3581,
	2086, 2205, 1891, 52485, 2676, 52485, -1000, -1000, 108111, -1000,
	2048, 1336, -1000, -1000, 2086, 2676, -1000, -1000, -1000, 1812,
	3409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 884,
	-1000, 3066, -1000, 1145, 2195, 2195, 1045, -1000, 724, 2217,
	-1000, -1000, 594, -1000, 593, -1000, 2170, -1000, -1000, -1000,
	-1000, 108111, -1000, -1000, 3580, -1000, 996, -1000, 2676, -279,
	2086, -285, -1000, -235, 1884, -1000, 1574, 1005, 2086, 1808,
	-1000, -1000, 2157, 44767, 44206, -1000, 3478, -1000, -1000, 2493,
	-1000, -1000, 44206, 2771, 44206, 44206, 58437, -286, -1000, 2205,
	2086, 1103, 1005, 1891, 1497, 60029, 1045, 1005, -1000, -1000,
	-1000, 118697, -1000, -1000, -1000, 118697, -1000, -295, -297, -240,
	94771, 2204, 1969, 1005, 1891, 1045, 2676, -1000, -273, -1000,
	1045, 2086, 1186, -304, -1000, -1000, -1000, -1000, 1045, 2676,
	-1000, 2086, -1000, -1000, -1000, 591, -1000, -1000, 2086, 1005,
	44206, 1005, 1045, -309, 1045, -1000, 2086, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4395, 4394, 4392, 4391, 4387, 4386, 4385, 4383, 4381,
	4380, 4379, 4378, 4376, 4375, 4373, 4372, 4371, 4370, 4368,
	4367, 4364, 4361, 4359, 4358, 4357, 4355, 4354, 4351, 4350,
	4349, 4346, 4343, 4342, 4340, 4339, 4334, 4333, 4332, 4328,
	4321, 4318, 4311, 4308, 4304, 4303, 4301, 4300, 4297, 4296,
	4295, 4291, 4290, 4289, 4287, 4286, 4285, 4284, 4283, 47,
	4282, 4281, 4280, 4278, 4275, 4268, 4266, 4264, 4263, 4262,
	4261, 4260, 4258, 4257, 4256, 4255, 4251, 4243, 4240, 49,
	4236, 248, 4232, 4231, 4230, 4229, 4227, 4221, 4216, 4215,
	4214, 4211, 4210, 4206, 247, 4203, 101, 4194, 4191, 4190,
	4189, 4188, 244, 4187, 4185, 4184, 4181, 256, 4179, 4177,
	4173, 4169, 4167, 4166, 4163, 4161, 4160, 4159, 4157, 96,
	141, 4156, 4151, 1117, 4149, 4147, 4146, 4145, 4144, 4143,
	4142, 4141, 4140, 4139, 221, 4138, 243, 4137, 4136, 4135,
	4132, 4130, 4127, 4126, 4122, 4121, 4120, 4119, 4118, 4117,
	4116, 4115, 4114, 4113, 4112, 4110, 4108, 4107, 4106, 4105,
	4103, 4102, 4100, 4099, 4098, 4097, 4096, 4095, 4092, 4091,
	4088, 4083, 4082, 249, 177, 4080, 4078, 242, 241, 4077,
	4072, 4065, 4063, 4062, 128, 4, 35, 4057, 4056, 83,
	72, 65, 94, 88, 80, 4055, 104, 4054, 137, 57,
	4045, 21, 3, 157, 226, 5165, 220, 4043, 4040, 4039,
	212, 170, 4037, 213, 4036, 4032, 4028, 4026, 67, 45,
	165, 158, 152, 149, 85, 4023, 135, 89, 71, 53,
	41, 12, 68, 232, 18, 4022, 231, 11, 125, 1,
	33, 4019, 4015, 4013, 4011, 3487, 119, 4010, 239, 217,
	148, 4008, 4007, 4006, 614, 4005, 4004, 50, 4001, 90,
	70, 118, 8, 109, 4000, 131, 32, 3995, 229, 51,
	3994, 134, 84, 93, 8369, 9963, 3993, 100, 55, 114,
	3170, 176, 142, 175, 182, 138, 145, 180, 191, 189,
	151, 289, 3992, 235, 3991, 3400, 86, 164, 3990, 3989,
	3987, 76, 178, 92, 3985, 3982, 61, 10, 14, 7,
	150, 25, 108, 44, 29, 3981, 24, 3980, 3979, 3977,
	3976, 3975, 37, 146, 3974, 251, 3973, 117, 48, 30,
	3970, 28, 198, 3968, 202, 115, 3966, 3958, 225, 186,
	188, 3956, 75, 207, 3954, 3952, 3948, 3947, 3946, 124,
	9, 111, 3945, 3943, 129, 3942, 46, 210, 174, 3940,
	56, 3939, 3938, 153, 99, 120, 246, 110, 200, 105,
	204, 155, 205, 3937, 3934, 3930, 187, 3929, 3928, 199,
	139, 3927, 3922, 184, 257, 77, 42, 66, 209, 69,
	173, 136, 3921, 179, 3920, 3919, 255, 163, 190, 2,
	15, 82, 112, 3918, 5, 208, 133, 215, 103, 3917,
	6383, 2081, 2126, 3916, 3915, 122, 107, 62, 106, 130,
	234, 64, 3913, 3909, 160, 3908, 3907, 3905, 3904, 167,
	3903, 3902, 3901, 113, 166, 211, 3899, 81, 59, 43,
	19, 144, 230, 254, 102, 195, 168, 222, 3898, 3896,
	3892, 169, 3891, 79, 263, 3890, 181, 223, 3874, 3871,
	238, 3870, 132, 636, 58, 127, 3869, 201, 3868, 3867,
	3864, 3862, 3859, 3858, 3856, 616, 206, 3855, 3854, 3852,
	31, 171, 3851, 233, 159, 156, 87, 54, 3849, 91,
	2270, 3845, 302, 126, 52, 236, 140, 237, 3843, 1913,
	197, 3842, 0, 11859, 6962, 10086, 11641, 3841, 4974, 3838,
	3835, 3834, 196, 121, 3829, 3828, 3825, 97, 3824, 73,
	3820, 3819, 60, 3816, 22, 16, 17, 26, 23, 367,
	299, 3815, 3813, 63, 116, 161, 3812, 245, 203, 3811,
	3808, 3807, 3805, 95, 3804, 38, 3803, 36, 3800, 3796,
	39, 13, 27, 3793, 3792, 214, 3791, 194, 219, 3790,
	143, 3788, 3394, 123, 3786, 3785, 228, 78, 3784, 270,
	3783, 3354, 3782, 3781, 20, 3780, 3779, 218, 154, 193,
	3778, 3774, 147, 3773, 3772, 3769, 224, 3767, 3765, 34,
	3764, 6, 3763, 3761, 183, 3171, 3760, 3759, 40, 3758,
	172,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 566, 566, 21,
	40, 22, 41, 15, 567, 567, 567, 567, 33, 23,
	42, 26, 26, 26, 26, 26, 187, 187, 187, 187,
	20, 20, 36, 36, 221, 221, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 565, 565, 223, 223, 222, 217, 217, 568, 568,
	224, 224, 224, 226, 226, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 464, 464, 464, 497, 497, 496,
	496, 496, 495, 495, 581, 581, 582, 582, 582, 582,
	582, 122, 122, 362, 362, 362, 48, 48, 48, 48,
	48, 560, 560, 189, 189, 189, 191, 191, 190, 190,
	190, 190, 70, 70, 573, 573, 574, 574, 572, 575,
	575, 575, 188, 188, 188, 118, 118, 118, 118, 118,
	119, 119, 120, 120, 192, 192, 192, 194, 194, 193,
	193, 193, 193, 193, 193, 193, 193, 198, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 98, 98, 499,
	499, 500, 500, 183, 183, 184, 184, 184, 184, 185,
	185, 186, 186, 186, 62, 195, 195, 197, 197, 196,
	196, 50, 50, 50, 50, 50, 50, 50, 51, 51,
	51, 51, 51, 52, 52, 52, 52, 52, 52, 53,
	53, 53, 53, 53, 53, 60, 60, 60, 60, 174,
	174, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 67, 67, 67, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 584, 584, 585, 585, 586, 586,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 76, 76, 324,
	324, 294, 294, 77, 77, 77, 78, 78, 79, 79,
	64, 64, 558, 558, 339, 339, 455, 455, 81, 81,
	361, 361, 82, 82, 82, 82, 82, 82, 83, 83,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 91,
	91, 91, 91, 91, 92, 92, 92, 89, 89, 89,
	86, 86, 86, 85, 85, 85, 90, 90, 90, 557,
	283, 283, 88, 88, 88, 87, 87, 87, 340, 340,
	93, 93, 93, 93, 295, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 457, 457, 95, 95,
	95, 422, 422, 99, 99, 99, 377, 377, 100, 100,
	100, 100, 100, 101, 101, 101, 101, 101, 101, 121,
	121, 121, 121, 121, 121, 562, 562, 332, 332, 248,
	248, 248, 248, 111, 111, 111, 111, 112, 112, 112,
	113, 113, 179, 179, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 127, 127, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 58, 58, 59, 59, 59, 59,
	59, 130, 130, 578, 578, 132, 129, 129, 129, 131,
	131, 131, 131, 133, 134, 134, 134, 134, 134, 134,
	134, 134, 135, 135, 489, 489, 348, 348, 487, 487,
	509, 509, 488, 488, 299, 299, 299, 299, 299, 300,
	300, 300, 498, 498, 498, 498, 498, 498, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 180, 180, 181, 182, 182,
	182, 182, 182, 159, 159, 159, 173, 173, 173, 173,
	173, 173, 173, 162, 162, 162, 146, 146, 137, 137,
	137, 137, 137, 137, 137, 141, 141, 141, 141, 141,
	141, 141, 141, 138, 138, 148, 148, 148, 148, 148,
	142, 142, 143, 143, 143, 143, 169, 169, 145, 145,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 139,
	139, 139, 139, 150, 150, 150, 150, 384, 384, 384,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 172, 172, 172, 172, 172, 172, 576, 576, 577,
	577, 166, 166, 166, 166, 166, 166, 436, 436, 160,
	160, 160, 160, 165, 165, 165, 165, 168, 168, 168,
	168, 367, 367, 157, 157, 157, 158, 158, 158, 163,
	163, 164, 161, 161, 167, 167, 167, 167, 140, 140,
	140, 588, 588, 588, 170, 170, 156, 156, 171, 171,
	171, 171, 171, 171, 171, 171, 152, 152, 152, 151,
	151, 151, 151, 154, 154, 155, 155, 155, 155, 155,
	153, 144, 559, 559, 555, 555, 555, 555, 555, 555,
	555, 555, 556, 556, 556, 556, 561, 561, 104, 104,
	104, 104, 104, 114, 114, 114, 114, 114, 105, 105,
	105, 105, 105, 107, 107, 106, 106, 106, 106, 71,
	71, 71, 71, 71, 14, 14, 14, 72, 72, 239,
	239, 201, 201, 201, 313, 313, 202, 202, 307, 307,
	307, 307, 199, 199, 200, 200, 73, 73, 589, 589,
	589, 569, 569, 569, 570, 570, 570, 570, 570, 570,
	301, 301, 302, 302, 402, 402, 402, 402, 402, 305,
	305, 305, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 308, 308, 225, 225, 225, 311, 312, 312, 309,
	309, 310, 310, 310, 315, 315, 314, 317, 317, 316,
	401, 518, 518, 520, 520, 520, 520, 520, 520, 520,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 385, 385, 590, 590, 516, 516, 516, 517, 512,
	512, 513, 513, 513, 513, 513, 303, 303, 304, 304,
	304, 304, 514, 515, 330, 330, 440, 519, 519, 521,
	521, 523, 591, 591, 591, 591, 591, 591, 592, 592,
	592, 400, 400, 399, 399, 322, 322, 524, 524, 524,
	524, 525, 525, 525, 525, 525, 528, 527, 526, 526,
	526, 526, 526, 75, 75, 75, 364, 364, 363, 363,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 176, 176, 251, 251, 69,
	69, 69, 12, 12, 12, 571, 571, 571, 74, 74,
	74, 74, 74, 74, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 564, 564, 563, 563, 252, 252,
	594, 594, 80, 80, 80, 80, 80, 80, 80, 458,
	458, 459, 459, 68, 68, 68, 68, 68, 386, 386,
	383, 383, 382, 382, 329, 329, 438, 438, 438, 439,
	256, 256, 257, 257, 218, 218, 218, 28, 27, 19,
	19, 24, 24, 25, 25, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 44, 44, 44, 44, 47, 47, 43, 43,
	43, 43, 45, 45, 39, 39, 579, 579, 580, 580,
	110, 110, 115, 115, 115, 115, 115, 116, 116, 116,
	116, 117, 117, 117, 117, 126, 126, 175, 175, 175,
	175, 175, 175, 175, 49, 49, 49, 49, 61, 61,
	61, 61, 124, 596, 596, 596, 125, 125, 125, 595,
	595, 249, 249, 396, 396, 397, 397, 597, 597, 398,
	398, 398, 398, 398, 242, 241, 243, 243, 244, 244,
	66, 66, 66, 234, 234, 233, 231, 231, 501, 501,
	236, 236, 237, 237, 227, 227, 228, 228, 229, 229,
	230, 230, 240, 240, 598, 598, 102, 102, 102, 178,
	178, 293, 293, 293, 393, 393, 393, 323, 323, 263,
	263, 395, 395, 395, 395, 360, 360, 360, 177, 177,
	337, 337, 350, 350, 351, 351, 452, 452, 352, 108,
	108, 109, 109, 123, 123, 205, 205, 203, 203, 203,
	203, 203, 203, 203, 203, 210, 210, 211, 211, 212,
	212, 213, 214, 214, 214, 214, 341, 341, 215, 215,
	215, 204, 204, 204, 206, 206, 206, 206, 206, 206,
	206, 209, 209, 209, 209, 216, 216, 216, 208, 208,
	535, 535, 535, 537, 537, 539, 539, 538, 538, 534,
	534, 536, 536, 593, 593, 366, 366, 366, 320, 321,
	318, 318, 319, 319, 327, 327, 325, 326, 326, 328,
	328, 437, 437, 437, 219, 219, 219, 357, 357, 357,
	357, 358, 358, 389, 389, 387, 387, 387, 387, 388,
	388, 390, 390, 390, 391, 391, 392, 392, 354, 354,
	355, 355, 356, 356, 356, 356, 418, 418, 207, 207,
	207, 334, 334, 334, 335, 335, 408, 408, 408, 408,
	408, 408, 409, 409, 407, 407, 407, 407, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 442, 443, 443,
	336, 336, 444, 394, 394, 553, 553, 553, 554, 554,
	435, 435, 445, 445, 445, 445, 445, 445, 433, 433,
	434, 434, 453, 454, 454, 370, 370, 370, 370, 368,
	368, 371, 371, 371, 371, 371, 369, 369, 446, 446,
	446, 446, 359, 359, 447, 447, 447, 447, 448, 449,
	449, 450, 450, 403, 404, 404, 460, 460, 460, 460,
	462, 333, 333, 333, 333, 333, 511, 510, 510, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	477, 477, 477, 477, 477, 477, 477, 463, 463, 463,
	463, 463, 467, 467, 467, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 468, 468, 473, 473,
	474, 474, 474, 469, 470, 475, 475, 475, 475, 599,
	599, 479, 479, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 465, 465, 465, 472, 472, 472, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 378, 378, 380, 380, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 412, 412, 412, 412, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 529, 529, 529, 529, 529, 529, 529, 529, 414,
	414, 532, 532, 533, 533, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 540, 540, 541, 541, 543, 543,
	544, 544, 545, 546, 546, 546, 547, 548, 548, 542,
	542, 549, 549, 549, 549, 550, 550, 551, 551, 551,
	551, 551, 552, 552, 552, 552, 552, 424, 424, 425,
	425, 431, 431, 431, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	253, 253, 253, 253, 253, 346, 346, 344, 344, 344,
	347, 347, 345, 345, 343, 343, 342, 342, 421, 421,
	419, 419, 423, 423, 372, 372, 478, 478, 478, 478,
	478, 478, 478, 478, 373, 373, 373, 381, 374, 374,
	375, 375, 375, 375, 375, 415, 416, 376, 376, 376,
	417, 417, 426, 430, 430, 429, 428, 428, 427, 427,
	405, 405, 406, 406, 353, 353, 600, 600, 349, 349,
	451, 451, 451, 451, 297, 297, 338, 338, 296, 296,
	288, 288, 289, 289, 289, 289, 331, 331, 432, 432,
	480, 480, 481, 481, 482, 482, 483, 483, 484, 485,
	486, 420, 420, 273, 272, 260, 261, 271, 270, 269,
	259, 262, 266, 267, 268, 264, 265, 279, 278, 277,
	232, 235, 284, 285, 285, 287, 287, 286, 286, 275,
	276, 456, 258, 290, 290, 291, 291, 291, 292, 292,
	292, 292, 254, 254, 255, 255, 280, 280, 281, 282,
	282, 274, 274, 274, 245, 245, 245, 246, 246, 247,
	247, 494, 494, 491, 491, 491, 492, 492, 492, 493,
	493, 493, 493, 490, 490, 490, 490, 490, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 503, 503, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 505, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 508, 508,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 3,
	2, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	4, 4, 5, 5, 3, 3, 4, 4, 3, 6,
	7, 4, 6, 7, 8, 9, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	12, 15, 3, 1, 0, 4, 3, 0, 1, 1,
	4, 4, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 575, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-175, -180, -181, -182, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -176, -177, -178, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -583, 102, -536, -84, -87, -117, -587,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -203, -205, -129, -130, -179,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 507, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -535, -85, -86, -89, -91, -92, -88, -90,
	409, -206, -204, 572, 522, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 541, 550,
	-209, -207, -208, -216, 436, 530, 481, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, -295,
	2, -275, -280, -281, -282, -274, -245, -505, -508, 4,
	-502, -506, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 489, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 464, 466, 469, 470, 471, 472, 467, 480, 474,
	475, 477, 478, 482, 483, 484, 485, 486, 487, 488,
	490, 492, 500, 501, 502, 504, 507, 508, 509, 510,
	498, 512, 513, 516, 517, 518, 521, 519, 520, 522,
	524, 527, 528, 529, 535, 534, 536, 542, 543, 545,
	546, 547, 37, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	199, 201, 209, 210, 211, 232, 233, 235, 240, 262,
	327, 329, 345, 349, 364, 368, 372, 374, 388, 422,
	457, 468, 473, 493, 494, 495, 496, 503, 505, 530,
	531, 532, 537, 544, -295, 2, -275, 336, -268, 2,
	-245, -245, 375, 29, 2, 29, 363, 438, 484, 486,
	2, -562, -332, 2, 29, -248, -245, 102, 197, 436,
	-268, 2, -562, -332, 25, 2, -245, 2, 350, 22,
	28, 66, 77, 98, 137, 160, 181, 184, -586, 352,
	382, 425, 440, 480, 490, 504, 2, 534, 283, 437,
	481, 224, 118, 509, 431, -571, 429, 430, 350, 380,
	418, 200, 523, -249, 2, 427, -245, 283, 2, 575,
	94, 273, 74, 422, 441, -134, 501, -133, 493, 431,
	-135, -489, 2, 305, -245, 575, 575, 575, 29, -258,
	-245, 481, 224, 431, 118, 478, 575, 2, 481, 355,
	534, 437, 118, 385, 224, 509, 431, -571, 283, -560,
	2, -555, 4, -506, -502, -289, -288, 481, 487, 118,
	-282, -274, 565, -281, 575, 575, 575, 2, 243, 244,
	384, 383, 441, 442, 575, 575, 575, 575, 429, 2,
	160, 22, 28, 66, 93, 98, 124, 181, 184, 341,
	-584, 352, 382, 440, 480, 483, 490, 504, -570, 464,
	68, 431, -569, -571, 283, 509, 137, -382, 118, 273,
	195, 517, 486, 484, 515, 130, 231, 520, 519, 575,
	575, -96, 2, 572, 33, 32, 139, 444, -198, 481,
	236, 2, -245, 575, 575, 2, 243, 244, 429, 430,
	575, 575, 182, -555, 2, 575, 575, 2, 243, 244,
	429, 430, 236, 2, 68, 433, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, 575, 2,
	-173, 441, 464, 206, 47, 46, 74, 29, 381, 79,
	356, 119, 145, 510, 198, 224, 225, 251, 93, 94,
	-384, 45, 244, 243, 430, -576, 429, -436, 482, 432,
	438, 477, 255, 427, 501, 102, 524, 419, 547, 385,
	386, 475, 398, 274, 154, 4, 118, 305, 443, 493,
	273, 426, 359, 84, -593, 2, 481, -595, 2, 501,
	501, 2, -595, 2, -595, 2, -595, 2, -596, 501,
	544, 575, 575, 575, 575, 575, 575, 575, 575, 575,
	575, 575, 575, 575, 575, 575, 575, 575, -204, -206,
	-205, 575, 575, 575, 575, 575, 575, 575, -173, 441,
	2, 74, 29, -325, -327, 514, 234, 147, 342, -203,
	-205, 2, -535, -487, 2, -410, -509, -412, 563, 564,
	556, 479, 67, 321, 548, -424, 124, 515, 336, -508,
	-413, -426, 150, 422, -347, 8, 9, 5, 6, 7,
	-254, -414, -420, 506, 164, 326, -292, 576, 10, 572,
	-532, -205, -425, 38, 201, 65, -491, -291, -255, -463,
	235, -290, -274, -529, -530, 4, -502, -503, -492, -466,
	-474, -470, -471, -477, -245, -505, 77, 110, 111, 109,
	114, 113, 276, 275, 115, 112, 443, 523, 66, 37,
	209, 210, 240, 327, 211, 75, -531, 138, -504, 232,
	233, 457, 51, 388, 174, 123, 122, 329, 56, 54,
	531, -475, 120, 493, 494, 495, 496, 186, 187, 58,
	161, 162, 349, 372, 473, 503, 505, 199, 262, 44,
	106, 183, 230, 213, 239, 241, 245, 263, 266, 306,
	319, 323, 346, 348, 417, 450, -599, 532, 468, 69,
	70, -537, 390, -538, -268, -537, 575, 575, 577, 575,
	-318, -320, -321, 2, 29, 135, 572, 2, -441, 2,
	-442, -446, -205, 256, -445, 572, -443, 570, -275, 337,
	-533, 423, -529, -530, -254, -274, -291, 4, -502, -504,
	574, -322, 572, 118, 481, 78, 224, -377, 572, -245,
	29, 336, 497, 577, -319, 379, -422, 572, 336, 182,
	339, 60, 287, 2, 2, 2, 2, 2, 209, -245,
	481, 117, 2, 254, 2, 2, 2, 2, 2, 2,
	2, -340, 209, 2, -275, 534, -340, 209, 2, -340,
	209, 2, -383, 2, 87, -259, 209, 2, -245, -283,
	209, 2, -278, -280, -287, 209, 2, -285, -245, -500,
	209, 2, -499, -494, 10, -493, 5, 4, -502, -506,
	-503, -505, 77, -410, 2, -123, 2, 60, -245, 534,
	2, 2, 446, 2, 572, -134, 71, 501, 44, 441,
	-397, 2, -398, -241, -242, -243, -453, -244, 242, 378,
	387, 551, 128, 321, 547, -487, -578, 182, 555, 497,
	-487, -348, 574, 2, 2, 2, 2, 2, 2, -446,
	209, -275, 2, -272, -490, 4, -502, -506, -503, -507,
	29, 32, 33, 34, 36, 38, 39, 40, 41, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 109, 110,
	112, 111, 113, 114, 115, 124, 128, 131, 135, 136,
	140, 143, 147, 164, 166, 179, 181, 182, 197, 200,
	203, 216, 229, 234, 236, 256, 260, 267, 275, 276,
	321, 326, 332, 336, 337, 341, 342, 361, 377, 393,
	413, 436, 443, 460, 476, 481, 491, 497, 499, 506,
	514, 515, 523, 525, 533, 538, 539, 540, 541, -508,
	2, -446, 209, 2, -277, 209, -446, -280, 2, -259,
	2, -271, -490, 2, -296, 209, -275, -276, -280, -278,
	2, -285, 2, -499, 209, 2, 534, 236, 497, 577,
	-338, -288, -289, -486, 8, -331, -245, 574, -410, 2,
	-123, -107, 2, 179, -410, 209, 2, -123, 209, 2,
	-410, 209, 2, -123, 209, 2, -573, 2, -499, 209,
	-245, 2, 287, 2, 2, 504, 2, 98, 481, 117,
	2, 407, -585, 425, 508, 2, 2, 2, 2, 2,
	2, 2, 481, -264, 2, -245, 179, -285, 209, -286,
	2, 437, -594, 390, -499, 209, 2, 534, -278, 2,
	-278, 224, 238, -259, 209, 2, 486, 484, 486, 484,
	182, 2, 236, 2, 236, 2, -447, 2, -448, -442,
	-449, 570, 337, -457, 2, -456, -493, 530, -96, 572,
	-96, 572, 441, 572, -499, -275, -275, -410, 2, -123,
	-107, 2, -410, 2, -123, 2, -120, -499, -119, 572,
	182, -410, 2, -123, -107, 2, -410, 2, -123, 2,
	-198, 179, 2, 118, 481, -173, 2, 179, 525, 2,
	8, 2, 216, -499, 432, 386, 171, 2, 446, 2,
	447, 74, -384, 547, 74, 182, 2, 182, 2, -367,
	2, 541, 182, 2, 2, -559, 2, 336, 182, 2,
	182, 2, 182, 2, 182, 2, 182, 2, 383, 442,
	502, 244, 2, -123, 538, -107, -410, 538, 2, -577,
	179, 430, -410, 2, 500, 253, 155, 182, -367, 2,
	182, 2, 182, 2, 5, 2, 384, 465, 2, 242,
	378, 465, 2, -275, -588, 2, 481, 534, 437, 2,
	2, 88, 89, 182, 2, 182, 2, 196, 182, 2,
	182, 547, 2, -359, -446, -396, -397, -396, 497, -325,
	-327, -173, 446, 2, -210, -357, -212, 179, -387, -388,
	-213, 267, 166, 332, -214, -366, 29, 135, -366, -366,
	60, 573, 573, 11, 12, 76, 42, 563, 564, 565,
	566, 177, 567, 568, 561, 562, 560, 553, 554, 558,
	248, 249, 95, 557, 555, 86, 281, 424, 167, 168,
	169, 170, 404, 222, 35, 223, 14, 15, 16, 34,
	341, 266, 548, 213, 450, 556, 17, 18, 19, 239,
	241, 323, 50, 216, -253, -298, -410, -410, -410, -410,
	-410, -410, -410, 348, 572, -353, -405, 570, -205, 572,
	572, 572, -486, -205, -410, -424, 573, -345, 572, -205,
	-424, -419, 572, 422, 570, 572, -427, -410, 5, 5,
	5, 572, 574, -540, 542, 179, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 374, -468, 572, -467, 572, -467, -467, 535, -465,
	572, 550, 543, 572, -465, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 535, 577,
	-537, -322, 572, -349, -451, -410, 565, -349, -349, 336,
	-342, -410, 106, -370, 245, 306, 183, 263, 417, 230,
	-407, 576, -407, -435, 550, -205, -443, -274, -205, -445,
	572, -441, -435, -97, -486, -81, -94, -102, -123, -136,
	-177, -178, 565, -275, 572, 182, 572, 574, -490, 182,
	-331, -259, -275, -290, -291, -296, 134, -342, -555, 509,
	431, -331, -248, 39, -421, -460, -461, -511, 576, -510,
	-463, -473, -469, -472, 364, 368, -492, 54, 531, -475,
	235, 4, -502, -504, 232, 233, 457, 51, 388, 174,
	123, 122, 329, 56, 493, 494, 495, 496, 186, 187,
	58, 532, 468, 69, 70, -555, 509, 431, -331, 179,
	-497, 2, -496, -495, 115, 443, -493, 5, 2, 150,
	2, 2, 2, -245, -224, 577, 64, 411, 150, -340,
	209, -224, 150, -224, 150, -297, 209, -296, -224, 150,
	-224, 577, 150, -224, 577, 150, 574, 577, 150, -497,
	2, -383, -489, -342, 39, -397, 2, 124, -495, -597,
	577, 265, -300, 280, 320, 205, 337, 545, 330, 128,
	-498, 5, 4, -420, -432, 124, 273, 235, -480, -482,
	8, -481, 9, -483, 563, 564, -488, -487, 108, 574,
	-490, -221, 405, 444, -220, 24, 30, 139, 226, 309,
	528, 156, -310, 227, 351, 355, 150, 461, 518, -566,
	-567, 428, 488, 489, 90, 330, 444, 405, 150, -363,
	-365, 39, 116, 309, 350, 61, 219, 285, 286, 463,
	537, 150, 444, 405, 351, 24, 139, -236, -233, -567,
	99, 405, 474, 377, -567, -223, 461, 518, -566, -567,
	428, 405, -222, -310, 150, 576, 24, 405, 444, 351,
	-581, -582, 139, 30, 405, 351, -563, -534, 541, 150,
	-446, 209, -574, -119, 257, 5, 10, -499, -119, -338,
	577, 577, -490, 565, 430, 429, 150, 150, 150, 150,
	179, 321, 2, 2, 2, 2, 2, 184, -569, -586,
	2, 2, -275, 209, -324, 336, -558, -339, 481, -275,
	321, 44, -277, 209, 2, -280, 534, -563, 321, -279,
	209, -275, 39, 572, 2, -383, 2, 224, -534, 321,
	-447, -293, -275, -442, -293, 444, -268, 39, -407, -275,
	573, 577, -457, -457, -499, -186, 541, 182, 102, 572,
	572, -198, -454, 577, -453, 216, -500, -120, -499, -499,
	-558, -259, 2, -275, 2, 481, 246, -499, -186, 216,
	-499, -499, -499, -489, 29, 447, 2, 383, 442, 502,
	89, 447, 2, -275, 481, 118, 224, 80, -245, -561,
	179, -556, 418, 431, 509, -555, -275, 118, -275, 118,
	-275, 118, -275, -275, 2, 2, 2, 2, 2, 85,
	85, 2, 46, -577, 179, 2, 500, 2, 500, 2,
	-245, -245, -245, 464, 265, -275, 179, 481, 224, 481,
	224, 118, 182, 74, 118, 29, 481, -224, 577, -249,
	-210, -357, -489, -358, -357, -211, -210, -213, 179, 387,
	519, 309, 448, 250, -388, -387, 29, -410, -392, 173,
	308, -410, -390, -412, 563, 564, -481, -483, -341, 330,
	-204, -204, -204, -328, -437, -410, 377, 224, -462, -460,
	-460, -273, -490, 493, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, 266,
	213, 450, 50, 216, -410, 497, -410, -410, -410, -410,
	303, 321, 326, 506, 164, 516, 135, 330, -600, 476,
	41, -417, -205, -346, 572, -431, 36, 460, 29, -424,
	572, 2, -405, -410, -406, -343, -342, -342, 573, 533,
	29, 135, 565, 2, 573, 577, 39, 573, -410, -343,
	-423, -419, -342, -430, -429, 538, -378, -379, 546, 290,
	121, 207, 288, -380, 435, -484, 8, -490, 565, -541,
	172, 200, 572, 573, 2, 573, 2, 573, -410, 2,
	573, -410, 2, 573, -410, 2, 573, -410, 2, 573,
	2, -410, -410, -410, -410, -410, -410, -410, -342, 8,
	-484, -484, 493, 493, -484, -484, -484, -476, 364, 365,
	366, 367, 268, 269, 270, 271, 368, 369, 370, 371,
	295, 296, 297, 298, 291, 292, 293, 294, 299, 300,
	301, 302, 191, 192, 193, 194, 187, 188, 189, 190,
	-476, -372, 2, -478, -342, 4, 546, 290, 121, 207,
	288, 435, 5, -372, 2, -373, 2, -410, -342, -374,
	-411, -412, 563, 564, 556, -424, -375, 2, -410, -343,
	-410, 57, 260, 499, -376, -410, 182, -342, -342, 2,
	-342, 2, -538, 39, -342, -334, 577, 182, 39, 4,
	-334, -334, 572, 573, 577, -371, 204, 284, 279, 238,
	-371, -441, -370, 245, -368, 346, -368, -368, -435, -260,
	570, 578, -490, -435, -434, -433, 39, -268, 343, -435,
	-435, 574, 573, -434, 571, -553, 572, 575, 575, 575,
	575, 575, -275, 572, -342, -490, 574, 466, 573, 239,
	239, 239, 239, 423, 573, 497, -557, -283, -287, 541,
	-96, 338, 573, 577, -333, 38, 570, 574, -484, 2,
	2, -479, 535, 572, 572, -379, 572, 182, -557, -287,
	-332, 577, 497, -245, 2, -275, -340, -224, 150, -340,
	-340, -224, 577, 150, -259, -278, -283, -285, -287, -245,
	-499, -500, -224, -279, -578, 573, 501, -398, -299, 387,
	459, 406, 439, 478, 8, 9, 8, 9, 577, -490,
	577, -579, 93, 497, 78, 431, -238, 274, 397, 309,
	481, 422, -401, 209, 78, -512, -262, 93, -513, -245,
	72, 515, 377, 181, 148, -579, 93, 377, -579, 93,
	2, 226, 93, 444, 464, 497, 60, -446, 42, 42,
	29, -123, 261, 182, 547, 481, 224, 431, 497, -446,
	-365, -460, 116, 285, 286, 60, -485, -480, 563, 564,
	-485, 60, -485, -485, -485, 541, -277, -446, 431, 497,
	497, 396, 396, 497, 497, -598, 555, 396, 577, 42,
	42, 29, -123, 261, 182, 497, -296, -260, 529, 43,
	529, 497, 43, 431, 497, 577, 43, 43, 497, 497,
	-564, -250, 105, 315, 278, 316, 97, 312, 96, 311,
	103, 313, 104, 314, 536, 324, 63, 310, 289, 317,
	-251, -252, 357, 527, -499, 444, 405, 150, 216, -454,
	216, -454, -288, -245, 574, -123, -410, -410, -123, -410,
	-123, 46, 150, 2, -594, 254, 572, -303, 321, 182,
	-331, -455, 236, 577, -339, 150, -496, -364, -363, 321,
	-279, 209, 2, 150, -322, 321, 144, 572, 385, 2,
	-261, 209, -246, -245, -383, -227, 485, 150, -361, 525,
	-393, -123, 572, 124, 39, -393, -350, -351, -452, -352,
	-262, 572, -268, -407, -96, -456, 573, 573, 573, -185,
	340, -184, -245, 5, -198, 525, -302, -402, -401, -516,
	-517, -512, 266, 224, 515, 238, 165, -323, -263, -262,
	117, -192, 541, -119, -120, 573, -454, 216, -186, -186,
	-454, -454, -275, 179, -499, -186, -186, -186, 2, 2,
	2, -367, -275, -259, -296, -275, 574, -331, -331, -287,
	-283, -367, -259, -367, -259, -367, -259, -123, -410, 2,
	441, 179, 179, 574, -367, 385, 118, 481, 355, 224,
	-275, -296, -275, -296, -259, 118, -259, 119, -275, -446,
	-358, -211, 337, 250, 448, -390, -391, -412, 422, 423,
	-391, 422, 423, 8, 9, 8, 9, -215, 452, 325,
	-340, 577, -218, 40, 131, 250, -275, 547, 146, -410,
	-410, 497, -600, 476, -417, 146, -410, 303, 326, 506,
	164, 516, 135, 330, 182, 572, -411, -411, 573, -344,
	-410, -410, 571, 580, 573, -327, 577, -325, -410, -342,
	-342, 573, 574, -342, -331, 571, 571, 577, 573, -428,
	-429, 140, -410, 497, 497, 497, 497, 572, 573, 574,
	-546, 347, 572, 572, -410, 573, 573, 573, 573, 39,
	577, 577, 577, 573, 577, 577, 577, 573, 573, 573,
	577, 573, 547, 547, 573, 573, 573, 573, 577, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 573, 577, 573, 182, 573, 573, -381,
	361, 573, 11, 12, 563, 564, 565, 566, 177, 567,
	568, 561, 562, 560, 553, 554, 555, 86, 281, 424,
	14, 15, 16, 239, 216, -411, -411, -411, 573, -415,
	-416, 182, 179, 39, -376, -376, -376, 573, 182, -342,
	573, 573, 572, -539, 283, 321, 573, -404, -403, 539,
	-451, -335, 2, -441, -270, -490, -404, -404, -342, -410,
	245, 245, -369, 525, 336, -371, -441, -434, -486, -409,
	-408, 180, 40, 131, 318, 212, -434, -268, -322, -434,
	-434, -490, -435, -435, -433, 573, -554, -486, 573, -336,
	-444, -533, -327, 574, -490, -195, -534, -174, 5, 326,
	-174, -174, -174, -331, 497, 497, 25, 362, -460, 570,
	571, 8, -490, 572, -484, -484, -484, -331, 182, 182,
	182, -496, -496, 2, -224, -340, -224, -224, -296, -297,
	-224, -224, -224, -362, 541, -487, -397, 513, 83, 387,
	493, -487, -220, 405, -262, -262, -275, -284, -245, 195,
	397, 26, 397, 265, 265, 321, -401, 209, -226, 321,
	-460, -269, -245, 572, -385, 543, 250, 250, 525, -262,
	-269, 250, 209, -262, 209, -269, 2, -269, -565, 387,
	331, -410, -496, 272, 385, 322, -221, 405, 444, -123,
	-123, -123, 572, -578, 525, 134, -275, -296, -275, -284,
	-279, 444, 405, 319, -290, -485, -485, -363, 444, 405,
	-284, -277, -496, -232, -245, -232, 431, -259, 396, 547,
	-598, -222, -123, -123, -123, 572, -260, -223, 405, 5,
	209, -262, 5, -245, -262, -284, -496, -582, 24, -262,
	209, -262, -284, -496, -250, -499, 326, 521, -563, 431,
	497, -446, -119, -189, 541, -119, -183, 220, 565, -560,
	-245, 534, -245, -301, -304, -302, -262, -201, -202, 543,
	541, 150, -294, -275, 570, -186, -499, -275, -285, -286,
	150, -322, 321, -499, 39, 150, 572, 2, 2, 336,
	321, -261, 209, -228, 141, -598, -259, -404, -335, -360,
	-395, 413, 336, -323, 530, -268, -360, -337, 577, 182,
	555, 574, -323, -450, 565, -96, -96, -186, 577, 572,
	555, 555, 572, -499, -499, 573, 577, -226, -275, -261,
	224, 224, -267, -246, 573, 577, 574, 572, -194, 340,
	-193, 142, 252, 237, 453, 454, 455, 456, 133, -454,
	-192, -120, 182, -57, 541, 481, -186, 576, -245, -367,
	-367, -367, 441, 441, -245, -271, -259, -275, -272, -296,
	179, 179, -259, 519, -391, 337, 277, -437, -219, 549,
	-275, 576, -410, -410, 146, 146, -410, -411, -411, -410,
	146, 182, 572, -410, -421, 34, 34, 573, 577, -406,
	-410, 573, 533, -327, -327, 573, 565, -490, 576, 573,
	-419, 143, -410, 491, 290, 207, 288, -380, 288, -380,
	-380, -484, 5, -490, 565, -547, -265, 572, -245, 539,
	-326, 342, 573, -462, -460, -410, -410, -410, -410, -410,
	-484, -465, -465, -480, -480, -410, -415, -410, -462, -460,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, 135,
	321, 330, -411, -416, -415, -410, -410, -460, 573, 573,
	573, -342, -96, 572, 283, -354, 200, -410, -454, 577,
	-354, -354, 573, -441, -441, 572, -410, 245, 571, 577,
	579, 555, -322, 574, -433, -434, 571, 573, 577, 573,
	577, -394, 39, 573, -490, -404, -197, -196, 132, 53,
	-331, -331, 339, 5, 8, 570, 571, 574, -484, 573,
	573, 573, -331, -331, -331, -224, -224, 117, 309, -410,
	497, 497, 60, 497, 42, 319, -232, 377, 422, 26,
	397, 397, 150, 321, 527, -518, -513, 148, -410, 572,
	224, 572, 572, 2, -217, 139, 444, -580, 2, 525,
	150, -224, 150, -224, 545, 572, 572, 497, 431, -238,
	541, -342, -410, -187, 124, -489, -567, 576, -567, 576,
	431, 497, 431, 497, 541, 163, 163, -232, 541, -342,
	497, -464, 48, 27, 321, -278, 497, 497, -224, 150,
	509, 444, -499, 326, -284, -279, 444, 405, -454, -191,
	340, -190, 142, 415, 133, 252, -454, -189, 182, 236,
	-279, 2, 573, 573, 577, -519, 39, 334, 334, 572,
	-275, -77, 541, -453, -486, 44, -277, 39, 150, -563,
	-123, -279, -458, -459, 5, -275, 150, 336, 321, -229,
	259, -598, -494, -534, -327, -360, -349, 322, 91, 573,
	-404, -351, -335, -410, 2, 573, -184, -185, -499, -499,
	-499, -186, -198, -198, -402, -305, 572, -261, -246, 572,
	-198, -263, 2, -500, 577, 572, 555, 555, 555, -192,
	-454, -123, 340, -275, 565, -367, -312, -311, 355, 330,
	-312, 422, 422, 337, 173, 255, -218, -260, -410, -410,
	146, 34, 34, -410, -410, -421, 573, -410, -410, -342,
	571, 5, -410, 573, 573, 8, -410, 573, 574, -548,
	-245, -410, 573, 60, 573, 573, 577, 577, 573, 573,
	573, 573, 573, 573, 573, -416, 182, 135, 330, 572,
	573, 573, -96, -418, 203, 60, -441, -418, -418, -369,
	-331, -441, -408, -260, 570, -490, -486, -444, 572, 574,
	-196, 555, 571, 2, 570, -490, 573, 117, -262, -262,
	481, 422, 319, -232, 377, 422, 396, 265, 26, 26,
	-401, 150, -520, 93, -522, 76, 165, 102, 321, 326,
	515, 377, 72, 124, 393, -590, 39, 552, 573, -329,
	-438, -533, 572, -245, -329, -331, 321, 471, 124, 321,
	124, 117, 509, 79, -262, -269, -331, -331, -275, -284,
	157, 573, 577, 555, 2, 565, 565, -284, -279, -284,
	-277, 353, 157, 573, -260, 5, 5, 150, -257, 76,
	5, -262, -262, -278, 117, 431, 497, -189, 577, 572,
	555, 555, -189, -500, -119, -322, -313, 226, -262, -517,
	-514, -515, 377, -521, -523, 165, 377, -123, 2, -200,
	-199, -245, 5, 572, -303, 340, 571, -496, -364, -123,
	-279, -322, 573, 577, -386, 525, -260, -275, 150, -230,
	258, -598, -494, -227, -389, -387, 136, 572, 336, -123,
	-327, 555, 573, 573, 117, 117, 218, 149, -329, 572,
	572, -331, 117, 573, -193, -194, -499, -119, -499, -192,
	-58, -59, 224, 93, 360, -272, 481, 224, 572, 572,
	-218, -410, -410, -410, 573, -327, -490, 565, -542, 355,
	573, -437, -410, -410, -411, 182, 572, -421, 573, -543,
	540, -410, -355, -356, -410, 421, 107, 201, -543, -543,
	573, -486, 2, -499, 570, 2, 216, 396, 265, 497,
	-401, -269, -273, -266, -245, 165, 209, 326, -385, 250,
	572, -411, -275, 572, 2, 31, -591, 128, 229, 573,
	577, -439, -256, -245, -410, -439, 573, 573, 326, 326,
	-410, -460, 572, -224, -224, 573, 573, -410, 497, -489,
	100, -487, 2, -567, -259, -410, 497, 5, -224, -273,
	-224, -224, -257, 509, -284, -279, -190, -191, -499, -119,
	-189, 39, -308, 228, 2, -519, 250, -266, 250, -589,
	541, 573, 577, 555, 555, -301, -201, -78, -79, 498,
	-453, -322, 39, 5, 572, -245, 336, 572, -260, -240,
	92, -598, -494, -228, -360, 322, -331, 93, -389, -417,
	-186, 572, 572, -306, 81, 94, 125, 208, 185, 225,
	464, 469, 29, -306, 573, -329, -329, 573, 572, -186,
	573, 577, 29, 572, 29, 572, -275, -296, -342, -342,
	573, -327, 60, 577, 573, 573, -411, -421, 573, -544,
	-545, -265, 577, 572, 572, 445, 571, 2, -232, 377,
	-232, 377, -522, -266, 321, 525, -410, -247, 572, -410,
	39, 229, 129, 214, -400, -592, 101, 472, 217, -438,
	-218, 573, -399, 525, 393, -257, -329, 572, 572, 572,
	555, 182, 572, -464, -224, -278, 573, -572, 391, -123,
	-309, -310, 216, 572, -307, 336, 117, 309, -199, -487,
	-487, 573, 39, -79, 9, 39, -123, -329, -275, -329,
	336, -234, -233, 267, -494, -229, 573, -269, -360, -500,
	-500, -399, 573, 573, -500, -59, -331, -331, 573, 573,
	-549, 385, 423, 202, -342, -328, 573, 577, 39, -356,
	2, 2, 2, 396, 396, 150, 204, 573, -524, 282,
	-245, 573, 129, 214, -308, 572, -219, -439, -308, 204,
	-275, -568, 525, 573, -315, -314, -311, -317, -316, -311,
	-342, -487, 100, 353, -342, -257, -575, 183, -574, 5,
	10, -201, 353, -330, -440, -262, 82, 117, -313, -123,
	-123, 573, -386, 573, -275, -231, -501, 396, 398, -598,
	-230, -404, 573, 573, -400, -399, -202, 541, 573, 573,
	573, 573, -550, -551, 50, 512, 108, -410, -550, -550,
	-545, -547, 165, 541, -525, -528, -527, 336, 451, 183,
	354, 573, 471, 537, -309, -331, 541, -322, -410, -399,
	573, 577, 530, 573, 577, 530, 573, 182, 573, -224,
	-188, 541, 46, -307, -275, 573, 577, 376, 130, 139,
	-308, -589, -399, 572, -400, 572, -237, -236, -598, -480,
	-240, 136, -186, -186, -308, -400, -404, -186, -552, 148,
	-551, 373, 178, 422, 373, 178, -552, -552, -266, 55,
	-527, 336, -528, 336, 519, 130, -591, 573, 55, -524,
	-308, -314, 216, -316, 182, 353, 429, -574, 31, -239,
	-238, 572, -440, 423, 423, 2, -309, -307, -400, -329,
	-308, -329, -235, -331, -234, 322, 519, -309, -308, 108,
	200, 492, 309, 34, 555, -526, 309, 411, 64, 444,
	-526, -404, 555, -525, 572, 572, 340, -331, 2, -201,
	-308, 573, -309, 573, -231, 444, -202, -309, 422, 344,
	-551, -410, 23, 326, 124, -410, -591, -342, -342, -185,
	572, 573, -307, -309, -399, -202, -400, -237, -350, -404,
	-202, 573, 573, -185, -225, 64, 411, -239, -202, -400,
	-404, -308, -404, -404, -309, 497, 573, -404, -308, -309,
	572, -309, -202, -342, -202, -404, 573, -404, -309,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 503, 504, 506, 507, 508, 510,
	511, 513, 515, 517, 518, 519, 521, 522, 524, 525,
	526, 527, 528, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	594, 596, 0, 1267, 1269, 1271, 1273, 0, 737, 0,
	36, 37, 0, -2, 301, 303, 305, 0, 331, 333,
	334, 336, 338, 340, -2, 0, 438, 439, 441, 443,
	-2, 0, 918, 920, 0, 583, 585, 0, 923, 925,
	0, 0, 605, 606, 0, 1373, -2, 599, 601, 603,
	668, 670, 672, 674, 676, 678, 680, 682, 684, 685,
	687, 689, 691, 693, 695, 696, 698, 700, 702, 703,
	705, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, -2, 734, -2, -2, 0,
	-2, -2, -2, 1285, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 389, 390, 392, 394, 396, 398, 401,
	403, 405, 1431, 445, 447, 449, 451, 453, 455, 457,
	0, -2, 1445, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1404, 1406, 1408, 1410, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 505,
	509, 512, 514, 516, 520, 523, 529, 531, 533, 490,
	491, 494, 2109, 2126, 2127, 2128, 2131, 2132, 2133, 2134,
	2135, 2136, 2567, 2648, 2649, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 492, 493, 1086, 0, 557, 555,
	2094, 558, 2374, 560, 562, 432, 433, 434, 435, 436,
	437, 0, 576, 568, 1443, 577, 579, 580, 581, 582,
	552, 550, 0, 576, 2162, 574, 1265, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 368,
	1135, 1136, 1137, 1250, 1251, 2417, 1292, 0, 212, 595,
	-2, -2, -2, 2532, -2, 627, -2, 634, 2536, 2419,
	639, 0, 641, -2, 644, 1268, 1270, 1272, 735, 736,
	2112, 0, 0, 0, 0, 0, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 222, -2, -2, -2, -2, 0, 0, 2461, 2212,
	2062, 2128, 2065, 2060, 302, 304, 306, 307, 0, 0,
	0, 0, 0, 0, 332, 335, 337, 339, -2, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 979, 971, 972, 1192, 0, 0, 0, -2, 440,
	442, 495, 496, 0, 1432, 1432, -2, 0, 0, 0,
	0, 276, 267, 919, 921, 922, 0, 0, 0, 0,
	584, 586, 0, 0, 249, 924, 926, 927, 0, 0,
	0, 0, 0, 278, 0, 0, 600, 602, 604, 669,
	671, 673, 675, 677, 679, 681, 683, 686, 688, 690,
	692, 694, 697, 699, 701, 704, 707, 709, 711, 713,
	715, 717, 719, 721, 723, 725, 727, 729, 731, 733,
	743, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 829, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 900, 0, 746, 748, 749, 750, 0,
	809, 827, 828, 837, 0, 1126, 1433, 1294, 1275, 1289,
	1294, 1277, 1278, 1279, 1280, 1281, 1286, 1288, 1282, 1283,
	1284, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	391, 393, 395, 397, 399, 402, 404, 406, -2, 1402,
	1403, 446, 448, 450, 452, 454, 456, 458, 587, 0,
	589, 0, 747, -2, 0, 1437, 1437, 1437, 0, 0,
	1403, 1401, 0, 592, 593, 648, 649, 1705, 0, 0,
	0, 0, 0, 0, 0, 1959, 1791, 0, 650, -2,
	1822, 1824, 2507, 2532, 1958, 1826, 1827, 1828, 1829, 1830,
	0, 1832, 1833, 1834, 1835, 1836, 1837, 0, 1839, 0,
	1844, 1845, 1846, 0, 2514, 2039, 2122, -2, 0, 0,
	2520, 2118, 0, 1925, 1862, -2, -2, 2145, 2124, 1637,
	1638, 1639, 1640, 1641, -2, -2, 2550, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 0, 2495,
	2515, 2516, 2521, 2523, 2517, 2504, 1887, 2224, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1664, 1673, -2, -2, -2, -2, -2, -2, -2,
	2508, 2509, 2526, 2529, 2535, 2540, 2541, 2513, 2522, 2549,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 1665, -2, -2, -2,
	-2, 1420, 2387, 1423, 1086, 1421, 1405, 1407, 0, 1409,
	0, 0, 0, 1414, 1440, 1438, 0, 1489, 1418, 1419,
	1507, 1507, 1531, 0, 1512, 0, 1531, 1432, 1558, 0,
	1518, 2409, 1863, 1864, 0, 2128, 2123, -2, -2, 2547,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 559,
	561, 0, 0, 0, 575, 1442, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 374, 375, 2515, 0,
	0, 0, 380, 0, 382, 383, 384, 385, 386, 387,
	388, 182, 2515, 463, 488, 0, 182, 2515, 466, 182,
	2515, 469, 0, 472, 1190, 182, 2515, 475, 2090, 182,
	2515, 478, 480, 2098, 182, 2515, 484, 2105, 2103, 485,
	2515, 487, 281, 279, 280, 2141, 2142, 2149, 2150, 2151,
	2152, 2548, 2550, 1261, 1262, 1263, 1264, 0, 1291, 1191,
	597, 598, 0, 622, 0, 626, 2503, -2, 0, 2428,
	-2, 630, 1295, 1299, 1300, 1301, 1302, 1303, 0, 0,
	0, 0, 1308, 0, 0, 636, 0, 0, 623, 624,
	642, 645, 0, 738, 739, 740, 741, 742, 68, 0,
	2515, 1558, 70, 0, 2084, 2153, 2154, 2155, 2156, 2157,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	73, 0, 2515, 77, 0, 2515, 0, -2, 88, 0,
	95, 0, 2087, 104, 0, 2515, 0, 2059, -2, 0,
	193, 0, 946, -2, 2515, 1134, 0, 0, 0, 0,
	909, 2056, 2061, 910, 2080, 911, 2066, 0, 308, 309,
	310, 311, 312, 0, 313, 2515, 315, 316, 0, 318,
	319, 2515, 321, 322, 0, 324, 0, 233, 234, 2515,
	343, 344, 0, 346, 347, 0, 349, 0, 0, 0,
	353, -2, 369, 0, 366, 356, 357, 359, 360, 361,
	362, 363, 0, 410, 408, 2095, 0, -2, 2515, 0,
	943, 0, 0, 1171, -2, 2515, 1131, 0, 1177, 1173,
	0, -2, 0, 1430, 2515, 1312, 975, 976, 977, 978,
	1570, 429, 0, 1338, 0, 1340, 0, 1359, 1564, 1507,
	0, 0, 1569, 0, -2, 546, 2111, -2, 498, 0,
	499, 0, -2, 0, 293, 0, 0, 928, 929, 930,
	931, 932, 935, 936, 937, 938, 1544, 250, 252, 0,
	0, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	0, 0, 607, 0, 0, 744, 745, 0, 0, 755,
	756, 757, 0, 293, 2420, 2383, 2245, 764, 0, 767,
	770, -2, 0, 0, 0, 0, 774, 0, 779, 780,
	781, 0, 0, 785, 787, 917, 789, 0, 0, 791,
	0, 795, 0, 798, 0, 800, 0, 802, -2, -2,
	-2, -2, 813, -2, 0, 816, 818, 0, 820, -2,
	0, 829, 825, 826, 0, 0, 0, 0, 845, 846,
	0, 855, 0, 858, 859, 860, 0, 862, 863, 0,
	865, 866, 867, 868, 0, 870, 871, -2, -2, 875,
	877, 0, 884, 0, 888, 0, 892, 0, 0, 899,
	0, 751, 752, 182, 1562, 1274, -2, 1276, 0, -2,
	0, 588, 0, 591, 1462, 1388, 1385, 0, 1459, 1460,
	1389, 0, 0, 0, 1396, 0, 1435, 1436, 0, 0,
	0, 1375, 1376, 0, 0, 0, 0, 1964, 1965, 1966,
	1967, 1968, 1969, 1972, 1973, 1970, 1971, 1974, 1975, 0,
	0, 0, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 1978, 1979, 0,
	0, 1981, 0, 1983, 0, 0, 0, 0, 0, 0,
	1770, 1772, 2047, 0, 0, 1980, 1710, 1711, 1712, 1713,
	1714, 1749, 1750, 0, 0, 1823, 2044, 2043, 1825, 0,
	1995, 0, 1838, -2, 0, 1959, 1990, 0, 0, 1847,
	1848, 1849, 0, 0, 1995, 0, 0, 2038, 1859, 1860,
	1702, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 1650, 0, 1652, 0, 1653, 1654, 1661, 1674,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 2019, -2, 0, 0, 0, 0, 1666, 0,
	1422, 0, 0, 1493, 2048, 2052, 2053, 1493, 1493, 0,
	0, 1996, 1555, 1555, 0, 0, 1550, 1550, 1550, 1548,
	1531, 0, 1531, 1541, 0, 1531, 1531, 0, -2, 1512,
	0, 0, 1541, 0, 1525, 534, 536, 538, 540, 541,
	542, 544, 1559, 1560, 0, 0, 0, 0, 2129, 0,
	0, 0, 0, 0, 2114, 0, 0, 0, 0, 2471,
	2419, 564, 578, 1432, 0, 1998, 1585, 1589, 0, 1591,
	1592, 1593, 1594, 1595, 0, 0, 1586, -2, 1662, 1664,
	1685, 2146, 2147, 2148, 1645, 1646, 1647, 1648, 1649, 1657,
	1644, 1644, 1644, 1655, 1684, 1676, 1684, 1680, 1630, 1631,
	1632, 1667, 1668, 1669, 1670, 0, 2471, 2419, 570, 0,
	0, 1370, 197, 199, 200, 201, 202, 203, 370, 0,
	377, 378, 379, 0, 459, 0, 180, 181, 0, 182,
	2515, 464, 0, 467, 0, 182, 2515, 2054, 473, 0,
	476, 0, 0, 482, 0, 0, 0, 0, 0, 182,
	1372, 0, 0, 0, 0, -2, 632, 637, 638, 0,
	1297, 0, 1304, 659, 660, 661, 1306, 1307, 0, 1309,
	635, 662, 663, 664, 665, 666, 667, 0, 2068, 2069,
	2070, 2071, 2074, 2075, 0, 0, 633, 652, 640, 0,
	646, 105, 1247, 0, 144, 0, 1247, 1247, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	129, 140, 117, 118, 0, 0, 0, 0, 0, 78,
	1108, 0, 1111, 0, 0, 0, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 0, 0, 92, 93, 128,
	0, 0, 1335, 0, 123, 107, 0, 0, 0, 130,
	142, 0, 173, 175, 0, 0, 0, 0, 0, 0,
	192, 204, 0, 0, 0, 0, 1132, 0, 1429, 0,
	0, 2515, 0, 1544, 2291, -2, -2, 250, 1544, 908,
	0, 0, 2129, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 348, 350, 351, 352, 0, 1170, 0,
	358, 400, 1057, 2515, 0, 0, 427, 422, 0, 424,
	0, 0, 1107, 2515, 1105, 2099, 0, 1129, 0, 1086,
	2515, 2097, 0, 0, 1178, 2138, 1187, 1191, 1325, 0,
	431, 0, 1341, 1343, 0, 0, 1565, 0, 1567, 1507,
	1432, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 256, 0, 1543, 0, 0, 1544, 250, 293,
	293, 1544, 609, 1544, 611, 0, 0, 758, 759, 0,
	293, 293, 293, 765, 766, 768, 769, -2, -2, -2,
	885, 771, 772, 852, 0, 0, 0, 851, 784, 788,
	0, 902, 2405, 2419, 2471, 915, 852, 2212, 852, 2212,
	852, 2212, 799, 801, 804, 840, 848, 812, 817, 0,
	0, 822, 830, -2, 0, 832, 0, 834, 0, 836,
	852, 853, 856, 861, 864, 869, 0, 0, 0, 0,
	0, 0, 0, 895, 896, 0, 0, 1125, 0, 1287,
	1462, 1388, 590, 1379, 1461, 1380, 1387, 1390, 0, 0,
	1392, 0, 1394, 0, 1457, 1458, 1465, 1466, 0, 1476,
	1477, 1469, 0, -2, 0, 0, 1472, 1473, 1398, 0,
	1415, 1416, 1417, 1446, 1449, 1206, 0, 2648, 1706, 1580,
	1707, 1708, 2083, 0, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, -2, -2, -2, -2, -2, -2,
	-2, -2, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, -2, -2, -2, 1747, 1748, -2, 1982,
	1984, 0, 2047, 0, -2, 0, -2, -2, -2, -2,
	1767, 0, 1769, 1774, 1776, 1778, 0, 0, 0, 0,
	2046, 1788, 2030, 2031, 0, 0, 1961, 1962, 1963, 1773,
	0, 1792, 2045, 2042, 0, 0, 1994, 1445, 1851, 0,
	0, 0, 0, 1858, 1843, 1992, 0, 1991, 0, 0,
	0, 2002, 0, 2037, 2033, 0, 2081, 1701, 1688, 1689,
	1690, 1691, 1692, 1693, 1703, 0, 2078, 2115, 2121, 1935,
	0, 0, 0, 1888, 1889, 1890, 1891, 1892, 0, 1894,
	1895, 0, 1897, 1898, 0, 1900, 1901, 0, 1903, 1904,
	1905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 1602, 0, 0, 0, 1606, 0, 0, 0,
	1610, 0, 0, 0, 1614, 0, 0, 0, 1618, 0,
	0, 0, 1622, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 1907, 0, 2005, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1909, 0, 1911, 1996, 2016, 0,
	0, 1793, 0, 0, 0, 1959, 0, 1914, 1996, 2024,
	0, 0, 0, 0, 0, 1996, 0, 2029, 0, 1921,
	0, 1923, 1424, 0, 0, 1575, 0, 0, 0, 2051,
	1575, 1575, 0, 1488, 0, 0, 1551, 1552, 1553, 1554,
	0, 0, 1555, 0, 1545, 1549, 1546, 1547, 1541, 1504,
	0, 0, 2085, 1541, 1510, 1540, 0, 1086, 1530, 1541,
	1541, 0, -2, 1514, 1531, 0, 0, 535, 537, 539,
	543, 545, 0, 0, 1445, -2, 0, -2, 1085, 0,
	0, 0, 0, 554, 556, 0, 0, 479, 0, 0,
	548, 0, 551, 0, 1576, 1579, 0, 0, 1590, 1596,
	1597, 0, -2, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 489, 182, 461, 0, 182,
	182, 470, 0, 0, 182, 481, 182, 2106, 182, 2104,
	282, 486, 1371, 215, 0, 625, 0, 1296, 1305, 0,
	656, 0, 658, 0, 2072, 2076, 2073, 2077, 0, 647,
	0, 0, 0, 0, 1246, 0, 1213, 0, 0, 0,
	0, 0, 148, 2515, 0, 184, 0, 0, 1050, 2091,
	0, 1042, 0, 0, 2231, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	1109, 1110, 1112, 1119, 1121, 0, 1115, 2079, 0, 0,
	1116, 0, 1118, 1120, 1122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 1335, 0, 0,
	0, 116, 120, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 1164, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 0, 0, -2, 0, 0, 0, 0, 225,
	0, 284, 2057, 2067, 0, 933, 934, 314, 317, 320,
	323, 221, 0, 354, 0, 0, 981, 956, 0, 0,
	409, 293, 0, 0, 423, 2108, 941, 1103, 1106, 0,
	1086, 2515, 1143, 0, 0, 0, 0, 0, 0, 1176,
	0, 2515, 2086, 2137, 2138, 1327, 1335, 0, 1575, 0,
	1357, 1344, 0, 0, 0, 1357, 1361, 1362, 1364, 1365,
	0, 0, 1566, 1572, 497, 547, 1432, 1432, 293, 291,
	2351, 289, 286, 288, 0, 0, 0, 982, 984, 985,
	986, 184, 0, 2138, 1042, 2280, 2138, 0, 1347, 1349,
	0, 245, 0, 253, 1544, 251, 256, 0, 0, 421,
	608, 613, 753, 0, 293, 761, 762, 763, 806, 842,
	850, 773, 775, 776, 777, 0, 0, 916, 912, 913,
	914, 790, 852, 793, 852, 796, 852, 815, 819, 824,
	831, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 0, 889, 890, 891, 893, 898, 897, 901, 1563,
	1383, 1384, 1386, 0, 1395, 0, 0, 1471, -2, -2,
	1470, 1474, 1475, -2, -2, -2, -2, 1391, 0, 1400,
	1397, 0, 1456, 1204, 1205, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1789, 0, -2, 1768, 1771, 1775,
	1777, 1779, 0, 0, 0, 0, 0, 0, 1985, 0,
	1987, 1790, 2040, 2043, 1957, 0, 0, 1444, 1445, 1445,
	0, 1857, 0, 1993, 0, 2000, 2001, 0, 1850, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 0, 1893, 1896, 1899, 1902, 0,
	0, 0, 0, 1882, 0, 0, 0, 1886, 1656, 1642,
	0, 1684, 1682, 1683, 1677, 1684, 1681, 1634, 0, 1599,
	1600, 1601, 1603, 1604, 1605, 1607, 1608, 1609, 1611, 1612,
	1613, 1615, 1616, 1617, 1619, 1620, 1621, 1623, 1624, 1625,
	1627, 1628, 1629, 1633, 0, 1906, 0, 1908, 1910, 0,
	0, 1912, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 1798, 1913, 2022,
	2023, 0, 0, 0, 0, 0, 0, 1919, 0, 2028,
	1920, 1922, 1432, 0, 1425, 0, 1490, 1479, 1574, 0,
	2049, 1544, 1492, 1494, 2050, 2088, 1479, 1479, 0, 1997,
	0, 0, 1535, 0, 0, 0, 1537, 1508, 0, 0,
	1502, 0, 1498, 1499, 1500, 1501, 1509, 1086, 1539, 1511,
	1515, 2115, 0, 1541, 0, 1526, 0, 1528, 1561, 0,
	1520, 1523, 0, 0, 2130, 1575, 0, 325, 329, 330,
	326, 327, 328, 563, 0, 0, 0, 0, 1999, 0,
	1581, 0, 1587, 0, 0, 0, 0, 569, 0, 0,
	0, 198, 1369, 376, 460, 182, 465, 468, 2055, 182,
	474, 477, 483, 211, 0, 621, -2, 654, 655, 657,
	0, 653, 145, 1247, 0, 0, 1209, 1211, 2102, 1215,
	0, 0, 0, 0, 0, 0, 150, 2515, 159, 0,
	1022, 0, 2089, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 2515, 182, 2515, 182, 162, 164, 167, 0,
	172, 169, 170, 0, 0, 1013, 106, 1247, 0, 109,
	113, 121, 0, 0, 0, 127, 0, 0, 0, 1232,
	1238, 0, 0, 1113, 1114, 1117, 1123, 79, 0, 0,
	1236, 1242, 89, 90, 2100, 91, 0, 1208, 0, 0,
	0, 174, 111, 115, 122, 0, 1244, 108, 0, 196,
	0, 0, 0, 188, 0, 189, 190, 205, 0, 182,
	2515, 0, 944, 945, 1165, 1127, 1128, 0, 1133, 0,
	0, 0, 1544, 217, 0, 1544, 225, 0, 2063, 0,
	342, 0, 0, 0, 0, 980, 1068, 0, 951, 0,
	0, 0, 415, 411, 0, 420, 426, 425, -2, 0,
	0, 0, 0, -2, 0, 0, 1180, 1174, 1175, 0,
	0, 0, 2515, 1329, 1335, 0, 1430, 1445, 430, 1336,
	1357, 0, 0, 0, 1346, 1342, 1339, 1575, 0, 0,
	0, 0, 0, 1568, 1571, 500, 501, 268, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 987, 991, 0,
	2138, 2138, 0, 2093, 0, 0, 0, 0, 254, 0,
	257, 0, 0, 0, 262, 263, 264, 265, 266, 256,
	247, 1544, 0, 610, 0, 0, 760, 0, 783, 792,
	794, 797, 833, 835, 852, 878, 879, 1008, 0, 1008,
	0, 0, 894, 1393, 0, 1468, 1399, 1450, 1451, 0,
	1206, 0, 1709, 1752, 0, 0, -2, 0, 0, 1756,
	0, 0, 0, -2, 0, 0, 0, 1986, 1988, 0,
	2042, 1852, 0, 0, 0, 1856, 1840, 1841, 0, 1960,
	2003, 2032, 2036, 0, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 0, 2082, 2116, 2120, 1933, 1934, 1938, 2096, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 1679, 0, 0, 2004, 2015, 2017, 1794, 1795,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	-2, -2, -2, 1812, 1813, 1814, -2, -2, -2, 0,
	0, 0, 2018, 2020, 2021, 2025, 2026, 0, 1916, 1917,
	1918, 2027, 0, 1432, 1426, 1487, 0, 1573, 1491, 0,
	1487, 1487, 1439, 1533, 0, 0, 1557, 0, 1505, 0,
	1506, 0, 1538, 0, 1513, 1516, 1517, 1527, 0, 1519,
	0, 1522, 0, 1852, -2, 294, 295, 297, 0, 300,
	566, 567, 565, 549, 0, 0, 1583, 0, 0, 1659,
	1663, 1687, 572, 573, 571, 462, 471, 213, 0, 1542,
	0, 0, 0, 0, 2168, 1224, 1225, 0, 2532, 1228,
	0, 0, 0, 0, 183, 1020, 1049, 0, 0, 0,
	1041, 0, 0, 1055, 152, 0, 0, 0, 160, 0,
	0, 157, 0, 166, 171, 0, 0, 0, 0, 1214,
	0, 0, 124, 125, 126, 0, 131, 0, 132, 0,
	0, 0, 0, 0, 0, 1320, 1321, 1315, 0, 0,
	0, 185, 0, 0, 0, 1203, 0, 0, 207, 0,
	0, 0, 1168, 1169, 1233, 1239, 0, 0, 225, 223,
	0, 226, 0, 229, 230, 0, 225, 219, 0, 0,
	1086, 355, 954, 1056, 0, 1058, 0, 952, 0, 0,
	1057, 407, 0, 414, 0, 0, 1107, 0, 0, 1130,
	1141, 1086, 0, 1179, 1181, 1189, 0, 0, 0, 1331,
	1335, 0, 1324, 1325, 1464, 1337, 1355, -2, 0, 0,
	1445, 1363, 1360, 1366, 1367, 0, 290, 0, 285, 287,
	0, 271, 0, 0, 983, 988, 0, 0, 0, 0,
	0, 1348, 1350, 0, 0, 0, 0, 0, 0, 246,
	256, 277, 0, 754, 778, 843, 880, 1007, 0, 0,
	882, 0, 0, 1467, 1454, 1455, 1452, 1206, 1754, 1758,
	0, 0, 0, 1760, -2, 0, 1782, -2, -2, 1989,
	2041, 1831, 1445, 1853, 1855, 1842, 2035, 1704, 0, 1940,
	1937, 0, 1924, 0, 1877, 1878, 0, 0, 1881, 1883,
	1884, 1885, 1643, 1636, 1635, 2014, 0, 0, 0, 0,
	1915, 1427, 0, 1929, 0, 0, 1495, 1929, 1929, 1534,
	0, 1536, 1503, 1496, 0, 2116, 1529, 1521, 0, 0,
	298, 0, 1577, 1582, 0, 1588, 1658, 214, 146, 147,
	1218, 1219, 1220, 1221, 0, 0, 1226, 1227, 0, 1231,
	149, 0, 1021, 0, 1024, 0, 0, 0, 0, 1031,
	1042, 0, 0, 0, 0, 0, 1043, 0, 1072, 0,
	1194, 1201, 0, -2, 0, 0, 0, 154, 177, 0,
	0, 1248, 0, 0, 182, 182, 0, 0, 1210, 1212,
	0, 0, 0, 0, 134, 0, 0, 1234, 1240, 1237,
	1243, 0, 0, 0, 1245, 194, 195, 0, 182, 0,
	187, 182, 182, 1203, 0, 0, 0, 216, 0, 0,
	0, 0, 218, 283, 225, 0, 1002, 0, 1068, 1060,
	1061, 1062, 0, 1067, 1069, 0, 0, 968, 953, 0,
	964, 0, 0, 981, 956, 0, 412, 942, 1104, 1138,
	1086, 0, 1172, 0, 0, 0, 0, 0, 0, 1333,
	1335, 0, 1326, 1327, 1357, 1463, 0, 0, 0, 1345,
	1464, 0, 292, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 258, 0, 259, 260, 261, 248,
	612, 614, 0, 0, 620, 1006, 0, 0, 0, 0,
	1453, 1762, -2, -2, 1783, 0, 2117, 2119, 1445, 0,
	1926, 1447, 0, 0, -2, 0, 0, 0, 1428, 1411,
	0, 1486, 1478, 1480, 1482, 2408, 2208, 2514, 1412, 1413,
	1556, 0, 1524, 299, 0, 1584, 0, 1222, 1223, 0,
	151, 0, 1025, 1026, 2092, 1028, 0, 1030, 1032, 1033,
	0, 1036, 2140, 0, 1040, 0, 1051, 1073, 0, 1082,
	0, 1196, 1206, 1200, 0, 1198, 1084, 0, 153, 155,
	176, 1203, 0, 156, 165, 0, 0, 110, 0, 0,
	2203, 137, 135, 133, 1207, 112, 0, 196, 206, 1202,
	191, 208, 182, 0, 1235, 1241, 227, 0, 228, 231,
	0, 0, 1010, 0, 955, 1059, 0, 1070, 1071, 958,
	0, 957, 0, 0, 0, 0, 0, 413, 416, 0,
	419, 0, 0, 1182, 0, 1188, 0, 0, 0, 1314,
	0, 0, 1328, 1329, 428, 1351, 0, 0, 1357, 1368,
	270, 0, 0, 989, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 990, 1084, 0, 0, 1048, 0, 275,
	255, 0, 616, 0, 618, 0, 881, 883, 0, 0,
	1854, 1944, 0, 0, 1879, 1880, -2, 0, 1820, 1928,
	1930, 0, 0, 0, 0, 0, 1497, 1578, 1216, 0,
	1229, 0, 1023, 1027, 0, 0, 0, 1090, 0, 0,
	1044, 0, 1076, 1077, 1002, 0, 1078, 1079, 1080, 1195,
	1456, 1201, 1002, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 186, 209, 1203, 224, 241, 0, 1139,
	956, 1009, 0, 0, 966, 0, 969, 0, 965, 962,
	963, 954, 0, 417, 418, 0, 1142, 0, 1189, 0,
	0, 1317, 1313, 1335, 1330, 1331, 1575, 1354, 1358, 0,
	0, 1082, 1084, 956, 0, 615, 0, 0, 886, 887,
	0, 0, 0, 0, 1939, 1448, 1821, 0, 0, 1481,
	1483, 1484, 1485, 1217, 1230, 0, 0, 1035, 1095, 0,
	0, 0, 1074, 1075, 1010, 0, 1199, 1197, 1053, 0,
	1086, 158, 0, 1084, 0, 1014, 0, 0, 1017, 0,
	0, 138, 2203, 136, 0, 182, 244, 0, 238, 236,
	237, 958, 0, 0, 1064, 1066, 0, 970, 1002, 968,
	1140, 1084, 0, 1082, 0, 1323, 1335, 1318, 1319, 0,
	1333, 0, 293, 293, 1002, 1082, 1575, 0, 293, 617,
	619, 1936, 1956, 1945, -2, 2474, 2209, 0, 1956, 1956,
	1931, 1932, 0, 0, 1037, 1091, 1092, 0, 1087, 1088,
	1089, 2139, 1038, 1039, 1072, 0, 0, 1090, 178, 1002,
	1011, 0, 0, 1012, 0, 0, 141, 0, 143, 210,
	232, 0, 0, 950, 0, 1063, 0, 0, 0, 0,
	1010, 958, 1082, 0, 1002, 0, 1310, 1322, 0, 1332,
	1314, 0, 272, 273, 1010, 1002, 1047, 274, 1941, 0,
	0, 1947, 1948, 1949, 1950, 1951, 1942, 1943, 1029, 0,
	1093, 0, 1094, 0, 0, 0, 1575, 1081, 0, 1095,
	163, 1015, 0, 1018, 0, 139, 0, 239, 240, 947,
	949, 0, 1065, 959, 0, 961, 956, 967, 1002, 0,
	1010, 0, 1316, 2101, 1317, 1352, 0, 956, 1010, 0,
	1953, 1954, 0, 0, 0, 1096, 0, 1099, 1100, 0,
	1097, 1052, 0, 1072, 0, 0, 0, 0, 960, 958,
	1010, 1084, 956, 1082, 1323, 0, 1575, 956, 1952, 1955,
	1946, 1034, 1098, 1101, 1102, 1083, 1054, 0, 0, 242,
	0, 1005, 950, 956, 1082, 1575, 1002, 1311, 1575, 1045,
	1575, 1010, 0, 0, 1001, 1003, 1004, 948, 1575, 1002,
	1185, 1010, 1353, 1046, 1016, 0, 243, 1183, 1010, 956,
	0, 956, 1575, 0, 1575, 1186, 1010, 1184, 1019,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 561, 3, 567, 562, 3,
	572, 573, 565, 563, 577, 564, 574, 566, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 580, 3,
	553, 555, 554, 558, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 570, 3, 571, 568, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 578, 560, 579, 556,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 557, 57896, 559, 57897, 569, 57898, 575, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1281
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1308
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1447
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1514
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1667
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1693
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1721
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1750
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1760
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1769
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1780
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1786
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1817
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1940
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1991
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2159
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2163
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2252
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2343
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2730
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2739
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2750
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2755
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2760
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2765
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2788
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2796
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2872
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3036
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3055
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3060
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3072
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3094
		{
			return unimplemented(sqllex, "create access method")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create cast")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3103
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "create operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplemented(sqllex, "create publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "create rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3116
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3120
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3124
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3127
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "drop server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3265
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3300
		{

			sqlVAL.union.val = nil
		}
	case 428:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return helpWith(sqllex, "DELETE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3327
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3328
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3620
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3652
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			return helpWith(sqllex, "DELETE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "DELETE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "INSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3729
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "GRANT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3906
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3980
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "USE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return unimplemented(sqllex, "set from current")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4230
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.Low
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.Normal
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.High
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4400
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4409
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.str = "client_encoding"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.str = "timezone"
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4541
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4678
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = false
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = true
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = false
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4945
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = true
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = false
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4989
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5087
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5095
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5132
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5155
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5369
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5421
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "RESUME")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5653
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5669
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{

			sqlVAL.union.val = nil
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.str = ""
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = nil
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5737
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 966:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5767
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5781
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5796
		{
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5890
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5893
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5896
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5903
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.str = ""
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6115
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6150
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6251
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6289
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6369
		{
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6374
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6530
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6539
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6547
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6576
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = true
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{

			sqlVAL.union.val = true
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = false
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6666
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6680
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6692
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6704
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6714
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6724
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = nil
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6834
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6835
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6853
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6855
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6857
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6861
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6899
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6917
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6936
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6953
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = false
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = true
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = false
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = true
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = false
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7028
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7040
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.str = ""
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.str = ""
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7107
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7113
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7309
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7315
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7327
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7333
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7347
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7353
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7371
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7442
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7487
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7507
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7530
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7541
		{
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7558
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7590
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7605
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7696
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.str = ""
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7722
		{

		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.str = ""
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.str = ""
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.str = ""
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.str = ""
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7786
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7829
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7909
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7936
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7940
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8046
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8227
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8332
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = true
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = false
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8401
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8402
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = nil
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = true
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = false
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = false
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8445
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8446
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8450
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8491
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8512
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8517
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8635
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8674
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8705
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8707
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8744
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8796
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8835
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8845
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8880
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8891
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8921
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8954
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = nil
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = true
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.str = tree.AstFull
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.str = tree.AstRight
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.str = tree.AstInner
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9074
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.str = tree.AstHash
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.str = ""
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9166
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9188
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = true
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = false
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = false
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9250
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9258
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9287
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9300
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9307
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9374
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9397
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9401
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = types.Geography
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9426
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9460
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = nil
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = types.Int2
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = types.Int
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = types.Float4
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = types.Float
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9511
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = types.Bool
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = types.Float
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9552
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9558
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9580
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = types.String
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = true
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = false
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = types.Date
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9637
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9685
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = true
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = false
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = false
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = types.Interval
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9709
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = nil
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9838
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9898
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10216
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10437
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10487
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10517
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10528
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10529
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10619
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10790
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10815
		{
			return unimplemented(sqllex, "treat")
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.str = ""
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10990
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11087
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = tree.Any
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = tree.Some
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = tree.All
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = tree.Div
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = tree.LT
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = tree.GT
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = tree.LE
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = tree.GE
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = tree.NE
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = tree.Like
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11449
		{
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11618
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11627
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11655
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11667
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.str = ""
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11931
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
